ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.text.RME_Log,"ax",%progbits
 364              		.align	2
 365              		.global	RME_Log
 366              		.syntax unified
 367              		.arm
 369              	RME_Log:
 370              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 371              		.loc 1 401 1
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376 0000 04B02DE5 		str	fp, [sp, #-4]!
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 11, -4
 379 0004 00B08DE2 		add	fp, sp, #0
 380              		.cfi_def_cfa_register 11
 381 0008 14D04DE2 		sub	sp, sp, #20
 382 000c 08000BE5 		str	r0, [fp, #-8]
 383 0010 0C100BE5 		str	r1, [fp, #-12]
 384 0014 10200BE5 		str	r2, [fp, #-16]
 385 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \*/
 411:../../Source/Kernel/rme_kernel.c **** }
 386              		.loc 1 411 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 15


 387 001c 00F020E3 		nop
 388 0020 00D08BE2 		add	sp, fp, #0
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0024 04B09DE4 		ldr	fp, [sp], #4
 392              		.cfi_restore 11
 393              		.cfi_def_cfa_offset 0
 394 0028 1EFF2FE1 		bx	lr
 395              		.cfi_endproc
 396              	.LFE3:
 398              		.section	.text._RME_MSB_Generic,"ax",%progbits
 399              		.align	2
 400              		.global	_RME_MSB_Generic
 401              		.syntax unified
 402              		.arm
 404              	_RME_MSB_Generic:
 405              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 16


 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 406              		.loc 1 471 1
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 04B02DE5 		str	fp, [sp, #-4]!
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 11, -4
 414 0004 00B08DE2 		add	fp, sp, #0
 415              		.cfi_def_cfa_register 11
 416 0008 14D04DE2 		sub	sp, sp, #20
 417 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 17


 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 418              		.loc 1 510 7
 419 0010 10301BE5 		ldr	r3, [fp, #-16]
 420 0014 010853E3 		cmp	r3, #65536
 421 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 422              		.loc 1 515 11
 423 001c 10301BE5 		ldr	r3, [fp, #-16]
 424 0020 010453E3 		cmp	r3, #16777216
 425 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 426              		.loc 1 519 16
 427 0028 1830A0E3 		mov	r3, #24
 428 002c 08300BE5 		str	r3, [fp, #-8]
 429 0030 0A0000EA 		b	.L32
 430              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 431              		.loc 1 526 16
 432 0034 1030A0E3 		mov	r3, #16
 433 0038 08300BE5 		str	r3, [fp, #-8]
 434 003c 070000EA 		b	.L32
 435              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 18


 436              		.loc 1 535 11
 437 0040 10301BE5 		ldr	r3, [fp, #-16]
 438 0044 FF0053E3 		cmp	r3, #255
 439 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 440              		.loc 1 539 16
 441 004c 0830A0E3 		mov	r3, #8
 442 0050 08300BE5 		str	r3, [fp, #-8]
 443 0054 010000EA 		b	.L32
 444              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 445              		.loc 1 546 16
 446 0058 0030A0E3 		mov	r3, #0
 447 005c 08300BE5 		str	r3, [fp, #-8]
 448              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 19


 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 20


 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 449              		.loc 1 646 23
 450 0060 10201BE5 		ldr	r2, [fp, #-16]
 451 0064 08301BE5 		ldr	r3, [fp, #-8]
 452 0068 3223A0E1 		lsr	r2, r2, r3
 453              		.loc 1 646 17
 454 006c 003000E3 		movw	r3, #:lower16:Table.1
 455 0070 003040E3 		movt	r3, #:upper16:Table.1
 456 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 457 0078 0320A0E1 		mov	r2, r3
 458              		.loc 1 646 29
 459 007c 08301BE5 		ldr	r3, [fp, #-8]
 460 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 461              		.loc 1 647 1
 462 0084 0300A0E1 		mov	r0, r3
 463 0088 00D08BE2 		add	sp, fp, #0
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 008c 04B09DE4 		ldr	fp, [sp], #4
 467              		.cfi_restore 11
 468              		.cfi_def_cfa_offset 0
 469 0090 1EFF2FE1 		bx	lr
 470              		.cfi_endproc
 471              	.LFE4:
 473              		.section	.text._RME_LSB_Generic,"ax",%progbits
 474              		.align	2
 475              		.global	_RME_LSB_Generic
 476              		.syntax unified
 477              		.arm
 479              	_RME_LSB_Generic:
 480              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 481              		.loc 1 659 1
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 16
 484              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 21


 485              		@ link register save eliminated.
 486 0000 04B02DE5 		str	fp, [sp, #-4]!
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 11, -4
 489 0004 00B08DE2 		add	fp, sp, #0
 490              		.cfi_def_cfa_register 11
 491 0008 14D04DE2 		sub	sp, sp, #20
 492 000c 10000BE5 		str	r0, [fp, #-16]
 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 493              		.loc 1 698 14
 494 0010 10301BE5 		ldr	r3, [fp, #-16]
 495 0014 0338A0E1 		lsl	r3, r3, #16
 496              		.loc 1 698 7
 497 0018 000053E3 		cmp	r3, #0
 498 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 22


 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 499              		.loc 1 703 18
 500 0020 10301BE5 		ldr	r3, [fp, #-16]
 501 0024 0334A0E1 		lsl	r3, r3, #8
 502              		.loc 1 703 11
 503 0028 000053E3 		cmp	r3, #0
 504 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 505              		.loc 1 707 16
 506 0030 1830A0E3 		mov	r3, #24
 507 0034 08300BE5 		str	r3, [fp, #-8]
 508 0038 0B0000EA 		b	.L38
 509              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 510              		.loc 1 714 16
 511 003c 1030A0E3 		mov	r3, #16
 512 0040 08300BE5 		str	r3, [fp, #-8]
 513 0044 080000EA 		b	.L38
 514              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 515              		.loc 1 723 18
 516 0048 10301BE5 		ldr	r3, [fp, #-16]
 517 004c 033CA0E1 		lsl	r3, r3, #24
 518              		.loc 1 723 11
 519 0050 000053E3 		cmp	r3, #0
 520 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 521              		.loc 1 727 16
 522 0058 0830A0E3 		mov	r3, #8
 523 005c 08300BE5 		str	r3, [fp, #-8]
 524 0060 010000EA 		b	.L38
 525              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 23


 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 526              		.loc 1 734 16
 527 0064 0030A0E3 		mov	r3, #0
 528 0068 08300BE5 		str	r3, [fp, #-8]
 529              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 24


 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 530              		.loc 1 834 34
 531 006c 10201BE5 		ldr	r2, [fp, #-16]
 532 0070 08301BE5 		ldr	r3, [fp, #-8]
 533 0074 3233A0E1 		lsr	r3, r2, r3
 534              		.loc 1 834 18
 535 0078 7330EFE6 		uxtb	r3, r3
 536 007c 0320A0E1 		mov	r2, r3
 537              		.loc 1 834 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 25


 538 0080 003000E3 		movw	r3, #:lower16:Table.0
 539 0084 003040E3 		movt	r3, #:upper16:Table.0
 540 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 541 008c 0320A0E1 		mov	r2, r3
 542              		.loc 1 834 41
 543 0090 08301BE5 		ldr	r3, [fp, #-8]
 544 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
 545              		.loc 1 835 1
 546 0098 0300A0E1 		mov	r0, r3
 547 009c 00D08BE2 		add	sp, fp, #0
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00a0 04B09DE4 		ldr	fp, [sp], #4
 551              		.cfi_restore 11
 552              		.cfi_def_cfa_offset 0
 553 00a4 1EFF2FE1 		bx	lr
 554              		.cfi_endproc
 555              	.LFE5:
 557              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 558              		.align	2
 559              		.global	_RME_Comp_Swap_Single
 560              		.syntax unified
 561              		.arm
 563              	_RME_Comp_Swap_Single:
 564              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 565              		.loc 1 852 1
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 16
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570 0000 04B02DE5 		str	fp, [sp, #-4]!
 571              		.cfi_def_cfa_offset 4
 572              		.cfi_offset 11, -4
 573 0004 00B08DE2 		add	fp, sp, #0
 574              		.cfi_def_cfa_register 11
 575 0008 14D04DE2 		sub	sp, sp, #20
 576 000c 08000BE5 		str	r0, [fp, #-8]
 577 0010 0C100BE5 		str	r1, [fp, #-12]
 578 0014 10200BE5 		str	r2, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 26


 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 579              		.loc 1 853 8
 580 0018 08301BE5 		ldr	r3, [fp, #-8]
 581 001c 003093E5 		ldr	r3, [r3]
 582              		.loc 1 853 7
 583 0020 0C201BE5 		ldr	r2, [fp, #-12]
 584 0024 030052E1 		cmp	r2, r3
 585 0028 0400001A 		bne	.L42
 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 586              		.loc 1 857 13
 587 002c 08301BE5 		ldr	r3, [fp, #-8]
 588 0030 10201BE5 		ldr	r2, [fp, #-16]
 589 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 590              		.loc 1 858 16
 591 0038 0130A0E3 		mov	r3, #1
 592 003c 000000EA 		b	.L43
 593              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 594              		.loc 1 866 12
 595 0040 0030A0E3 		mov	r3, #0
 596              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 597              		.loc 1 867 1
 598 0044 0300A0E1 		mov	r0, r3
 599 0048 00D08BE2 		add	sp, fp, #0
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 004c 04B09DE4 		ldr	fp, [sp], #4
 603              		.cfi_restore 11
 604              		.cfi_def_cfa_offset 0
 605 0050 1EFF2FE1 		bx	lr
 606              		.cfi_endproc
 607              	.LFE6:
 609              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 610              		.align	2
 611              		.global	_RME_Fetch_Add_Single
 612              		.syntax unified
 613              		.arm
 615              	_RME_Fetch_Add_Single:
 616              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 27


 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
 617              		.loc 1 881 1
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 04B02DE5 		str	fp, [sp, #-4]!
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 11, -4
 625 0004 00B08DE2 		add	fp, sp, #0
 626              		.cfi_def_cfa_register 11
 627 0008 14D04DE2 		sub	sp, sp, #20
 628 000c 10000BE5 		str	r0, [fp, #-16]
 629 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 630              		.loc 1 884 21
 631 0014 10301BE5 		ldr	r3, [fp, #-16]
 632 0018 003093E5 		ldr	r3, [r3]
 633              		.loc 1 884 8
 634 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 635              		.loc 1 885 25
 636 0020 08201BE5 		ldr	r2, [fp, #-8]
 637 0024 14301BE5 		ldr	r3, [fp, #-20]
 638 0028 033082E0 		add	r3, r2, r3
 639              		.loc 1 885 10
 640 002c 0320A0E1 		mov	r2, r3
 641              		.loc 1 885 9
 642 0030 10301BE5 		ldr	r3, [fp, #-16]
 643 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 644              		.loc 1 887 12
 645 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 646              		.loc 1 888 1
 647 003c 0300A0E1 		mov	r0, r3
 648 0040 00D08BE2 		add	sp, fp, #0
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 0044 04B09DE4 		ldr	fp, [sp], #4
 652              		.cfi_restore 11
 653              		.cfi_def_cfa_offset 0
 654 0048 1EFF2FE1 		bx	lr
 655              		.cfi_endproc
 656              	.LFE7:
 658              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 659              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 28


 660              		.global	_RME_Fetch_And_Single
 661              		.syntax unified
 662              		.arm
 664              	_RME_Fetch_And_Single:
 665              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 666              		.loc 1 902 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 04B02DE5 		str	fp, [sp, #-4]!
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 11, -4
 674 0004 00B08DE2 		add	fp, sp, #0
 675              		.cfi_def_cfa_register 11
 676 0008 14D04DE2 		sub	sp, sp, #20
 677 000c 10000BE5 		str	r0, [fp, #-16]
 678 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 679              		.loc 1 905 8
 680 0014 10301BE5 		ldr	r3, [fp, #-16]
 681 0018 003093E5 		ldr	r3, [r3]
 682 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 683              		.loc 1 906 13
 684 0020 08201BE5 		ldr	r2, [fp, #-8]
 685 0024 14301BE5 		ldr	r3, [fp, #-20]
 686 0028 032002E0 		and	r2, r2, r3
 687              		.loc 1 906 9
 688 002c 10301BE5 		ldr	r3, [fp, #-16]
 689 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 690              		.loc 1 908 12
 691 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 692              		.loc 1 909 1
 693 0038 0300A0E1 		mov	r0, r3
 694 003c 00D08BE2 		add	sp, fp, #0
 695              		.cfi_def_cfa_register 13
 696              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 29


 697 0040 04B09DE4 		ldr	fp, [sp], #4
 698              		.cfi_restore 11
 699              		.cfi_def_cfa_offset 0
 700 0044 1EFF2FE1 		bx	lr
 701              		.cfi_endproc
 702              	.LFE8:
 704              		.section	.text._RME_List_Crt,"ax",%progbits
 705              		.align	2
 706              		.global	_RME_List_Crt
 707              		.syntax unified
 708              		.arm
 710              	_RME_List_Crt:
 711              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 712              		.loc 1 919 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 04B02DE5 		str	fp, [sp, #-4]!
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 11, -4
 720 0004 00B08DE2 		add	fp, sp, #0
 721              		.cfi_def_cfa_register 11
 722 0008 0CD04DE2 		sub	sp, sp, #12
 723 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 724              		.loc 1 920 15
 725 0010 08301BE5 		ldr	r3, [fp, #-8]
 726 0014 08201BE5 		ldr	r2, [fp, #-8]
 727 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 728              		.loc 1 921 15
 729 001c 08301BE5 		ldr	r3, [fp, #-8]
 730 0020 08201BE5 		ldr	r2, [fp, #-8]
 731 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 732              		.loc 1 922 1
 733 0028 00F020E3 		nop
 734 002c 00D08BE2 		add	sp, fp, #0
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 0030 04B09DE4 		ldr	fp, [sp], #4
 738              		.cfi_restore 11
 739              		.cfi_def_cfa_offset 0
 740 0034 1EFF2FE1 		bx	lr
 741              		.cfi_endproc
 742              	.LFE9:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 30


 744              		.section	.text._RME_List_Del,"ax",%progbits
 745              		.align	2
 746              		.global	_RME_List_Del
 747              		.syntax unified
 748              		.arm
 750              	_RME_List_Del:
 751              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 752              		.loc 1 934 1
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 8
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 04B02DE5 		str	fp, [sp, #-4]!
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 11, -4
 760 0004 00B08DE2 		add	fp, sp, #0
 761              		.cfi_def_cfa_register 11
 762 0008 0CD04DE2 		sub	sp, sp, #12
 763 000c 08000BE5 		str	r0, [fp, #-8]
 764 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 765              		.loc 1 935 15
 766 0014 0C301BE5 		ldr	r3, [fp, #-12]
 767 0018 08201BE5 		ldr	r2, [fp, #-8]
 768 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 769              		.loc 1 936 15
 770 0020 08301BE5 		ldr	r3, [fp, #-8]
 771 0024 0C201BE5 		ldr	r2, [fp, #-12]
 772 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 773              		.loc 1 937 1
 774 002c 00F020E3 		nop
 775 0030 00D08BE2 		add	sp, fp, #0
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 0034 04B09DE4 		ldr	fp, [sp], #4
 779              		.cfi_restore 11
 780              		.cfi_def_cfa_offset 0
 781 0038 1EFF2FE1 		bx	lr
 782              		.cfi_endproc
 783              	.LFE10:
 785              		.section	.text._RME_List_Ins,"ax",%progbits
 786              		.align	2
 787              		.global	_RME_List_Ins
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 31


 788              		.syntax unified
 789              		.arm
 791              	_RME_List_Ins:
 792              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 793              		.loc 1 951 1
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798 0000 04B02DE5 		str	fp, [sp, #-4]!
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 11, -4
 801 0004 00B08DE2 		add	fp, sp, #0
 802              		.cfi_def_cfa_register 11
 803 0008 14D04DE2 		sub	sp, sp, #20
 804 000c 08000BE5 		str	r0, [fp, #-8]
 805 0010 0C100BE5 		str	r1, [fp, #-12]
 806 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 807              		.loc 1 952 15
 808 0018 10301BE5 		ldr	r3, [fp, #-16]
 809 001c 08201BE5 		ldr	r2, [fp, #-8]
 810 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 811              		.loc 1 953 14
 812 0024 08301BE5 		ldr	r3, [fp, #-8]
 813 0028 10201BE5 		ldr	r2, [fp, #-16]
 814 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 815              		.loc 1 954 14
 816 0030 08301BE5 		ldr	r3, [fp, #-8]
 817 0034 0C201BE5 		ldr	r2, [fp, #-12]
 818 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 819              		.loc 1 955 15
 820 003c 0C301BE5 		ldr	r3, [fp, #-12]
 821 0040 08201BE5 		ldr	r2, [fp, #-8]
 822 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 823              		.loc 1 956 1
 824 0048 00F020E3 		nop
 825 004c 00D08BE2 		add	sp, fp, #0
 826              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 32


 827              		@ sp needed
 828 0050 04B09DE4 		ldr	fp, [sp], #4
 829              		.cfi_restore 11
 830              		.cfi_def_cfa_offset 0
 831 0054 1EFF2FE1 		bx	lr
 832              		.cfi_endproc
 833              	.LFE11:
 835              		.section	.text._RME_Clear,"ax",%progbits
 836              		.align	2
 837              		.global	_RME_Clear
 838              		.syntax unified
 839              		.arm
 841              	_RME_Clear:
 842              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 843              		.loc 1 969 1
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 16
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848 0000 04B02DE5 		str	fp, [sp, #-4]!
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 11, -4
 851 0004 00B08DE2 		add	fp, sp, #0
 852              		.cfi_def_cfa_register 11
 853 0008 14D04DE2 		sub	sp, sp, #20
 854 000c 10000BE5 		str	r0, [fp, #-16]
 855 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 856              		.loc 1 972 14
 857 0014 0030A0E3 		mov	r3, #0
 858 0018 08300BE5 		str	r3, [fp, #-8]
 859              		.loc 1 972 5
 860 001c 070000EA 		b	.L52
 861              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 862              		.loc 1 974 26
 863 0020 10201BE5 		ldr	r2, [fp, #-16]
 864 0024 08301BE5 		ldr	r3, [fp, #-8]
 865 0028 033082E0 		add	r3, r2, r3
 866              		.loc 1 974 33
 867 002c 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 33


 868 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 869              		.loc 1 972 34 discriminator 3
 870 0034 08301BE5 		ldr	r3, [fp, #-8]
 871 0038 013083E2 		add	r3, r3, #1
 872 003c 08300BE5 		str	r3, [fp, #-8]
 873              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
 874              		.loc 1 972 23 discriminator 1
 875 0040 08201BE5 		ldr	r2, [fp, #-8]
 876 0044 14301BE5 		ldr	r3, [fp, #-20]
 877 0048 030052E1 		cmp	r2, r3
 878 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 879              		.loc 1 976 1
 880 0050 00F020E3 		nop
 881 0054 00F020E3 		nop
 882 0058 00D08BE2 		add	sp, fp, #0
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 005c 04B09DE4 		ldr	fp, [sp], #4
 886              		.cfi_restore 11
 887              		.cfi_def_cfa_offset 0
 888 0060 1EFF2FE1 		bx	lr
 889              		.cfi_endproc
 890              	.LFE12:
 892              		.section	.text._RME_Memcmp,"ax",%progbits
 893              		.align	2
 894              		.global	_RME_Memcmp
 895              		.syntax unified
 896              		.arm
 898              	_RME_Memcmp:
 899              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 900              		.loc 1 992 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 32
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905 0000 04B02DE5 		str	fp, [sp, #-4]!
 906              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 34


 907              		.cfi_offset 11, -4
 908 0004 00B08DE2 		add	fp, sp, #0
 909              		.cfi_def_cfa_register 11
 910 0008 24D04DE2 		sub	sp, sp, #36
 911 000c 18000BE5 		str	r0, [fp, #-24]
 912 0010 1C100BE5 		str	r1, [fp, #-28]
 913 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 914              		.loc 1 997 8
 915 0018 18301BE5 		ldr	r3, [fp, #-24]
 916 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 917              		.loc 1 998 8
 918 0020 1C301BE5 		ldr	r3, [fp, #-28]
 919 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 920              		.loc 1 1000 14
 921 0028 0030A0E3 		mov	r3, #0
 922 002c 08300BE5 		str	r3, [fp, #-8]
 923              		.loc 1 1000 5
 924 0030 170000EA 		b	.L55
 925              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 926              		.loc 1 1002 15
 927 0034 0C201BE5 		ldr	r2, [fp, #-12]
 928 0038 08301BE5 		ldr	r3, [fp, #-8]
 929 003c 033082E0 		add	r3, r2, r3
 930 0040 D020D3E1 		ldrsb	r2, [r3]
 931              		.loc 1 1002 27
 932 0044 10101BE5 		ldr	r1, [fp, #-16]
 933 0048 08301BE5 		ldr	r3, [fp, #-8]
 934 004c 033081E0 		add	r3, r1, r3
 935 0050 D030D3E1 		ldrsb	r3, [r3]
 936              		.loc 1 1002 11
 937 0054 030052E1 		cmp	r2, r3
 938 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 939              		.loc 1 1006 23
 940 005c 0C201BE5 		ldr	r2, [fp, #-12]
 941 0060 08301BE5 		ldr	r3, [fp, #-8]
 942 0064 033082E0 		add	r3, r2, r3
 943 0068 D030D3E1 		ldrsb	r3, [r3]
 944 006c 0310A0E1 		mov	r1, r3
 945              		.loc 1 1006 34
 946 0070 10201BE5 		ldr	r2, [fp, #-16]
 947 0074 08301BE5 		ldr	r3, [fp, #-8]
 948 0078 033082E0 		add	r3, r2, r3
 949 007c D030D3E1 		ldrsb	r3, [r3]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 35


 950              		.loc 1 1006 30
 951 0080 033041E0 		sub	r3, r1, r3
 952 0084 070000EA 		b	.L57
 953              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 954              		.loc 1 1000 33 discriminator 2
 955 0088 08301BE5 		ldr	r3, [fp, #-8]
 956 008c 013083E2 		add	r3, r3, #1
 957 0090 08300BE5 		str	r3, [fp, #-8]
 958              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 959              		.loc 1 1000 23 discriminator 1
 960 0094 08201BE5 		ldr	r2, [fp, #-8]
 961 0098 20301BE5 		ldr	r3, [fp, #-32]
 962 009c 030052E1 		cmp	r2, r3
 963 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 964              		.loc 1 1015 12
 965 00a4 0030A0E3 		mov	r3, #0
 966              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 967              		.loc 1 1016 1
 968 00a8 0300A0E1 		mov	r0, r3
 969 00ac 00D08BE2 		add	sp, fp, #0
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 00b0 04B09DE4 		ldr	fp, [sp], #4
 973              		.cfi_restore 11
 974              		.cfi_def_cfa_offset 0
 975 00b4 1EFF2FE1 		bx	lr
 976              		.cfi_endproc
 977              	.LFE13:
 979              		.section	.text._RME_Memcpy,"ax",%progbits
 980              		.align	2
 981              		.global	_RME_Memcpy
 982              		.syntax unified
 983              		.arm
 985              	_RME_Memcpy:
 986              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 36


1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 987              		.loc 1 1032 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 24
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 04B02DE5 		str	fp, [sp, #-4]!
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 11, -4
 995 0004 00B08DE2 		add	fp, sp, #0
 996              		.cfi_def_cfa_register 11
 997 0008 1CD04DE2 		sub	sp, sp, #28
 998 000c 10000BE5 		str	r0, [fp, #-16]
 999 0010 14100BE5 		str	r1, [fp, #-20]
 1000 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1001              		.loc 1 1035 14
 1002 0018 0030A0E3 		mov	r3, #0
 1003 001c 08300BE5 		str	r3, [fp, #-8]
 1004              		.loc 1 1035 5
 1005 0020 0B0000EA 		b	.L60
 1006              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1007              		.loc 1 1037 67
 1008 0024 14201BE5 		ldr	r2, [fp, #-20]
 1009 0028 08301BE5 		ldr	r3, [fp, #-8]
 1010 002c 032082E0 		add	r2, r2, r3
 1011              		.loc 1 1037 34
 1012 0030 10101BE5 		ldr	r1, [fp, #-16]
 1013 0034 08301BE5 		ldr	r3, [fp, #-8]
 1014 0038 033081E0 		add	r3, r1, r3
 1015              		.loc 1 1037 67
 1016 003c 0020D2E5 		ldrb	r2, [r2]
 1017 0040 7220EFE6 		uxtb	r2, r2
 1018              		.loc 1 1037 41
 1019 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1020              		.loc 1 1035 33 discriminator 3
 1021 0048 08301BE5 		ldr	r3, [fp, #-8]
 1022 004c 013083E2 		add	r3, r3, #1
 1023 0050 08300BE5 		str	r3, [fp, #-8]
 1024              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1025              		.loc 1 1035 23 discriminator 1
 1026 0054 08201BE5 		ldr	r2, [fp, #-8]
 1027 0058 18301BE5 		ldr	r3, [fp, #-24]
 1028 005c 030052E1 		cmp	r2, r3
 1029 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 37


1039:../../Source/Kernel/rme_kernel.c **** }
 1030              		.loc 1 1039 1
 1031 0064 00F020E3 		nop
 1032 0068 00F020E3 		nop
 1033 006c 00D08BE2 		add	sp, fp, #0
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 0070 04B09DE4 		ldr	fp, [sp], #4
 1037              		.cfi_restore 11
 1038              		.cfi_def_cfa_offset 0
 1039 0074 1EFF2FE1 		bx	lr
 1040              		.cfi_endproc
 1041              	.LFE14:
 1043              		.section	.text._RME_Diff,"ax",%progbits
 1044              		.align	2
 1045              		.global	_RME_Diff
 1046              		.syntax unified
 1047              		.arm
 1049              	_RME_Diff:
 1050              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1051              		.loc 1 1052 1
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 16
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056 0000 04B02DE5 		str	fp, [sp, #-4]!
 1057              		.cfi_def_cfa_offset 4
 1058              		.cfi_offset 11, -4
 1059 0004 00B08DE2 		add	fp, sp, #0
 1060              		.cfi_def_cfa_register 11
 1061 0008 14D04DE2 		sub	sp, sp, #20
 1062 000c 10000BE5 		str	r0, [fp, #-16]
 1063 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1064              		.loc 1 1056 10
 1065 0014 10201BE5 		ldr	r2, [fp, #-16]
 1066 0018 14301BE5 		ldr	r3, [fp, #-20]
 1067 001c 033042E0 		sub	r3, r2, r3
 1068 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1069              		.loc 1 1057 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 38


 1070 0024 14201BE5 		ldr	r2, [fp, #-20]
 1071 0028 10301BE5 		ldr	r3, [fp, #-16]
 1072 002c 033042E0 		sub	r3, r2, r3
 1073 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1074              		.loc 1 1059 7
 1075 0034 08201BE5 		ldr	r2, [fp, #-8]
 1076 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1077 003c 030052E1 		cmp	r2, r3
 1078 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1079              		.loc 1 1063 16
 1080 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1081 0048 000000EA 		b	.L64
 1082              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1083              		.loc 1 1069 16
 1084 004c 08301BE5 		ldr	r3, [fp, #-8]
 1085              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1086              		.loc 1 1071 1
 1087 0050 0300A0E1 		mov	r0, r3
 1088 0054 00D08BE2 		add	sp, fp, #0
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0058 04B09DE4 		ldr	fp, [sp], #4
 1092              		.cfi_restore 11
 1093              		.cfi_def_cfa_offset 0
 1094 005c 1EFF2FE1 		bx	lr
 1095              		.cfi_endproc
 1096              	.LFE15:
 1098              		.section	.text.RME_Kmain,"ax",%progbits
 1099              		.align	2
 1100              		.global	RME_Kmain
 1101              		.syntax unified
 1102              		.arm
 1104              	RME_Kmain:
 1105              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 39


1081:../../Source/Kernel/rme_kernel.c **** {
 1106              		.loc 1 1081 1
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110 0000 00482DE9 		push	{fp, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 11, -8
 1113              		.cfi_offset 14, -4
 1114 0004 04B08DE2 		add	fp, sp, #4
 1115              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1116              		.loc 1 1083 5
 1117 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1118              		.loc 1 1085 5
 1119 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1120              		.loc 1 1087 5
 1121 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1122              		.loc 1 1089 5
 1123 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1124              		.loc 1 1092 5
 1125 0018 0209A0E3 		mov	r0, #32768
 1126 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c ****     
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1127              		.loc 1 1095 5
 1128 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1129              		.loc 1 1098 12
 1130 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1131              		.loc 1 1099 1
 1132 0028 0300A0E1 		mov	r0, r3
 1133 002c 0088BDE8 		pop	{fp, pc}
 1134              		.cfi_endproc
 1135              	.LFE16:
 1137              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1138              		.align	2
 1139              		.syntax unified
 1140              		.arm
 1142              	_RME_Lowlvl_Check:
 1143              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 40


1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
 1144              		.loc 1 1109 1
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0000 04B02DE5 		str	fp, [sp, #-4]!
 1150              		.cfi_def_cfa_offset 4
 1151              		.cfi_offset 11, -4
 1152 0004 00B08DE2 		add	fp, sp, #0
 1153              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1154              		.loc 1 1132 12
 1155 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1156              		.loc 1 1133 1
 1157 000c 0300A0E1 		mov	r0, r3
 1158 0010 00D08BE2 		add	sp, fp, #0
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
 1161 0014 04B09DE4 		ldr	fp, [sp], #4
 1162              		.cfi_restore 11
 1163              		.cfi_def_cfa_offset 0
 1164 0018 1EFF2FE1 		bx	lr
 1165              		.cfi_endproc
 1166              	.LFE17:
 1168              		.section	.rodata
 1169              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 41


 1170              	.LC0:
 1171 0000 0D0A2043 		.ascii	"\015\012 CPSR= \000"
 1171      5053523D 
 1171      2000
 1172 000a 0000     		.align	2
 1173              	.LC1:
 1174 000c 0D0A2050 		.ascii	"\015\012 PC= \000"
 1174      433D2000 
 1175              		.align	2
 1176              	.LC2:
 1177 0014 0D0A204C 		.ascii	"\015\012 LR= \000"
 1177      523D2000 
 1178              		.align	2
 1179              	.LC3:
 1180 001c 0D0A2053 		.ascii	"\015\012 SP= \000"
 1180      503D2000 
 1181              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1182              		.align	2
 1183              		.global	_RME_Svc_Handler
 1184              		.syntax unified
 1185              		.arm
 1187              	_RME_Svc_Handler:
 1188              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1189              		.loc 1 1144 1
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 48
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193 0000 30482DE9 		push	{r4, r5, fp, lr}
 1194              		.cfi_def_cfa_offset 16
 1195              		.cfi_offset 4, -16
 1196              		.cfi_offset 5, -12
 1197              		.cfi_offset 11, -8
 1198              		.cfi_offset 14, -4
 1199 0004 0CB08DE2 		add	fp, sp, #12
 1200              		.cfi_def_cfa 11, 4
 1201 0008 48D04DE2 		sub	sp, sp, #72
 1202 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 42


1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1203              		.loc 1 1156 5
 1204 0010 34304BE2 		sub	r3, fp, #52
 1205 0014 28204BE2 		sub	r2, fp, #40
 1206 0018 24104BE2 		sub	r1, fp, #36
 1207 001c 38001BE5 		ldr	r0, [fp, #-56]
 1208 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1209              		.loc 1 1158 16
 1210 0024 24301BE5 		ldr	r3, [fp, #-36]
 1211              		.loc 1 1158 12
 1212 0028 3F3003E2 		and	r3, r3, #63
 1213 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1214              		.loc 1 1161 7
 1215 0030 18301BE5 		ldr	r3, [fp, #-24]
 1216 0034 000053E3 		cmp	r3, #0
 1217 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1218              		.loc 1 1165 16
 1219 003c 34301BE5 		ldr	r3, [fp, #-52]
 1220 0040 0020A0E3 		mov	r2, #0
 1221 0044 0310A0E1 		mov	r1, r3
 1222 0048 38001BE5 		ldr	r0, [fp, #-56]
 1223 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1224 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1225              		.loc 1 1168 9
 1226 0054 10301BE5 		ldr	r3, [fp, #-16]
 1227 0058 000053E3 		cmp	r3, #0
 1228 005c 2D0200AA 		bge	.L69
 1229              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1230 0060 10101BE5 		ldr	r1, [fp, #-16]
 1231 0064 38001BE5 		ldr	r0, [fp, #-56]
 1232 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1233              		.loc 1 1168 9
 1234 006c 290200EA 		b	.L69
 1235              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 43


1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1236              		.loc 1 1178 12 is_stmt 1
 1237 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1238 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1239 0078 043093E5 		ldr	r3, [r3, #4]
 1240 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1241              		.loc 1 1179 13
 1242 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1243 0084 4C2093E5 		ldr	r2, [r3, #76]
 1244 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1245 008c 4C3083E2 		add	r3, r3, #76
 1246 0090 030052E1 		cmp	r2, r3
 1247 0094 0200000A 		beq	.L73
 1248              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1249 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1250 009c 4C3093E5 		ldr	r3, [r3, #76]
 1251 00a0 000000EA 		b	.L74
 1252              	.L73:
 1253              		.loc 1 1179 13 discriminator 2
 1254 00a4 0030A0E3 		mov	r3, #0
 1255              	.L74:
 1256              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1257 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1258              		.loc 1 1180 7
 1259 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1260 00b0 000053E3 		cmp	r3, #0
 1261 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1262              		.loc 1 1184 27
 1263 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1264 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1265              		.loc 1 1184 12
 1266 00c0 143093E5 		ldr	r3, [r3, #20]
 1267 00c4 14300BE5 		str	r3, [fp, #-20]
 1268 00c8 030000EA 		b	.L76
 1269              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1270              		.loc 1 1190 20
 1271 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1272 00d0 083093E5 		ldr	r3, [r3, #8]
 1273              		.loc 1 1190 12
 1274 00d4 143093E5 		ldr	r3, [r3, #20]
 1275 00d8 14300BE5 		str	r3, [fp, #-20]
 1276              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 44


1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1277              		.loc 1 1194 7
 1278 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1279 00e0 010053E3 		cmp	r3, #1
 1280 00e4 2900001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1281              		.loc 1 1200 45
 1282 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1283              		.loc 1 1198 16
 1284 00ec 0320A0E1 		mov	r2, r3
 1285 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1286 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1287 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1288 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1289 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****        RME_DBG_S("\r\n CPSR= ");
 1290              		.loc 1 1202 8
 1291 0104 000000E3 		movw	r0, #:lower16:.LC0
 1292 0108 000040E3 		movt	r0, #:upper16:.LC0
 1293 010c FEFFFFEB 		bl	RME_Str_Print
1203:../../Source/Kernel/rme_kernel.c ****        RME_DBG_H(Reg->CPSR);
 1294              		.loc 1 1203 8
 1295 0110 38301BE5 		ldr	r3, [fp, #-56]
 1296 0114 003093E5 		ldr	r3, [r3]
 1297 0118 0300A0E1 		mov	r0, r3
 1298 011c FEFFFFEB 		bl	RME_Hex_Print
1204:../../Source/Kernel/rme_kernel.c ****        RME_DBG_S("\r\n PC= ");
 1299              		.loc 1 1204 8
 1300 0120 000000E3 		movw	r0, #:lower16:.LC1
 1301 0124 000040E3 		movt	r0, #:upper16:.LC1
 1302 0128 FEFFFFEB 		bl	RME_Str_Print
1205:../../Source/Kernel/rme_kernel.c ****        RME_DBG_H(Reg->PC);
 1303              		.loc 1 1205 8
 1304 012c 38301BE5 		ldr	r3, [fp, #-56]
 1305 0130 403093E5 		ldr	r3, [r3, #64]
 1306 0134 0300A0E1 		mov	r0, r3
 1307 0138 FEFFFFEB 		bl	RME_Hex_Print
1206:../../Source/Kernel/rme_kernel.c ****        RME_DBG_S("\r\n LR= ");
 1308              		.loc 1 1206 8
 1309 013c 000000E3 		movw	r0, #:lower16:.LC2
 1310 0140 000040E3 		movt	r0, #:upper16:.LC2
 1311 0144 FEFFFFEB 		bl	RME_Str_Print
1207:../../Source/Kernel/rme_kernel.c ****        RME_DBG_H(Reg->LR);
 1312              		.loc 1 1207 8
 1313 0148 38301BE5 		ldr	r3, [fp, #-56]
 1314 014c 3C3093E5 		ldr	r3, [r3, #60]
 1315 0150 0300A0E1 		mov	r0, r3
 1316 0154 FEFFFFEB 		bl	RME_Hex_Print
1208:../../Source/Kernel/rme_kernel.c ****        RME_DBG_S("\r\n SP= ");
 1317              		.loc 1 1208 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 45


 1318 0158 000000E3 		movw	r0, #:lower16:.LC3
 1319 015c 000040E3 		movt	r0, #:upper16:.LC3
 1320 0160 FEFFFFEB 		bl	RME_Str_Print
1209:../../Source/Kernel/rme_kernel.c ****        RME_DBG_H(Reg->SP);
 1321              		.loc 1 1209 8
 1322 0164 38301BE5 		ldr	r3, [fp, #-56]
 1323 0168 383093E5 		ldr	r3, [r3, #56]
 1324 016c 0300A0E1 		mov	r0, r3
 1325 0170 FEFFFFEB 		bl	RME_Hex_Print
1210:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1326              		.loc 1 1210 9
 1327 0174 10301BE5 		ldr	r3, [fp, #-16]
 1328 0178 000053E3 		cmp	r3, #0
 1329 017c E50100AA 		bge	.L69
 1330              		.loc 1 1210 9 is_stmt 0 discriminator 1
 1331 0180 10101BE5 		ldr	r1, [fp, #-16]
 1332 0184 38001BE5 		ldr	r0, [fp, #-56]
 1333 0188 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1334              		.loc 1 1210 9
 1335 018c E10100EA 		b	.L69
 1336              	.L77:
1211:../../Source/Kernel/rme_kernel.c ****     }
1212:../../Source/Kernel/rme_kernel.c ****     else
1213:../../Source/Kernel/rme_kernel.c ****     {
1214:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1215:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1216:../../Source/Kernel/rme_kernel.c ****     }
1217:../../Source/Kernel/rme_kernel.c **** 
1218:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1219:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1220:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1221:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1222:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1223:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1224:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1225:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1337              		.loc 1 1225 5 is_stmt 1
 1338 0190 18301BE5 		ldr	r3, [fp, #-24]
 1339 0194 022043E2 		sub	r2, r3, #2
 1340 0198 80379FE5 		ldr	r3, .L127
 1341 019c 070052E3 		cmp	r2, #7
 1342 01a0 9400008A 		bhi	.L126
 1343 01a4 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1344              	.Lrtx81:
 1345 01a8 00F020E3 		nop
 1346              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1347              		.align	2
 1348              	.L81:
 1349 0000 AC010000 		.word	.L88
 1350 0004 E0010000 		.word	.L87
 1351 0008 18020000 		.word	.L86
 1352 000c 78020000 		.word	.L85
 1353 0010 AC020000 		.word	.L84
 1354 0014 FC020000 		.word	.L83
 1355 0018 78030000 		.word	.L82
 1356 001c C0030000 		.word	.L80
 1357              		.section	.text._RME_Svc_Handler
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 46


 1358              		.p2align 2
 1359              	.L88:
1226:../../Source/Kernel/rme_kernel.c ****     {
1227:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1228:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1229:../../Source/Kernel/rme_kernel.c ****         {
1230:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1231:../../Source/Kernel/rme_kernel.c ****             
1232:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1233:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1234:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1360              		.loc 1 1234 49
 1361 01ac 34301BE5 		ldr	r3, [fp, #-52]
1232:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1362              		.loc 1 1232 20
 1363 01b0 0320A0E1 		mov	r2, r3
 1364 01b4 38101BE5 		ldr	r1, [fp, #-56]
 1365 01b8 14001BE5 		ldr	r0, [fp, #-20]
 1366 01bc FEFFFFEB 		bl	_RME_Sig_Snd
 1367 01c0 10000BE5 		str	r0, [fp, #-16]
1235:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1368              		.loc 1 1235 13
 1369 01c4 10301BE5 		ldr	r3, [fp, #-16]
 1370 01c8 000053E3 		cmp	r3, #0
 1371 01cc D10100AA 		bge	.L69
 1372              		.loc 1 1235 13 is_stmt 0 discriminator 1
 1373 01d0 10101BE5 		ldr	r1, [fp, #-16]
 1374 01d4 38001BE5 		ldr	r0, [fp, #-56]
 1375 01d8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1376              		.loc 1 1235 13
 1377 01dc CD0100EA 		b	.L69
 1378              	.L87:
1236:../../Source/Kernel/rme_kernel.c ****         }
1237:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1238:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1239:../../Source/Kernel/rme_kernel.c ****         {
1240:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1241:../../Source/Kernel/rme_kernel.c ****             
1242:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1243:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1244:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1379              		.loc 1 1244 49 is_stmt 1
 1380 01e0 34301BE5 		ldr	r3, [fp, #-52]
1242:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1381              		.loc 1 1242 20
 1382 01e4 0320A0E1 		mov	r2, r3
 1383 01e8 30301BE5 		ldr	r3, [fp, #-48]
 1384 01ec 38101BE5 		ldr	r1, [fp, #-56]
 1385 01f0 14001BE5 		ldr	r0, [fp, #-20]
 1386 01f4 FEFFFFEB 		bl	_RME_Sig_Rcv
 1387 01f8 10000BE5 		str	r0, [fp, #-16]
1245:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1246:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1388              		.loc 1 1246 13
 1389 01fc 10301BE5 		ldr	r3, [fp, #-16]
 1390 0200 000053E3 		cmp	r3, #0
 1391 0204 C30100AA 		bge	.L69
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 47


 1392              		.loc 1 1246 13 is_stmt 0 discriminator 1
 1393 0208 10101BE5 		ldr	r1, [fp, #-16]
 1394 020c 38001BE5 		ldr	r0, [fp, #-56]
 1395 0210 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1396              		.loc 1 1246 13
 1397 0214 BF0100EA 		b	.L69
 1398              	.L86:
1247:../../Source/Kernel/rme_kernel.c ****         }
1248:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1249:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1250:../../Source/Kernel/rme_kernel.c ****         {
1251:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1252:../../Source/Kernel/rme_kernel.c ****             
1253:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1399              		.loc 1 1253 20 is_stmt 1
 1400 0218 28301BE5 		ldr	r3, [fp, #-40]
 1401 021c 03C0A0E1 		mov	ip, r3
1254:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1255:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1256:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1402              		.loc 1 1256 33
 1403 0220 34301BE5 		ldr	r3, [fp, #-52]
1253:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1404              		.loc 1 1253 20
 1405 0224 7300FFE6 		uxth	r0, r3
1257:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1406              		.loc 1 1257 33
 1407 0228 34301BE5 		ldr	r3, [fp, #-52]
1253:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1408              		.loc 1 1253 20
 1409 022c 2338A0E1 		lsr	r3, r3, #16
 1410 0230 30201BE5 		ldr	r2, [fp, #-48]
 1411 0234 2C101BE5 		ldr	r1, [fp, #-44]
 1412 0238 08108DE5 		str	r1, [sp, #8]
 1413 023c 04208DE5 		str	r2, [sp, #4]
 1414 0240 00308DE5 		str	r3, [sp]
 1415 0244 0030A0E1 		mov	r3, r0
 1416 0248 0C20A0E1 		mov	r2, ip
 1417 024c 38101BE5 		ldr	r1, [fp, #-56]
 1418 0250 14001BE5 		ldr	r0, [fp, #-20]
 1419 0254 FEFFFFEB 		bl	_RME_Kfn_Act
 1420 0258 10000BE5 		str	r0, [fp, #-16]
1258:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1259:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1260:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1421              		.loc 1 1260 13
 1422 025c 10301BE5 		ldr	r3, [fp, #-16]
 1423 0260 000053E3 		cmp	r3, #0
 1424 0264 AB0100AA 		bge	.L69
 1425              		.loc 1 1260 13 is_stmt 0 discriminator 1
 1426 0268 10101BE5 		ldr	r1, [fp, #-16]
 1427 026c 38001BE5 		ldr	r0, [fp, #-56]
 1428 0270 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1429              		.loc 1 1260 13
 1430 0274 A70100EA 		b	.L69
 1431              	.L85:
1261:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 48


1262:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1263:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1264:../../Source/Kernel/rme_kernel.c ****         {
1265:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1266:../../Source/Kernel/rme_kernel.c ****             
1267:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1268:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1269:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1432              		.loc 1 1269 56 is_stmt 1
 1433 0278 34301BE5 		ldr	r3, [fp, #-52]
1267:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1434              		.loc 1 1267 20
 1435 027c 0320A0E1 		mov	r2, r3
 1436 0280 38101BE5 		ldr	r1, [fp, #-56]
 1437 0284 14001BE5 		ldr	r0, [fp, #-20]
 1438 0288 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1439 028c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1440              		.loc 1 1270 13
 1441 0290 10301BE5 		ldr	r3, [fp, #-16]
 1442 0294 000053E3 		cmp	r3, #0
 1443 0298 9E0100AA 		bge	.L69
 1444              		.loc 1 1270 13 is_stmt 0 discriminator 1
 1445 029c 10101BE5 		ldr	r1, [fp, #-16]
 1446 02a0 38001BE5 		ldr	r0, [fp, #-56]
 1447 02a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1448              		.loc 1 1270 13
 1449 02a8 9A0100EA 		b	.L69
 1450              	.L84:
1271:../../Source/Kernel/rme_kernel.c ****         }
1272:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1273:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1274:../../Source/Kernel/rme_kernel.c ****         {
1275:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1276:../../Source/Kernel/rme_kernel.c ****             
1277:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1451              		.loc 1 1277 20 is_stmt 1
 1452 02ac 28301BE5 		ldr	r3, [fp, #-40]
 1453 02b0 0300A0E1 		mov	r0, r3
 1454 02b4 34101BE5 		ldr	r1, [fp, #-52]
 1455 02b8 30301BE5 		ldr	r3, [fp, #-48]
 1456 02bc 2C201BE5 		ldr	r2, [fp, #-44]
 1457 02c0 04208DE5 		str	r2, [sp, #4]
 1458 02c4 00308DE5 		str	r3, [sp]
 1459 02c8 0130A0E1 		mov	r3, r1
 1460 02cc 0020A0E1 		mov	r2, r0
 1461 02d0 38101BE5 		ldr	r1, [fp, #-56]
 1462 02d4 14001BE5 		ldr	r0, [fp, #-20]
 1463 02d8 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1464 02dc 10000BE5 		str	r0, [fp, #-16]
1278:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1279:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1280:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1281:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1282:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1283:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1465              		.loc 1 1283 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 49


 1466 02e0 10301BE5 		ldr	r3, [fp, #-16]
 1467 02e4 000053E3 		cmp	r3, #0
 1468 02e8 8A0100AA 		bge	.L69
 1469              		.loc 1 1283 13 is_stmt 0 discriminator 1
 1470 02ec 10101BE5 		ldr	r1, [fp, #-16]
 1471 02f0 38001BE5 		ldr	r0, [fp, #-56]
 1472 02f4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1473              		.loc 1 1283 13
 1474 02f8 860100EA 		b	.L69
 1475              	.L83:
1284:../../Source/Kernel/rme_kernel.c ****         }
1285:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1286:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
1287:../../Source/Kernel/rme_kernel.c ****         {
1288:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1289:../../Source/Kernel/rme_kernel.c ****             
1290:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1476              		.loc 1 1290 20 is_stmt 1
 1477 02fc 28E01BE5 		ldr	lr, [fp, #-40]
1291:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1292:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1293:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1478              		.loc 1 1293 51
 1479 0300 34301BE5 		ldr	r3, [fp, #-52]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1480              		.loc 1 1290 20
 1481 0304 7340FFE6 		uxth	r4, r3
1294:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1482              		.loc 1 1294 40
 1483 0308 34301BE5 		ldr	r3, [fp, #-52]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1484              		.loc 1 1290 20
 1485 030c 2338A0E1 		lsr	r3, r3, #16
1295:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1486              		.loc 1 1295 51
 1487 0310 30201BE5 		ldr	r2, [fp, #-48]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1488              		.loc 1 1290 20
 1489 0314 7220FFE6 		uxth	r2, r2
1296:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1490              		.loc 1 1296 40
 1491 0318 30101BE5 		ldr	r1, [fp, #-48]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1492              		.loc 1 1290 20
 1493 031c 2118A0E1 		lsr	r1, r1, #16
1297:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1494              		.loc 1 1297 51
 1495 0320 2C001BE5 		ldr	r0, [fp, #-44]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1496              		.loc 1 1290 20
 1497 0324 7000FFE6 		uxth	r0, r0
1298:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1498              		.loc 1 1298 40
 1499 0328 2CC01BE5 		ldr	ip, [fp, #-44]
1290:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1500              		.loc 1 1290 20
 1501 032c 2CC8A0E1 		lsr	ip, ip, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 50


 1502 0330 10C08DE5 		str	ip, [sp, #16]
 1503 0334 0C008DE5 		str	r0, [sp, #12]
 1504 0338 08108DE5 		str	r1, [sp, #8]
 1505 033c 04208DE5 		str	r2, [sp, #4]
 1506 0340 00308DE5 		str	r3, [sp]
 1507 0344 0430A0E1 		mov	r3, r4
 1508 0348 0E20A0E1 		mov	r2, lr
 1509 034c 38101BE5 		ldr	r1, [fp, #-56]
 1510 0350 14001BE5 		ldr	r0, [fp, #-20]
 1511 0354 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1512 0358 10000BE5 		str	r0, [fp, #-16]
1299:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1513              		.loc 1 1299 13
 1514 035c 10301BE5 		ldr	r3, [fp, #-16]
 1515 0360 000053E3 		cmp	r3, #0
 1516 0364 6B0100AA 		bge	.L69
 1517              		.loc 1 1299 13 is_stmt 0 discriminator 1
 1518 0368 10101BE5 		ldr	r1, [fp, #-16]
 1519 036c 38001BE5 		ldr	r0, [fp, #-56]
 1520 0370 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1521              		.loc 1 1299 13
 1522 0374 670100EA 		b	.L69
 1523              	.L82:
1300:../../Source/Kernel/rme_kernel.c ****         }
1301:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1302:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1303:../../Source/Kernel/rme_kernel.c ****         {
1304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1305:../../Source/Kernel/rme_kernel.c ****             
1306:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1307:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1308:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1524              		.loc 1 1308 55 is_stmt 1
 1525 0378 34301BE5 		ldr	r3, [fp, #-52]
1306:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1526              		.loc 1 1306 20
 1527 037c 0320A0E1 		mov	r2, r3
1309:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1528              		.loc 1 1309 55
 1529 0380 30301BE5 		ldr	r3, [fp, #-48]
1306:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1530              		.loc 1 1306 20
 1531 0384 0310A0E1 		mov	r1, r3
 1532 0388 2C301BE5 		ldr	r3, [fp, #-44]
 1533 038c 00308DE5 		str	r3, [sp]
 1534 0390 0130A0E1 		mov	r3, r1
 1535 0394 38101BE5 		ldr	r1, [fp, #-56]
 1536 0398 14001BE5 		ldr	r0, [fp, #-20]
 1537 039c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1538 03a0 10000BE5 		str	r0, [fp, #-16]
1310:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1311:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1539              		.loc 1 1311 13
 1540 03a4 10301BE5 		ldr	r3, [fp, #-16]
 1541 03a8 000053E3 		cmp	r3, #0
 1542 03ac 590100AA 		bge	.L69
 1543              		.loc 1 1311 13 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 51


 1544 03b0 10101BE5 		ldr	r1, [fp, #-16]
 1545 03b4 38001BE5 		ldr	r0, [fp, #-56]
 1546 03b8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1547              		.loc 1 1311 13
 1548 03bc 550100EA 		b	.L69
 1549              	.L80:
1312:../../Source/Kernel/rme_kernel.c ****         }
1313:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1314:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1315:../../Source/Kernel/rme_kernel.c ****         {
1316:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1317:../../Source/Kernel/rme_kernel.c ****             
1318:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
1319:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1320:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1550              		.loc 1 1320 49 is_stmt 1
 1551 03c0 34301BE5 		ldr	r3, [fp, #-52]
1318:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1552              		.loc 1 1318 20
 1553 03c4 0320A0E1 		mov	r2, r3
 1554 03c8 30301BE5 		ldr	r3, [fp, #-48]
 1555 03cc 38101BE5 		ldr	r1, [fp, #-56]
 1556 03d0 14001BE5 		ldr	r0, [fp, #-20]
 1557 03d4 FEFFFFEB 		bl	_RME_Thd_Swt
 1558 03d8 10000BE5 		str	r0, [fp, #-16]
1321:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1322:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1559              		.loc 1 1322 13
 1560 03dc 10301BE5 		ldr	r3, [fp, #-16]
 1561 03e0 000053E3 		cmp	r3, #0
 1562 03e4 4B0100AA 		bge	.L69
 1563              		.loc 1 1322 13 is_stmt 0 discriminator 1
 1564 03e8 10101BE5 		ldr	r1, [fp, #-16]
 1565 03ec 38001BE5 		ldr	r0, [fp, #-56]
 1566 03f0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1567              		.loc 1 1322 13
 1568 03f4 470100EA 		b	.L69
 1569              	.L126:
1323:../../Source/Kernel/rme_kernel.c ****         }
1324:../../Source/Kernel/rme_kernel.c ****         default:
1325:../../Source/Kernel/rme_kernel.c ****         {
1326:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1327:../../Source/Kernel/rme_kernel.c ****             break;
 1570              		.loc 1 1327 13 is_stmt 1
 1571 03f8 00F020E3 		nop
1328:../../Source/Kernel/rme_kernel.c ****         }
1329:../../Source/Kernel/rme_kernel.c ****     } 
1330:../../Source/Kernel/rme_kernel.c **** 
1331:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1332:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1572              		.loc 1 1332 5
 1573 03fc 18301BE5 		ldr	r3, [fp, #-24]
 1574 0400 0A2043E2 		sub	r2, r3, #10
 1575 0404 18359FE5 		ldr	r3, .L127+4
 1576 0408 170052E3 		cmp	r2, #23
 1577 040c 3B01008A 		bhi	.L97
 1578 0410 02F193E7 		ldr	pc, [r3, r2, lsl #2]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 52


 1579              	.Lrtx99:
 1580 0414 00F020E3 		nop
 1581              		.section	.rodata._RME_Svc_Handler
 1582              		.align	2
 1583              	.L99:
 1584 0020 18040000 		.word	.L122
 1585 0024 60040000 		.word	.L121
 1586 0028 80040000 		.word	.L120
 1587 002c A0040000 		.word	.L119
 1588 0030 04050000 		.word	.L118
 1589 0034 24050000 		.word	.L117
 1590 0038 98050000 		.word	.L116
 1591 003c B8050000 		.word	.L115
 1592 0040 10060000 		.word	.L114
 1593 0044 30060000 		.word	.L113
 1594 0048 68060000 		.word	.L112
 1595 004c 88060000 		.word	.L111
 1596 0050 BC060000 		.word	.L110
 1597 0054 DC060000 		.word	.L109
 1598 0058 FC060000 		.word	.L108
 1599 005c 1C070000 		.word	.L107
 1600 0060 90070000 		.word	.L106
 1601 0064 B0070000 		.word	.L105
 1602 0068 0C080000 		.word	.L104
 1603 006c 24080000 		.word	.L103
 1604 0070 44080000 		.word	.L102
 1605 0074 64080000 		.word	.L101
 1606 0078 B0080000 		.word	.L100
 1607 007c D0080000 		.word	.L98
 1608              		.section	.text._RME_Svc_Handler
 1609              		.p2align 2
 1610              	.L122:
1333:../../Source/Kernel/rme_kernel.c ****     {
1334:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1335:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1336:../../Source/Kernel/rme_kernel.c ****         {
1337:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1338:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1611              		.loc 1 1338 20
 1612 0418 28301BE5 		ldr	r3, [fp, #-40]
 1613 041c 0300A0E1 		mov	r0, r3
1339:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1340:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1614              		.loc 1 1340 44
 1615 0420 34301BE5 		ldr	r3, [fp, #-52]
 1616 0424 2338A0E1 		lsr	r3, r3, #16
1338:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1617              		.loc 1 1338 20
 1618 0428 03C0A0E1 		mov	ip, r3
1341:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1619              		.loc 1 1341 44
 1620 042c 34301BE5 		ldr	r3, [fp, #-52]
1338:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1621              		.loc 1 1338 20
 1622 0430 7310FFE6 		uxth	r1, r3
 1623 0434 30301BE5 		ldr	r3, [fp, #-48]
 1624 0438 2C201BE5 		ldr	r2, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 53


 1625 043c 04208DE5 		str	r2, [sp, #4]
 1626 0440 00308DE5 		str	r3, [sp]
 1627 0444 0130A0E1 		mov	r3, r1
 1628 0448 0C20A0E1 		mov	r2, ip
 1629 044c 0010A0E1 		mov	r1, r0
 1630 0450 14001BE5 		ldr	r0, [fp, #-20]
 1631 0454 FEFFFFEB 		bl	_RME_Cpt_Crt
 1632 0458 10000BE5 		str	r0, [fp, #-16]
1342:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1343:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1344:../../Source/Kernel/rme_kernel.c ****             break;
 1633              		.loc 1 1344 13
 1634 045c 2A0100EA 		b	.L123
 1635              	.L121:
1345:../../Source/Kernel/rme_kernel.c ****         }
1346:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1347:../../Source/Kernel/rme_kernel.c ****         {
1348:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1349:../../Source/Kernel/rme_kernel.c ****             
1350:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1636              		.loc 1 1350 20
 1637 0460 28301BE5 		ldr	r3, [fp, #-40]
 1638 0464 0310A0E1 		mov	r1, r3
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1639              		.loc 1 1352 49
 1640 0468 34301BE5 		ldr	r3, [fp, #-52]
1350:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1641              		.loc 1 1350 20
 1642 046c 0320A0E1 		mov	r2, r3
 1643 0470 14001BE5 		ldr	r0, [fp, #-20]
 1644 0474 FEFFFFEB 		bl	_RME_Cpt_Del
 1645 0478 10000BE5 		str	r0, [fp, #-16]
1353:../../Source/Kernel/rme_kernel.c ****             break;
 1646              		.loc 1 1353 13
 1647 047c 220100EA 		b	.L123
 1648              	.L120:
1354:../../Source/Kernel/rme_kernel.c ****         }
1355:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1356:../../Source/Kernel/rme_kernel.c ****         {
1357:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1358:../../Source/Kernel/rme_kernel.c ****             
1359:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1649              		.loc 1 1359 20
 1650 0480 28301BE5 		ldr	r3, [fp, #-40]
 1651 0484 0310A0E1 		mov	r1, r3
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1652              		.loc 1 1361 49
 1653 0488 34301BE5 		ldr	r3, [fp, #-52]
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1654              		.loc 1 1359 20
 1655 048c 0320A0E1 		mov	r2, r3
 1656 0490 14001BE5 		ldr	r0, [fp, #-20]
 1657 0494 FEFFFFEB 		bl	_RME_Cpt_Frz
 1658 0498 10000BE5 		str	r0, [fp, #-16]
1362:../../Source/Kernel/rme_kernel.c ****             break;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 54


 1659              		.loc 1 1362 13
 1660 049c 1A0100EA 		b	.L123
 1661              	.L119:
1363:../../Source/Kernel/rme_kernel.c ****         }
1364:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1365:../../Source/Kernel/rme_kernel.c ****         {
1366:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1367:../../Source/Kernel/rme_kernel.c ****             
1368:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1369:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1662              		.loc 1 1369 44
 1663 04a0 34301BE5 		ldr	r3, [fp, #-52]
 1664 04a4 2338A0E1 		lsr	r3, r3, #16
1368:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1665              		.loc 1 1368 20
 1666 04a8 03E0A0E1 		mov	lr, r3
1370:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1667              		.loc 1 1370 44
 1668 04ac 34301BE5 		ldr	r3, [fp, #-52]
1368:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1669              		.loc 1 1368 20
 1670 04b0 73C0FFE6 		uxth	ip, r3
1371:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1671              		.loc 1 1371 44
 1672 04b4 30301BE5 		ldr	r3, [fp, #-48]
 1673 04b8 2338A0E1 		lsr	r3, r3, #16
1368:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1674              		.loc 1 1368 20
 1675 04bc 0340A0E1 		mov	r4, r3
1372:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1676              		.loc 1 1372 44
 1677 04c0 30301BE5 		ldr	r3, [fp, #-48]
1368:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1678              		.loc 1 1368 20
 1679 04c4 7330FFE6 		uxth	r3, r3
 1680 04c8 2C201BE5 		ldr	r2, [fp, #-44]
1373:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1374:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1681              		.loc 1 1374 33
 1682 04cc 24101BE5 		ldr	r1, [fp, #-36]
 1683 04d0 0108A0E1 		lsl	r0, r1, #16
1368:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1684              		.loc 1 1368 20
 1685 04d4 28101BE5 		ldr	r1, [fp, #-40]
 1686 04d8 011080E1 		orr	r1, r0, r1
 1687 04dc 08108DE5 		str	r1, [sp, #8]
 1688 04e0 04208DE5 		str	r2, [sp, #4]
 1689 04e4 00308DE5 		str	r3, [sp]
 1690 04e8 0430A0E1 		mov	r3, r4
 1691 04ec 0C20A0E1 		mov	r2, ip
 1692 04f0 0E10A0E1 		mov	r1, lr
 1693 04f4 14001BE5 		ldr	r0, [fp, #-20]
 1694 04f8 FEFFFFEB 		bl	_RME_Cpt_Add
 1695 04fc 10000BE5 		str	r0, [fp, #-16]
1375:../../Source/Kernel/rme_kernel.c ****             break;
 1696              		.loc 1 1375 13
 1697 0500 010100EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 55


 1698              	.L118:
1376:../../Source/Kernel/rme_kernel.c ****         }
1377:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1378:../../Source/Kernel/rme_kernel.c ****         {
1379:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1380:../../Source/Kernel/rme_kernel.c ****             
1381:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1699              		.loc 1 1381 20
 1700 0504 28301BE5 		ldr	r3, [fp, #-40]
 1701 0508 0310A0E1 		mov	r1, r3
1382:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1383:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1702              		.loc 1 1383 49
 1703 050c 34301BE5 		ldr	r3, [fp, #-52]
1381:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1704              		.loc 1 1381 20
 1705 0510 0320A0E1 		mov	r2, r3
 1706 0514 14001BE5 		ldr	r0, [fp, #-20]
 1707 0518 FEFFFFEB 		bl	_RME_Cpt_Rem
 1708 051c 10000BE5 		str	r0, [fp, #-16]
1384:../../Source/Kernel/rme_kernel.c ****             break;
 1709              		.loc 1 1384 13
 1710 0520 F90000EA 		b	.L123
 1711              	.L117:
1385:../../Source/Kernel/rme_kernel.c ****         }
1386:../../Source/Kernel/rme_kernel.c ****         
1387:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1388:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1389:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1390:../../Source/Kernel/rme_kernel.c ****         {
1391:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1392:../../Source/Kernel/rme_kernel.c ****             
1393:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1712              		.loc 1 1393 20
 1713 0524 28301BE5 		ldr	r3, [fp, #-40]
 1714 0528 0340A0E1 		mov	r4, r3
1394:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1395:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1715              		.loc 1 1395 44
 1716 052c 34301BE5 		ldr	r3, [fp, #-52]
 1717 0530 2338A0E1 		lsr	r3, r3, #16
1393:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1718              		.loc 1 1393 20
 1719 0534 0350A0E1 		mov	r5, r3
1396:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1720              		.loc 1 1396 44
 1721 0538 34301BE5 		ldr	r3, [fp, #-52]
 1722 053c 2334A0E1 		lsr	r3, r3, #8
1393:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1723              		.loc 1 1393 20
 1724 0540 73E0EFE6 		uxtb	lr, r3
 1725 0544 30301BE5 		ldr	r3, [fp, #-48]
1397:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1398:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1726              		.loc 1 1398 38
 1727 0548 2C201BE5 		ldr	r2, [fp, #-44]
1393:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 56


 1728              		.loc 1 1393 20
 1729 054c 0120C2E3 		bic	r2, r2, #1
1399:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1730              		.loc 1 1399 33
 1731 0550 2C101BE5 		ldr	r1, [fp, #-44]
1393:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1732              		.loc 1 1393 20
 1733 0554 011001E2 		and	r1, r1, #1
1400:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1734              		.loc 1 1400 33
 1735 0558 34001BE5 		ldr	r0, [fp, #-52]
1393:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1736              		.loc 1 1393 20
 1737 055c 7000EFE6 		uxtb	r0, r0
 1738 0560 24C01BE5 		ldr	ip, [fp, #-36]
 1739 0564 2CC4A0E1 		lsr	ip, ip, #8
 1740 0568 10C08DE5 		str	ip, [sp, #16]
 1741 056c 0C008DE5 		str	r0, [sp, #12]
 1742 0570 08108DE5 		str	r1, [sp, #8]
 1743 0574 04208DE5 		str	r2, [sp, #4]
 1744 0578 00308DE5 		str	r3, [sp]
 1745 057c 0E30A0E1 		mov	r3, lr
 1746 0580 0520A0E1 		mov	r2, r5
 1747 0584 0410A0E1 		mov	r1, r4
 1748 0588 14001BE5 		ldr	r0, [fp, #-20]
 1749 058c FEFFFFEB 		bl	_RME_Pgt_Crt
 1750 0590 10000BE5 		str	r0, [fp, #-16]
1401:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1402:../../Source/Kernel/rme_kernel.c ****             break;
 1751              		.loc 1 1402 13
 1752 0594 DC0000EA 		b	.L123
 1753              	.L116:
1403:../../Source/Kernel/rme_kernel.c ****         }
1404:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1405:../../Source/Kernel/rme_kernel.c ****         {
1406:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1407:../../Source/Kernel/rme_kernel.c ****             
1408:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1754              		.loc 1 1408 20
 1755 0598 28301BE5 		ldr	r3, [fp, #-40]
 1756 059c 0310A0E1 		mov	r1, r3
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1757              		.loc 1 1410 49
 1758 05a0 34301BE5 		ldr	r3, [fp, #-52]
1408:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1759              		.loc 1 1408 20
 1760 05a4 0320A0E1 		mov	r2, r3
 1761 05a8 14001BE5 		ldr	r0, [fp, #-20]
 1762 05ac FEFFFFEB 		bl	_RME_Pgt_Del
 1763 05b0 10000BE5 		str	r0, [fp, #-16]
1411:../../Source/Kernel/rme_kernel.c ****             break;
 1764              		.loc 1 1411 13
 1765 05b4 D40000EA 		b	.L123
 1766              	.L115:
1412:../../Source/Kernel/rme_kernel.c ****         }
1413:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 57


1414:../../Source/Kernel/rme_kernel.c ****         {
1415:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1416:../../Source/Kernel/rme_kernel.c ****             
1417:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1418:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1767              		.loc 1 1418 44
 1768 05b8 34301BE5 		ldr	r3, [fp, #-52]
 1769 05bc 2338A0E1 		lsr	r3, r3, #16
1417:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1770              		.loc 1 1417 20
 1771 05c0 03E0A0E1 		mov	lr, r3
1419:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1772              		.loc 1 1419 33
 1773 05c4 34301BE5 		ldr	r3, [fp, #-52]
1417:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1774              		.loc 1 1417 20
 1775 05c8 7310FFE6 		uxth	r1, r3
 1776 05cc 28001BE5 		ldr	r0, [fp, #-40]
1420:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1421:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1777              		.loc 1 1421 44
 1778 05d0 30301BE5 		ldr	r3, [fp, #-48]
 1779 05d4 2338A0E1 		lsr	r3, r3, #16
1417:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1780              		.loc 1 1417 20
 1781 05d8 03C0A0E1 		mov	ip, r3
1422:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1782              		.loc 1 1422 33
 1783 05dc 30301BE5 		ldr	r3, [fp, #-48]
1417:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1784              		.loc 1 1417 20
 1785 05e0 7330FFE6 		uxth	r3, r3
 1786 05e4 2C201BE5 		ldr	r2, [fp, #-44]
 1787 05e8 08208DE5 		str	r2, [sp, #8]
 1788 05ec 04308DE5 		str	r3, [sp, #4]
 1789 05f0 00C08DE5 		str	ip, [sp]
 1790 05f4 0030A0E1 		mov	r3, r0
 1791 05f8 0120A0E1 		mov	r2, r1
 1792 05fc 0E10A0E1 		mov	r1, lr
 1793 0600 14001BE5 		ldr	r0, [fp, #-20]
 1794 0604 FEFFFFEB 		bl	_RME_Pgt_Add
 1795 0608 10000BE5 		str	r0, [fp, #-16]
1423:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1424:../../Source/Kernel/rme_kernel.c ****             break;
 1796              		.loc 1 1424 13
 1797 060c BE0000EA 		b	.L123
 1798              	.L114:
1425:../../Source/Kernel/rme_kernel.c ****         }
1426:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1427:../../Source/Kernel/rme_kernel.c ****         {
1428:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1429:../../Source/Kernel/rme_kernel.c ****             
1430:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1799              		.loc 1 1431 49
 1800 0610 34301BE5 		ldr	r3, [fp, #-52]
1430:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 58


 1801              		.loc 1 1430 20
 1802 0614 0310A0E1 		mov	r1, r3
 1803 0618 30301BE5 		ldr	r3, [fp, #-48]
 1804 061c 0320A0E1 		mov	r2, r3
 1805 0620 14001BE5 		ldr	r0, [fp, #-20]
 1806 0624 FEFFFFEB 		bl	_RME_Pgt_Rem
 1807 0628 10000BE5 		str	r0, [fp, #-16]
1432:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1433:../../Source/Kernel/rme_kernel.c ****             break;
 1808              		.loc 1 1433 13
 1809 062c B60000EA 		b	.L123
 1810              	.L113:
1434:../../Source/Kernel/rme_kernel.c ****         }
1435:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1436:../../Source/Kernel/rme_kernel.c ****         {
1437:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1438:../../Source/Kernel/rme_kernel.c ****             
1439:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1440:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1811              		.loc 1 1440 44
 1812 0630 34301BE5 		ldr	r3, [fp, #-52]
 1813 0634 2338A0E1 		lsr	r3, r3, #16
1439:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1814              		.loc 1 1439 20
 1815 0638 0300A0E1 		mov	r0, r3
 1816 063c 30201BE5 		ldr	r2, [fp, #-48]
1441:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1817              		.loc 1 1442 44
 1818 0640 34301BE5 		ldr	r3, [fp, #-52]
1439:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1819              		.loc 1 1439 20
 1820 0644 7310FFE6 		uxth	r1, r3
 1821 0648 2C301BE5 		ldr	r3, [fp, #-44]
 1822 064c 00308DE5 		str	r3, [sp]
 1823 0650 0130A0E1 		mov	r3, r1
 1824 0654 0010A0E1 		mov	r1, r0
 1825 0658 14001BE5 		ldr	r0, [fp, #-20]
 1826 065c FEFFFFEB 		bl	_RME_Pgt_Con
 1827 0660 10000BE5 		str	r0, [fp, #-16]
1443:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1444:../../Source/Kernel/rme_kernel.c ****             break;
 1828              		.loc 1 1444 13
 1829 0664 A80000EA 		b	.L123
 1830              	.L112:
1445:../../Source/Kernel/rme_kernel.c ****         }
1446:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1447:../../Source/Kernel/rme_kernel.c ****         {
1448:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1449:../../Source/Kernel/rme_kernel.c ****             
1450:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1451:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1831              		.loc 1 1451 49
 1832 0668 34301BE5 		ldr	r3, [fp, #-52]
1450:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1833              		.loc 1 1450 20
 1834 066c 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 59


 1835 0670 30201BE5 		ldr	r2, [fp, #-48]
1452:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1836              		.loc 1 1453 49
 1837 0674 2C301BE5 		ldr	r3, [fp, #-44]
1450:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1838              		.loc 1 1450 20
 1839 0678 14001BE5 		ldr	r0, [fp, #-20]
 1840 067c FEFFFFEB 		bl	_RME_Pgt_Des
 1841 0680 10000BE5 		str	r0, [fp, #-16]
1454:../../Source/Kernel/rme_kernel.c ****             break;
 1842              		.loc 1 1454 13
 1843 0684 A00000EA 		b	.L123
 1844              	.L111:
1455:../../Source/Kernel/rme_kernel.c ****         }
1456:../../Source/Kernel/rme_kernel.c **** #endif
1457:../../Source/Kernel/rme_kernel.c ****         /* Process */
1458:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1459:../../Source/Kernel/rme_kernel.c ****         {
1460:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1461:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1845              		.loc 1 1461 20
 1846 0688 28301BE5 		ldr	r3, [fp, #-40]
 1847 068c 0310A0E1 		mov	r1, r3
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1848              		.loc 1 1463 49
 1849 0690 34301BE5 		ldr	r3, [fp, #-52]
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1850              		.loc 1 1461 20
 1851 0694 0320A0E1 		mov	r2, r3
1464:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1852              		.loc 1 1464 49
 1853 0698 30301BE5 		ldr	r3, [fp, #-48]
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1854              		.loc 1 1461 20
 1855 069c 0300A0E1 		mov	r0, r3
1465:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1856              		.loc 1 1465 49
 1857 06a0 2C301BE5 		ldr	r3, [fp, #-44]
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1858              		.loc 1 1461 20
 1859 06a4 00308DE5 		str	r3, [sp]
 1860 06a8 0030A0E1 		mov	r3, r0
 1861 06ac 14001BE5 		ldr	r0, [fp, #-20]
 1862 06b0 FEFFFFEB 		bl	_RME_Prc_Crt
 1863 06b4 10000BE5 		str	r0, [fp, #-16]
1466:../../Source/Kernel/rme_kernel.c **** #else
1467:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1468:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1469:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1470:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1472:../../Source/Kernel/rme_kernel.c **** #endif
1473:../../Source/Kernel/rme_kernel.c ****             break;
 1864              		.loc 1 1473 13
 1865 06b8 930000EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 60


 1866              	.L110:
1474:../../Source/Kernel/rme_kernel.c ****         }
1475:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1476:../../Source/Kernel/rme_kernel.c ****         {
1477:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1478:../../Source/Kernel/rme_kernel.c ****             
1479:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1867              		.loc 1 1479 20
 1868 06bc 28301BE5 		ldr	r3, [fp, #-40]
 1869 06c0 0310A0E1 		mov	r1, r3
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1870              		.loc 1 1481 49
 1871 06c4 34301BE5 		ldr	r3, [fp, #-52]
1479:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1872              		.loc 1 1479 20
 1873 06c8 0320A0E1 		mov	r2, r3
 1874 06cc 14001BE5 		ldr	r0, [fp, #-20]
 1875 06d0 FEFFFFEB 		bl	_RME_Prc_Del
 1876 06d4 10000BE5 		str	r0, [fp, #-16]
1482:../../Source/Kernel/rme_kernel.c ****             break;
 1877              		.loc 1 1482 13
 1878 06d8 8B0000EA 		b	.L123
 1879              	.L109:
1483:../../Source/Kernel/rme_kernel.c ****         }
1484:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1485:../../Source/Kernel/rme_kernel.c ****         {
1486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1487:../../Source/Kernel/rme_kernel.c ****             
1488:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1880              		.loc 1 1489 49
 1881 06dc 34301BE5 		ldr	r3, [fp, #-52]
1488:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1882              		.loc 1 1488 20
 1883 06e0 0310A0E1 		mov	r1, r3
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1884              		.loc 1 1490 49
 1885 06e4 30301BE5 		ldr	r3, [fp, #-48]
1488:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1886              		.loc 1 1488 20
 1887 06e8 0320A0E1 		mov	r2, r3
 1888 06ec 14001BE5 		ldr	r0, [fp, #-20]
 1889 06f0 FEFFFFEB 		bl	_RME_Prc_Cpt
 1890 06f4 10000BE5 		str	r0, [fp, #-16]
1491:../../Source/Kernel/rme_kernel.c ****             break;
 1891              		.loc 1 1491 13
 1892 06f8 830000EA 		b	.L123
 1893              	.L108:
1492:../../Source/Kernel/rme_kernel.c ****         }
1493:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1494:../../Source/Kernel/rme_kernel.c ****         {
1495:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1496:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1497:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1498:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1894              		.loc 1 1498 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 61


 1895 06fc 34301BE5 		ldr	r3, [fp, #-52]
1497:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1896              		.loc 1 1497 20
 1897 0700 0310A0E1 		mov	r1, r3
1499:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1898              		.loc 1 1499 49
 1899 0704 30301BE5 		ldr	r3, [fp, #-48]
1497:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1900              		.loc 1 1497 20
 1901 0708 0320A0E1 		mov	r2, r3
 1902 070c 14001BE5 		ldr	r0, [fp, #-20]
 1903 0710 FEFFFFEB 		bl	_RME_Prc_Pgt
 1904 0714 10000BE5 		str	r0, [fp, #-16]
1500:../../Source/Kernel/rme_kernel.c **** #else
1501:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1502:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1503:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1504:../../Source/Kernel/rme_kernel.c **** #endif
1505:../../Source/Kernel/rme_kernel.c ****             break;
 1905              		.loc 1 1505 13
 1906 0718 7B0000EA 		b	.L123
 1907              	.L107:
1506:../../Source/Kernel/rme_kernel.c ****         }
1507:../../Source/Kernel/rme_kernel.c ****         
1508:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1509:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1510:../../Source/Kernel/rme_kernel.c ****         {
1511:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1512:../../Source/Kernel/rme_kernel.c **** 
1513:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1908              		.loc 1 1513 20
 1909 071c 28301BE5 		ldr	r3, [fp, #-40]
 1910 0720 0340A0E1 		mov	r4, r3
1514:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1515:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1911              		.loc 1 1515 44
 1912 0724 34301BE5 		ldr	r3, [fp, #-52]
 1913 0728 2338A0E1 		lsr	r3, r3, #16
1513:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1914              		.loc 1 1513 20
 1915 072c 0350A0E1 		mov	r5, r3
1516:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1916              		.loc 1 1516 44
 1917 0730 34301BE5 		ldr	r3, [fp, #-52]
1513:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1918              		.loc 1 1513 20
 1919 0734 73C0FFE6 		uxth	ip, r3
1517:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1920              		.loc 1 1517 44
 1921 0738 30301BE5 		ldr	r3, [fp, #-48]
 1922 073c 2338A0E1 		lsr	r3, r3, #16
1513:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1923              		.loc 1 1513 20
 1924 0740 03E0A0E1 		mov	lr, r3
1518:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1925              		.loc 1 1518 33
 1926 0744 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 62


1513:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1927              		.loc 1 1513 20
 1928 0748 7330FFE6 		uxth	r3, r3
 1929 074c 2C201BE5 		ldr	r2, [fp, #-44]
 1930 0750 24101BE5 		ldr	r1, [fp, #-36]
 1931 0754 A113A0E1 		lsr	r1, r1, #7
 1932 0758 24001BE5 		ldr	r0, [fp, #-36]
 1933 075c 400000E2 		and	r0, r0, #64
 1934 0760 10008DE5 		str	r0, [sp, #16]
 1935 0764 0C108DE5 		str	r1, [sp, #12]
 1936 0768 08208DE5 		str	r2, [sp, #8]
 1937 076c 04308DE5 		str	r3, [sp, #4]
 1938 0770 00E08DE5 		str	lr, [sp]
 1939 0774 0C30A0E1 		mov	r3, ip
 1940 0778 0520A0E1 		mov	r2, r5
 1941 077c 0410A0E1 		mov	r1, r4
 1942 0780 14001BE5 		ldr	r0, [fp, #-20]
 1943 0784 FEFFFFEB 		bl	_RME_Thd_Crt
 1944 0788 10000BE5 		str	r0, [fp, #-16]
1519:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1520:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1521:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1522:../../Source/Kernel/rme_kernel.c ****             break;
 1945              		.loc 1 1522 13
 1946 078c 5E0000EA 		b	.L123
 1947              	.L106:
1523:../../Source/Kernel/rme_kernel.c ****         }
1524:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1525:../../Source/Kernel/rme_kernel.c ****         {
1526:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1527:../../Source/Kernel/rme_kernel.c ****             
1528:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1948              		.loc 1 1528 20
 1949 0790 28301BE5 		ldr	r3, [fp, #-40]
 1950 0794 0310A0E1 		mov	r1, r3
1529:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1530:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1951              		.loc 1 1530 49
 1952 0798 34301BE5 		ldr	r3, [fp, #-52]
1528:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1953              		.loc 1 1528 20
 1954 079c 0320A0E1 		mov	r2, r3
 1955 07a0 14001BE5 		ldr	r0, [fp, #-20]
 1956 07a4 FEFFFFEB 		bl	_RME_Thd_Del
 1957 07a8 10000BE5 		str	r0, [fp, #-16]
1531:../../Source/Kernel/rme_kernel.c ****             break;
 1958              		.loc 1 1531 13
 1959 07ac 560000EA 		b	.L123
 1960              	.L105:
1532:../../Source/Kernel/rme_kernel.c ****         }
1533:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1534:../../Source/Kernel/rme_kernel.c ****         {
1535:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1536:../../Source/Kernel/rme_kernel.c ****             
1537:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1961              		.loc 1 1537 20
 1962 07b0 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 63


 1963 07b4 03C0A0E1 		mov	ip, r3
1538:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1539:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1964              		.loc 1 1539 51
 1965 07b8 34301BE5 		ldr	r3, [fp, #-52]
 1966 07bc 2338A0E1 		lsr	r3, r3, #16
1537:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1967              		.loc 1 1537 20
 1968 07c0 03E0A0E1 		mov	lr, r3
1540:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1969              		.loc 1 1540 51
 1970 07c4 34301BE5 		ldr	r3, [fp, #-52]
1537:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1971              		.loc 1 1537 20
 1972 07c8 7310FFE6 		uxth	r1, r3
1541:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1973              		.loc 1 1541 51
 1974 07cc 30301BE5 		ldr	r3, [fp, #-48]
 1975 07d0 2338A0E1 		lsr	r3, r3, #16
1537:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1976              		.loc 1 1537 20
 1977 07d4 0300A0E1 		mov	r0, r3
1542:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1978              		.loc 1 1542 40
 1979 07d8 30301BE5 		ldr	r3, [fp, #-48]
1537:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1980              		.loc 1 1537 20
 1981 07dc 7330FFE6 		uxth	r3, r3
 1982 07e0 2C201BE5 		ldr	r2, [fp, #-44]
 1983 07e4 08208DE5 		str	r2, [sp, #8]
 1984 07e8 04308DE5 		str	r3, [sp, #4]
 1985 07ec 00008DE5 		str	r0, [sp]
 1986 07f0 0130A0E1 		mov	r3, r1
 1987 07f4 0E20A0E1 		mov	r2, lr
 1988 07f8 0C10A0E1 		mov	r1, ip
 1989 07fc 14001BE5 		ldr	r0, [fp, #-20]
 1990 0800 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1991 0804 10000BE5 		str	r0, [fp, #-16]
1543:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1992              		.loc 1 1544 13
 1993 0808 3F0000EA 		b	.L123
 1994              	.L104:
1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1547:../../Source/Kernel/rme_kernel.c ****         {
1548:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1549:../../Source/Kernel/rme_kernel.c ****             
1550:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1551:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1995              		.loc 1 1551 55
 1996 080c 34301BE5 		ldr	r3, [fp, #-52]
1550:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1997              		.loc 1 1550 20
 1998 0810 0310A0E1 		mov	r1, r3
 1999 0814 14001BE5 		ldr	r0, [fp, #-20]
 2000 0818 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 64


 2001 081c 10000BE5 		str	r0, [fp, #-16]
1552:../../Source/Kernel/rme_kernel.c ****             break;
 2002              		.loc 1 1552 13
 2003 0820 390000EA 		b	.L123
 2004              	.L103:
1553:../../Source/Kernel/rme_kernel.c ****         }
1554:../../Source/Kernel/rme_kernel.c ****         
1555:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1556:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1557:../../Source/Kernel/rme_kernel.c ****         {
1558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1559:../../Source/Kernel/rme_kernel.c ****             
1560:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
 2005              		.loc 1 1560 20
 2006 0824 28301BE5 		ldr	r3, [fp, #-40]
 2007 0828 0310A0E1 		mov	r1, r3
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2008              		.loc 1 1562 49
 2009 082c 34301BE5 		ldr	r3, [fp, #-52]
1560:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2010              		.loc 1 1560 20
 2011 0830 0320A0E1 		mov	r2, r3
 2012 0834 14001BE5 		ldr	r0, [fp, #-20]
 2013 0838 FEFFFFEB 		bl	_RME_Sig_Crt
 2014 083c 10000BE5 		str	r0, [fp, #-16]
1563:../../Source/Kernel/rme_kernel.c ****             break;
 2015              		.loc 1 1563 13
 2016 0840 310000EA 		b	.L123
 2017              	.L102:
1564:../../Source/Kernel/rme_kernel.c ****         }
1565:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1566:../../Source/Kernel/rme_kernel.c ****         {
1567:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1568:../../Source/Kernel/rme_kernel.c ****             
1569:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 2018              		.loc 1 1569 20
 2019 0844 28301BE5 		ldr	r3, [fp, #-40]
 2020 0848 0310A0E1 		mov	r1, r3
1570:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1571:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2021              		.loc 1 1571 49
 2022 084c 34301BE5 		ldr	r3, [fp, #-52]
1569:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2023              		.loc 1 1569 20
 2024 0850 0320A0E1 		mov	r2, r3
 2025 0854 14001BE5 		ldr	r0, [fp, #-20]
 2026 0858 FEFFFFEB 		bl	_RME_Sig_Del
 2027 085c 10000BE5 		str	r0, [fp, #-16]
1572:../../Source/Kernel/rme_kernel.c ****             break;
 2028              		.loc 1 1572 13
 2029 0860 290000EA 		b	.L123
 2030              	.L101:
1573:../../Source/Kernel/rme_kernel.c ****         }
1574:../../Source/Kernel/rme_kernel.c ****         
1575:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1576:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 65


1577:../../Source/Kernel/rme_kernel.c ****         {
1578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1579:../../Source/Kernel/rme_kernel.c ****             
1580:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2031              		.loc 1 1580 20
 2032 0864 28301BE5 		ldr	r3, [fp, #-40]
 2033 0868 0300A0E1 		mov	r0, r3
1581:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1582:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2034              		.loc 1 1582 44
 2035 086c 34301BE5 		ldr	r3, [fp, #-52]
 2036 0870 2338A0E1 		lsr	r3, r3, #16
1580:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2037              		.loc 1 1580 20
 2038 0874 03C0A0E1 		mov	ip, r3
1583:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2039              		.loc 1 1583 44
 2040 0878 34301BE5 		ldr	r3, [fp, #-52]
1580:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2041              		.loc 1 1580 20
 2042 087c 7320FFE6 		uxth	r2, r3
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2043              		.loc 1 1584 49
 2044 0880 30301BE5 		ldr	r3, [fp, #-48]
1580:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2045              		.loc 1 1580 20
 2046 0884 0310A0E1 		mov	r1, r3
 2047 0888 2C301BE5 		ldr	r3, [fp, #-44]
 2048 088c 04308DE5 		str	r3, [sp, #4]
 2049 0890 00108DE5 		str	r1, [sp]
 2050 0894 0230A0E1 		mov	r3, r2
 2051 0898 0C20A0E1 		mov	r2, ip
 2052 089c 0010A0E1 		mov	r1, r0
 2053 08a0 14001BE5 		ldr	r0, [fp, #-20]
 2054 08a4 FEFFFFEB 		bl	_RME_Inv_Crt
 2055 08a8 10000BE5 		str	r0, [fp, #-16]
1585:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1586:../../Source/Kernel/rme_kernel.c ****             break;
 2056              		.loc 1 1586 13
 2057 08ac 160000EA 		b	.L123
 2058              	.L100:
1587:../../Source/Kernel/rme_kernel.c ****         }
1588:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1589:../../Source/Kernel/rme_kernel.c ****         {
1590:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1591:../../Source/Kernel/rme_kernel.c ****             
1592:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2059              		.loc 1 1592 20
 2060 08b0 28301BE5 		ldr	r3, [fp, #-40]
 2061 08b4 0310A0E1 		mov	r1, r3
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2062              		.loc 1 1594 49
 2063 08b8 34301BE5 		ldr	r3, [fp, #-52]
1592:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2064              		.loc 1 1592 20
 2065 08bc 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 66


 2066 08c0 14001BE5 		ldr	r0, [fp, #-20]
 2067 08c4 FEFFFFEB 		bl	_RME_Inv_Del
 2068 08c8 10000BE5 		str	r0, [fp, #-16]
1595:../../Source/Kernel/rme_kernel.c ****             break;
 2069              		.loc 1 1595 13
 2070 08cc 0E0000EA 		b	.L123
 2071              	.L98:
1596:../../Source/Kernel/rme_kernel.c ****         }
1597:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1598:../../Source/Kernel/rme_kernel.c ****         {
1599:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1600:../../Source/Kernel/rme_kernel.c ****             
1601:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
1602:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2072              		.loc 1 1602 44
 2073 08d0 34301BE5 		ldr	r3, [fp, #-52]
1601:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2074              		.loc 1 1601 20
 2075 08d4 7310FFE6 		uxth	r1, r3
 2076 08d8 30201BE5 		ldr	r2, [fp, #-48]
 2077 08dc 2C001BE5 		ldr	r0, [fp, #-44]
1603:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1604:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1605:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2078              		.loc 1 1605 33
 2079 08e0 34301BE5 		ldr	r3, [fp, #-52]
1601:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2080              		.loc 1 1601 20
 2081 08e4 2338A0E1 		lsr	r3, r3, #16
 2082 08e8 00308DE5 		str	r3, [sp]
 2083 08ec 0030A0E1 		mov	r3, r0
 2084 08f0 14001BE5 		ldr	r0, [fp, #-20]
 2085 08f4 FEFFFFEB 		bl	_RME_Inv_Set
 2086 08f8 10000BE5 		str	r0, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2087              		.loc 1 1606 13
 2088 08fc 020000EA 		b	.L123
 2089              	.L97:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1609:../../Source/Kernel/rme_kernel.c ****         default: 
1610:../../Source/Kernel/rme_kernel.c ****         {
1611:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1612:../../Source/Kernel/rme_kernel.c ****             
1613:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2090              		.loc 1 1613 19
 2091 0900 0030E0E3 		mvn	r3, #0
 2092 0904 10300BE5 		str	r3, [fp, #-16]
1614:../../Source/Kernel/rme_kernel.c ****             break;
 2093              		.loc 1 1614 13
 2094 0908 00F020E3 		nop
 2095              	.L123:
1615:../../Source/Kernel/rme_kernel.c ****         }
1616:../../Source/Kernel/rme_kernel.c ****     }
1617:../../Source/Kernel/rme_kernel.c ****     
1618:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1619:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 67


 2096              		.loc 1 1619 5
 2097 090c 10101BE5 		ldr	r1, [fp, #-16]
 2098 0910 38001BE5 		ldr	r0, [fp, #-56]
 2099 0914 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2100              	.L69:
1620:../../Source/Kernel/rme_kernel.c **** }
 2101              		.loc 1 1620 1
 2102 0918 0CD04BE2 		sub	sp, fp, #12
 2103              		.cfi_def_cfa 13, 16
 2104              		@ sp needed
 2105 091c 3088BDE8 		pop	{r4, r5, fp, pc}
 2106              	.L128:
 2107              		.align	2
 2108              	.L127:
 2109 0920 00000000 		.word	.L81
 2110 0924 20000000 		.word	.L99
 2111              		.cfi_endproc
 2112              	.LFE18:
 2114              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2115              		.align	2
 2116              		.global	_RME_Tim_Handler
 2117              		.syntax unified
 2118              		.arm
 2120              	_RME_Tim_Handler:
 2121              	.LFB19:
1621:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1622:../../Source/Kernel/rme_kernel.c **** 
1623:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1624:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1625:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1626:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1627:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1628:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1629:../../Source/Kernel/rme_kernel.c **** Return      : None.
1630:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1631:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1632:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1633:../../Source/Kernel/rme_kernel.c **** {
 2122              		.loc 1 1633 1
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 16
 2125              		@ frame_needed = 1, uses_anonymous_args = 0
 2126 0000 00482DE9 		push	{fp, lr}
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 11, -8
 2129              		.cfi_offset 14, -4
 2130 0004 04B08DE2 		add	fp, sp, #4
 2131              		.cfi_def_cfa 11, 4
 2132 0008 10D04DE2 		sub	sp, sp, #16
 2133 000c 10000BE5 		str	r0, [fp, #-16]
 2134 0010 14100BE5 		str	r1, [fp, #-20]
1634:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1635:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1636:../../Source/Kernel/rme_kernel.c ****     
1637:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2135              		.loc 1 1637 10
 2136 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 68


 2137 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2138 001c 08300BE5 		str	r3, [fp, #-8]
1638:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2139              		.loc 1 1638 12
 2140 0020 08301BE5 		ldr	r3, [fp, #-8]
 2141 0024 043093E5 		ldr	r3, [r3, #4]
 2142 0028 0C300BE5 		str	r3, [fp, #-12]
1639:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2143              		.loc 1 1639 22
 2144 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2145 0030 183093E5 		ldr	r3, [r3, #24]
 2146              		.loc 1 1639 7
 2147 0034 0E0173E3 		cmn	r3, #-2147483645
 2148 0038 1500008A 		bhi	.L130
1640:../../Source/Kernel/rme_kernel.c ****     {
1641:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1642:../../Source/Kernel/rme_kernel.c **** 
1643:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1644:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2149              		.loc 1 1644 32
 2150 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2151 0040 183093E5 		ldr	r3, [r3, #24]
 2152              		.loc 1 1644 11
 2153 0044 14201BE5 		ldr	r2, [fp, #-20]
 2154 0048 030052E1 		cmp	r2, r3
 2155 004c 0600002A 		bcs	.L131
1645:../../Source/Kernel/rme_kernel.c ****         {
1646:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1647:../../Source/Kernel/rme_kernel.c ****             
1648:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2156              		.loc 1 1648 27
 2157 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2158 0054 182093E5 		ldr	r2, [r3, #24]
 2159              		.loc 1 1648 33
 2160 0058 14301BE5 		ldr	r3, [fp, #-20]
 2161 005c 032042E0 		sub	r2, r2, r3
 2162 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2163 0064 182083E5 		str	r2, [r3, #24]
 2164 0068 090000EA 		b	.L130
 2165              	.L131:
1649:../../Source/Kernel/rme_kernel.c ****         }
1650:../../Source/Kernel/rme_kernel.c ****         else
1651:../../Source/Kernel/rme_kernel.c ****         {
1652:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1653:../../Source/Kernel/rme_kernel.c **** 
1654:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1655:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2166              		.loc 1 1655 33
 2167 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2168 0070 0020A0E3 		mov	r2, #0
 2169 0074 182083E5 		str	r2, [r3, #24]
1656:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2170              		.loc 1 1656 13
 2171 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2172 007c FEFFFFEB 		bl	_RME_Run_Del
1657:../../Source/Kernel/rme_kernel.c ****             
1658:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 69


1659:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2173              		.loc 1 1659 33
 2174 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2175 0084 0220A0E3 		mov	r2, #2
 2176 0088 1C2083E5 		str	r2, [r3, #28]
1660:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2177              		.loc 1 1660 13
 2178 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2179 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2180              	.L130:
1661:../../Source/Kernel/rme_kernel.c ****         }
1662:../../Source/Kernel/rme_kernel.c ****     }
1663:../../Source/Kernel/rme_kernel.c ****     else
1664:../../Source/Kernel/rme_kernel.c ****     {
1665:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1666:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1667:../../Source/Kernel/rme_kernel.c ****     }
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1670:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2181              		.loc 1 1670 5
 2182 0094 08301BE5 		ldr	r3, [fp, #-8]
 2183 0098 083093E5 		ldr	r3, [r3, #8]
 2184 009c 0300A0E1 		mov	r0, r3
 2185 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1671:../../Source/Kernel/rme_kernel.c **** 
1672:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1673:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2186              		.loc 1 1673 5
 2187 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2188 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2189 00ac FEFFFFEB 		bl	_RME_Kern_High
1674:../../Source/Kernel/rme_kernel.c **** }
 2190              		.loc 1 1674 1
 2191 00b0 00F020E3 		nop
 2192 00b4 04D04BE2 		sub	sp, fp, #4
 2193              		.cfi_def_cfa 13, 8
 2194              		@ sp needed
 2195 00b8 0088BDE8 		pop	{fp, pc}
 2196              		.cfi_endproc
 2197              	.LFE19:
 2199              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2200              		.align	2
 2201              		.global	_RME_Tim_Elapse
 2202              		.syntax unified
 2203              		.arm
 2205              	_RME_Tim_Elapse:
 2206              	.LFB20:
1675:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1676:../../Source/Kernel/rme_kernel.c **** 
1677:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1678:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1679:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1680:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1681:../../Source/Kernel/rme_kernel.c **** Output      : None.
1682:../../Source/Kernel/rme_kernel.c **** Return      : None.
1683:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 70


1684:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1685:../../Source/Kernel/rme_kernel.c **** {
 2207              		.loc 1 1685 1
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 16
 2210              		@ frame_needed = 1, uses_anonymous_args = 0
 2211              		@ link register save eliminated.
 2212 0000 04B02DE5 		str	fp, [sp, #-4]!
 2213              		.cfi_def_cfa_offset 4
 2214              		.cfi_offset 11, -4
 2215 0004 00B08DE2 		add	fp, sp, #0
 2216              		.cfi_def_cfa_register 11
 2217 0008 14D04DE2 		sub	sp, sp, #20
 2218 000c 10000BE5 		str	r0, [fp, #-16]
1686:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1687:../../Source/Kernel/rme_kernel.c ****     
1688:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2219              		.loc 1 1688 12
 2220 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2221 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2222 0018 043093E5 		ldr	r3, [r3, #4]
 2223 001c 08300BE5 		str	r3, [fp, #-8]
1689:../../Source/Kernel/rme_kernel.c ****     
1690:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1691:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1692:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2224              		.loc 1 1692 22
 2225 0020 08301BE5 		ldr	r3, [fp, #-8]
 2226 0024 183093E5 		ldr	r3, [r3, #24]
 2227              		.loc 1 1692 7
 2228 0028 0E0173E3 		cmn	r3, #-2147483645
 2229 002c 0E00008A 		bhi	.L135
1693:../../Source/Kernel/rme_kernel.c ****     {
1694:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1695:../../Source/Kernel/rme_kernel.c **** 
1696:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1697:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1698:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2230              		.loc 1 1698 32
 2231 0030 08301BE5 		ldr	r3, [fp, #-8]
 2232 0034 183093E5 		ldr	r3, [r3, #24]
 2233              		.loc 1 1698 11
 2234 0038 10201BE5 		ldr	r2, [fp, #-16]
 2235 003c 030052E1 		cmp	r2, r3
 2236 0040 0600002A 		bcs	.L134
1699:../../Source/Kernel/rme_kernel.c ****         {
1700:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1701:../../Source/Kernel/rme_kernel.c ****             
1702:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2237              		.loc 1 1702 27
 2238 0044 08301BE5 		ldr	r3, [fp, #-8]
 2239 0048 182093E5 		ldr	r2, [r3, #24]
 2240              		.loc 1 1702 33
 2241 004c 10301BE5 		ldr	r3, [fp, #-16]
 2242 0050 032042E0 		sub	r2, r2, r3
 2243 0054 08301BE5 		ldr	r3, [fp, #-8]
 2244 0058 182083E5 		str	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 71


1703:../../Source/Kernel/rme_kernel.c ****         }
1704:../../Source/Kernel/rme_kernel.c ****         else
1705:../../Source/Kernel/rme_kernel.c ****         {
1706:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1707:../../Source/Kernel/rme_kernel.c ****             
1708:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1709:../../Source/Kernel/rme_kernel.c ****         }
1710:../../Source/Kernel/rme_kernel.c ****     }
1711:../../Source/Kernel/rme_kernel.c ****     else
1712:../../Source/Kernel/rme_kernel.c ****     {
1713:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1714:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1715:../../Source/Kernel/rme_kernel.c ****     }
1716:../../Source/Kernel/rme_kernel.c **** }
 2245              		.loc 1 1716 1
 2246 005c 020000EA 		b	.L135
 2247              	.L134:
1708:../../Source/Kernel/rme_kernel.c ****         }
 2248              		.loc 1 1708 33
 2249 0060 08301BE5 		ldr	r3, [fp, #-8]
 2250 0064 0120A0E3 		mov	r2, #1
 2251 0068 182083E5 		str	r2, [r3, #24]
 2252              	.L135:
 2253              		.loc 1 1716 1
 2254 006c 00F020E3 		nop
 2255 0070 00D08BE2 		add	sp, fp, #0
 2256              		.cfi_def_cfa_register 13
 2257              		@ sp needed
 2258 0074 04B09DE4 		ldr	fp, [sp], #4
 2259              		.cfi_restore 11
 2260              		.cfi_def_cfa_offset 0
 2261 0078 1EFF2FE1 		bx	lr
 2262              		.cfi_endproc
 2263              	.LFE20:
 2265              		.section	.text._RME_Tim_Future,"ax",%progbits
 2266              		.align	2
 2267              		.global	_RME_Tim_Future
 2268              		.syntax unified
 2269              		.arm
 2271              	_RME_Tim_Future:
 2272              	.LFB21:
1717:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1718:../../Source/Kernel/rme_kernel.c **** 
1719:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1720:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1721:../../Source/Kernel/rme_kernel.c **** Input       : None.
1722:../../Source/Kernel/rme_kernel.c **** Output      : None.
1723:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1724:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1725:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1726:../../Source/Kernel/rme_kernel.c **** {
 2273              		.loc 1 1726 1
 2274              		.cfi_startproc
 2275              		@ args = 0, pretend = 0, frame = 0
 2276              		@ frame_needed = 1, uses_anonymous_args = 0
 2277              		@ link register save eliminated.
 2278 0000 04B02DE5 		str	fp, [sp, #-4]!
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 72


 2279              		.cfi_def_cfa_offset 4
 2280              		.cfi_offset 11, -4
 2281 0004 00B08DE2 		add	fp, sp, #0
 2282              		.cfi_def_cfa_register 11
1727:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1728:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1729:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2283              		.loc 1 1729 27
 2284 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2285 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2286 0010 043093E5 		ldr	r3, [r3, #4]
 2287              		.loc 1 1729 43
 2288 0014 183093E5 		ldr	r3, [r3, #24]
1730:../../Source/Kernel/rme_kernel.c **** }
 2289              		.loc 1 1730 1
 2290 0018 0300A0E1 		mov	r0, r3
 2291 001c 00D08BE2 		add	sp, fp, #0
 2292              		.cfi_def_cfa_register 13
 2293              		@ sp needed
 2294 0020 04B09DE4 		ldr	fp, [sp], #4
 2295              		.cfi_restore 11
 2296              		.cfi_def_cfa_offset 0
 2297 0024 1EFF2FE1 		bx	lr
 2298              		.cfi_endproc
 2299              	.LFE21:
 2301              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2302              		.align	2
 2303              		.global	_RME_Cpt_Boot_Init
 2304              		.syntax unified
 2305              		.arm
 2307              	_RME_Cpt_Boot_Init:
 2308              	.LFB22:
1731:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1732:../../Source/Kernel/rme_kernel.c **** 
1733:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1734:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1735:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1736:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1737:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1738:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1739:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1740:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1741:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1742:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1743:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1744:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1745:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1746:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1747:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1748:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1749:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1750:../../Source/Kernel/rme_kernel.c **** {
 2309              		.loc 1 1750 1
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 24
 2312              		@ frame_needed = 1, uses_anonymous_args = 0
 2313 0000 00482DE9 		push	{fp, lr}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 73


 2314              		.cfi_def_cfa_offset 8
 2315              		.cfi_offset 11, -8
 2316              		.cfi_offset 14, -4
 2317 0004 04B08DE2 		add	fp, sp, #4
 2318              		.cfi_def_cfa 11, 4
 2319 0008 18D04DE2 		sub	sp, sp, #24
 2320 000c 10000BE5 		str	r0, [fp, #-16]
 2321 0010 14100BE5 		str	r1, [fp, #-20]
 2322 0014 18200BE5 		str	r2, [fp, #-24]
1751:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1752:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1753:../../Source/Kernel/rme_kernel.c **** 
1754:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1755:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2323              		.loc 1 1755 7
 2324 0018 18301BE5 		ldr	r3, [fp, #-24]
 2325 001c 000053E3 		cmp	r3, #0
 2326 0020 0200000A 		beq	.L139
 2327              		.loc 1 1755 23 discriminator 1
 2328 0024 18301BE5 		ldr	r3, [fp, #-24]
 2329 0028 800053E3 		cmp	r3, #128
 2330 002c 0100009A 		bls	.L140
 2331              	.L139:
1756:../../Source/Kernel/rme_kernel.c ****     {
1757:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1758:../../Source/Kernel/rme_kernel.c ****         
1759:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2332              		.loc 1 1759 16
 2333 0030 0230E0E3 		mvn	r3, #2
 2334 0034 300000EA 		b	.L141
 2335              	.L140:
1760:../../Source/Kernel/rme_kernel.c ****     }
1761:../../Source/Kernel/rme_kernel.c ****     else
1762:../../Source/Kernel/rme_kernel.c ****     {
1763:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1764:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     
1767:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1768:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2336              		.loc 1 1768 8
 2337 0038 18301BE5 		ldr	r3, [fp, #-24]
 2338 003c 8332A0E1 		lsl	r3, r3, #5
 2339 0040 0310A0E1 		mov	r1, r3
 2340 0044 14001BE5 		ldr	r0, [fp, #-20]
 2341 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2342 004c 0030A0E1 		mov	r3, r0
 2343              		.loc 1 1768 7 discriminator 1
 2344 0050 000053E3 		cmp	r3, #0
 2345 0054 0100000A 		beq	.L142
1769:../../Source/Kernel/rme_kernel.c ****     {
1770:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1771:../../Source/Kernel/rme_kernel.c ****         
1772:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2346              		.loc 1 1772 16
 2347 0058 0330E0E3 		mvn	r3, #3
 2348 005c 260000EA 		b	.L141
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 74


 2349              	.L142:
1773:../../Source/Kernel/rme_kernel.c ****     }
1774:../../Source/Kernel/rme_kernel.c ****     else
1775:../../Source/Kernel/rme_kernel.c ****     {
1776:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1777:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1778:../../Source/Kernel/rme_kernel.c ****     }
1779:../../Source/Kernel/rme_kernel.c **** 
1780:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1781:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2350              		.loc 1 1781 14
 2351 0060 0030A0E3 		mov	r3, #0
 2352 0064 08300BE5 		str	r3, [fp, #-8]
 2353              		.loc 1 1781 5
 2354 0068 090000EA 		b	.L143
 2355              	.L144:
1782:../../Source/Kernel/rme_kernel.c ****     {
1783:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2356              		.loc 1 1783 9
 2357 006c 08301BE5 		ldr	r3, [fp, #-8]
 2358 0070 8322A0E1 		lsl	r2, r3, #5
 2359 0074 14301BE5 		ldr	r3, [fp, #-20]
 2360 0078 033082E0 		add	r3, r2, r3
 2361 007c 0320A0E1 		mov	r2, r3
 2362 0080 0030A0E3 		mov	r3, #0
 2363 0084 003082E5 		str	r3, [r2]
1781:../../Source/Kernel/rme_kernel.c ****     {
 2364              		.loc 1 1781 39 discriminator 3
 2365 0088 08301BE5 		ldr	r3, [fp, #-8]
 2366 008c 013083E2 		add	r3, r3, #1
 2367 0090 08300BE5 		str	r3, [fp, #-8]
 2368              	.L143:
1781:../../Source/Kernel/rme_kernel.c ****     {
 2369              		.loc 1 1781 23 discriminator 1
 2370 0094 08201BE5 		ldr	r2, [fp, #-8]
 2371 0098 18301BE5 		ldr	r3, [fp, #-24]
 2372 009c 030052E1 		cmp	r2, r3
 2373 00a0 F1FFFF3A 		bcc	.L144
1784:../../Source/Kernel/rme_kernel.c ****     }
1785:../../Source/Kernel/rme_kernel.c **** 
1786:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2374              		.loc 1 1786 39
 2375 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2376 00a8 8322A0E1 		lsl	r2, r3, #5
 2377 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2378 00b0 033082E0 		add	r3, r2, r3
 2379              		.loc 1 1786 8
 2380 00b4 0C300BE5 		str	r3, [fp, #-12]
1787:../../Source/Kernel/rme_kernel.c ****     
1788:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1789:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2381              		.loc 1 1789 23
 2382 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2383 00bc 0120A0E3 		mov	r2, #1
 2384 00c0 042083E5 		str	r2, [r3, #4]
1790:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2385              		.loc 1 1790 21
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 75


 2386 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2387 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2388 00cc 0C2083E5 		str	r2, [r3, #12]
1791:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2389              		.loc 1 1791 19
 2390 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2391 00d4 FF20A0E3 		mov	r2, #255
 2392 00d8 082083E5 		str	r2, [r3, #8]
1792:../../Source/Kernel/rme_kernel.c ****     
1793:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1794:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2393              		.loc 1 1794 19
 2394 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 2395 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2396 00e4 142083E5 		str	r2, [r3, #20]
1795:../../Source/Kernel/rme_kernel.c **** 
1796:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1797:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2397              		.loc 1 1797 5
 2398 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2399 00ec 0314A0E3 		mov	r1, #50331648
 2400 00f0 0300A0E1 		mov	r0, r3
 2401 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1798:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1799:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1800:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1801:../../Source/Kernel/rme_kernel.c **** 
1802:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2402              		.loc 1 1802 12
 2403 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2404              	.L141:
1803:../../Source/Kernel/rme_kernel.c **** }
 2405              		.loc 1 1803 1
 2406 00fc 0300A0E1 		mov	r0, r3
 2407 0100 04D04BE2 		sub	sp, fp, #4
 2408              		.cfi_def_cfa 13, 8
 2409              		@ sp needed
 2410 0104 0088BDE8 		pop	{fp, pc}
 2411              		.cfi_endproc
 2412              	.LFE22:
 2414              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2415              		.align	2
 2416              		.global	_RME_Cpt_Boot_Crt
 2417              		.syntax unified
 2418              		.arm
 2420              	_RME_Cpt_Boot_Crt:
 2421              	.LFB23:
1804:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1805:../../Source/Kernel/rme_kernel.c **** 
1806:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1807:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1808:../../Source/Kernel/rme_kernel.c ****               address.
1809:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1811:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1812:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1813:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 76


1814:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1815:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1816:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1817:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1818:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1819:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1820:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1821:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1822:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1823:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1824:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1825:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1826:../../Source/Kernel/rme_kernel.c **** {
 2422              		.loc 1 1826 1
 2423              		.cfi_startproc
 2424              		@ args = 4, pretend = 0, frame = 32
 2425              		@ frame_needed = 1, uses_anonymous_args = 0
 2426 0000 00482DE9 		push	{fp, lr}
 2427              		.cfi_def_cfa_offset 8
 2428              		.cfi_offset 11, -8
 2429              		.cfi_offset 14, -4
 2430 0004 04B08DE2 		add	fp, sp, #4
 2431              		.cfi_def_cfa 11, 4
 2432 0008 20D04DE2 		sub	sp, sp, #32
 2433 000c 18000BE5 		str	r0, [fp, #-24]
 2434 0010 1C100BE5 		str	r1, [fp, #-28]
 2435 0014 20200BE5 		str	r2, [fp, #-32]
 2436 0018 24300BE5 		str	r3, [fp, #-36]
1827:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1828:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1829:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1830:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1831:../../Source/Kernel/rme_kernel.c ****     
1832:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1833:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2437              		.loc 1 1833 7
 2438 001c 04309BE5 		ldr	r3, [fp, #4]
 2439 0020 000053E3 		cmp	r3, #0
 2440 0024 0200000A 		beq	.L146
 2441              		.loc 1 1833 23 discriminator 1
 2442 0028 04309BE5 		ldr	r3, [fp, #4]
 2443 002c 800053E3 		cmp	r3, #128
 2444 0030 0100009A 		bls	.L147
 2445              	.L146:
1834:../../Source/Kernel/rme_kernel.c ****     {
1835:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1836:../../Source/Kernel/rme_kernel.c ****         
1837:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2446              		.loc 1 1837 16
 2447 0034 0230E0E3 		mvn	r3, #2
 2448 0038 B10000EA 		b	.L148
 2449              	.L147:
1838:../../Source/Kernel/rme_kernel.c ****     }
1839:../../Source/Kernel/rme_kernel.c ****     else
1840:../../Source/Kernel/rme_kernel.c ****     {
1841:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1842:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 77


1843:../../Source/Kernel/rme_kernel.c ****     }
1844:../../Source/Kernel/rme_kernel.c **** 
1845:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1846:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2450              		.loc 1 1846 5
 2451 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2452 0040 803003E2 		and	r3, r3, #128
 2453 0044 000053E3 		cmp	r3, #0
 2454 0048 1C00001A 		bne	.L149
 2455              		.loc 1 1846 5 is_stmt 0 discriminator 1
 2456 004c 18301BE5 		ldr	r3, [fp, #-24]
 2457 0050 142093E5 		ldr	r2, [r3, #20]
 2458 0054 1C301BE5 		ldr	r3, [fp, #-28]
 2459 0058 030052E1 		cmp	r2, r3
 2460 005c 0100008A 		bhi	.L150
 2461              		.loc 1 1846 5 discriminator 3
 2462 0060 0230E0E3 		mvn	r3, #2
 2463              		.loc 1 1846 5
 2464 0064 A60000EA 		b	.L148
 2465              	.L150:
 2466              		.loc 1 1846 5 discriminator 4
 2467 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2468 006c 8322A0E1 		lsl	r2, r3, #5
 2469 0070 18301BE5 		ldr	r3, [fp, #-24]
 2470 0074 0C3093E5 		ldr	r3, [r3, #12]
 2471 0078 033082E0 		add	r3, r2, r3
 2472 007c 0C300BE5 		str	r3, [fp, #-12]
 2473 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2474 0084 0300A0E1 		mov	r0, r3
 2475 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2476 008c 10000BE5 		str	r0, [fp, #-16]
 2477              		.loc 1 1846 5 discriminator 1
 2478 0090 10301BE5 		ldr	r3, [fp, #-16]
 2479 0094 FF3803E2 		and	r3, r3, #16711680
 2480 0098 020853E3 		cmp	r3, #131072
 2481 009c 0100001A 		bne	.L151
 2482              		.loc 1 1846 5 discriminator 5
 2483 00a0 0830E0E3 		mvn	r3, #8
 2484              		.loc 1 1846 5
 2485 00a4 960000EA 		b	.L148
 2486              	.L151:
 2487              		.loc 1 1846 5 discriminator 6
 2488 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2489 00ac 233CA0E1 		lsr	r3, r3, #24
 2490 00b0 030053E3 		cmp	r3, #3
 2491 00b4 3F00000A 		beq	.L152
 2492              		.loc 1 1846 5 discriminator 7
 2493 00b8 0130E0E3 		mvn	r3, #1
 2494              		.loc 1 1846 5
 2495 00bc 900000EA 		b	.L148
 2496              	.L149:
 2497              		.loc 1 1846 5 discriminator 2
 2498 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2499 00c4 2324A0E1 		lsr	r2, r3, #8
 2500 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2501 00cc 143093E5 		ldr	r3, [r3, #20]
 2502 00d0 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 78


 2503 00d4 0100003A 		bcc	.L153
 2504              		.loc 1 1846 5 discriminator 8
 2505 00d8 0230E0E3 		mvn	r3, #2
 2506              		.loc 1 1846 5
 2507 00dc 880000EA 		b	.L148
 2508              	.L153:
 2509              		.loc 1 1846 5 discriminator 9
 2510 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2511 00e4 2334A0E1 		lsr	r3, r3, #8
 2512 00e8 8322A0E1 		lsl	r2, r3, #5
 2513 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2514 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2515 00f4 033082E0 		add	r3, r2, r3
 2516 00f8 0C300BE5 		str	r3, [fp, #-12]
 2517 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2518 0100 0300A0E1 		mov	r0, r3
 2519 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2520 0108 10000BE5 		str	r0, [fp, #-16]
 2521              		.loc 1 1846 5 discriminator 1
 2522 010c 10301BE5 		ldr	r3, [fp, #-16]
 2523 0110 FF3803E2 		and	r3, r3, #16711680
 2524 0114 020853E3 		cmp	r3, #131072
 2525 0118 0100001A 		bne	.L154
 2526              		.loc 1 1846 5 discriminator 10
 2527 011c 0830E0E3 		mvn	r3, #8
 2528              		.loc 1 1846 5
 2529 0120 770000EA 		b	.L148
 2530              	.L154:
 2531              		.loc 1 1846 5 discriminator 11
 2532 0124 10301BE5 		ldr	r3, [fp, #-16]
 2533 0128 233CA0E1 		lsr	r3, r3, #24
 2534 012c 030053E3 		cmp	r3, #3
 2535 0130 0100000A 		beq	.L155
 2536              		.loc 1 1846 5 discriminator 12
 2537 0134 0130E0E3 		mvn	r3, #1
 2538              		.loc 1 1846 5
 2539 0138 710000EA 		b	.L148
 2540              	.L155:
 2541              		.loc 1 1846 5 discriminator 13
 2542 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2543 0140 7F2003E2 		and	r2, r3, #127
 2544 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2545 0148 143093E5 		ldr	r3, [r3, #20]
 2546 014c 030052E1 		cmp	r2, r3
 2547 0150 0100003A 		bcc	.L156
 2548              		.loc 1 1846 5 discriminator 14
 2549 0154 0230E0E3 		mvn	r3, #2
 2550              		.loc 1 1846 5
 2551 0158 690000EA 		b	.L148
 2552              	.L156:
 2553              		.loc 1 1846 5 discriminator 15
 2554 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2555 0160 7F3003E2 		and	r3, r3, #127
 2556 0164 8322A0E1 		lsl	r2, r3, #5
 2557 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2558 016c 0C3093E5 		ldr	r3, [r3, #12]
 2559 0170 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 79


 2560 0174 0C300BE5 		str	r3, [fp, #-12]
 2561 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2562 017c 0300A0E1 		mov	r0, r3
 2563 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2564 0184 10000BE5 		str	r0, [fp, #-16]
 2565              		.loc 1 1846 5 discriminator 1
 2566 0188 10301BE5 		ldr	r3, [fp, #-16]
 2567 018c FF3803E2 		and	r3, r3, #16711680
 2568 0190 020853E3 		cmp	r3, #131072
 2569 0194 0100001A 		bne	.L157
 2570              		.loc 1 1846 5 discriminator 16
 2571 0198 0830E0E3 		mvn	r3, #8
 2572              		.loc 1 1846 5
 2573 019c 580000EA 		b	.L148
 2574              	.L157:
 2575              		.loc 1 1846 5 discriminator 17
 2576 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2577 01a4 233CA0E1 		lsr	r3, r3, #24
 2578 01a8 030053E3 		cmp	r3, #3
 2579 01ac 0100000A 		beq	.L152
 2580              		.loc 1 1846 5 discriminator 18
 2581 01b0 0130E0E3 		mvn	r3, #1
 2582              		.loc 1 1846 5
 2583 01b4 520000EA 		b	.L148
 2584              	.L152:
1847:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1848:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1849:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1850:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1851:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1852:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1853:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2585              		.loc 1 1853 5 is_stmt 1
 2586 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2587 01bc 083093E5 		ldr	r3, [r3, #8]
 2588 01c0 013003E2 		and	r3, r3, #1
 2589 01c4 000053E3 		cmp	r3, #0
 2590 01c8 0100001A 		bne	.L158
 2591              		.loc 1 1853 5 is_stmt 0 discriminator 1
 2592 01cc 0630E0E3 		mvn	r3, #6
 2593              		.loc 1 1853 5
 2594 01d0 4B0000EA 		b	.L148
 2595              	.L158:
1854:../../Source/Kernel/rme_kernel.c **** 
1855:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1856:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2596              		.loc 1 1856 5 is_stmt 1
 2597 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2598 01d8 142093E5 		ldr	r2, [r3, #20]
 2599 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2600 01e0 030052E1 		cmp	r2, r3
 2601 01e4 0100008A 		bhi	.L159
 2602              		.loc 1 1856 5 is_stmt 0 discriminator 1
 2603 01e8 0230E0E3 		mvn	r3, #2
 2604              		.loc 1 1856 5
 2605 01ec 440000EA 		b	.L148
 2606              	.L159:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 80


 2607              		.loc 1 1856 5 discriminator 2
 2608 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2609 01f4 8322A0E1 		lsl	r2, r3, #5
 2610 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2611 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2612 0200 033082E0 		add	r3, r2, r3
 2613 0204 14300BE5 		str	r3, [fp, #-20]
1857:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1858:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2614              		.loc 1 1858 5 is_stmt 1
 2615 0208 14301BE5 		ldr	r3, [fp, #-20]
 2616 020c 0128A0E3 		mov	r2, #65536
 2617 0210 0010A0E3 		mov	r1, #0
 2618 0214 0300A0E1 		mov	r0, r3
 2619 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2620 021c 0030A0E1 		mov	r3, r0
 2621              		.loc 1 1858 5 is_stmt 0 discriminator 1
 2622 0220 000053E3 		cmp	r3, #0
 2623 0224 0100001A 		bne	.L160
 2624 0228 0430E0E3 		mvn	r3, #4
 2625              		.loc 1 1858 5
 2626 022c 340000EA 		b	.L148
 2627              	.L160:
 2628              		.loc 1 1858 5 discriminator 2
 2629 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2630 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2631 0238 002093E5 		ldr	r2, [r3]
 2632 023c 14301BE5 		ldr	r3, [fp, #-20]
 2633 0240 102083E5 		str	r2, [r3, #16]
1859:../../Source/Kernel/rme_kernel.c **** 
1860:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1861:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2634              		.loc 1 1861 8 is_stmt 1
 2635 0244 04309BE5 		ldr	r3, [fp, #4]
 2636 0248 8332A0E1 		lsl	r3, r3, #5
 2637 024c 0310A0E1 		mov	r1, r3
 2638 0250 24001BE5 		ldr	r0, [fp, #-36]
 2639 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2640 0258 0030A0E1 		mov	r3, r0
 2641              		.loc 1 1861 7 discriminator 1
 2642 025c 000053E3 		cmp	r3, #0
 2643 0260 0500000A 		beq	.L161
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         
1865:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1866:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2644              		.loc 1 1866 9
 2645 0264 14301BE5 		ldr	r3, [fp, #-20]
 2646 0268 0010A0E3 		mov	r1, #0
 2647 026c 0300A0E1 		mov	r0, r3
 2648 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1867:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2649              		.loc 1 1867 16
 2650 0274 0330E0E3 		mvn	r3, #3
 2651 0278 210000EA 		b	.L148
 2652              	.L161:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 81


1868:../../Source/Kernel/rme_kernel.c ****     }
1869:../../Source/Kernel/rme_kernel.c ****     else
1870:../../Source/Kernel/rme_kernel.c ****     {
1871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1872:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1873:../../Source/Kernel/rme_kernel.c ****     }
1874:../../Source/Kernel/rme_kernel.c **** 
1875:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1876:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2653              		.loc 1 1876 14
 2654 027c 0030A0E3 		mov	r3, #0
 2655 0280 08300BE5 		str	r3, [fp, #-8]
 2656              		.loc 1 1876 5
 2657 0284 090000EA 		b	.L162
 2658              	.L163:
1877:../../Source/Kernel/rme_kernel.c ****     {
1878:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2659              		.loc 1 1878 9
 2660 0288 08301BE5 		ldr	r3, [fp, #-8]
 2661 028c 8322A0E1 		lsl	r2, r3, #5
 2662 0290 24301BE5 		ldr	r3, [fp, #-36]
 2663 0294 033082E0 		add	r3, r2, r3
 2664 0298 0320A0E1 		mov	r2, r3
 2665 029c 0030A0E3 		mov	r3, #0
 2666 02a0 003082E5 		str	r3, [r2]
1876:../../Source/Kernel/rme_kernel.c ****     {
 2667              		.loc 1 1876 39 discriminator 3
 2668 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2669 02a8 013083E2 		add	r3, r3, #1
 2670 02ac 08300BE5 		str	r3, [fp, #-8]
 2671              	.L162:
1876:../../Source/Kernel/rme_kernel.c ****     {
 2672              		.loc 1 1876 23 discriminator 1
 2673 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2674 02b4 04309BE5 		ldr	r3, [fp, #4]
 2675 02b8 030052E1 		cmp	r2, r3
 2676 02bc F1FFFF3A 		bcc	.L163
1879:../../Source/Kernel/rme_kernel.c ****     }
1880:../../Source/Kernel/rme_kernel.c **** 
1881:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1882:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2677              		.loc 1 1882 27
 2678 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2679 02c4 0020A0E3 		mov	r2, #0
 2680 02c8 042083E5 		str	r2, [r3, #4]
1883:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2681              		.loc 1 1883 25
 2682 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2683 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2684 02d4 0C2083E5 		str	r2, [r3, #12]
1884:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2685              		.loc 1 1884 23
 2686 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2687 02dc FF20A0E3 		mov	r2, #255
 2688 02e0 082083E5 		str	r2, [r3, #8]
1885:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1886:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 82


 2689              		.loc 1 1886 23
 2690 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2691 02e8 04209BE5 		ldr	r2, [fp, #4]
 2692 02ec 142083E5 		str	r2, [r3, #20]
1887:../../Source/Kernel/rme_kernel.c **** 
1888:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1889:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2693              		.loc 1 1889 5
 2694 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2695 02f4 0314A0E3 		mov	r1, #50331648
 2696 02f8 0300A0E1 		mov	r0, r3
 2697 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1890:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1891:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1892:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1893:../../Source/Kernel/rme_kernel.c **** 
1894:../../Source/Kernel/rme_kernel.c ****     return 0;
 2698              		.loc 1 1894 12
 2699 0300 0030A0E3 		mov	r3, #0
 2700              	.L148:
1895:../../Source/Kernel/rme_kernel.c **** }
 2701              		.loc 1 1895 1
 2702 0304 0300A0E1 		mov	r0, r3
 2703 0308 04D04BE2 		sub	sp, fp, #4
 2704              		.cfi_def_cfa 13, 8
 2705              		@ sp needed
 2706 030c 0088BDE8 		pop	{fp, pc}
 2707              		.cfi_endproc
 2708              	.LFE23:
 2710              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2711              		.align	2
 2712              		.syntax unified
 2713              		.arm
 2715              	_RME_Cpt_Crt:
 2716              	.LFB24:
1896:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1897:../../Source/Kernel/rme_kernel.c **** 
1898:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1899:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1900:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1901:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1902:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1903:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1905:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1906:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1907:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1908:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1909:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1910:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1911:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1912:../../Source/Kernel/rme_kernel.c ****                                     table.
1913:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1914:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1915:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1916:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1917:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 83


1918:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1919:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1920:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1921:../../Source/Kernel/rme_kernel.c **** {
 2717              		.loc 1 1921 1
 2718              		.cfi_startproc
 2719              		@ args = 8, pretend = 0, frame = 40
 2720              		@ frame_needed = 1, uses_anonymous_args = 0
 2721 0000 00482DE9 		push	{fp, lr}
 2722              		.cfi_def_cfa_offset 8
 2723              		.cfi_offset 11, -8
 2724              		.cfi_offset 14, -4
 2725 0004 04B08DE2 		add	fp, sp, #4
 2726              		.cfi_def_cfa 11, 4
 2727 0008 28D04DE2 		sub	sp, sp, #40
 2728 000c 20000BE5 		str	r0, [fp, #-32]
 2729 0010 24100BE5 		str	r1, [fp, #-36]
 2730 0014 28200BE5 		str	r2, [fp, #-40]
 2731 0018 2C300BE5 		str	r3, [fp, #-44]
1922:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1924:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1925:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1928:../../Source/Kernel/rme_kernel.c **** 
1929:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1930:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2732              		.loc 1 1930 7
 2733 001c 08309BE5 		ldr	r3, [fp, #8]
 2734 0020 000053E3 		cmp	r3, #0
 2735 0024 0200000A 		beq	.L165
 2736              		.loc 1 1930 23 discriminator 1
 2737 0028 08309BE5 		ldr	r3, [fp, #8]
 2738 002c 800053E3 		cmp	r3, #128
 2739 0030 0100009A 		bls	.L166
 2740              	.L165:
1931:../../Source/Kernel/rme_kernel.c ****     {
1932:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1933:../../Source/Kernel/rme_kernel.c ****         
1934:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2741              		.loc 1 1934 16
 2742 0034 0230E0E3 		mvn	r3, #2
 2743 0038 3D0100EA 		b	.L167
 2744              	.L166:
1935:../../Source/Kernel/rme_kernel.c ****     }
1936:../../Source/Kernel/rme_kernel.c ****     else
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1940:../../Source/Kernel/rme_kernel.c ****     }
1941:../../Source/Kernel/rme_kernel.c **** 
1942:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1943:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1944:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1945:../../Source/Kernel/rme_kernel.c ****     {
1946:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 84


1947:../../Source/Kernel/rme_kernel.c ****         
1948:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1949:../../Source/Kernel/rme_kernel.c ****     }
1950:../../Source/Kernel/rme_kernel.c ****     else
1951:../../Source/Kernel/rme_kernel.c ****     {
1952:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1953:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1954:../../Source/Kernel/rme_kernel.c ****     }
1955:../../Source/Kernel/rme_kernel.c **** #endif
1956:../../Source/Kernel/rme_kernel.c **** 
1957:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1958:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2745              		.loc 1 1958 5
 2746 003c 24301BE5 		ldr	r3, [fp, #-36]
 2747 0040 803003E2 		and	r3, r3, #128
 2748 0044 000053E3 		cmp	r3, #0
 2749 0048 1C00001A 		bne	.L168
 2750              		.loc 1 1958 5 is_stmt 0 discriminator 1
 2751 004c 20301BE5 		ldr	r3, [fp, #-32]
 2752 0050 142093E5 		ldr	r2, [r3, #20]
 2753 0054 24301BE5 		ldr	r3, [fp, #-36]
 2754 0058 030052E1 		cmp	r2, r3
 2755 005c 0100008A 		bhi	.L169
 2756              		.loc 1 1958 5 discriminator 3
 2757 0060 0230E0E3 		mvn	r3, #2
 2758              		.loc 1 1958 5
 2759 0064 320100EA 		b	.L167
 2760              	.L169:
 2761              		.loc 1 1958 5 discriminator 4
 2762 0068 24301BE5 		ldr	r3, [fp, #-36]
 2763 006c 8322A0E1 		lsl	r2, r3, #5
 2764 0070 20301BE5 		ldr	r3, [fp, #-32]
 2765 0074 0C3093E5 		ldr	r3, [r3, #12]
 2766 0078 033082E0 		add	r3, r2, r3
 2767 007c 0C300BE5 		str	r3, [fp, #-12]
 2768 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2769 0084 0300A0E1 		mov	r0, r3
 2770 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2771 008c 14000BE5 		str	r0, [fp, #-20]
 2772              		.loc 1 1958 5 discriminator 1
 2773 0090 14301BE5 		ldr	r3, [fp, #-20]
 2774 0094 FF3803E2 		and	r3, r3, #16711680
 2775 0098 020853E3 		cmp	r3, #131072
 2776 009c 0100001A 		bne	.L170
 2777              		.loc 1 1958 5 discriminator 5
 2778 00a0 0830E0E3 		mvn	r3, #8
 2779              		.loc 1 1958 5
 2780 00a4 220100EA 		b	.L167
 2781              	.L170:
 2782              		.loc 1 1958 5 discriminator 6
 2783 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2784 00ac 233CA0E1 		lsr	r3, r3, #24
 2785 00b0 030053E3 		cmp	r3, #3
 2786 00b4 3F00000A 		beq	.L171
 2787              		.loc 1 1958 5 discriminator 7
 2788 00b8 0130E0E3 		mvn	r3, #1
 2789              		.loc 1 1958 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 85


 2790 00bc 1C0100EA 		b	.L167
 2791              	.L168:
 2792              		.loc 1 1958 5 discriminator 2
 2793 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2794 00c4 2324A0E1 		lsr	r2, r3, #8
 2795 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2796 00cc 143093E5 		ldr	r3, [r3, #20]
 2797 00d0 030052E1 		cmp	r2, r3
 2798 00d4 0100003A 		bcc	.L172
 2799              		.loc 1 1958 5 discriminator 8
 2800 00d8 0230E0E3 		mvn	r3, #2
 2801              		.loc 1 1958 5
 2802 00dc 140100EA 		b	.L167
 2803              	.L172:
 2804              		.loc 1 1958 5 discriminator 9
 2805 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2806 00e4 2334A0E1 		lsr	r3, r3, #8
 2807 00e8 8322A0E1 		lsl	r2, r3, #5
 2808 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2809 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2810 00f4 033082E0 		add	r3, r2, r3
 2811 00f8 0C300BE5 		str	r3, [fp, #-12]
 2812 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2813 0100 0300A0E1 		mov	r0, r3
 2814 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2815 0108 14000BE5 		str	r0, [fp, #-20]
 2816              		.loc 1 1958 5 discriminator 1
 2817 010c 14301BE5 		ldr	r3, [fp, #-20]
 2818 0110 FF3803E2 		and	r3, r3, #16711680
 2819 0114 020853E3 		cmp	r3, #131072
 2820 0118 0100001A 		bne	.L173
 2821              		.loc 1 1958 5 discriminator 10
 2822 011c 0830E0E3 		mvn	r3, #8
 2823              		.loc 1 1958 5
 2824 0120 030100EA 		b	.L167
 2825              	.L173:
 2826              		.loc 1 1958 5 discriminator 11
 2827 0124 14301BE5 		ldr	r3, [fp, #-20]
 2828 0128 233CA0E1 		lsr	r3, r3, #24
 2829 012c 030053E3 		cmp	r3, #3
 2830 0130 0100000A 		beq	.L174
 2831              		.loc 1 1958 5 discriminator 12
 2832 0134 0130E0E3 		mvn	r3, #1
 2833              		.loc 1 1958 5
 2834 0138 FD0000EA 		b	.L167
 2835              	.L174:
 2836              		.loc 1 1958 5 discriminator 13
 2837 013c 24301BE5 		ldr	r3, [fp, #-36]
 2838 0140 7F2003E2 		and	r2, r3, #127
 2839 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2840 0148 143093E5 		ldr	r3, [r3, #20]
 2841 014c 030052E1 		cmp	r2, r3
 2842 0150 0100003A 		bcc	.L175
 2843              		.loc 1 1958 5 discriminator 14
 2844 0154 0230E0E3 		mvn	r3, #2
 2845              		.loc 1 1958 5
 2846 0158 F50000EA 		b	.L167
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 86


 2847              	.L175:
 2848              		.loc 1 1958 5 discriminator 15
 2849 015c 24301BE5 		ldr	r3, [fp, #-36]
 2850 0160 7F3003E2 		and	r3, r3, #127
 2851 0164 8322A0E1 		lsl	r2, r3, #5
 2852 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2853 016c 0C3093E5 		ldr	r3, [r3, #12]
 2854 0170 033082E0 		add	r3, r2, r3
 2855 0174 0C300BE5 		str	r3, [fp, #-12]
 2856 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2857 017c 0300A0E1 		mov	r0, r3
 2858 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2859 0184 14000BE5 		str	r0, [fp, #-20]
 2860              		.loc 1 1958 5 discriminator 1
 2861 0188 14301BE5 		ldr	r3, [fp, #-20]
 2862 018c FF3803E2 		and	r3, r3, #16711680
 2863 0190 020853E3 		cmp	r3, #131072
 2864 0194 0100001A 		bne	.L176
 2865              		.loc 1 1958 5 discriminator 16
 2866 0198 0830E0E3 		mvn	r3, #8
 2867              		.loc 1 1958 5
 2868 019c E40000EA 		b	.L167
 2869              	.L176:
 2870              		.loc 1 1958 5 discriminator 17
 2871 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2872 01a4 233CA0E1 		lsr	r3, r3, #24
 2873 01a8 030053E3 		cmp	r3, #3
 2874 01ac 0100000A 		beq	.L171
 2875              		.loc 1 1958 5 discriminator 18
 2876 01b0 0130E0E3 		mvn	r3, #1
 2877              		.loc 1 1958 5
 2878 01b4 DE0000EA 		b	.L167
 2879              	.L171:
1959:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2880              		.loc 1 1960 5 is_stmt 1
 2881 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2882 01bc 803003E2 		and	r3, r3, #128
 2883 01c0 000053E3 		cmp	r3, #0
 2884 01c4 1C00001A 		bne	.L177
 2885              		.loc 1 1960 5 is_stmt 0 discriminator 1
 2886 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2887 01cc 142093E5 		ldr	r2, [r3, #20]
 2888 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2889 01d4 030052E1 		cmp	r2, r3
 2890 01d8 0100008A 		bhi	.L178
 2891              		.loc 1 1960 5 discriminator 3
 2892 01dc 0230E0E3 		mvn	r3, #2
 2893              		.loc 1 1960 5
 2894 01e0 D30000EA 		b	.L167
 2895              	.L178:
 2896              		.loc 1 1960 5 discriminator 4
 2897 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2898 01e8 8322A0E1 		lsl	r2, r3, #5
 2899 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2900 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2901 01f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 87


 2902 01f8 10300BE5 		str	r3, [fp, #-16]
 2903 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2904 0200 0300A0E1 		mov	r0, r3
 2905 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2906 0208 14000BE5 		str	r0, [fp, #-20]
 2907              		.loc 1 1960 5 discriminator 1
 2908 020c 14301BE5 		ldr	r3, [fp, #-20]
 2909 0210 FF3803E2 		and	r3, r3, #16711680
 2910 0214 020853E3 		cmp	r3, #131072
 2911 0218 0100001A 		bne	.L179
 2912              		.loc 1 1960 5 discriminator 5
 2913 021c 0830E0E3 		mvn	r3, #8
 2914              		.loc 1 1960 5
 2915 0220 C30000EA 		b	.L167
 2916              	.L179:
 2917              		.loc 1 1960 5 discriminator 6
 2918 0224 14301BE5 		ldr	r3, [fp, #-20]
 2919 0228 233CA0E1 		lsr	r3, r3, #24
 2920 022c 020053E3 		cmp	r3, #2
 2921 0230 3F00000A 		beq	.L180
 2922              		.loc 1 1960 5 discriminator 7
 2923 0234 0130E0E3 		mvn	r3, #1
 2924              		.loc 1 1960 5
 2925 0238 BD0000EA 		b	.L167
 2926              	.L177:
 2927              		.loc 1 1960 5 discriminator 2
 2928 023c 28301BE5 		ldr	r3, [fp, #-40]
 2929 0240 2324A0E1 		lsr	r2, r3, #8
 2930 0244 20301BE5 		ldr	r3, [fp, #-32]
 2931 0248 143093E5 		ldr	r3, [r3, #20]
 2932 024c 030052E1 		cmp	r2, r3
 2933 0250 0100003A 		bcc	.L181
 2934              		.loc 1 1960 5 discriminator 8
 2935 0254 0230E0E3 		mvn	r3, #2
 2936              		.loc 1 1960 5
 2937 0258 B50000EA 		b	.L167
 2938              	.L181:
 2939              		.loc 1 1960 5 discriminator 9
 2940 025c 28301BE5 		ldr	r3, [fp, #-40]
 2941 0260 2334A0E1 		lsr	r3, r3, #8
 2942 0264 8322A0E1 		lsl	r2, r3, #5
 2943 0268 20301BE5 		ldr	r3, [fp, #-32]
 2944 026c 0C3093E5 		ldr	r3, [r3, #12]
 2945 0270 033082E0 		add	r3, r2, r3
 2946 0274 10300BE5 		str	r3, [fp, #-16]
 2947 0278 10301BE5 		ldr	r3, [fp, #-16]
 2948 027c 0300A0E1 		mov	r0, r3
 2949 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2950 0284 14000BE5 		str	r0, [fp, #-20]
 2951              		.loc 1 1960 5 discriminator 1
 2952 0288 14301BE5 		ldr	r3, [fp, #-20]
 2953 028c FF3803E2 		and	r3, r3, #16711680
 2954 0290 020853E3 		cmp	r3, #131072
 2955 0294 0100001A 		bne	.L182
 2956              		.loc 1 1960 5 discriminator 10
 2957 0298 0830E0E3 		mvn	r3, #8
 2958              		.loc 1 1960 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 88


 2959 029c A40000EA 		b	.L167
 2960              	.L182:
 2961              		.loc 1 1960 5 discriminator 11
 2962 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2963 02a4 233CA0E1 		lsr	r3, r3, #24
 2964 02a8 030053E3 		cmp	r3, #3
 2965 02ac 0100000A 		beq	.L183
 2966              		.loc 1 1960 5 discriminator 12
 2967 02b0 0130E0E3 		mvn	r3, #1
 2968              		.loc 1 1960 5
 2969 02b4 9E0000EA 		b	.L167
 2970              	.L183:
 2971              		.loc 1 1960 5 discriminator 13
 2972 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2973 02bc 7F2003E2 		and	r2, r3, #127
 2974 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2975 02c4 143093E5 		ldr	r3, [r3, #20]
 2976 02c8 030052E1 		cmp	r2, r3
 2977 02cc 0100003A 		bcc	.L184
 2978              		.loc 1 1960 5 discriminator 14
 2979 02d0 0230E0E3 		mvn	r3, #2
 2980              		.loc 1 1960 5
 2981 02d4 960000EA 		b	.L167
 2982              	.L184:
 2983              		.loc 1 1960 5 discriminator 15
 2984 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2985 02dc 7F3003E2 		and	r3, r3, #127
 2986 02e0 8322A0E1 		lsl	r2, r3, #5
 2987 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2988 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2989 02ec 033082E0 		add	r3, r2, r3
 2990 02f0 10300BE5 		str	r3, [fp, #-16]
 2991 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2992 02f8 0300A0E1 		mov	r0, r3
 2993 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2994 0300 14000BE5 		str	r0, [fp, #-20]
 2995              		.loc 1 1960 5 discriminator 1
 2996 0304 14301BE5 		ldr	r3, [fp, #-20]
 2997 0308 FF3803E2 		and	r3, r3, #16711680
 2998 030c 020853E3 		cmp	r3, #131072
 2999 0310 0100001A 		bne	.L185
 3000              		.loc 1 1960 5 discriminator 16
 3001 0314 0830E0E3 		mvn	r3, #8
 3002              		.loc 1 1960 5
 3003 0318 850000EA 		b	.L167
 3004              	.L185:
 3005              		.loc 1 1960 5 discriminator 17
 3006 031c 14301BE5 		ldr	r3, [fp, #-20]
 3007 0320 233CA0E1 		lsr	r3, r3, #24
 3008 0324 020053E3 		cmp	r3, #2
 3009 0328 0100000A 		beq	.L180
 3010              		.loc 1 1960 5 discriminator 18
 3011 032c 0130E0E3 		mvn	r3, #1
 3012              		.loc 1 1960 5
 3013 0330 7F0000EA 		b	.L167
 3014              	.L180:
1961:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 89


1962:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1963:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 3015              		.loc 1 1963 5 is_stmt 1
 3016 0334 0C301BE5 		ldr	r3, [fp, #-12]
 3017 0338 083093E5 		ldr	r3, [r3, #8]
 3018 033c 013003E2 		and	r3, r3, #1
 3019 0340 000053E3 		cmp	r3, #0
 3020 0344 0100001A 		bne	.L186
 3021              		.loc 1 1963 5 is_stmt 0 discriminator 1
 3022 0348 0630E0E3 		mvn	r3, #6
 3023              		.loc 1 1963 5
 3024 034c 780000EA 		b	.L167
 3025              	.L186:
1964:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1965:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 3026              		.loc 1 1965 5 is_stmt 1
 3027 0350 10301BE5 		ldr	r3, [fp, #-16]
 3028 0354 083093E5 		ldr	r3, [r3, #8]
 3029 0358 013003E2 		and	r3, r3, #1
 3030 035c 000053E3 		cmp	r3, #0
 3031 0360 0100001A 		bne	.L187
 3032              		.loc 1 1965 5 is_stmt 0 discriminator 1
 3033 0364 0630E0E3 		mvn	r3, #6
 3034              		.loc 1 1965 5
 3035 0368 710000EA 		b	.L167
 3036              	.L187:
 3037              		.loc 1 1965 5 discriminator 2
 3038 036c 10301BE5 		ldr	r3, [fp, #-16]
 3039 0370 143093E5 		ldr	r3, [r3, #20]
 3040 0374 04209BE5 		ldr	r2, [fp, #4]
 3041 0378 033082E0 		add	r3, r2, r3
 3042 037c 18300BE5 		str	r3, [fp, #-24]
 3043 0380 18201BE5 		ldr	r2, [fp, #-24]
 3044 0384 04309BE5 		ldr	r3, [fp, #4]
 3045 0388 030052E1 		cmp	r2, r3
 3046 038c 0100002A 		bcs	.L188
 3047              		.loc 1 1965 5 discriminator 3
 3048 0390 0630E0E3 		mvn	r3, #6
 3049              		.loc 1 1965 5
 3050 0394 660000EA 		b	.L167
 3051              	.L188:
 3052              		.loc 1 1965 5 discriminator 4
 3053 0398 10301BE5 		ldr	r3, [fp, #-16]
 3054 039c 143093E5 		ldr	r3, [r3, #20]
 3055 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3056 03a4 030052E1 		cmp	r2, r3
 3057 03a8 0100002A 		bcs	.L189
 3058              		.loc 1 1965 5 discriminator 5
 3059 03ac 0630E0E3 		mvn	r3, #6
 3060              		.loc 1 1965 5
 3061 03b0 5F0000EA 		b	.L167
 3062              	.L189:
 3063              		.loc 1 1965 5 discriminator 6
 3064 03b4 08309BE5 		ldr	r3, [fp, #8]
 3065 03b8 8322A0E1 		lsl	r2, r3, #5
 3066 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3067 03c0 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 90


 3068 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3069 03c8 030052E1 		cmp	r2, r3
 3070 03cc 0100009A 		bls	.L190
 3071              		.loc 1 1965 5 discriminator 7
 3072 03d0 0630E0E3 		mvn	r3, #6
 3073              		.loc 1 1965 5
 3074 03d4 560000EA 		b	.L167
 3075              	.L190:
 3076              		.loc 1 1965 5 discriminator 8
 3077 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3078 03dc 182093E5 		ldr	r2, [r3, #24]
 3079 03e0 08309BE5 		ldr	r3, [fp, #8]
 3080 03e4 8312A0E1 		lsl	r1, r3, #5
 3081 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3082 03ec 033081E0 		add	r3, r1, r3
 3083 03f0 013043E2 		sub	r3, r3, #1
 3084 03f4 030052E1 		cmp	r2, r3
 3085 03f8 0100002A 		bcs	.L191
 3086              		.loc 1 1965 5 discriminator 9
 3087 03fc 0630E0E3 		mvn	r3, #6
 3088              		.loc 1 1965 5
 3089 0400 4B0000EA 		b	.L167
 3090              	.L191:
1966:../../Source/Kernel/rme_kernel.c **** 
1967:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1968:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3091              		.loc 1 1968 5 is_stmt 1
 3092 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3093 0408 142093E5 		ldr	r2, [r3, #20]
 3094 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3095 0410 030052E1 		cmp	r2, r3
 3096 0414 0100008A 		bhi	.L192
 3097              		.loc 1 1968 5 is_stmt 0 discriminator 1
 3098 0418 0230E0E3 		mvn	r3, #2
 3099              		.loc 1 1968 5
 3100 041c 440000EA 		b	.L167
 3101              	.L192:
 3102              		.loc 1 1968 5 discriminator 2
 3103 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3104 0424 8322A0E1 		lsl	r2, r3, #5
 3105 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3106 042c 0C3093E5 		ldr	r3, [r3, #12]
 3107 0430 033082E0 		add	r3, r2, r3
 3108 0434 1C300BE5 		str	r3, [fp, #-28]
1969:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1970:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3109              		.loc 1 1970 5 is_stmt 1
 3110 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3111 043c 0128A0E3 		mov	r2, #65536
 3112 0440 0010A0E3 		mov	r1, #0
 3113 0444 0300A0E1 		mov	r0, r3
 3114 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3115 044c 0030A0E1 		mov	r3, r0
 3116              		.loc 1 1970 5 is_stmt 0 discriminator 1
 3117 0450 000053E3 		cmp	r3, #0
 3118 0454 0100001A 		bne	.L193
 3119 0458 0430E0E3 		mvn	r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 91


 3120              		.loc 1 1970 5
 3121 045c 340000EA 		b	.L167
 3122              	.L193:
 3123              		.loc 1 1970 5 discriminator 2
 3124 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3125 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3126 0468 002093E5 		ldr	r2, [r3]
 3127 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3128 0470 102083E5 		str	r2, [r3, #16]
1971:../../Source/Kernel/rme_kernel.c **** 
1972:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1973:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3129              		.loc 1 1973 8 is_stmt 1
 3130 0474 08309BE5 		ldr	r3, [fp, #8]
 3131 0478 8332A0E1 		lsl	r3, r3, #5
 3132 047c 0310A0E1 		mov	r1, r3
 3133 0480 18001BE5 		ldr	r0, [fp, #-24]
 3134 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3135 0488 0030A0E1 		mov	r3, r0
 3136              		.loc 1 1973 7 discriminator 1
 3137 048c 000053E3 		cmp	r3, #0
 3138 0490 050000AA 		bge	.L194
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         
1977:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1978:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3139              		.loc 1 1978 9
 3140 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3141 0498 0010A0E3 		mov	r1, #0
 3142 049c 0300A0E1 		mov	r0, r3
 3143 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1979:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3144              		.loc 1 1979 16
 3145 04a4 0330E0E3 		mvn	r3, #3
 3146 04a8 210000EA 		b	.L167
 3147              	.L194:
1980:../../Source/Kernel/rme_kernel.c ****     }
1981:../../Source/Kernel/rme_kernel.c ****     else
1982:../../Source/Kernel/rme_kernel.c ****     {
1983:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1984:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1985:../../Source/Kernel/rme_kernel.c ****     }
1986:../../Source/Kernel/rme_kernel.c **** 
1987:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1988:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3148              		.loc 1 1988 14
 3149 04ac 0030A0E3 		mov	r3, #0
 3150 04b0 08300BE5 		str	r3, [fp, #-8]
 3151              		.loc 1 1988 5
 3152 04b4 090000EA 		b	.L195
 3153              	.L196:
1989:../../Source/Kernel/rme_kernel.c ****     {
1990:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3154              		.loc 1 1990 9
 3155 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3156 04bc 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 92


 3157 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3158 04c4 033082E0 		add	r3, r2, r3
 3159 04c8 0320A0E1 		mov	r2, r3
 3160 04cc 0030A0E3 		mov	r3, #0
 3161 04d0 003082E5 		str	r3, [r2]
1988:../../Source/Kernel/rme_kernel.c ****     {
 3162              		.loc 1 1988 39 discriminator 3
 3163 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3164 04d8 013083E2 		add	r3, r3, #1
 3165 04dc 08300BE5 		str	r3, [fp, #-8]
 3166              	.L195:
1988:../../Source/Kernel/rme_kernel.c ****     {
 3167              		.loc 1 1988 23 discriminator 1
 3168 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3169 04e4 08309BE5 		ldr	r3, [fp, #8]
 3170 04e8 030052E1 		cmp	r2, r3
 3171 04ec F1FFFF3A 		bcc	.L196
1991:../../Source/Kernel/rme_kernel.c ****     }
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1994:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3172              		.loc 1 1994 27
 3173 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3174 04f4 0020A0E3 		mov	r2, #0
 3175 04f8 042083E5 		str	r2, [r3, #4]
1995:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3176              		.loc 1 1995 25
 3177 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3178 0500 18201BE5 		ldr	r2, [fp, #-24]
 3179 0504 0C2083E5 		str	r2, [r3, #12]
1996:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3180              		.loc 1 1996 23
 3181 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3182 050c FF20A0E3 		mov	r2, #255
 3183 0510 082083E5 		str	r2, [r3, #8]
1997:../../Source/Kernel/rme_kernel.c ****     
1998:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1999:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3184              		.loc 1 1999 23
 3185 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3186 0518 08209BE5 		ldr	r2, [fp, #8]
 3187 051c 142083E5 		str	r2, [r3, #20]
2000:../../Source/Kernel/rme_kernel.c **** 
2001:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2002:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3188              		.loc 1 2002 5
 3189 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3190 0524 0314A0E3 		mov	r1, #50331648
 3191 0528 0300A0E1 		mov	r0, r3
 3192 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
2003:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
2004:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2005:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2006:../../Source/Kernel/rme_kernel.c **** 
2007:../../Source/Kernel/rme_kernel.c ****     return 0;
 3193              		.loc 1 2007 12
 3194 0530 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 93


 3195              	.L167:
2008:../../Source/Kernel/rme_kernel.c **** }
 3196              		.loc 1 2008 1
 3197 0534 0300A0E1 		mov	r0, r3
 3198 0538 04D04BE2 		sub	sp, fp, #4
 3199              		.cfi_def_cfa 13, 8
 3200              		@ sp needed
 3201 053c 0088BDE8 		pop	{fp, pc}
 3202              		.cfi_endproc
 3203              	.LFE24:
 3205              		.section	.rodata
 3206              		.align	2
 3207              	.LC6:
 3208 0024 31383A35 		.ascii	"18:56:12\000"
 3208      363A3132 
 3208      00
 3209 002d 000000   		.align	2
 3210              	.LC7:
 3211 0030 4D617920 		.ascii	"May  9 2025\000"
 3211      20392032 
 3211      30323500 
 3212              		.align	2
 3213              	.LC8:
 3214 003c 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3214      2E2F536F 
 3214      75726365 
 3214      2F4B6572 
 3214      6E656C2F 
 3215              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3216              		.align	2
 3217              		.syntax unified
 3218              		.arm
 3220              	_RME_Cpt_Del:
 3221              	.LFB25:
2009:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2010:../../Source/Kernel/rme_kernel.c **** 
2011:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2012:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2013:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2014:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2015:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2016:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2017:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2018:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2019:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2020:../../Source/Kernel/rme_kernel.c **** Output      : None.
2021:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2022:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2023:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2024:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2025:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2026:../../Source/Kernel/rme_kernel.c **** {
 3222              		.loc 1 2026 1
 3223              		.cfi_startproc
 3224              		@ args = 0, pretend = 0, frame = 48
 3225              		@ frame_needed = 1, uses_anonymous_args = 0
 3226 0000 00482DE9 		push	{fp, lr}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 94


 3227              		.cfi_def_cfa_offset 8
 3228              		.cfi_offset 11, -8
 3229              		.cfi_offset 14, -4
 3230 0004 04B08DE2 		add	fp, sp, #4
 3231              		.cfi_def_cfa 11, 4
 3232 0008 30D04DE2 		sub	sp, sp, #48
 3233 000c 28000BE5 		str	r0, [fp, #-40]
 3234 0010 2C100BE5 		str	r1, [fp, #-44]
 3235 0014 30200BE5 		str	r2, [fp, #-48]
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2028:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2029:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2030:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
2031:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2032:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2033:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2034:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2035:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2036:../../Source/Kernel/rme_kernel.c ****     
2037:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3236              		.loc 1 2038 5
 3237 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3238 001c 803003E2 		and	r3, r3, #128
 3239 0020 000053E3 		cmp	r3, #0
 3240 0024 1C00001A 		bne	.L198
 3241              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3242 0028 28301BE5 		ldr	r3, [fp, #-40]
 3243 002c 142093E5 		ldr	r2, [r3, #20]
 3244 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3245 0034 030052E1 		cmp	r2, r3
 3246 0038 0100008A 		bhi	.L199
 3247              		.loc 1 2038 5 discriminator 3
 3248 003c 0230E0E3 		mvn	r3, #2
 3249              		.loc 1 2038 5
 3250 0040 E10000EA 		b	.L200
 3251              	.L199:
 3252              		.loc 1 2038 5 discriminator 4
 3253 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3254 0048 8322A0E1 		lsl	r2, r3, #5
 3255 004c 28301BE5 		ldr	r3, [fp, #-40]
 3256 0050 0C3093E5 		ldr	r3, [r3, #12]
 3257 0054 033082E0 		add	r3, r2, r3
 3258 0058 0C300BE5 		str	r3, [fp, #-12]
 3259 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3260 0060 0300A0E1 		mov	r0, r3
 3261 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3262 0068 10000BE5 		str	r0, [fp, #-16]
 3263              		.loc 1 2038 5 discriminator 1
 3264 006c 10301BE5 		ldr	r3, [fp, #-16]
 3265 0070 FF3803E2 		and	r3, r3, #16711680
 3266 0074 020853E3 		cmp	r3, #131072
 3267 0078 0100001A 		bne	.L201
 3268              		.loc 1 2038 5 discriminator 5
 3269 007c 0830E0E3 		mvn	r3, #8
 3270              		.loc 1 2038 5
 3271 0080 D10000EA 		b	.L200
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 95


 3272              	.L201:
 3273              		.loc 1 2038 5 discriminator 6
 3274 0084 10301BE5 		ldr	r3, [fp, #-16]
 3275 0088 233CA0E1 		lsr	r3, r3, #24
 3276 008c 030053E3 		cmp	r3, #3
 3277 0090 3F00000A 		beq	.L202
 3278              		.loc 1 2038 5 discriminator 7
 3279 0094 0130E0E3 		mvn	r3, #1
 3280              		.loc 1 2038 5
 3281 0098 CB0000EA 		b	.L200
 3282              	.L198:
 3283              		.loc 1 2038 5 discriminator 2
 3284 009c 2C301BE5 		ldr	r3, [fp, #-44]
 3285 00a0 2324A0E1 		lsr	r2, r3, #8
 3286 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3287 00a8 143093E5 		ldr	r3, [r3, #20]
 3288 00ac 030052E1 		cmp	r2, r3
 3289 00b0 0100003A 		bcc	.L203
 3290              		.loc 1 2038 5 discriminator 8
 3291 00b4 0230E0E3 		mvn	r3, #2
 3292              		.loc 1 2038 5
 3293 00b8 C30000EA 		b	.L200
 3294              	.L203:
 3295              		.loc 1 2038 5 discriminator 9
 3296 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3297 00c0 2334A0E1 		lsr	r3, r3, #8
 3298 00c4 8322A0E1 		lsl	r2, r3, #5
 3299 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3300 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3301 00d0 033082E0 		add	r3, r2, r3
 3302 00d4 0C300BE5 		str	r3, [fp, #-12]
 3303 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3304 00dc 0300A0E1 		mov	r0, r3
 3305 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3306 00e4 10000BE5 		str	r0, [fp, #-16]
 3307              		.loc 1 2038 5 discriminator 1
 3308 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3309 00ec FF3803E2 		and	r3, r3, #16711680
 3310 00f0 020853E3 		cmp	r3, #131072
 3311 00f4 0100001A 		bne	.L204
 3312              		.loc 1 2038 5 discriminator 10
 3313 00f8 0830E0E3 		mvn	r3, #8
 3314              		.loc 1 2038 5
 3315 00fc B20000EA 		b	.L200
 3316              	.L204:
 3317              		.loc 1 2038 5 discriminator 11
 3318 0100 10301BE5 		ldr	r3, [fp, #-16]
 3319 0104 233CA0E1 		lsr	r3, r3, #24
 3320 0108 030053E3 		cmp	r3, #3
 3321 010c 0100000A 		beq	.L205
 3322              		.loc 1 2038 5 discriminator 12
 3323 0110 0130E0E3 		mvn	r3, #1
 3324              		.loc 1 2038 5
 3325 0114 AC0000EA 		b	.L200
 3326              	.L205:
 3327              		.loc 1 2038 5 discriminator 13
 3328 0118 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 96


 3329 011c 7F2003E2 		and	r2, r3, #127
 3330 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3331 0124 143093E5 		ldr	r3, [r3, #20]
 3332 0128 030052E1 		cmp	r2, r3
 3333 012c 0100003A 		bcc	.L206
 3334              		.loc 1 2038 5 discriminator 14
 3335 0130 0230E0E3 		mvn	r3, #2
 3336              		.loc 1 2038 5
 3337 0134 A40000EA 		b	.L200
 3338              	.L206:
 3339              		.loc 1 2038 5 discriminator 15
 3340 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3341 013c 7F3003E2 		and	r3, r3, #127
 3342 0140 8322A0E1 		lsl	r2, r3, #5
 3343 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3344 0148 0C3093E5 		ldr	r3, [r3, #12]
 3345 014c 033082E0 		add	r3, r2, r3
 3346 0150 0C300BE5 		str	r3, [fp, #-12]
 3347 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3348 0158 0300A0E1 		mov	r0, r3
 3349 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3350 0160 10000BE5 		str	r0, [fp, #-16]
 3351              		.loc 1 2038 5 discriminator 1
 3352 0164 10301BE5 		ldr	r3, [fp, #-16]
 3353 0168 FF3803E2 		and	r3, r3, #16711680
 3354 016c 020853E3 		cmp	r3, #131072
 3355 0170 0100001A 		bne	.L207
 3356              		.loc 1 2038 5 discriminator 16
 3357 0174 0830E0E3 		mvn	r3, #8
 3358              		.loc 1 2038 5
 3359 0178 930000EA 		b	.L200
 3360              	.L207:
 3361              		.loc 1 2038 5 discriminator 17
 3362 017c 10301BE5 		ldr	r3, [fp, #-16]
 3363 0180 233CA0E1 		lsr	r3, r3, #24
 3364 0184 030053E3 		cmp	r3, #3
 3365 0188 0100000A 		beq	.L202
 3366              		.loc 1 2038 5 discriminator 18
 3367 018c 0130E0E3 		mvn	r3, #1
 3368              		.loc 1 2038 5
 3369 0190 8D0000EA 		b	.L200
 3370              	.L202:
2039:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2040:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2041:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3371              		.loc 1 2041 5 is_stmt 1
 3372 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3373 0198 083093E5 		ldr	r3, [r3, #8]
 3374 019c 023003E2 		and	r3, r3, #2
 3375 01a0 000053E3 		cmp	r3, #0
 3376 01a4 0100001A 		bne	.L208
 3377              		.loc 1 2041 5 is_stmt 0 discriminator 1
 3378 01a8 0630E0E3 		mvn	r3, #6
 3379              		.loc 1 2041 5
 3380 01ac 860000EA 		b	.L200
 3381              	.L208:
2042:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 97


2043:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2044:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3382              		.loc 1 2044 5 is_stmt 1
 3383 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3384 01b4 142093E5 		ldr	r2, [r3, #20]
 3385 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3386 01bc 030052E1 		cmp	r2, r3
 3387 01c0 0100008A 		bhi	.L209
 3388              		.loc 1 2044 5 is_stmt 0 discriminator 1
 3389 01c4 0230E0E3 		mvn	r3, #2
 3390              		.loc 1 2044 5
 3391 01c8 7F0000EA 		b	.L200
 3392              	.L209:
 3393              		.loc 1 2044 5 discriminator 2
 3394 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3395 01d0 8322A0E1 		lsl	r2, r3, #5
 3396 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3397 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3398 01dc 033082E0 		add	r3, r2, r3
 3399 01e0 14300BE5 		str	r3, [fp, #-20]
2045:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2046:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3400              		.loc 1 2046 5 is_stmt 1
 3401 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3402 01e8 0300A0E1 		mov	r0, r3
 3403 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3404 01f0 10000BE5 		str	r0, [fp, #-16]
 3405              		.loc 1 2046 5 is_stmt 0 discriminator 1
 3406 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3407 01f8 FF3803E2 		and	r3, r3, #16711680
 3408 01fc 020853E3 		cmp	r3, #131072
 3409 0200 0100000A 		beq	.L210
 3410 0204 0830E0E3 		mvn	r3, #8
 3411              		.loc 1 2046 5
 3412 0208 6F0000EA 		b	.L200
 3413              	.L210:
 3414              		.loc 1 2046 5 discriminator 2
 3415 020c 10301BE5 		ldr	r3, [fp, #-16]
 3416 0210 233CA0E1 		lsr	r3, r3, #24
 3417 0214 030053E3 		cmp	r3, #3
 3418 0218 0100000A 		beq	.L211
 3419              		.loc 1 2046 5 discriminator 3
 3420 021c 0130E0E3 		mvn	r3, #1
 3421              		.loc 1 2046 5
 3422 0220 690000EA 		b	.L200
 3423              	.L211:
 3424              		.loc 1 2046 5 discriminator 4
 3425 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3426 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3427 022c 002093E5 		ldr	r2, [r3]
 3428 0230 14301BE5 		ldr	r3, [fp, #-20]
 3429 0234 103093E5 		ldr	r3, [r3, #16]
 3430 0238 0310A0E1 		mov	r1, r3
 3431 023c 0200A0E1 		mov	r0, r2
 3432 0240 FEFFFFEB 		bl	_RME_Diff
 3433 0244 0030A0E1 		mov	r3, r0
 3434              		.loc 1 2046 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 98


 3435 0248 0A0053E3 		cmp	r3, #10
 3436 024c 0100008A 		bhi	.L212
 3437              		.loc 1 2046 5 discriminator 5
 3438 0250 0730E0E3 		mvn	r3, #7
 3439              		.loc 1 2046 5
 3440 0254 5C0000EA 		b	.L200
 3441              	.L212:
 3442              		.loc 1 2046 5 discriminator 6
 3443 0258 14301BE5 		ldr	r3, [fp, #-20]
 3444 025c 043093E5 		ldr	r3, [r3, #4]
 3445 0260 000053E3 		cmp	r3, #0
 3446 0264 0B00000A 		beq	.L213
 3447              		.loc 1 2046 5 discriminator 7
 3448 0268 10301BE5 		ldr	r3, [fp, #-16]
 3449 026c 7330FFE6 		uxth	r3, r3
 3450 0270 000053E3 		cmp	r3, #0
 3451 0274 0500001A 		bne	.L214
 3452              		.loc 1 2046 5 discriminator 9
 3453 0278 14001BE5 		ldr	r0, [fp, #-20]
 3454 027c 10301BE5 		ldr	r3, [fp, #-16]
 3455 0280 FF38C3E3 		bic	r3, r3, #16711680
 3456 0284 0320A0E1 		mov	r2, r3
 3457 0288 10101BE5 		ldr	r1, [fp, #-16]
 3458 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3459              	.L214:
 3460              		.loc 1 2046 5 discriminator 11
 3461 0290 0530E0E3 		mvn	r3, #5
 3462              		.loc 1 2046 5
 3463 0294 4C0000EA 		b	.L200
 3464              	.L213:
 3465              		.loc 1 2046 5 discriminator 8
 3466 0298 10301BE5 		ldr	r3, [fp, #-16]
 3467 029c 7330FFE6 		uxth	r3, r3
 3468 02a0 000053E3 		cmp	r3, #0
 3469 02a4 0800000A 		beq	.L215
 3470              		.loc 1 2046 5 discriminator 12
 3471 02a8 003000E3 		movw	r3, #:lower16:.LC6
 3472 02ac 003040E3 		movt	r3, #:upper16:.LC6
 3473 02b0 002000E3 		movw	r2, #:lower16:.LC7
 3474 02b4 002040E3 		movt	r2, #:upper16:.LC7
 3475 02b8 FE1700E3 		movw	r1, #2046
 3476 02bc 000000E3 		movw	r0, #:lower16:.LC8
 3477 02c0 000040E3 		movt	r0, #:upper16:.LC8
 3478 02c4 FEFFFFEB 		bl	RME_Log
 3479              	.L216:
 3480              		.loc 1 2046 5
 3481 02c8 FEFFFFEA 		b	.L216
 3482              	.L215:
2047:../../Source/Kernel/rme_kernel.c ****     
2048:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2049:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2050:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2051:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2052:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2053:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3483              		.loc 1 2053 11 is_stmt 1
 3484 02cc 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 99


 3485 02d0 0C3093E5 		ldr	r3, [r3, #12]
 3486              		.loc 1 2053 10
 3487 02d4 18300BE5 		str	r3, [fp, #-24]
2054:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3488              		.loc 1 2054 14
 3489 02d8 14301BE5 		ldr	r3, [fp, #-20]
 3490 02dc 143093E5 		ldr	r3, [r3, #20]
 3491 02e0 1C300BE5 		str	r3, [fp, #-28]
2055:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3492              		.loc 1 2055 14
 3493 02e4 0030A0E3 		mov	r3, #0
 3494 02e8 08300BE5 		str	r3, [fp, #-8]
 3495              		.loc 1 2055 5
 3496 02ec 110000EA 		b	.L217
 3497              	.L219:
2056:../../Source/Kernel/rme_kernel.c ****     {
2057:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3498              		.loc 1 2057 17
 3499 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3500 02f4 8332A0E1 		lsl	r3, r3, #5
 3501 02f8 18201BE5 		ldr	r2, [fp, #-24]
 3502 02fc 033082E0 		add	r3, r2, r3
 3503              		.loc 1 2057 29
 3504 0300 003093E5 		ldr	r3, [r3]
 3505              		.loc 1 2057 11
 3506 0304 000053E3 		cmp	r3, #0
 3507 0308 0700000A 		beq	.L218
2058:../../Source/Kernel/rme_kernel.c ****         {
2059:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2060:../../Source/Kernel/rme_kernel.c ****             
2061:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3508              		.loc 1 2061 13
 3509 030c 14001BE5 		ldr	r0, [fp, #-20]
 3510 0310 10301BE5 		ldr	r3, [fp, #-16]
 3511 0314 FF38C3E3 		bic	r3, r3, #16711680
 3512 0318 0320A0E1 		mov	r2, r3
 3513 031c 10101BE5 		ldr	r1, [fp, #-16]
 3514 0320 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2062:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3515              		.loc 1 2062 20
 3516 0324 0430E0E3 		mvn	r3, #4
 3517 0328 270000EA 		b	.L200
 3518              	.L218:
2055:../../Source/Kernel/rme_kernel.c ****     {
 3519              		.loc 1 2055 39 discriminator 2
 3520 032c 08301BE5 		ldr	r3, [fp, #-8]
 3521 0330 013083E2 		add	r3, r3, #1
 3522 0334 08300BE5 		str	r3, [fp, #-8]
 3523              	.L217:
2055:../../Source/Kernel/rme_kernel.c ****     {
 3524              		.loc 1 2055 23 discriminator 1
 3525 0338 08201BE5 		ldr	r2, [fp, #-8]
 3526 033c 1C301BE5 		ldr	r3, [fp, #-28]
 3527 0340 030052E1 		cmp	r2, r3
 3528 0344 E9FFFF3A 		bcc	.L219
2063:../../Source/Kernel/rme_kernel.c ****         }
2064:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 100


2065:../../Source/Kernel/rme_kernel.c ****         {
2066:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2067:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2068:../../Source/Kernel/rme_kernel.c ****         }
2069:../../Source/Kernel/rme_kernel.c ****     }
2070:../../Source/Kernel/rme_kernel.c ****     
2071:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2072:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3529              		.loc 1 2072 11
 3530 0348 14301BE5 		ldr	r3, [fp, #-20]
 3531 034c 0C3093E5 		ldr	r3, [r3, #12]
 3532 0350 20300BE5 		str	r3, [fp, #-32]
2073:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
 3533              		.loc 1 2073 10
 3534 0354 14301BE5 		ldr	r3, [fp, #-20]
 3535 0358 143093E5 		ldr	r3, [r3, #20]
 3536              		.loc 1 2073 9
 3537 035c 8332A0E1 		lsl	r3, r3, #5
 3538 0360 24300BE5 		str	r3, [fp, #-36]
2074:../../Source/Kernel/rme_kernel.c **** 
2075:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2076:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3539              		.loc 1 2076 5
 3540 0364 14301BE5 		ldr	r3, [fp, #-20]
 3541 0368 0020A0E3 		mov	r2, #0
 3542 036c 10101BE5 		ldr	r1, [fp, #-16]
 3543 0370 0300A0E1 		mov	r0, r3
 3544 0374 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3545 0378 0030A0E1 		mov	r3, r0
 3546              		.loc 1 2076 5 is_stmt 0 discriminator 1
 3547 037c 000053E3 		cmp	r3, #0
 3548 0380 0100001A 		bne	.L220
 3549 0384 0030E0E3 		mvn	r3, #0
 3550              		.loc 1 2076 5
 3551 0388 0F0000EA 		b	.L200
 3552              	.L220:
2077:../../Source/Kernel/rme_kernel.c **** 
2078:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2079:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3553              		.loc 1 2079 5 is_stmt 1
 3554 038c 24101BE5 		ldr	r1, [fp, #-36]
 3555 0390 20001BE5 		ldr	r0, [fp, #-32]
 3556 0394 FEFFFFEB 		bl	_RME_Kot_Erase
 3557 0398 0030A0E1 		mov	r3, r0
 3558              		.loc 1 2079 5 is_stmt 0 discriminator 1
 3559 039c 000053E3 		cmp	r3, #0
 3560 03a0 0800000A 		beq	.L221
 3561 03a4 003000E3 		movw	r3, #:lower16:.LC6
 3562 03a8 003040E3 		movt	r3, #:upper16:.LC6
 3563 03ac 002000E3 		movw	r2, #:lower16:.LC7
 3564 03b0 002040E3 		movt	r2, #:upper16:.LC7
 3565 03b4 1F1800E3 		movw	r1, #2079
 3566 03b8 000000E3 		movw	r0, #:lower16:.LC8
 3567 03bc 000040E3 		movt	r0, #:upper16:.LC8
 3568 03c0 FEFFFFEB 		bl	RME_Log
 3569              	.L222:
 3570              		.loc 1 2079 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 101


 3571 03c4 FEFFFFEA 		b	.L222
 3572              	.L221:
2080:../../Source/Kernel/rme_kernel.c ****     
2081:../../Source/Kernel/rme_kernel.c ****     return 0;
 3573              		.loc 1 2081 12 is_stmt 1
 3574 03c8 0030A0E3 		mov	r3, #0
 3575              	.L200:
2082:../../Source/Kernel/rme_kernel.c **** }
 3576              		.loc 1 2082 1
 3577 03cc 0300A0E1 		mov	r0, r3
 3578 03d0 04D04BE2 		sub	sp, fp, #4
 3579              		.cfi_def_cfa 13, 8
 3580              		@ sp needed
 3581 03d4 0088BDE8 		pop	{fp, pc}
 3582              		.cfi_endproc
 3583              	.LFE25:
 3585              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3586              		.align	2
 3587              		.syntax unified
 3588              		.arm
 3590              	_RME_Cpt_Frz:
 3591              	.LFB26:
2083:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2084:../../Source/Kernel/rme_kernel.c **** 
2085:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2086:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2087:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2088:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2089:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2090:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2091:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2092:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2093:../../Source/Kernel/rme_kernel.c **** Output      : None.
2094:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2095:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2096:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2097:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2098:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2099:../../Source/Kernel/rme_kernel.c **** {
 3592              		.loc 1 2099 1
 3593              		.cfi_startproc
 3594              		@ args = 0, pretend = 0, frame = 32
 3595              		@ frame_needed = 1, uses_anonymous_args = 0
 3596 0000 00482DE9 		push	{fp, lr}
 3597              		.cfi_def_cfa_offset 8
 3598              		.cfi_offset 11, -8
 3599              		.cfi_offset 14, -4
 3600 0004 04B08DE2 		add	fp, sp, #4
 3601              		.cfi_def_cfa 11, 4
 3602 0008 20D04DE2 		sub	sp, sp, #32
 3603 000c 18000BE5 		str	r0, [fp, #-24]
 3604 0010 1C100BE5 		str	r1, [fp, #-28]
 3605 0014 20200BE5 		str	r2, [fp, #-32]
2100:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2101:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2102:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2103:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 102


2104:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2105:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3606              		.loc 1 2105 5
 3607 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3608 001c 803003E2 		and	r3, r3, #128
 3609 0020 000053E3 		cmp	r3, #0
 3610 0024 1C00001A 		bne	.L224
 3611              		.loc 1 2105 5 is_stmt 0 discriminator 1
 3612 0028 18301BE5 		ldr	r3, [fp, #-24]
 3613 002c 142093E5 		ldr	r2, [r3, #20]
 3614 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3615 0034 030052E1 		cmp	r2, r3
 3616 0038 0100008A 		bhi	.L225
 3617              		.loc 1 2105 5 discriminator 3
 3618 003c 0230E0E3 		mvn	r3, #2
 3619              		.loc 1 2105 5
 3620 0040 9B0000EA 		b	.L226
 3621              	.L225:
 3622              		.loc 1 2105 5 discriminator 4
 3623 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3624 0048 8322A0E1 		lsl	r2, r3, #5
 3625 004c 18301BE5 		ldr	r3, [fp, #-24]
 3626 0050 0C3093E5 		ldr	r3, [r3, #12]
 3627 0054 033082E0 		add	r3, r2, r3
 3628 0058 08300BE5 		str	r3, [fp, #-8]
 3629 005c 08301BE5 		ldr	r3, [fp, #-8]
 3630 0060 0300A0E1 		mov	r0, r3
 3631 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3632 0068 0C000BE5 		str	r0, [fp, #-12]
 3633              		.loc 1 2105 5 discriminator 1
 3634 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3635 0070 FF3803E2 		and	r3, r3, #16711680
 3636 0074 020853E3 		cmp	r3, #131072
 3637 0078 0100001A 		bne	.L227
 3638              		.loc 1 2105 5 discriminator 5
 3639 007c 0830E0E3 		mvn	r3, #8
 3640              		.loc 1 2105 5
 3641 0080 8B0000EA 		b	.L226
 3642              	.L227:
 3643              		.loc 1 2105 5 discriminator 6
 3644 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3645 0088 233CA0E1 		lsr	r3, r3, #24
 3646 008c 030053E3 		cmp	r3, #3
 3647 0090 3F00000A 		beq	.L228
 3648              		.loc 1 2105 5 discriminator 7
 3649 0094 0130E0E3 		mvn	r3, #1
 3650              		.loc 1 2105 5
 3651 0098 850000EA 		b	.L226
 3652              	.L224:
 3653              		.loc 1 2105 5 discriminator 2
 3654 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3655 00a0 2324A0E1 		lsr	r2, r3, #8
 3656 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3657 00a8 143093E5 		ldr	r3, [r3, #20]
 3658 00ac 030052E1 		cmp	r2, r3
 3659 00b0 0100003A 		bcc	.L229
 3660              		.loc 1 2105 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 103


 3661 00b4 0230E0E3 		mvn	r3, #2
 3662              		.loc 1 2105 5
 3663 00b8 7D0000EA 		b	.L226
 3664              	.L229:
 3665              		.loc 1 2105 5 discriminator 9
 3666 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3667 00c0 2334A0E1 		lsr	r3, r3, #8
 3668 00c4 8322A0E1 		lsl	r2, r3, #5
 3669 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3670 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3671 00d0 033082E0 		add	r3, r2, r3
 3672 00d4 08300BE5 		str	r3, [fp, #-8]
 3673 00d8 08301BE5 		ldr	r3, [fp, #-8]
 3674 00dc 0300A0E1 		mov	r0, r3
 3675 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3676 00e4 0C000BE5 		str	r0, [fp, #-12]
 3677              		.loc 1 2105 5 discriminator 1
 3678 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3679 00ec FF3803E2 		and	r3, r3, #16711680
 3680 00f0 020853E3 		cmp	r3, #131072
 3681 00f4 0100001A 		bne	.L230
 3682              		.loc 1 2105 5 discriminator 10
 3683 00f8 0830E0E3 		mvn	r3, #8
 3684              		.loc 1 2105 5
 3685 00fc 6C0000EA 		b	.L226
 3686              	.L230:
 3687              		.loc 1 2105 5 discriminator 11
 3688 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3689 0104 233CA0E1 		lsr	r3, r3, #24
 3690 0108 030053E3 		cmp	r3, #3
 3691 010c 0100000A 		beq	.L231
 3692              		.loc 1 2105 5 discriminator 12
 3693 0110 0130E0E3 		mvn	r3, #1
 3694              		.loc 1 2105 5
 3695 0114 660000EA 		b	.L226
 3696              	.L231:
 3697              		.loc 1 2105 5 discriminator 13
 3698 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3699 011c 7F2003E2 		and	r2, r3, #127
 3700 0120 08301BE5 		ldr	r3, [fp, #-8]
 3701 0124 143093E5 		ldr	r3, [r3, #20]
 3702 0128 030052E1 		cmp	r2, r3
 3703 012c 0100003A 		bcc	.L232
 3704              		.loc 1 2105 5 discriminator 14
 3705 0130 0230E0E3 		mvn	r3, #2
 3706              		.loc 1 2105 5
 3707 0134 5E0000EA 		b	.L226
 3708              	.L232:
 3709              		.loc 1 2105 5 discriminator 15
 3710 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3711 013c 7F3003E2 		and	r3, r3, #127
 3712 0140 8322A0E1 		lsl	r2, r3, #5
 3713 0144 08301BE5 		ldr	r3, [fp, #-8]
 3714 0148 0C3093E5 		ldr	r3, [r3, #12]
 3715 014c 033082E0 		add	r3, r2, r3
 3716 0150 08300BE5 		str	r3, [fp, #-8]
 3717 0154 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 104


 3718 0158 0300A0E1 		mov	r0, r3
 3719 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3720 0160 0C000BE5 		str	r0, [fp, #-12]
 3721              		.loc 1 2105 5 discriminator 1
 3722 0164 0C301BE5 		ldr	r3, [fp, #-12]
 3723 0168 FF3803E2 		and	r3, r3, #16711680
 3724 016c 020853E3 		cmp	r3, #131072
 3725 0170 0100001A 		bne	.L233
 3726              		.loc 1 2105 5 discriminator 16
 3727 0174 0830E0E3 		mvn	r3, #8
 3728              		.loc 1 2105 5
 3729 0178 4D0000EA 		b	.L226
 3730              	.L233:
 3731              		.loc 1 2105 5 discriminator 17
 3732 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3733 0180 233CA0E1 		lsr	r3, r3, #24
 3734 0184 030053E3 		cmp	r3, #3
 3735 0188 0100000A 		beq	.L228
 3736              		.loc 1 2105 5 discriminator 18
 3737 018c 0130E0E3 		mvn	r3, #1
 3738              		.loc 1 2105 5
 3739 0190 470000EA 		b	.L226
 3740              	.L228:
2106:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2107:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2108:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3741              		.loc 1 2108 5 is_stmt 1
 3742 0194 08301BE5 		ldr	r3, [fp, #-8]
 3743 0198 083093E5 		ldr	r3, [r3, #8]
 3744 019c 043003E2 		and	r3, r3, #4
 3745 01a0 000053E3 		cmp	r3, #0
 3746 01a4 0100001A 		bne	.L234
 3747              		.loc 1 2108 5 is_stmt 0 discriminator 1
 3748 01a8 0630E0E3 		mvn	r3, #6
 3749              		.loc 1 2108 5
 3750 01ac 400000EA 		b	.L226
 3751              	.L234:
2109:../../Source/Kernel/rme_kernel.c ****     
2110:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2111:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3752              		.loc 1 2111 5 is_stmt 1
 3753 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3754 01b4 142093E5 		ldr	r2, [r3, #20]
 3755 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3756 01bc 030052E1 		cmp	r2, r3
 3757 01c0 0100008A 		bhi	.L235
 3758              		.loc 1 2111 5 is_stmt 0 discriminator 1
 3759 01c4 0230E0E3 		mvn	r3, #2
 3760              		.loc 1 2111 5
 3761 01c8 390000EA 		b	.L226
 3762              	.L235:
 3763              		.loc 1 2111 5 discriminator 2
 3764 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3765 01d0 8322A0E1 		lsl	r2, r3, #5
 3766 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3767 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3768 01dc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 105


 3769 01e0 10300BE5 		str	r3, [fp, #-16]
2112:../../Source/Kernel/rme_kernel.c ****     
2113:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2114:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2115:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3770              		.loc 1 2115 15 is_stmt 1
 3771 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3772 01e8 0300A0E1 		mov	r0, r3
 3773 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3774 01f0 0C000BE5 		str	r0, [fp, #-12]
2116:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2117:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3775              		.loc 1 2117 8
 3776 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3777 01f8 233CA0E1 		lsr	r3, r3, #24
 3778              		.loc 1 2117 7
 3779 01fc 000053E3 		cmp	r3, #0
 3780 0200 0100001A 		bne	.L236
2118:../../Source/Kernel/rme_kernel.c ****     {
2119:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2120:../../Source/Kernel/rme_kernel.c ****         
2121:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3781              		.loc 1 2121 16
 3782 0204 0030E0E3 		mvn	r3, #0
 3783 0208 290000EA 		b	.L226
 3784              	.L236:
2122:../../Source/Kernel/rme_kernel.c ****     }
2123:../../Source/Kernel/rme_kernel.c ****     else
2124:../../Source/Kernel/rme_kernel.c ****     {
2125:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2126:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2127:../../Source/Kernel/rme_kernel.c ****     }
2128:../../Source/Kernel/rme_kernel.c ****     
2129:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2130:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3785              		.loc 1 2130 8
 3786 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3787 0210 7330FFE6 		uxth	r3, r3
 3788              		.loc 1 2130 7
 3789 0214 000053E3 		cmp	r3, #0
 3790 0218 0500001A 		bne	.L237
2131:../../Source/Kernel/rme_kernel.c ****     {
2132:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3791              		.loc 1 2132 28
 3792 021c 10301BE5 		ldr	r3, [fp, #-16]
 3793 0220 043093E5 		ldr	r3, [r3, #4]
 3794              		.loc 1 2132 11
 3795 0224 000053E3 		cmp	r3, #0
 3796 0228 0100000A 		beq	.L237
2133:../../Source/Kernel/rme_kernel.c ****         {
2134:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2135:../../Source/Kernel/rme_kernel.c ****             
2136:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3797              		.loc 1 2136 20
 3798 022c 0530E0E3 		mvn	r3, #5
 3799 0230 1F0000EA 		b	.L226
 3800              	.L237:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 106


2137:../../Source/Kernel/rme_kernel.c ****         }
2138:../../Source/Kernel/rme_kernel.c ****         else
2139:../../Source/Kernel/rme_kernel.c ****         {
2140:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2141:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2142:../../Source/Kernel/rme_kernel.c ****         }
2143:../../Source/Kernel/rme_kernel.c ****     }
2144:../../Source/Kernel/rme_kernel.c ****     else
2145:../../Source/Kernel/rme_kernel.c ****     {
2146:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2147:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     
2150:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2151:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3801              		.loc 1 2151 31
 3802 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3803 0238 FF3803E2 		and	r3, r3, #16711680
 3804              		.loc 1 2151 7
 3805 023c 020853E3 		cmp	r3, #131072
 3806 0240 0100001A 		bne	.L238
2152:../../Source/Kernel/rme_kernel.c ****     {
2153:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2154:../../Source/Kernel/rme_kernel.c ****         
2155:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3807              		.loc 1 2155 16
 3808 0244 0830E0E3 		mvn	r3, #8
 3809 0248 190000EA 		b	.L226
 3810              	.L238:
2156:../../Source/Kernel/rme_kernel.c ****     }
2157:../../Source/Kernel/rme_kernel.c ****     else
2158:../../Source/Kernel/rme_kernel.c ****     {
2159:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2160:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     
2163:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2164:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
 3811              		.loc 1 2164 8
 3812 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3813 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3814 0254 002093E5 		ldr	r2, [r3]
 3815 0258 10301BE5 		ldr	r3, [fp, #-16]
 3816 025c 103093E5 		ldr	r3, [r3, #16]
 3817 0260 0310A0E1 		mov	r1, r3
 3818 0264 0200A0E1 		mov	r0, r2
 3819 0268 FEFFFFEB 		bl	_RME_Diff
 3820 026c 0030A0E1 		mov	r3, r0
 3821              		.loc 1 2164 7 discriminator 1
 3822 0270 0A0053E3 		cmp	r3, #10
 3823 0274 0100008A 		bhi	.L239
2165:../../Source/Kernel/rme_kernel.c ****     {
2166:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2167:../../Source/Kernel/rme_kernel.c ****         
2168:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
 3824              		.loc 1 2168 16
 3825 0278 0730E0E3 		mvn	r3, #7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 107


 3826 027c 0C0000EA 		b	.L226
 3827              	.L239:
2169:../../Source/Kernel/rme_kernel.c ****     }
2170:../../Source/Kernel/rme_kernel.c ****     else
2171:../../Source/Kernel/rme_kernel.c ****     {
2172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2174:../../Source/Kernel/rme_kernel.c ****     }
2175:../../Source/Kernel/rme_kernel.c **** 
2176:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2177:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3828              		.loc 1 2177 31
 3829 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3830 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3831 0288 002093E5 		ldr	r2, [r3]
 3832 028c 10301BE5 		ldr	r3, [fp, #-16]
 3833 0290 102083E5 		str	r2, [r3, #16]
2178:../../Source/Kernel/rme_kernel.c ****     
2179:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2180:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3834              		.loc 1 2180 5
 3835 0294 10001BE5 		ldr	r0, [fp, #-16]
 3836 0298 0C301BE5 		ldr	r3, [fp, #-12]
 3837 029c FF38C3E3 		bic	r3, r3, #16711680
 3838 02a0 023883E3 		orr	r3, r3, #131072
 3839 02a4 0320A0E1 		mov	r2, r3
 3840 02a8 0C101BE5 		ldr	r1, [fp, #-12]
 3841 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
2181:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2182:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2183:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2184:../../Source/Kernel/rme_kernel.c **** 
2185:../../Source/Kernel/rme_kernel.c ****     return 0;
 3842              		.loc 1 2185 12
 3843 02b0 0030A0E3 		mov	r3, #0
 3844              	.L226:
2186:../../Source/Kernel/rme_kernel.c **** }
 3845              		.loc 1 2186 1
 3846 02b4 0300A0E1 		mov	r0, r3
 3847 02b8 04D04BE2 		sub	sp, fp, #4
 3848              		.cfi_def_cfa 13, 8
 3849              		@ sp needed
 3850 02bc 0088BDE8 		pop	{fp, pc}
 3851              		.cfi_endproc
 3852              	.LFE26:
 3854              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3855              		.align	2
 3856              		.syntax unified
 3857              		.arm
 3859              	_RME_Cpt_Add:
 3860              	.LFB27:
2187:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2188:../../Source/Kernel/rme_kernel.c **** 
2189:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2190:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2191:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 108


2193:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2194:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2196:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2197:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2198:../../Source/Kernel/rme_kernel.c ****                                       table.
2199:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2200:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2201:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2202:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2203:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2204:../../Source/Kernel/rme_kernel.c **** Output      : None.
2205:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2206:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2207:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2208:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2209:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2210:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2211:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2212:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2213:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2214:../../Source/Kernel/rme_kernel.c **** {
 3861              		.loc 1 2214 1
 3862              		.cfi_startproc
 3863              		@ args = 12, pretend = 0, frame = 56
 3864              		@ frame_needed = 1, uses_anonymous_args = 0
 3865 0000 00482DE9 		push	{fp, lr}
 3866              		.cfi_def_cfa_offset 8
 3867              		.cfi_offset 11, -8
 3868              		.cfi_offset 14, -4
 3869 0004 04B08DE2 		add	fp, sp, #4
 3870              		.cfi_def_cfa 11, 4
 3871 0008 38D04DE2 		sub	sp, sp, #56
 3872 000c 30000BE5 		str	r0, [fp, #-48]
 3873 0010 34100BE5 		str	r1, [fp, #-52]
 3874 0014 38200BE5 		str	r2, [fp, #-56]
 3875 0018 3C300BE5 		str	r3, [fp, #-60]
2215:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2216:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2217:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2218:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2219:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2220:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2221:../../Source/Kernel/rme_kernel.c ****     
2222:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2223:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2224:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2225:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2226:../../Source/Kernel/rme_kernel.c **** 
2227:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2228:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3876              		.loc 1 2228 5
 3877 001c 34301BE5 		ldr	r3, [fp, #-52]
 3878 0020 803003E2 		and	r3, r3, #128
 3879 0024 000053E3 		cmp	r3, #0
 3880 0028 1C00001A 		bne	.L241
 3881              		.loc 1 2228 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 109


 3882 002c 30301BE5 		ldr	r3, [fp, #-48]
 3883 0030 142093E5 		ldr	r2, [r3, #20]
 3884 0034 34301BE5 		ldr	r3, [fp, #-52]
 3885 0038 030052E1 		cmp	r2, r3
 3886 003c 0100008A 		bhi	.L242
 3887              		.loc 1 2228 5 discriminator 3
 3888 0040 0230E0E3 		mvn	r3, #2
 3889              		.loc 1 2228 5
 3890 0044 020200EA 		b	.L243
 3891              	.L242:
 3892              		.loc 1 2228 5 discriminator 4
 3893 0048 34301BE5 		ldr	r3, [fp, #-52]
 3894 004c 8322A0E1 		lsl	r2, r3, #5
 3895 0050 30301BE5 		ldr	r3, [fp, #-48]
 3896 0054 0C3093E5 		ldr	r3, [r3, #12]
 3897 0058 033082E0 		add	r3, r2, r3
 3898 005c 08300BE5 		str	r3, [fp, #-8]
 3899 0060 08301BE5 		ldr	r3, [fp, #-8]
 3900 0064 0300A0E1 		mov	r0, r3
 3901 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3902 006c 1C000BE5 		str	r0, [fp, #-28]
 3903              		.loc 1 2228 5 discriminator 1
 3904 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3905 0074 FF3803E2 		and	r3, r3, #16711680
 3906 0078 020853E3 		cmp	r3, #131072
 3907 007c 0100001A 		bne	.L244
 3908              		.loc 1 2228 5 discriminator 5
 3909 0080 0830E0E3 		mvn	r3, #8
 3910              		.loc 1 2228 5
 3911 0084 F20100EA 		b	.L243
 3912              	.L244:
 3913              		.loc 1 2228 5 discriminator 6
 3914 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3915 008c 233CA0E1 		lsr	r3, r3, #24
 3916 0090 030053E3 		cmp	r3, #3
 3917 0094 3F00000A 		beq	.L245
 3918              		.loc 1 2228 5 discriminator 7
 3919 0098 0130E0E3 		mvn	r3, #1
 3920              		.loc 1 2228 5
 3921 009c EC0100EA 		b	.L243
 3922              	.L241:
 3923              		.loc 1 2228 5 discriminator 2
 3924 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3925 00a4 2324A0E1 		lsr	r2, r3, #8
 3926 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3927 00ac 143093E5 		ldr	r3, [r3, #20]
 3928 00b0 030052E1 		cmp	r2, r3
 3929 00b4 0100003A 		bcc	.L246
 3930              		.loc 1 2228 5 discriminator 8
 3931 00b8 0230E0E3 		mvn	r3, #2
 3932              		.loc 1 2228 5
 3933 00bc E40100EA 		b	.L243
 3934              	.L246:
 3935              		.loc 1 2228 5 discriminator 9
 3936 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3937 00c4 2334A0E1 		lsr	r3, r3, #8
 3938 00c8 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 110


 3939 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3940 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3941 00d4 033082E0 		add	r3, r2, r3
 3942 00d8 08300BE5 		str	r3, [fp, #-8]
 3943 00dc 08301BE5 		ldr	r3, [fp, #-8]
 3944 00e0 0300A0E1 		mov	r0, r3
 3945 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3946 00e8 1C000BE5 		str	r0, [fp, #-28]
 3947              		.loc 1 2228 5 discriminator 1
 3948 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3949 00f0 FF3803E2 		and	r3, r3, #16711680
 3950 00f4 020853E3 		cmp	r3, #131072
 3951 00f8 0100001A 		bne	.L247
 3952              		.loc 1 2228 5 discriminator 10
 3953 00fc 0830E0E3 		mvn	r3, #8
 3954              		.loc 1 2228 5
 3955 0100 D30100EA 		b	.L243
 3956              	.L247:
 3957              		.loc 1 2228 5 discriminator 11
 3958 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3959 0108 233CA0E1 		lsr	r3, r3, #24
 3960 010c 030053E3 		cmp	r3, #3
 3961 0110 0100000A 		beq	.L248
 3962              		.loc 1 2228 5 discriminator 12
 3963 0114 0130E0E3 		mvn	r3, #1
 3964              		.loc 1 2228 5
 3965 0118 CD0100EA 		b	.L243
 3966              	.L248:
 3967              		.loc 1 2228 5 discriminator 13
 3968 011c 34301BE5 		ldr	r3, [fp, #-52]
 3969 0120 7F2003E2 		and	r2, r3, #127
 3970 0124 08301BE5 		ldr	r3, [fp, #-8]
 3971 0128 143093E5 		ldr	r3, [r3, #20]
 3972 012c 030052E1 		cmp	r2, r3
 3973 0130 0100003A 		bcc	.L249
 3974              		.loc 1 2228 5 discriminator 14
 3975 0134 0230E0E3 		mvn	r3, #2
 3976              		.loc 1 2228 5
 3977 0138 C50100EA 		b	.L243
 3978              	.L249:
 3979              		.loc 1 2228 5 discriminator 15
 3980 013c 34301BE5 		ldr	r3, [fp, #-52]
 3981 0140 7F3003E2 		and	r3, r3, #127
 3982 0144 8322A0E1 		lsl	r2, r3, #5
 3983 0148 08301BE5 		ldr	r3, [fp, #-8]
 3984 014c 0C3093E5 		ldr	r3, [r3, #12]
 3985 0150 033082E0 		add	r3, r2, r3
 3986 0154 08300BE5 		str	r3, [fp, #-8]
 3987 0158 08301BE5 		ldr	r3, [fp, #-8]
 3988 015c 0300A0E1 		mov	r0, r3
 3989 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3990 0164 1C000BE5 		str	r0, [fp, #-28]
 3991              		.loc 1 2228 5 discriminator 1
 3992 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3993 016c FF3803E2 		and	r3, r3, #16711680
 3994 0170 020853E3 		cmp	r3, #131072
 3995 0174 0100001A 		bne	.L250
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 111


 3996              		.loc 1 2228 5 discriminator 16
 3997 0178 0830E0E3 		mvn	r3, #8
 3998              		.loc 1 2228 5
 3999 017c B40100EA 		b	.L243
 4000              	.L250:
 4001              		.loc 1 2228 5 discriminator 17
 4002 0180 1C301BE5 		ldr	r3, [fp, #-28]
 4003 0184 233CA0E1 		lsr	r3, r3, #24
 4004 0188 030053E3 		cmp	r3, #3
 4005 018c 0100000A 		beq	.L245
 4006              		.loc 1 2228 5 discriminator 18
 4007 0190 0130E0E3 		mvn	r3, #1
 4008              		.loc 1 2228 5
 4009 0194 AE0100EA 		b	.L243
 4010              	.L245:
2229:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 4011              		.loc 1 2230 5 is_stmt 1
 4012 0198 3C301BE5 		ldr	r3, [fp, #-60]
 4013 019c 803003E2 		and	r3, r3, #128
 4014 01a0 000053E3 		cmp	r3, #0
 4015 01a4 1C00001A 		bne	.L251
 4016              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4017 01a8 30301BE5 		ldr	r3, [fp, #-48]
 4018 01ac 142093E5 		ldr	r2, [r3, #20]
 4019 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 4020 01b4 030052E1 		cmp	r2, r3
 4021 01b8 0100008A 		bhi	.L252
 4022              		.loc 1 2230 5 discriminator 3
 4023 01bc 0230E0E3 		mvn	r3, #2
 4024              		.loc 1 2230 5
 4025 01c0 A30100EA 		b	.L243
 4026              	.L252:
 4027              		.loc 1 2230 5 discriminator 4
 4028 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 4029 01c8 8322A0E1 		lsl	r2, r3, #5
 4030 01cc 30301BE5 		ldr	r3, [fp, #-48]
 4031 01d0 0C3093E5 		ldr	r3, [r3, #12]
 4032 01d4 033082E0 		add	r3, r2, r3
 4033 01d8 0C300BE5 		str	r3, [fp, #-12]
 4034 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 4035 01e0 0300A0E1 		mov	r0, r3
 4036 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4037 01e8 1C000BE5 		str	r0, [fp, #-28]
 4038              		.loc 1 2230 5 discriminator 1
 4039 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 4040 01f0 FF3803E2 		and	r3, r3, #16711680
 4041 01f4 020853E3 		cmp	r3, #131072
 4042 01f8 0100001A 		bne	.L253
 4043              		.loc 1 2230 5 discriminator 5
 4044 01fc 0830E0E3 		mvn	r3, #8
 4045              		.loc 1 2230 5
 4046 0200 930100EA 		b	.L243
 4047              	.L253:
 4048              		.loc 1 2230 5 discriminator 6
 4049 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4050 0208 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 112


 4051 020c 030053E3 		cmp	r3, #3
 4052 0210 3F00000A 		beq	.L254
 4053              		.loc 1 2230 5 discriminator 7
 4054 0214 0130E0E3 		mvn	r3, #1
 4055              		.loc 1 2230 5
 4056 0218 8D0100EA 		b	.L243
 4057              	.L251:
 4058              		.loc 1 2230 5 discriminator 2
 4059 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4060 0220 2324A0E1 		lsr	r2, r3, #8
 4061 0224 30301BE5 		ldr	r3, [fp, #-48]
 4062 0228 143093E5 		ldr	r3, [r3, #20]
 4063 022c 030052E1 		cmp	r2, r3
 4064 0230 0100003A 		bcc	.L255
 4065              		.loc 1 2230 5 discriminator 8
 4066 0234 0230E0E3 		mvn	r3, #2
 4067              		.loc 1 2230 5
 4068 0238 850100EA 		b	.L243
 4069              	.L255:
 4070              		.loc 1 2230 5 discriminator 9
 4071 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4072 0240 2334A0E1 		lsr	r3, r3, #8
 4073 0244 8322A0E1 		lsl	r2, r3, #5
 4074 0248 30301BE5 		ldr	r3, [fp, #-48]
 4075 024c 0C3093E5 		ldr	r3, [r3, #12]
 4076 0250 033082E0 		add	r3, r2, r3
 4077 0254 0C300BE5 		str	r3, [fp, #-12]
 4078 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4079 025c 0300A0E1 		mov	r0, r3
 4080 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4081 0264 1C000BE5 		str	r0, [fp, #-28]
 4082              		.loc 1 2230 5 discriminator 1
 4083 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4084 026c FF3803E2 		and	r3, r3, #16711680
 4085 0270 020853E3 		cmp	r3, #131072
 4086 0274 0100001A 		bne	.L256
 4087              		.loc 1 2230 5 discriminator 10
 4088 0278 0830E0E3 		mvn	r3, #8
 4089              		.loc 1 2230 5
 4090 027c 740100EA 		b	.L243
 4091              	.L256:
 4092              		.loc 1 2230 5 discriminator 11
 4093 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4094 0284 233CA0E1 		lsr	r3, r3, #24
 4095 0288 030053E3 		cmp	r3, #3
 4096 028c 0100000A 		beq	.L257
 4097              		.loc 1 2230 5 discriminator 12
 4098 0290 0130E0E3 		mvn	r3, #1
 4099              		.loc 1 2230 5
 4100 0294 6E0100EA 		b	.L243
 4101              	.L257:
 4102              		.loc 1 2230 5 discriminator 13
 4103 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4104 029c 7F2003E2 		and	r2, r3, #127
 4105 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4106 02a4 143093E5 		ldr	r3, [r3, #20]
 4107 02a8 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 113


 4108 02ac 0100003A 		bcc	.L258
 4109              		.loc 1 2230 5 discriminator 14
 4110 02b0 0230E0E3 		mvn	r3, #2
 4111              		.loc 1 2230 5
 4112 02b4 660100EA 		b	.L243
 4113              	.L258:
 4114              		.loc 1 2230 5 discriminator 15
 4115 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4116 02bc 7F3003E2 		and	r3, r3, #127
 4117 02c0 8322A0E1 		lsl	r2, r3, #5
 4118 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4119 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4120 02cc 033082E0 		add	r3, r2, r3
 4121 02d0 0C300BE5 		str	r3, [fp, #-12]
 4122 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4123 02d8 0300A0E1 		mov	r0, r3
 4124 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4125 02e0 1C000BE5 		str	r0, [fp, #-28]
 4126              		.loc 1 2230 5 discriminator 1
 4127 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4128 02e8 FF3803E2 		and	r3, r3, #16711680
 4129 02ec 020853E3 		cmp	r3, #131072
 4130 02f0 0100001A 		bne	.L259
 4131              		.loc 1 2230 5 discriminator 16
 4132 02f4 0830E0E3 		mvn	r3, #8
 4133              		.loc 1 2230 5
 4134 02f8 550100EA 		b	.L243
 4135              	.L259:
 4136              		.loc 1 2230 5 discriminator 17
 4137 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4138 0300 233CA0E1 		lsr	r3, r3, #24
 4139 0304 030053E3 		cmp	r3, #3
 4140 0308 0100000A 		beq	.L254
 4141              		.loc 1 2230 5 discriminator 18
 4142 030c 0130E0E3 		mvn	r3, #1
 4143              		.loc 1 2230 5
 4144 0310 4F0100EA 		b	.L243
 4145              	.L254:
2231:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2232:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2233:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4146              		.loc 1 2233 5 is_stmt 1
 4147 0314 08301BE5 		ldr	r3, [fp, #-8]
 4148 0318 083093E5 		ldr	r3, [r3, #8]
 4149 031c 103003E2 		and	r3, r3, #16
 4150 0320 000053E3 		cmp	r3, #0
 4151 0324 0100001A 		bne	.L260
 4152              		.loc 1 2233 5 is_stmt 0 discriminator 1
 4153 0328 0630E0E3 		mvn	r3, #6
 4154              		.loc 1 2233 5
 4155 032c 480100EA 		b	.L243
 4156              	.L260:
2234:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4157              		.loc 1 2234 5 is_stmt 1
 4158 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4159 0334 083093E5 		ldr	r3, [r3, #8]
 4160 0338 083003E2 		and	r3, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 114


 4161 033c 000053E3 		cmp	r3, #0
 4162 0340 0100001A 		bne	.L261
 4163              		.loc 1 2234 5 is_stmt 0 discriminator 1
 4164 0344 0630E0E3 		mvn	r3, #6
 4165              		.loc 1 2234 5
 4166 0348 410100EA 		b	.L243
 4167              	.L261:
2235:../../Source/Kernel/rme_kernel.c ****     
2236:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2237:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4168              		.loc 1 2237 5 is_stmt 1
 4169 034c 08301BE5 		ldr	r3, [fp, #-8]
 4170 0350 142093E5 		ldr	r2, [r3, #20]
 4171 0354 38301BE5 		ldr	r3, [fp, #-56]
 4172 0358 030052E1 		cmp	r2, r3
 4173 035c 0100008A 		bhi	.L262
 4174              		.loc 1 2237 5 is_stmt 0 discriminator 1
 4175 0360 0230E0E3 		mvn	r3, #2
 4176              		.loc 1 2237 5
 4177 0364 3A0100EA 		b	.L243
 4178              	.L262:
 4179              		.loc 1 2237 5 discriminator 2
 4180 0368 38301BE5 		ldr	r3, [fp, #-56]
 4181 036c 8322A0E1 		lsl	r2, r3, #5
 4182 0370 08301BE5 		ldr	r3, [fp, #-8]
 4183 0374 0C3093E5 		ldr	r3, [r3, #12]
 4184 0378 033082E0 		add	r3, r2, r3
 4185 037c 20300BE5 		str	r3, [fp, #-32]
2238:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4186              		.loc 1 2238 5 is_stmt 1
 4187 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4188 0384 142093E5 		ldr	r2, [r3, #20]
 4189 0388 04309BE5 		ldr	r3, [fp, #4]
 4190 038c 030052E1 		cmp	r2, r3
 4191 0390 0100008A 		bhi	.L263
 4192              		.loc 1 2238 5 is_stmt 0 discriminator 1
 4193 0394 0230E0E3 		mvn	r3, #2
 4194              		.loc 1 2238 5
 4195 0398 2D0100EA 		b	.L243
 4196              	.L263:
 4197              		.loc 1 2238 5 discriminator 2
 4198 039c 04309BE5 		ldr	r3, [fp, #4]
 4199 03a0 8322A0E1 		lsl	r2, r3, #5
 4200 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4201 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4202 03ac 033082E0 		add	r3, r2, r3
 4203 03b0 24300BE5 		str	r3, [fp, #-36]
2239:../../Source/Kernel/rme_kernel.c ****     
2240:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2241:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4204              		.loc 1 2241 15 is_stmt 1
 4205 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4206 03b8 0300A0E1 		mov	r0, r3
 4207 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4208 03c0 1C000BE5 		str	r0, [fp, #-28]
2242:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2243:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 115


 4209              		.loc 1 2243 31
 4210 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4211 03c8 FF3803E2 		and	r3, r3, #16711680
 4212              		.loc 1 2243 7
 4213 03cc 020853E3 		cmp	r3, #131072
 4214 03d0 0100001A 		bne	.L264
2244:../../Source/Kernel/rme_kernel.c ****     {
2245:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2246:../../Source/Kernel/rme_kernel.c ****         
2247:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4215              		.loc 1 2247 16
 4216 03d4 0830E0E3 		mvn	r3, #8
 4217 03d8 1D0100EA 		b	.L243
 4218              	.L264:
2248:../../Source/Kernel/rme_kernel.c ****     }
2249:../../Source/Kernel/rme_kernel.c ****     else
2250:../../Source/Kernel/rme_kernel.c ****     {
2251:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2252:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     
2255:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2256:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4219              		.loc 1 2256 7
 4220 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4221 03e0 000053E3 		cmp	r3, #0
 4222 03e4 0100001A 		bne	.L265
2257:../../Source/Kernel/rme_kernel.c ****     {
2258:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2259:../../Source/Kernel/rme_kernel.c ****         
2260:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4223              		.loc 1 2260 16
 4224 03e8 0030E0E3 		mvn	r3, #0
 4225 03ec 180100EA 		b	.L243
 4226              	.L265:
2261:../../Source/Kernel/rme_kernel.c ****     }
2262:../../Source/Kernel/rme_kernel.c ****     else
2263:../../Source/Kernel/rme_kernel.c ****     {
2264:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2265:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2266:../../Source/Kernel/rme_kernel.c ****     }
2267:../../Source/Kernel/rme_kernel.c **** 
2268:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2269:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4227              		.loc 1 2269 14
 4228 03f0 0030A0E3 		mov	r3, #0
 4229 03f4 10300BE5 		str	r3, [fp, #-16]
2270:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4230              		.loc 1 2270 12
 4231 03f8 0030A0E3 		mov	r3, #0
 4232 03fc 14300BE5 		str	r3, [fp, #-20]
2271:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4233              		.loc 1 2271 13
 4234 0400 0030A0E3 		mov	r3, #0
 4235 0404 18300BE5 		str	r3, [fp, #-24]
2272:../../Source/Kernel/rme_kernel.c ****     
2273:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 116


2274:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4236              		.loc 1 2274 13
 4237 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4238 040c 233CA0E1 		lsr	r3, r3, #24
 4239 0410 28300BE5 		str	r3, [fp, #-40]
2275:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4240              		.loc 1 2275 7
 4241 0414 28301BE5 		ldr	r3, [fp, #-40]
 4242 0418 040053E3 		cmp	r3, #4
 4243 041c 2D00001A 		bne	.L266
2276:../../Source/Kernel/rme_kernel.c ****     {
2277:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2278:../../Source/Kernel/rme_kernel.c ****         
2279:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2280:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4244              		.loc 1 2280 12
 4245 0420 08309BE5 		ldr	r3, [fp, #8]
 4246 0424 232AA0E1 		lsr	r2, r3, #20
 4247              		.loc 1 2280 36
 4248 0428 24301BE5 		ldr	r3, [fp, #-36]
 4249 042c 083093E5 		ldr	r3, [r3, #8]
 4250 0430 233AA0E1 		lsr	r3, r3, #20
 4251              		.loc 1 2280 11
 4252 0434 030052E1 		cmp	r2, r3
 4253 0438 0100009A 		bls	.L267
2281:../../Source/Kernel/rme_kernel.c ****         {
2282:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4254              		.loc 1 2284 20
 4255 043c 0630E0E3 		mvn	r3, #6
 4256 0440 030100EA 		b	.L243
 4257              	.L267:
2285:../../Source/Kernel/rme_kernel.c ****         }
2286:../../Source/Kernel/rme_kernel.c ****         else
2287:../../Source/Kernel/rme_kernel.c ****         {
2288:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2289:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2290:../../Source/Kernel/rme_kernel.c ****         }
2291:../../Source/Kernel/rme_kernel.c ****         
2292:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4258              		.loc 1 2292 12
 4259 0444 08309BE5 		ldr	r3, [fp, #8]
 4260 0448 2334A0E1 		lsr	r3, r3, #8
 4261 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4262              		.loc 1 2292 35
 4263 0450 24301BE5 		ldr	r3, [fp, #-36]
 4264 0454 083093E5 		ldr	r3, [r3, #8]
 4265 0458 2334A0E1 		lsr	r3, r3, #8
 4266 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4267              		.loc 1 2292 11
 4268 0460 030052E1 		cmp	r2, r3
 4269 0464 0100002A 		bcs	.L268
2293:../../Source/Kernel/rme_kernel.c ****         {
2294:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2295:../../Source/Kernel/rme_kernel.c ****             
2296:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 117


 4270              		.loc 1 2296 20
 4271 0468 0630E0E3 		mvn	r3, #6
 4272 046c F80000EA 		b	.L243
 4273              	.L268:
2297:../../Source/Kernel/rme_kernel.c ****         }
2298:../../Source/Kernel/rme_kernel.c ****         else
2299:../../Source/Kernel/rme_kernel.c ****         {
2300:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2301:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2302:../../Source/Kernel/rme_kernel.c ****         }
2303:../../Source/Kernel/rme_kernel.c ****         
2304:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4274              		.loc 1 2304 12
 4275 0470 08309BE5 		ldr	r3, [fp, #8]
 4276 0474 232AA0E1 		lsr	r2, r3, #20
 4277              		.loc 1 2304 36
 4278 0478 08309BE5 		ldr	r3, [fp, #8]
 4279 047c 2334A0E1 		lsr	r3, r3, #8
 4280 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4281              		.loc 1 2304 11
 4282 0484 030052E1 		cmp	r2, r3
 4283 0488 0100002A 		bcs	.L269
2305:../../Source/Kernel/rme_kernel.c ****         {
2306:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2307:../../Source/Kernel/rme_kernel.c ****             
2308:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4284              		.loc 1 2308 20
 4285 048c 0630E0E3 		mvn	r3, #6
 4286 0490 EF0000EA 		b	.L243
 4287              	.L269:
2309:../../Source/Kernel/rme_kernel.c ****         }
2310:../../Source/Kernel/rme_kernel.c ****         else
2311:../../Source/Kernel/rme_kernel.c ****         {
2312:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2313:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         
2316:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2317:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4288              		.loc 1 2317 12
 4289 0494 08309BE5 		ldr	r3, [fp, #8]
 4290 0498 7330EFE6 		uxtb	r3, r3
 4291              		.loc 1 2317 11
 4292 049c 000053E3 		cmp	r3, #0
 4293 04a0 0100001A 		bne	.L270
2318:../../Source/Kernel/rme_kernel.c ****         {
2319:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2320:../../Source/Kernel/rme_kernel.c ****             
2321:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4294              		.loc 1 2321 20
 4295 04a4 0630E0E3 		mvn	r3, #6
 4296 04a8 E90000EA 		b	.L243
 4297              	.L270:
2322:../../Source/Kernel/rme_kernel.c ****         }
2323:../../Source/Kernel/rme_kernel.c ****         else
2324:../../Source/Kernel/rme_kernel.c ****         {
2325:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 118


2326:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2327:../../Source/Kernel/rme_kernel.c ****         }
2328:../../Source/Kernel/rme_kernel.c ****         
2329:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4298              		.loc 1 2329 39
 4299 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4300 04b0 083093E5 		ldr	r3, [r3, #8]
 4301 04b4 7330EFE6 		uxtb	r3, r3
 4302              		.loc 1 2329 38
 4303 04b8 0320E0E1 		mvn	r2, r3
 4304              		.loc 1 2329 36
 4305 04bc 08309BE5 		ldr	r3, [fp, #8]
 4306 04c0 023003E0 		and	r3, r3, r2
 4307 04c4 7330EFE6 		uxtb	r3, r3
 4308              		.loc 1 2329 11
 4309 04c8 000053E3 		cmp	r3, #0
 4310 04cc 7700000A 		beq	.L271
2330:../../Source/Kernel/rme_kernel.c ****         {
2331:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2332:../../Source/Kernel/rme_kernel.c ****             
2333:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4311              		.loc 1 2333 20
 4312 04d0 0630E0E3 		mvn	r3, #6
 4313 04d4 DE0000EA 		b	.L243
 4314              	.L266:
2334:../../Source/Kernel/rme_kernel.c ****         }
2335:../../Source/Kernel/rme_kernel.c ****         else
2336:../../Source/Kernel/rme_kernel.c ****         {
2337:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2338:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2339:../../Source/Kernel/rme_kernel.c ****         }
2340:../../Source/Kernel/rme_kernel.c ****     }
2341:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4315              		.loc 1 2341 12
 4316 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4317 04dc 010053E3 		cmp	r3, #1
 4318 04e0 1900001A 		bne	.L272
2342:../../Source/Kernel/rme_kernel.c ****     {
2343:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2344:../../Source/Kernel/rme_kernel.c ****         
2345:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2346:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4319              		.loc 1 2346 12
 4320 04e4 08309BE5 		ldr	r3, [fp, #8]
 4321 04e8 2328A0E1 		lsr	r2, r3, #16
 4322              		.loc 1 2346 36
 4323 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4324 04f0 083093E5 		ldr	r3, [r3, #8]
 4325 04f4 2338A0E1 		lsr	r3, r3, #16
 4326              		.loc 1 2346 11
 4327 04f8 030052E1 		cmp	r2, r3
 4328 04fc 0100009A 		bls	.L273
2347:../../Source/Kernel/rme_kernel.c ****         {
2348:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2349:../../Source/Kernel/rme_kernel.c ****             
2350:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4329              		.loc 1 2350 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 119


 4330 0500 0630E0E3 		mvn	r3, #6
 4331 0504 D20000EA 		b	.L243
 4332              	.L273:
2351:../../Source/Kernel/rme_kernel.c ****         }
2352:../../Source/Kernel/rme_kernel.c ****         else
2353:../../Source/Kernel/rme_kernel.c ****         {
2354:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2355:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2356:../../Source/Kernel/rme_kernel.c ****         }
2357:../../Source/Kernel/rme_kernel.c ****         
2358:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4333              		.loc 1 2358 12
 4334 0508 08309BE5 		ldr	r3, [fp, #8]
 4335 050c 7320FFE6 		uxth	r2, r3
 4336              		.loc 1 2358 35
 4337 0510 24301BE5 		ldr	r3, [fp, #-36]
 4338 0514 083093E5 		ldr	r3, [r3, #8]
 4339 0518 7330FFE6 		uxth	r3, r3
 4340              		.loc 1 2358 11
 4341 051c 030052E1 		cmp	r2, r3
 4342 0520 0100002A 		bcs	.L274
2359:../../Source/Kernel/rme_kernel.c ****         {
2360:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2361:../../Source/Kernel/rme_kernel.c ****             
2362:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4343              		.loc 1 2362 20
 4344 0524 0630E0E3 		mvn	r3, #6
 4345 0528 C90000EA 		b	.L243
 4346              	.L274:
2363:../../Source/Kernel/rme_kernel.c ****         }
2364:../../Source/Kernel/rme_kernel.c ****         else
2365:../../Source/Kernel/rme_kernel.c ****         {
2366:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2367:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2368:../../Source/Kernel/rme_kernel.c ****         }
2369:../../Source/Kernel/rme_kernel.c ****         
2370:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4347              		.loc 1 2370 12
 4348 052c 08309BE5 		ldr	r3, [fp, #8]
 4349 0530 2328A0E1 		lsr	r2, r3, #16
 4350              		.loc 1 2370 36
 4351 0534 08309BE5 		ldr	r3, [fp, #8]
 4352 0538 7330FFE6 		uxth	r3, r3
 4353              		.loc 1 2370 11
 4354 053c 030052E1 		cmp	r2, r3
 4355 0540 5A00002A 		bcs	.L271
2371:../../Source/Kernel/rme_kernel.c ****         {
2372:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2373:../../Source/Kernel/rme_kernel.c ****             
2374:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4356              		.loc 1 2374 20
 4357 0544 0630E0E3 		mvn	r3, #6
 4358 0548 C10000EA 		b	.L243
 4359              	.L272:
2375:../../Source/Kernel/rme_kernel.c ****         }
2376:../../Source/Kernel/rme_kernel.c ****         else
2377:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 120


2378:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2379:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2380:../../Source/Kernel/rme_kernel.c ****         }
2381:../../Source/Kernel/rme_kernel.c ****     }
2382:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4360              		.loc 1 2382 12
 4361 054c 28301BE5 		ldr	r3, [fp, #-40]
 4362 0550 020053E3 		cmp	r3, #2
 4363 0554 4700001A 		bne	.L275
2383:../../Source/Kernel/rme_kernel.c ****     {
2384:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2385:../../Source/Kernel/rme_kernel.c ****         
2386:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
2387:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4364              		.loc 1 2387 18
 4365 0558 08309BE5 		ldr	r3, [fp, #8]
 4366 055c 0338A0E1 		lsl	r3, r3, #16
 4367 0560 10300BE5 		str	r3, [fp, #-16]
2388:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4368              		.loc 1 2388 17
 4369 0564 08309BE5 		ldr	r3, [fp, #8]
 4370 0568 2338A0E1 		lsr	r3, r3, #16
 4371 056c 0338A0E1 		lsl	r3, r3, #16
 4372 0570 0C209BE5 		ldr	r2, [fp, #12]
 4373 0574 2228A0E1 		lsr	r2, r2, #16
 4374 0578 3F20C2E3 		bic	r2, r2, #63
 4375              		.loc 1 2388 16
 4376 057c 023083E1 		orr	r3, r3, r2
 4377 0580 14300BE5 		str	r3, [fp, #-20]
2389:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4378              		.loc 1 2389 17
 4379 0584 0030A0E3 		mov	r3, #0
 4380 0588 18300BE5 		str	r3, [fp, #-24]
2390:../../Source/Kernel/rme_kernel.c ****         
2391:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2392:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2393:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2394:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2395:../../Source/Kernel/rme_kernel.c **** #endif
2396:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4381              		.loc 1 2396 11
 4382 058c 14201BE5 		ldr	r2, [fp, #-20]
 4383 0590 10301BE5 		ldr	r3, [fp, #-16]
 4384 0594 030052E1 		cmp	r2, r3
 4385 0598 0100008A 		bhi	.L276
2397:../../Source/Kernel/rme_kernel.c ****         {
2398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2399:../../Source/Kernel/rme_kernel.c ****             
2400:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4386              		.loc 1 2400 20
 4387 059c 0630E0E3 		mvn	r3, #6
 4388 05a0 AB0000EA 		b	.L243
 4389              	.L276:
2401:../../Source/Kernel/rme_kernel.c ****         }
2402:../../Source/Kernel/rme_kernel.c ****         else
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 121


2405:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2406:../../Source/Kernel/rme_kernel.c ****         }
2407:../../Source/Kernel/rme_kernel.c **** 
2408:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2409:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4390              		.loc 1 2409 62
 4391 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4392 05a8 143093E5 		ldr	r3, [r3, #20]
 4393              		.loc 1 2409 18
 4394 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4395 05b0 033082E0 		add	r3, r2, r3
 4396 05b4 10300BE5 		str	r3, [fp, #-16]
2410:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4397              		.loc 1 2410 64
 4398 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4399 05bc 143093E5 		ldr	r3, [r3, #20]
 4400              		.loc 1 2410 11
 4401 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4402 05c4 030052E1 		cmp	r2, r3
 4403 05c8 0100002A 		bcs	.L277
2411:../../Source/Kernel/rme_kernel.c ****         {
2412:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2413:../../Source/Kernel/rme_kernel.c ****             
2414:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4404              		.loc 1 2414 20
 4405 05cc 0630E0E3 		mvn	r3, #6
 4406 05d0 9F0000EA 		b	.L243
 4407              	.L277:
2415:../../Source/Kernel/rme_kernel.c ****         }
2416:../../Source/Kernel/rme_kernel.c ****         else
2417:../../Source/Kernel/rme_kernel.c ****         {
2418:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2419:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         
2422:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4408              		.loc 1 2422 60
 4409 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4410 05d8 143093E5 		ldr	r3, [r3, #20]
 4411              		.loc 1 2422 16
 4412 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4413 05e0 033082E0 		add	r3, r2, r3
 4414 05e4 14300BE5 		str	r3, [fp, #-20]
2423:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4415              		.loc 1 2423 62
 4416 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4417 05ec 143093E5 		ldr	r3, [r3, #20]
 4418              		.loc 1 2423 11
 4419 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4420 05f4 030052E1 		cmp	r2, r3
 4421 05f8 0100002A 		bcs	.L278
2424:../../Source/Kernel/rme_kernel.c ****         {
2425:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2426:../../Source/Kernel/rme_kernel.c ****             
2427:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4422              		.loc 1 2427 20
 4423 05fc 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 122


 4424 0600 930000EA 		b	.L243
 4425              	.L278:
2428:../../Source/Kernel/rme_kernel.c ****         }
2429:../../Source/Kernel/rme_kernel.c ****         else
2430:../../Source/Kernel/rme_kernel.c ****         {
2431:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2432:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c **** 
2435:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2436:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4426              		.loc 1 2436 54
 4427 0604 24301BE5 		ldr	r3, [fp, #-36]
 4428 0608 143093E5 		ldr	r3, [r3, #20]
 4429              		.loc 1 2436 11
 4430 060c 10201BE5 		ldr	r2, [fp, #-16]
 4431 0610 030052E1 		cmp	r2, r3
 4432 0614 0100002A 		bcs	.L279
2437:../../Source/Kernel/rme_kernel.c ****         {
2438:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2439:../../Source/Kernel/rme_kernel.c ****             
2440:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4433              		.loc 1 2440 20
 4434 0618 0630E0E3 		mvn	r3, #6
 4435 061c 8C0000EA 		b	.L243
 4436              	.L279:
2441:../../Source/Kernel/rme_kernel.c ****         }
2442:../../Source/Kernel/rme_kernel.c ****         else
2443:../../Source/Kernel/rme_kernel.c ****         {
2444:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2445:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         
2448:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2449:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4437              		.loc 1 2449 54
 4438 0620 24301BE5 		ldr	r3, [fp, #-36]
 4439 0624 182093E5 		ldr	r2, [r3, #24]
 4440              		.loc 1 2449 68
 4441 0628 14301BE5 		ldr	r3, [fp, #-20]
 4442 062c 013043E2 		sub	r3, r3, #1
 4443              		.loc 1 2449 11
 4444 0630 030052E1 		cmp	r2, r3
 4445 0634 0100002A 		bcs	.L280
2450:../../Source/Kernel/rme_kernel.c ****         {
2451:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2452:../../Source/Kernel/rme_kernel.c ****             
2453:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4446              		.loc 1 2453 20
 4447 0638 0630E0E3 		mvn	r3, #6
 4448 063c 840000EA 		b	.L243
 4449              	.L280:
2454:../../Source/Kernel/rme_kernel.c ****         }
2455:../../Source/Kernel/rme_kernel.c ****         else
2456:../../Source/Kernel/rme_kernel.c ****         {
2457:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2458:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 123


2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         
2461:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2462:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4450              		.loc 1 2462 11
 4451 0640 18301BE5 		ldr	r3, [fp, #-24]
 4452 0644 000053E3 		cmp	r3, #0
 4453 0648 0100001A 		bne	.L281
2463:../../Source/Kernel/rme_kernel.c ****         {
2464:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2465:../../Source/Kernel/rme_kernel.c ****             
2466:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4454              		.loc 1 2466 20
 4455 064c 0630E0E3 		mvn	r3, #6
 4456 0650 7F0000EA 		b	.L243
 4457              	.L281:
2467:../../Source/Kernel/rme_kernel.c ****         }
2468:../../Source/Kernel/rme_kernel.c ****         else
2469:../../Source/Kernel/rme_kernel.c ****         {
2470:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2471:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2472:../../Source/Kernel/rme_kernel.c ****         }
2473:../../Source/Kernel/rme_kernel.c ****         
2474:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4458              		.loc 1 2474 41
 4459 0654 24301BE5 		ldr	r3, [fp, #-36]
 4460 0658 083093E5 		ldr	r3, [r3, #8]
 4461              		.loc 1 2474 23
 4462 065c 0320E0E1 		mvn	r2, r3
 4463              		.loc 1 2474 21
 4464 0660 18301BE5 		ldr	r3, [fp, #-24]
 4465 0664 023003E0 		and	r3, r3, r2
 4466              		.loc 1 2474 11
 4467 0668 000053E3 		cmp	r3, #0
 4468 066c 0F00000A 		beq	.L271
2475:../../Source/Kernel/rme_kernel.c ****         {
2476:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2477:../../Source/Kernel/rme_kernel.c ****             
2478:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4469              		.loc 1 2478 20
 4470 0670 0630E0E3 		mvn	r3, #6
 4471 0674 760000EA 		b	.L243
 4472              	.L275:
2479:../../Source/Kernel/rme_kernel.c ****         }
2480:../../Source/Kernel/rme_kernel.c ****         else
2481:../../Source/Kernel/rme_kernel.c ****         {
2482:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2483:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2484:../../Source/Kernel/rme_kernel.c ****         }
2485:../../Source/Kernel/rme_kernel.c ****     }
2486:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2487:../../Source/Kernel/rme_kernel.c ****     else
2488:../../Source/Kernel/rme_kernel.c ****     {
2489:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2490:../../Source/Kernel/rme_kernel.c ****         
2491:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2492:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 124


 4473              		.loc 1 2492 11
 4474 0678 08309BE5 		ldr	r3, [fp, #8]
 4475 067c 000053E3 		cmp	r3, #0
 4476 0680 0100001A 		bne	.L282
2493:../../Source/Kernel/rme_kernel.c ****         {
2494:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2495:../../Source/Kernel/rme_kernel.c ****             
2496:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4477              		.loc 1 2496 20
 4478 0684 0630E0E3 		mvn	r3, #6
 4479 0688 710000EA 		b	.L243
 4480              	.L282:
2497:../../Source/Kernel/rme_kernel.c ****         }
2498:../../Source/Kernel/rme_kernel.c ****         else
2499:../../Source/Kernel/rme_kernel.c ****         {
2500:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2501:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2502:../../Source/Kernel/rme_kernel.c ****         }
2503:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4481              		.loc 1 2503 37
 4482 068c 24301BE5 		ldr	r3, [fp, #-36]
 4483 0690 083093E5 		ldr	r3, [r3, #8]
 4484              		.loc 1 2503 19
 4485 0694 0320E0E1 		mvn	r2, r3
 4486              		.loc 1 2503 17
 4487 0698 08309BE5 		ldr	r3, [fp, #8]
 4488 069c 023003E0 		and	r3, r3, r2
 4489              		.loc 1 2503 11
 4490 06a0 000053E3 		cmp	r3, #0
 4491 06a4 0100000A 		beq	.L271
2504:../../Source/Kernel/rme_kernel.c ****         {
2505:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2506:../../Source/Kernel/rme_kernel.c ****             
2507:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4492              		.loc 1 2507 20
 4493 06a8 0630E0E3 		mvn	r3, #6
 4494 06ac 680000EA 		b	.L243
 4495              	.L271:
2508:../../Source/Kernel/rme_kernel.c ****         }
2509:../../Source/Kernel/rme_kernel.c ****         else
2510:../../Source/Kernel/rme_kernel.c ****         {
2511:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2513:../../Source/Kernel/rme_kernel.c ****         }
2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     
2516:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2517:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4496              		.loc 1 2517 24
 4497 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4498 06b4 003093E5 		ldr	r3, [r3]
 4499              		.loc 1 2517 7
 4500 06b8 000053E3 		cmp	r3, #0
 4501 06bc 0100000A 		beq	.L283
2518:../../Source/Kernel/rme_kernel.c ****     {
2519:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2520:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 125


2521:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4502              		.loc 1 2521 16
 4503 06c0 0430E0E3 		mvn	r3, #4
 4504 06c4 620000EA 		b	.L243
 4505              	.L283:
2522:../../Source/Kernel/rme_kernel.c ****     }
2523:../../Source/Kernel/rme_kernel.c ****     else
2524:../../Source/Kernel/rme_kernel.c ****     {
2525:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2526:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2527:../../Source/Kernel/rme_kernel.c ****     }
2528:../../Source/Kernel/rme_kernel.c ****     
2529:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
2530:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4506              		.loc 1 2530 5
 4507 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4508 06cc 0128A0E3 		mov	r2, #65536
 4509 06d0 0010A0E3 		mov	r1, #0
 4510 06d4 0300A0E1 		mov	r0, r3
 4511 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4512 06dc 0030A0E1 		mov	r3, r0
 4513              		.loc 1 2530 5 is_stmt 0 discriminator 1
 4514 06e0 000053E3 		cmp	r3, #0
 4515 06e4 0100001A 		bne	.L284
 4516 06e8 0430E0E3 		mvn	r3, #4
 4517              		.loc 1 2530 5
 4518 06ec 580000EA 		b	.L243
 4519              	.L284:
 4520              		.loc 1 2530 5 discriminator 2
 4521 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4522 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4523 06f8 002093E5 		ldr	r2, [r3]
 4524 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4525 0700 102083E5 		str	r2, [r3, #16]
2531:../../Source/Kernel/rme_kernel.c ****     
2532:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2533:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4526              		.loc 1 2533 7 is_stmt 1
 4527 0704 28301BE5 		ldr	r3, [fp, #-40]
 4528 0708 020053E3 		cmp	r3, #2
 4529 070c 1A00001A 		bne	.L285
2534:../../Source/Kernel/rme_kernel.c ****     {
2535:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2536:../../Source/Kernel/rme_kernel.c ****             
2537:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4530              		.loc 1 2537 9
 4531 0710 20301BE5 		ldr	r3, [fp, #-32]
 4532 0714 18201BE5 		ldr	r2, [fp, #-24]
 4533 0718 082083E5 		str	r2, [r3, #8]
 4534 071c 24301BE5 		ldr	r3, [fp, #-36]
 4535 0720 0C2093E5 		ldr	r2, [r3, #12]
 4536 0724 20301BE5 		ldr	r3, [fp, #-32]
 4537 0728 0C2083E5 		str	r2, [r3, #12]
 4538 072c 24301BE5 		ldr	r3, [fp, #-36]
 4539 0730 142093E5 		ldr	r2, [r3, #20]
 4540 0734 20301BE5 		ldr	r3, [fp, #-32]
 4541 0738 142083E5 		str	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 126


 4542 073c 24301BE5 		ldr	r3, [fp, #-36]
 4543 0740 182093E5 		ldr	r2, [r3, #24]
 4544 0744 20301BE5 		ldr	r3, [fp, #-32]
 4545 0748 182083E5 		str	r2, [r3, #24]
 4546 074c 24301BE5 		ldr	r3, [fp, #-36]
 4547 0750 1C2093E5 		ldr	r2, [r3, #28]
 4548 0754 20301BE5 		ldr	r3, [fp, #-32]
 4549 0758 1C2083E5 		str	r2, [r3, #28]
2538:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2539:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4550              		.loc 1 2539 58
 4551 075c 20301BE5 		ldr	r3, [fp, #-32]
 4552 0760 10201BE5 		ldr	r2, [fp, #-16]
 4553 0764 142083E5 		str	r2, [r3, #20]
2540:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2541:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4554              		.loc 1 2541 64
 4555 0768 14301BE5 		ldr	r3, [fp, #-20]
 4556 076c 012043E2 		sub	r2, r3, #1
 4557              		.loc 1 2541 56
 4558 0770 20301BE5 		ldr	r3, [fp, #-32]
 4559 0774 182083E5 		str	r2, [r3, #24]
 4560 0778 120000EA 		b	.L286
 4561              	.L285:
2542:../../Source/Kernel/rme_kernel.c ****     }
2543:../../Source/Kernel/rme_kernel.c ****     else
2544:../../Source/Kernel/rme_kernel.c ****     {
2545:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2546:../../Source/Kernel/rme_kernel.c ****         
2547:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4562              		.loc 1 2547 9
 4563 077c 20301BE5 		ldr	r3, [fp, #-32]
 4564 0780 08209BE5 		ldr	r2, [fp, #8]
 4565 0784 082083E5 		str	r2, [r3, #8]
 4566 0788 24301BE5 		ldr	r3, [fp, #-36]
 4567 078c 0C2093E5 		ldr	r2, [r3, #12]
 4568 0790 20301BE5 		ldr	r3, [fp, #-32]
 4569 0794 0C2083E5 		str	r2, [r3, #12]
 4570 0798 24301BE5 		ldr	r3, [fp, #-36]
 4571 079c 142093E5 		ldr	r2, [r3, #20]
 4572 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4573 07a4 142083E5 		str	r2, [r3, #20]
 4574 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4575 07ac 182093E5 		ldr	r2, [r3, #24]
 4576 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4577 07b4 182083E5 		str	r2, [r3, #24]
 4578 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4579 07bc 1C2093E5 		ldr	r2, [r3, #28]
 4580 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4581 07c4 1C2083E5 		str	r2, [r3, #28]
 4582              	.L286:
2548:../../Source/Kernel/rme_kernel.c ****     }
2549:../../Source/Kernel/rme_kernel.c ****     
2550:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2551:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2552:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2553:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 127


2554:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2555:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2556:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2557:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2558:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4583              		.loc 1 2558 7
 4584 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4585 07cc 020053E3 		cmp	r3, #2
 4586 07d0 1400000A 		beq	.L287
 4587              		.loc 1 2558 36 discriminator 1
 4588 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4589 07d8 010053E3 		cmp	r3, #1
 4590 07dc 1100000A 		beq	.L287
2559:../../Source/Kernel/rme_kernel.c ****     {
2560:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2561:../../Source/Kernel/rme_kernel.c ****         
2562:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2563:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4591              		.loc 1 2563 35
 4592 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4593 07e4 003093E5 		ldr	r3, [r3]
 4594 07e8 7330FFE6 		uxth	r3, r3
 4595 07ec 000053E3 		cmp	r3, #0
 4596 07f0 0200000A 		beq	.L288
 4597              		.loc 1 2563 35 is_stmt 0 discriminator 1
 4598 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4599 07f8 043093E5 		ldr	r3, [r3, #4]
 4600 07fc 000000EA 		b	.L289
 4601              	.L288:
 4602              		.loc 1 2563 35 discriminator 2
 4603 0800 24301BE5 		ldr	r3, [fp, #-36]
 4604              	.L289:
 4605              		.loc 1 2563 34 is_stmt 1 discriminator 4
 4606 0804 20201BE5 		ldr	r2, [fp, #-32]
 4607 0808 043082E5 		str	r3, [r2, #4]
2564:../../Source/Kernel/rme_kernel.c ****     
2565:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2566:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4608              		.loc 1 2566 9
 4609 080c 20301BE5 		ldr	r3, [fp, #-32]
 4610 0810 043093E5 		ldr	r3, [r3, #4]
 4611 0814 043083E2 		add	r3, r3, #4
 4612 0818 0110A0E3 		mov	r1, #1
 4613 081c 0300A0E1 		mov	r0, r3
 4614 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4615 0824 020000EA 		b	.L290
 4616              	.L287:
2567:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2568:../../Source/Kernel/rme_kernel.c ****     }
2569:../../Source/Kernel/rme_kernel.c ****     else
2570:../../Source/Kernel/rme_kernel.c ****     {
2571:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2572:../../Source/Kernel/rme_kernel.c ****         
2573:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2574:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4617              		.loc 1 2574 34
 4618 0828 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 128


 4619 082c 0020A0E3 		mov	r2, #0
 4620 0830 042083E5 		str	r2, [r3, #4]
 4621              	.L290:
2575:../../Source/Kernel/rme_kernel.c ****     }
2576:../../Source/Kernel/rme_kernel.c **** 
2577:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2578:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4622              		.loc 1 2578 5
 4623 0834 20201BE5 		ldr	r2, [fp, #-32]
 4624 0838 28301BE5 		ldr	r3, [fp, #-40]
 4625 083c 033CA0E1 		lsl	r3, r3, #24
 4626 0840 013083E3 		orr	r3, r3, #1
 4627 0844 0310A0E1 		mov	r1, r3
 4628 0848 0200A0E1 		mov	r0, r2
 4629 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2579:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2580:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2581:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2582:../../Source/Kernel/rme_kernel.c **** 
2583:../../Source/Kernel/rme_kernel.c ****     return 0;
 4630              		.loc 1 2583 12
 4631 0850 0030A0E3 		mov	r3, #0
 4632              	.L243:
2584:../../Source/Kernel/rme_kernel.c **** }
 4633              		.loc 1 2584 1
 4634 0854 0300A0E1 		mov	r0, r3
 4635 0858 04D04BE2 		sub	sp, fp, #4
 4636              		.cfi_def_cfa 13, 8
 4637              		@ sp needed
 4638 085c 0088BDE8 		pop	{fp, pc}
 4639              		.cfi_endproc
 4640              	.LFE27:
 4642              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4643              		.align	2
 4644              		.syntax unified
 4645              		.arm
 4647              	_RME_Cpt_Rem:
 4648              	.LFB28:
2585:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2586:../../Source/Kernel/rme_kernel.c **** 
2587:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2588:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2589:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2590:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2591:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2592:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2593:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2594:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2595:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2596:../../Source/Kernel/rme_kernel.c **** Output      : None.
2597:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2598:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2599:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2600:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2601:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2602:../../Source/Kernel/rme_kernel.c **** {
 4649              		.loc 1 2602 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 129


 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 40
 4652              		@ frame_needed = 1, uses_anonymous_args = 0
 4653 0000 00482DE9 		push	{fp, lr}
 4654              		.cfi_def_cfa_offset 8
 4655              		.cfi_offset 11, -8
 4656              		.cfi_offset 14, -4
 4657 0004 04B08DE2 		add	fp, sp, #4
 4658              		.cfi_def_cfa 11, 4
 4659 0008 28D04DE2 		sub	sp, sp, #40
 4660 000c 20000BE5 		str	r0, [fp, #-32]
 4661 0010 24100BE5 		str	r1, [fp, #-36]
 4662 0014 28200BE5 		str	r2, [fp, #-40]
2603:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2604:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2605:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2606:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2607:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2608:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2609:../../Source/Kernel/rme_kernel.c ****     
2610:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4663              		.loc 1 2611 5
 4664 0018 24301BE5 		ldr	r3, [fp, #-36]
 4665 001c 803003E2 		and	r3, r3, #128
 4666 0020 000053E3 		cmp	r3, #0
 4667 0024 1C00001A 		bne	.L292
 4668              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4669 0028 20301BE5 		ldr	r3, [fp, #-32]
 4670 002c 142093E5 		ldr	r2, [r3, #20]
 4671 0030 24301BE5 		ldr	r3, [fp, #-36]
 4672 0034 030052E1 		cmp	r2, r3
 4673 0038 0100008A 		bhi	.L293
 4674              		.loc 1 2611 5 discriminator 3
 4675 003c 0230E0E3 		mvn	r3, #2
 4676              		.loc 1 2611 5
 4677 0040 AB0000EA 		b	.L294
 4678              	.L293:
 4679              		.loc 1 2611 5 discriminator 4
 4680 0044 24301BE5 		ldr	r3, [fp, #-36]
 4681 0048 8322A0E1 		lsl	r2, r3, #5
 4682 004c 20301BE5 		ldr	r3, [fp, #-32]
 4683 0050 0C3093E5 		ldr	r3, [r3, #12]
 4684 0054 033082E0 		add	r3, r2, r3
 4685 0058 08300BE5 		str	r3, [fp, #-8]
 4686 005c 08301BE5 		ldr	r3, [fp, #-8]
 4687 0060 0300A0E1 		mov	r0, r3
 4688 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4689 0068 0C000BE5 		str	r0, [fp, #-12]
 4690              		.loc 1 2611 5 discriminator 1
 4691 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4692 0070 FF3803E2 		and	r3, r3, #16711680
 4693 0074 020853E3 		cmp	r3, #131072
 4694 0078 0100001A 		bne	.L295
 4695              		.loc 1 2611 5 discriminator 5
 4696 007c 0830E0E3 		mvn	r3, #8
 4697              		.loc 1 2611 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 130


 4698 0080 9B0000EA 		b	.L294
 4699              	.L295:
 4700              		.loc 1 2611 5 discriminator 6
 4701 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4702 0088 233CA0E1 		lsr	r3, r3, #24
 4703 008c 030053E3 		cmp	r3, #3
 4704 0090 3F00000A 		beq	.L296
 4705              		.loc 1 2611 5 discriminator 7
 4706 0094 0130E0E3 		mvn	r3, #1
 4707              		.loc 1 2611 5
 4708 0098 950000EA 		b	.L294
 4709              	.L292:
 4710              		.loc 1 2611 5 discriminator 2
 4711 009c 24301BE5 		ldr	r3, [fp, #-36]
 4712 00a0 2324A0E1 		lsr	r2, r3, #8
 4713 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4714 00a8 143093E5 		ldr	r3, [r3, #20]
 4715 00ac 030052E1 		cmp	r2, r3
 4716 00b0 0100003A 		bcc	.L297
 4717              		.loc 1 2611 5 discriminator 8
 4718 00b4 0230E0E3 		mvn	r3, #2
 4719              		.loc 1 2611 5
 4720 00b8 8D0000EA 		b	.L294
 4721              	.L297:
 4722              		.loc 1 2611 5 discriminator 9
 4723 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4724 00c0 2334A0E1 		lsr	r3, r3, #8
 4725 00c4 8322A0E1 		lsl	r2, r3, #5
 4726 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4727 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4728 00d0 033082E0 		add	r3, r2, r3
 4729 00d4 08300BE5 		str	r3, [fp, #-8]
 4730 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4731 00dc 0300A0E1 		mov	r0, r3
 4732 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4733 00e4 0C000BE5 		str	r0, [fp, #-12]
 4734              		.loc 1 2611 5 discriminator 1
 4735 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4736 00ec FF3803E2 		and	r3, r3, #16711680
 4737 00f0 020853E3 		cmp	r3, #131072
 4738 00f4 0100001A 		bne	.L298
 4739              		.loc 1 2611 5 discriminator 10
 4740 00f8 0830E0E3 		mvn	r3, #8
 4741              		.loc 1 2611 5
 4742 00fc 7C0000EA 		b	.L294
 4743              	.L298:
 4744              		.loc 1 2611 5 discriminator 11
 4745 0100 0C301BE5 		ldr	r3, [fp, #-12]
 4746 0104 233CA0E1 		lsr	r3, r3, #24
 4747 0108 030053E3 		cmp	r3, #3
 4748 010c 0100000A 		beq	.L299
 4749              		.loc 1 2611 5 discriminator 12
 4750 0110 0130E0E3 		mvn	r3, #1
 4751              		.loc 1 2611 5
 4752 0114 760000EA 		b	.L294
 4753              	.L299:
 4754              		.loc 1 2611 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 131


 4755 0118 24301BE5 		ldr	r3, [fp, #-36]
 4756 011c 7F2003E2 		and	r2, r3, #127
 4757 0120 08301BE5 		ldr	r3, [fp, #-8]
 4758 0124 143093E5 		ldr	r3, [r3, #20]
 4759 0128 030052E1 		cmp	r2, r3
 4760 012c 0100003A 		bcc	.L300
 4761              		.loc 1 2611 5 discriminator 14
 4762 0130 0230E0E3 		mvn	r3, #2
 4763              		.loc 1 2611 5
 4764 0134 6E0000EA 		b	.L294
 4765              	.L300:
 4766              		.loc 1 2611 5 discriminator 15
 4767 0138 24301BE5 		ldr	r3, [fp, #-36]
 4768 013c 7F3003E2 		and	r3, r3, #127
 4769 0140 8322A0E1 		lsl	r2, r3, #5
 4770 0144 08301BE5 		ldr	r3, [fp, #-8]
 4771 0148 0C3093E5 		ldr	r3, [r3, #12]
 4772 014c 033082E0 		add	r3, r2, r3
 4773 0150 08300BE5 		str	r3, [fp, #-8]
 4774 0154 08301BE5 		ldr	r3, [fp, #-8]
 4775 0158 0300A0E1 		mov	r0, r3
 4776 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4777 0160 0C000BE5 		str	r0, [fp, #-12]
 4778              		.loc 1 2611 5 discriminator 1
 4779 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4780 0168 FF3803E2 		and	r3, r3, #16711680
 4781 016c 020853E3 		cmp	r3, #131072
 4782 0170 0100001A 		bne	.L301
 4783              		.loc 1 2611 5 discriminator 16
 4784 0174 0830E0E3 		mvn	r3, #8
 4785              		.loc 1 2611 5
 4786 0178 5D0000EA 		b	.L294
 4787              	.L301:
 4788              		.loc 1 2611 5 discriminator 17
 4789 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4790 0180 233CA0E1 		lsr	r3, r3, #24
 4791 0184 030053E3 		cmp	r3, #3
 4792 0188 0100000A 		beq	.L296
 4793              		.loc 1 2611 5 discriminator 18
 4794 018c 0130E0E3 		mvn	r3, #1
 4795              		.loc 1 2611 5
 4796 0190 570000EA 		b	.L294
 4797              	.L296:
2612:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2613:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2614:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4798              		.loc 1 2614 5 is_stmt 1
 4799 0194 08301BE5 		ldr	r3, [fp, #-8]
 4800 0198 083093E5 		ldr	r3, [r3, #8]
 4801 019c 203003E2 		and	r3, r3, #32
 4802 01a0 000053E3 		cmp	r3, #0
 4803 01a4 0100001A 		bne	.L302
 4804              		.loc 1 2614 5 is_stmt 0 discriminator 1
 4805 01a8 0630E0E3 		mvn	r3, #6
 4806              		.loc 1 2614 5
 4807 01ac 500000EA 		b	.L294
 4808              	.L302:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 132


2615:../../Source/Kernel/rme_kernel.c ****     
2616:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2617:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4809              		.loc 1 2617 5 is_stmt 1
 4810 01b0 08301BE5 		ldr	r3, [fp, #-8]
 4811 01b4 142093E5 		ldr	r2, [r3, #20]
 4812 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4813 01bc 030052E1 		cmp	r2, r3
 4814 01c0 0100008A 		bhi	.L303
 4815              		.loc 1 2617 5 is_stmt 0 discriminator 1
 4816 01c4 0230E0E3 		mvn	r3, #2
 4817              		.loc 1 2617 5
 4818 01c8 490000EA 		b	.L294
 4819              	.L303:
 4820              		.loc 1 2617 5 discriminator 2
 4821 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4822 01d0 8322A0E1 		lsl	r2, r3, #5
 4823 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4824 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4825 01dc 033082E0 		add	r3, r2, r3
 4826 01e0 10300BE5 		str	r3, [fp, #-16]
2618:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2619:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4827              		.loc 1 2619 5 is_stmt 1
 4828 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4829 01e8 0300A0E1 		mov	r0, r3
 4830 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4831 01f0 0C000BE5 		str	r0, [fp, #-12]
 4832              		.loc 1 2619 5 is_stmt 0 discriminator 1
 4833 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4834 01f8 FF3803E2 		and	r3, r3, #16711680
 4835 01fc 020853E3 		cmp	r3, #131072
 4836 0200 0100000A 		beq	.L304
 4837 0204 0830E0E3 		mvn	r3, #8
 4838              		.loc 1 2619 5
 4839 0208 390000EA 		b	.L294
 4840              	.L304:
 4841              		.loc 1 2619 5 discriminator 2
 4842 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4843 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4844 0214 002093E5 		ldr	r2, [r3]
 4845 0218 10301BE5 		ldr	r3, [fp, #-16]
 4846 021c 103093E5 		ldr	r3, [r3, #16]
 4847 0220 0310A0E1 		mov	r1, r3
 4848 0224 0200A0E1 		mov	r0, r2
 4849 0228 FEFFFFEB 		bl	_RME_Diff
 4850 022c 0030A0E1 		mov	r3, r0
 4851              		.loc 1 2619 5 discriminator 1
 4852 0230 0A0053E3 		cmp	r3, #10
 4853 0234 0100008A 		bhi	.L305
 4854              		.loc 1 2619 5 discriminator 3
 4855 0238 0730E0E3 		mvn	r3, #7
 4856              		.loc 1 2619 5
 4857 023c 2C0000EA 		b	.L294
 4858              	.L305:
 4859              		.loc 1 2619 5 discriminator 4
 4860 0240 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 133


 4861 0244 7330FFE6 		uxth	r3, r3
 4862 0248 000053E3 		cmp	r3, #0
 4863 024c 0100001A 		bne	.L306
 4864              		.loc 1 2619 5 discriminator 5
 4865 0250 0930E0E3 		mvn	r3, #9
 4866              		.loc 1 2619 5
 4867 0254 260000EA 		b	.L294
 4868              	.L306:
2620:../../Source/Kernel/rme_kernel.c ****     
2621:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2622:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4869              		.loc 1 2622 13 is_stmt 1
 4870 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4871 025c 233CA0E1 		lsr	r3, r3, #24
 4872 0260 14300BE5 		str	r3, [fp, #-20]
2623:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4873              		.loc 1 2623 7
 4874 0264 14301BE5 		ldr	r3, [fp, #-20]
 4875 0268 020053E3 		cmp	r3, #2
 4876 026c 1500000A 		beq	.L307
 4877              		.loc 1 2623 36 discriminator 1
 4878 0270 14301BE5 		ldr	r3, [fp, #-20]
 4879 0274 010053E3 		cmp	r3, #1
 4880 0278 1200000A 		beq	.L307
2624:../../Source/Kernel/rme_kernel.c ****     {
2625:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2626:../../Source/Kernel/rme_kernel.c ****         
2627:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2628:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4881              		.loc 1 2628 62
 4882 027c 10301BE5 		ldr	r3, [fp, #-16]
 4883 0280 043093E5 		ldr	r3, [r3, #4]
 4884              		.loc 1 2628 20
 4885 0284 18300BE5 		str	r3, [fp, #-24]
2629:../../Source/Kernel/rme_kernel.c ****         
2630:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4886              		.loc 1 2630 9
 4887 0288 10301BE5 		ldr	r3, [fp, #-16]
 4888 028c 0020A0E3 		mov	r2, #0
 4889 0290 0C101BE5 		ldr	r1, [fp, #-12]
 4890 0294 0300A0E1 		mov	r0, r3
 4891 0298 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4892 029c 0030A0E1 		mov	r3, r0
 4893              		.loc 1 2630 9 is_stmt 0 discriminator 1
 4894 02a0 000053E3 		cmp	r3, #0
 4895 02a4 0100001A 		bne	.L308
 4896 02a8 0030E0E3 		mvn	r3, #0
 4897              		.loc 1 2630 9
 4898 02ac 100000EA 		b	.L294
 4899              	.L308:
2631:../../Source/Kernel/rme_kernel.c **** 
2632:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2633:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4900              		.loc 1 2633 9 is_stmt 1
 4901 02b0 18301BE5 		ldr	r3, [fp, #-24]
 4902 02b4 043083E2 		add	r3, r3, #4
 4903 02b8 0010E0E3 		mvn	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 134


 4904 02bc 0300A0E1 		mov	r0, r3
 4905 02c0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4906 02c4 090000EA 		b	.L309
 4907              	.L307:
2634:../../Source/Kernel/rme_kernel.c ****     }
2635:../../Source/Kernel/rme_kernel.c ****     else
2636:../../Source/Kernel/rme_kernel.c ****     {
2637:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2640:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4908              		.loc 1 2640 9
 4909 02c8 10301BE5 		ldr	r3, [fp, #-16]
 4910 02cc 0020A0E3 		mov	r2, #0
 4911 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 4912 02d4 0300A0E1 		mov	r0, r3
 4913 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4914 02dc 0030A0E1 		mov	r3, r0
 4915              		.loc 1 2640 9 is_stmt 0 discriminator 1
 4916 02e0 000053E3 		cmp	r3, #0
 4917 02e4 0100001A 		bne	.L309
 4918 02e8 0030E0E3 		mvn	r3, #0
 4919              		.loc 1 2640 9
 4920 02ec 000000EA 		b	.L294
 4921              	.L309:
2641:../../Source/Kernel/rme_kernel.c ****     }
2642:../../Source/Kernel/rme_kernel.c ****     
2643:../../Source/Kernel/rme_kernel.c ****     return 0;
 4922              		.loc 1 2643 12 is_stmt 1
 4923 02f0 0030A0E3 		mov	r3, #0
 4924              	.L294:
2644:../../Source/Kernel/rme_kernel.c **** }
 4925              		.loc 1 2644 1
 4926 02f4 0300A0E1 		mov	r0, r3
 4927 02f8 04D04BE2 		sub	sp, fp, #4
 4928              		.cfi_def_cfa 13, 8
 4929              		@ sp needed
 4930 02fc 0088BDE8 		pop	{fp, pc}
 4931              		.cfi_endproc
 4932              	.LFE28:
 4934              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4935              		.align	2
 4936              		.global	_RME_Pgt_Boot_Crt
 4937              		.syntax unified
 4938              		.arm
 4940              	_RME_Pgt_Boot_Crt:
 4941              	.LFB29:
2645:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2646:../../Source/Kernel/rme_kernel.c **** 
2647:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2648:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2649:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2650:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2651:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2652:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2653:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2654:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 135


2655:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2656:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2657:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2658:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2659:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2660:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2661:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2662:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2663:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2664:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2665:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2666:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2667:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
2668:../../Source/Kernel/rme_kernel.c ****                                     table.
2669:../../Source/Kernel/rme_kernel.c **** Output      : None.
2670:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2671:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2672:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2673:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2674:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2675:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2676:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2677:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2678:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2679:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2680:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2681:../../Source/Kernel/rme_kernel.c **** {
 4942              		.loc 1 2681 1
 4943              		.cfi_startproc
 4944              		@ args = 16, pretend = 0, frame = 32
 4945              		@ frame_needed = 1, uses_anonymous_args = 0
 4946 0000 00482DE9 		push	{fp, lr}
 4947              		.cfi_def_cfa_offset 8
 4948              		.cfi_offset 11, -8
 4949              		.cfi_offset 14, -4
 4950 0004 04B08DE2 		add	fp, sp, #4
 4951              		.cfi_def_cfa 11, 4
 4952 0008 28D04DE2 		sub	sp, sp, #40
 4953 000c 18000BE5 		str	r0, [fp, #-24]
 4954 0010 1C100BE5 		str	r1, [fp, #-28]
 4955 0014 20200BE5 		str	r2, [fp, #-32]
 4956 0018 24300BE5 		str	r3, [fp, #-36]
2682:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2683:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2684:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2685:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2686:../../Source/Kernel/rme_kernel.c ****     
2687:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2688:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2689:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4957              		.loc 1 2689 19
 4958 001c 0C209BE5 		ldr	r2, [fp, #12]
 4959 0020 10309BE5 		ldr	r3, [fp, #16]
 4960 0024 033082E0 		add	r3, r2, r3
 4961              		.loc 1 2689 7
 4962 0028 200053E3 		cmp	r3, #32
 4963 002c 0100009A 		bls	.L311
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 136


2690:../../Source/Kernel/rme_kernel.c ****     {
2691:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4964              		.loc 1 2693 16
 4965 0030 6630E0E3 		mvn	r3, #102
 4966 0034 D00000EA 		b	.L312
 4967              	.L311:
2694:../../Source/Kernel/rme_kernel.c ****     }
2695:../../Source/Kernel/rme_kernel.c ****     else
2696:../../Source/Kernel/rme_kernel.c ****     {
2697:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2698:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2699:../../Source/Kernel/rme_kernel.c ****     }
2700:../../Source/Kernel/rme_kernel.c **** 
2701:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2702:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4968              		.loc 1 2702 5
 4969 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4970 003c 803003E2 		and	r3, r3, #128
 4971 0040 000053E3 		cmp	r3, #0
 4972 0044 1C00001A 		bne	.L313
 4973              		.loc 1 2702 5 is_stmt 0 discriminator 1
 4974 0048 18301BE5 		ldr	r3, [fp, #-24]
 4975 004c 142093E5 		ldr	r2, [r3, #20]
 4976 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4977 0054 030052E1 		cmp	r2, r3
 4978 0058 0100008A 		bhi	.L314
 4979              		.loc 1 2702 5 discriminator 3
 4980 005c 0230E0E3 		mvn	r3, #2
 4981              		.loc 1 2702 5
 4982 0060 C50000EA 		b	.L312
 4983              	.L314:
 4984              		.loc 1 2702 5 discriminator 4
 4985 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4986 0068 8322A0E1 		lsl	r2, r3, #5
 4987 006c 18301BE5 		ldr	r3, [fp, #-24]
 4988 0070 0C3093E5 		ldr	r3, [r3, #12]
 4989 0074 033082E0 		add	r3, r2, r3
 4990 0078 0C300BE5 		str	r3, [fp, #-12]
 4991 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4992 0080 0300A0E1 		mov	r0, r3
 4993 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4994 0088 10000BE5 		str	r0, [fp, #-16]
 4995              		.loc 1 2702 5 discriminator 1
 4996 008c 10301BE5 		ldr	r3, [fp, #-16]
 4997 0090 FF3803E2 		and	r3, r3, #16711680
 4998 0094 020853E3 		cmp	r3, #131072
 4999 0098 0100001A 		bne	.L315
 5000              		.loc 1 2702 5 discriminator 5
 5001 009c 0830E0E3 		mvn	r3, #8
 5002              		.loc 1 2702 5
 5003 00a0 B50000EA 		b	.L312
 5004              	.L315:
 5005              		.loc 1 2702 5 discriminator 6
 5006 00a4 10301BE5 		ldr	r3, [fp, #-16]
 5007 00a8 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 137


 5008 00ac 030053E3 		cmp	r3, #3
 5009 00b0 3F00000A 		beq	.L316
 5010              		.loc 1 2702 5 discriminator 7
 5011 00b4 0130E0E3 		mvn	r3, #1
 5012              		.loc 1 2702 5
 5013 00b8 AF0000EA 		b	.L312
 5014              	.L313:
 5015              		.loc 1 2702 5 discriminator 2
 5016 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 5017 00c0 2324A0E1 		lsr	r2, r3, #8
 5018 00c4 18301BE5 		ldr	r3, [fp, #-24]
 5019 00c8 143093E5 		ldr	r3, [r3, #20]
 5020 00cc 030052E1 		cmp	r2, r3
 5021 00d0 0100003A 		bcc	.L317
 5022              		.loc 1 2702 5 discriminator 8
 5023 00d4 0230E0E3 		mvn	r3, #2
 5024              		.loc 1 2702 5
 5025 00d8 A70000EA 		b	.L312
 5026              	.L317:
 5027              		.loc 1 2702 5 discriminator 9
 5028 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 5029 00e0 2334A0E1 		lsr	r3, r3, #8
 5030 00e4 8322A0E1 		lsl	r2, r3, #5
 5031 00e8 18301BE5 		ldr	r3, [fp, #-24]
 5032 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5033 00f0 033082E0 		add	r3, r2, r3
 5034 00f4 0C300BE5 		str	r3, [fp, #-12]
 5035 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5036 00fc 0300A0E1 		mov	r0, r3
 5037 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5038 0104 10000BE5 		str	r0, [fp, #-16]
 5039              		.loc 1 2702 5 discriminator 1
 5040 0108 10301BE5 		ldr	r3, [fp, #-16]
 5041 010c FF3803E2 		and	r3, r3, #16711680
 5042 0110 020853E3 		cmp	r3, #131072
 5043 0114 0100001A 		bne	.L318
 5044              		.loc 1 2702 5 discriminator 10
 5045 0118 0830E0E3 		mvn	r3, #8
 5046              		.loc 1 2702 5
 5047 011c 960000EA 		b	.L312
 5048              	.L318:
 5049              		.loc 1 2702 5 discriminator 11
 5050 0120 10301BE5 		ldr	r3, [fp, #-16]
 5051 0124 233CA0E1 		lsr	r3, r3, #24
 5052 0128 030053E3 		cmp	r3, #3
 5053 012c 0100000A 		beq	.L319
 5054              		.loc 1 2702 5 discriminator 12
 5055 0130 0130E0E3 		mvn	r3, #1
 5056              		.loc 1 2702 5
 5057 0134 900000EA 		b	.L312
 5058              	.L319:
 5059              		.loc 1 2702 5 discriminator 13
 5060 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5061 013c 7F2003E2 		and	r2, r3, #127
 5062 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5063 0144 143093E5 		ldr	r3, [r3, #20]
 5064 0148 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 138


 5065 014c 0100003A 		bcc	.L320
 5066              		.loc 1 2702 5 discriminator 14
 5067 0150 0230E0E3 		mvn	r3, #2
 5068              		.loc 1 2702 5
 5069 0154 880000EA 		b	.L312
 5070              	.L320:
 5071              		.loc 1 2702 5 discriminator 15
 5072 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5073 015c 7F3003E2 		and	r3, r3, #127
 5074 0160 8322A0E1 		lsl	r2, r3, #5
 5075 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5076 0168 0C3093E5 		ldr	r3, [r3, #12]
 5077 016c 033082E0 		add	r3, r2, r3
 5078 0170 0C300BE5 		str	r3, [fp, #-12]
 5079 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5080 0178 0300A0E1 		mov	r0, r3
 5081 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5082 0180 10000BE5 		str	r0, [fp, #-16]
 5083              		.loc 1 2702 5 discriminator 1
 5084 0184 10301BE5 		ldr	r3, [fp, #-16]
 5085 0188 FF3803E2 		and	r3, r3, #16711680
 5086 018c 020853E3 		cmp	r3, #131072
 5087 0190 0100001A 		bne	.L321
 5088              		.loc 1 2702 5 discriminator 16
 5089 0194 0830E0E3 		mvn	r3, #8
 5090              		.loc 1 2702 5
 5091 0198 770000EA 		b	.L312
 5092              	.L321:
 5093              		.loc 1 2702 5 discriminator 17
 5094 019c 10301BE5 		ldr	r3, [fp, #-16]
 5095 01a0 233CA0E1 		lsr	r3, r3, #24
 5096 01a4 030053E3 		cmp	r3, #3
 5097 01a8 0100000A 		beq	.L316
 5098              		.loc 1 2702 5 discriminator 18
 5099 01ac 0130E0E3 		mvn	r3, #1
 5100              		.loc 1 2702 5
 5101 01b0 710000EA 		b	.L312
 5102              	.L316:
2703:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2704:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2705:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5103              		.loc 1 2705 5 is_stmt 1
 5104 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5105 01b8 083093E5 		ldr	r3, [r3, #8]
 5106 01bc 013003E2 		and	r3, r3, #1
 5107 01c0 000053E3 		cmp	r3, #0
 5108 01c4 0100001A 		bne	.L322
 5109              		.loc 1 2705 5 is_stmt 0 discriminator 1
 5110 01c8 0630E0E3 		mvn	r3, #6
 5111              		.loc 1 2705 5
 5112 01cc 6A0000EA 		b	.L312
 5113              	.L322:
2706:../../Source/Kernel/rme_kernel.c ****     
2707:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2708:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5114              		.loc 1 2708 8 is_stmt 1
 5115 01d0 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 139


 5116 01d4 00308DE5 		str	r3, [sp]
 5117 01d8 10309BE5 		ldr	r3, [fp, #16]
 5118 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5119 01e0 08109BE5 		ldr	r1, [fp, #8]
 5120 01e4 04009BE5 		ldr	r0, [fp, #4]
 5121 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5122 01ec 0030A0E1 		mov	r3, r0
 5123              		.loc 1 2708 7 discriminator 1
 5124 01f0 000053E3 		cmp	r3, #0
 5125 01f4 0100000A 		beq	.L323
2709:../../Source/Kernel/rme_kernel.c ****     {
2710:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5126              		.loc 1 2712 16
 5127 01f8 6630E0E3 		mvn	r3, #102
 5128 01fc 5E0000EA 		b	.L312
 5129              	.L323:
2713:../../Source/Kernel/rme_kernel.c ****     }
2714:../../Source/Kernel/rme_kernel.c ****     else
2715:../../Source/Kernel/rme_kernel.c ****     {
2716:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2717:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     
2720:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2721:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5130              		.loc 1 2721 14
 5131 0200 0C209BE5 		ldr	r2, [fp, #12]
 5132 0204 10309BE5 		ldr	r3, [fp, #16]
 5133 0208 033082E0 		add	r3, r2, r3
 5134 020c 203063E2 		rsb	r3, r3, #32
 5135 0210 0020E0E3 		mvn	r2, #0
 5136 0214 3223A0E1 		lsr	r2, r2, r3
 5137              		.loc 1 2721 13
 5138 0218 04309BE5 		ldr	r3, [fp, #4]
 5139 021c 023003E0 		and	r3, r3, r2
 5140              		.loc 1 2721 7
 5141 0220 000053E3 		cmp	r3, #0
 5142 0224 0100000A 		beq	.L324
2722:../../Source/Kernel/rme_kernel.c ****     {
2723:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5143              		.loc 1 2725 16
 5144 0228 6630E0E3 		mvn	r3, #102
 5145 022c 520000EA 		b	.L312
 5146              	.L324:
2726:../../Source/Kernel/rme_kernel.c ****     }
2727:../../Source/Kernel/rme_kernel.c ****     else
2728:../../Source/Kernel/rme_kernel.c ****     {
2729:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2730:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2731:../../Source/Kernel/rme_kernel.c ****     }
2732:../../Source/Kernel/rme_kernel.c **** 
2733:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2734:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 140


 5147              		.loc 1 2734 5
 5148 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5149 0234 142093E5 		ldr	r2, [r3, #20]
 5150 0238 20301BE5 		ldr	r3, [fp, #-32]
 5151 023c 030052E1 		cmp	r2, r3
 5152 0240 0100008A 		bhi	.L325
 5153              		.loc 1 2734 5 is_stmt 0 discriminator 1
 5154 0244 0230E0E3 		mvn	r3, #2
 5155              		.loc 1 2734 5
 5156 0248 4B0000EA 		b	.L312
 5157              	.L325:
 5158              		.loc 1 2734 5 discriminator 2
 5159 024c 20301BE5 		ldr	r3, [fp, #-32]
 5160 0250 8322A0E1 		lsl	r2, r3, #5
 5161 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5162 0258 0C3093E5 		ldr	r3, [r3, #12]
 5163 025c 033082E0 		add	r3, r2, r3
 5164 0260 14300BE5 		str	r3, [fp, #-20]
2735:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2736:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5165              		.loc 1 2736 5 is_stmt 1
 5166 0264 14301BE5 		ldr	r3, [fp, #-20]
 5167 0268 0128A0E3 		mov	r2, #65536
 5168 026c 0010A0E3 		mov	r1, #0
 5169 0270 0300A0E1 		mov	r0, r3
 5170 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5171 0278 0030A0E1 		mov	r3, r0
 5172              		.loc 1 2736 5 is_stmt 0 discriminator 1
 5173 027c 000053E3 		cmp	r3, #0
 5174 0280 0100001A 		bne	.L326
 5175 0284 0430E0E3 		mvn	r3, #4
 5176              		.loc 1 2736 5
 5177 0288 3B0000EA 		b	.L312
 5178              	.L326:
 5179              		.loc 1 2736 5 discriminator 2
 5180 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5181 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5182 0294 002093E5 		ldr	r2, [r3]
 5183 0298 14301BE5 		ldr	r3, [fp, #-20]
 5184 029c 102083E5 		str	r2, [r3, #16]
2737:../../Source/Kernel/rme_kernel.c **** 
2738:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2739:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5185              		.loc 1 2739 7 is_stmt 1
 5186 02a0 08309BE5 		ldr	r3, [fp, #8]
 5187 02a4 000053E3 		cmp	r3, #0
 5188 02a8 0400000A 		beq	.L327
2740:../../Source/Kernel/rme_kernel.c ****     {
2741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2742:../../Source/Kernel/rme_kernel.c ****         
2743:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5189              		.loc 1 2743 19
 5190 02ac 0420A0E3 		mov	r2, #4
 5191 02b0 10309BE5 		ldr	r3, [fp, #16]
 5192 02b4 1233A0E1 		lsl	r3, r2, r3
 5193 02b8 08300BE5 		str	r3, [fp, #-8]
 5194 02bc 030000EA 		b	.L328
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 141


 5195              	.L327:
2744:../../Source/Kernel/rme_kernel.c ****     }
2745:../../Source/Kernel/rme_kernel.c ****     else
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****         
2749:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5196              		.loc 1 2749 19
 5197 02c0 0420A0E3 		mov	r2, #4
 5198 02c4 10309BE5 		ldr	r3, [fp, #16]
 5199 02c8 1233A0E1 		lsl	r3, r2, r3
 5200 02cc 08300BE5 		str	r3, [fp, #-8]
 5201              	.L328:
2750:../../Source/Kernel/rme_kernel.c ****     }
2751:../../Source/Kernel/rme_kernel.c ****     
2752:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2753:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5202              		.loc 1 2753 8
 5203 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5204 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5205 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5206 02dc 0030A0E1 		mov	r3, r0
 5207              		.loc 1 2753 7 discriminator 1
 5208 02e0 000053E3 		cmp	r3, #0
 5209 02e4 0500000A 		beq	.L329
2754:../../Source/Kernel/rme_kernel.c ****     {
2755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2756:../../Source/Kernel/rme_kernel.c ****     
2757:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5210              		.loc 1 2757 9
 5211 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5212 02ec 0010A0E3 		mov	r1, #0
 5213 02f0 0300A0E1 		mov	r0, r3
 5214 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2758:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5215              		.loc 1 2758 16
 5216 02f8 0330E0E3 		mvn	r3, #3
 5217 02fc 1E0000EA 		b	.L312
 5218              	.L329:
2759:../../Source/Kernel/rme_kernel.c ****     }
2760:../../Source/Kernel/rme_kernel.c ****     else
2761:../../Source/Kernel/rme_kernel.c ****     {
2762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2763:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2764:../../Source/Kernel/rme_kernel.c ****     }
2765:../../Source/Kernel/rme_kernel.c ****     
2766:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5219              		.loc 1 2767 27
 5220 0300 14301BE5 		ldr	r3, [fp, #-20]
 5221 0304 0020A0E3 		mov	r2, #0
 5222 0308 042083E5 		str	r2, [r3, #4]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5223              		.loc 1 2768 25
 5224 030c 14301BE5 		ldr	r3, [fp, #-20]
 5225 0310 24201BE5 		ldr	r2, [fp, #-36]
 5226 0314 0C2083E5 		str	r2, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 142


2769:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2770:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5227              		.loc 1 2770 23
 5228 0318 14201BE5 		ldr	r2, [fp, #-20]
 5229 031c C130A0E3 		mov	r3, #193
 5230 0320 F03F4FE3 		movt	r3, 65520
 5231 0324 083082E5 		str	r3, [r2, #8]
2771:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2772:../../Source/Kernel/rme_kernel.c ****     
2773:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2774:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5232              		.loc 1 2774 23
 5233 0328 04209BE5 		ldr	r2, [fp, #4]
 5234 032c 08309BE5 		ldr	r3, [fp, #8]
 5235 0330 032082E1 		orr	r2, r2, r3
 5236              		.loc 1 2774 18
 5237 0334 14301BE5 		ldr	r3, [fp, #-20]
 5238 0338 182083E5 		str	r2, [r3, #24]
2775:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5239              		.loc 1 2775 20
 5240 033c 0C309BE5 		ldr	r3, [fp, #12]
 5241 0340 0328A0E1 		lsl	r2, r3, #16
 5242 0344 10309BE5 		ldr	r3, [fp, #16]
 5243 0348 032082E1 		orr	r2, r2, r3
 5244              		.loc 1 2775 19
 5245 034c 14301BE5 		ldr	r3, [fp, #-20]
 5246 0350 142083E5 		str	r2, [r3, #20]
2776:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5247              		.loc 1 2776 18
 5248 0354 14301BE5 		ldr	r3, [fp, #-20]
 5249 0358 0020A0E3 		mov	r2, #0
 5250 035c 1C2083E5 		str	r2, [r3, #28]
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2779:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5251              		.loc 1 2779 8
 5252 0360 14001BE5 		ldr	r0, [fp, #-20]
 5253 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2780:../../Source/Kernel/rme_kernel.c ****     {
2781:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2782:../../Source/Kernel/rme_kernel.c ****         
2783:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2784:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2785:../../Source/Kernel/rme_kernel.c **** 
2786:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2787:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2788:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2789:../../Source/Kernel/rme_kernel.c ****     }
2790:../../Source/Kernel/rme_kernel.c ****     else
2791:../../Source/Kernel/rme_kernel.c ****     {
2792:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2793:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2794:../../Source/Kernel/rme_kernel.c ****     }
2795:../../Source/Kernel/rme_kernel.c **** 
2796:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2797:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5254              		.loc 1 2797 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 143


 5255 0368 14301BE5 		ldr	r3, [fp, #-20]
 5256 036c 0113A0E3 		mov	r1, #67108864
 5257 0370 0300A0E1 		mov	r0, r3
 5258 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2798:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2799:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2800:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2801:../../Source/Kernel/rme_kernel.c **** 
2802:../../Source/Kernel/rme_kernel.c ****     return 0;
 5259              		.loc 1 2802 12
 5260 0378 0030A0E3 		mov	r3, #0
 5261              	.L312:
2803:../../Source/Kernel/rme_kernel.c **** }
 5262              		.loc 1 2803 1
 5263 037c 0300A0E1 		mov	r0, r3
 5264 0380 04D04BE2 		sub	sp, fp, #4
 5265              		.cfi_def_cfa 13, 8
 5266              		@ sp needed
 5267 0384 0088BDE8 		pop	{fp, pc}
 5268              		.cfi_endproc
 5269              	.LFE29:
 5271              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5272              		.align	2
 5273              		.global	_RME_Pgt_Boot_Add
 5274              		.syntax unified
 5275              		.arm
 5277              	_RME_Pgt_Boot_Add:
 5278              	.LFB30:
2804:../../Source/Kernel/rme_kernel.c **** #endif
2805:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2806:../../Source/Kernel/rme_kernel.c **** 
2807:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2808:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2809:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2810:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2811:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2812:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2813:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2814:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2815:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2816:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2817:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2818:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2819:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2820:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2821:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2822:../../Source/Kernel/rme_kernel.c **** Output      : None.
2823:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2824:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2825:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2826:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2827:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2828:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
2829:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2830:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2831:../../Source/Kernel/rme_kernel.c **** {
 5279              		.loc 1 2831 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 144


 5280              		.cfi_startproc
 5281              		@ args = 4, pretend = 0, frame = 32
 5282              		@ frame_needed = 1, uses_anonymous_args = 0
 5283 0000 00482DE9 		push	{fp, lr}
 5284              		.cfi_def_cfa_offset 8
 5285              		.cfi_offset 11, -8
 5286              		.cfi_offset 14, -4
 5287 0004 04B08DE2 		add	fp, sp, #4
 5288              		.cfi_def_cfa 11, 4
 5289 0008 20D04DE2 		sub	sp, sp, #32
 5290 000c 18000BE5 		str	r0, [fp, #-24]
 5291 0010 1C100BE5 		str	r1, [fp, #-28]
 5292 0014 20200BE5 		str	r2, [fp, #-32]
 5293 0018 24300BE5 		str	r3, [fp, #-36]
2832:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2833:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2834:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2835:../../Source/Kernel/rme_kernel.c ****     
2836:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2837:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5294              		.loc 1 2837 5
 5295 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5296 0020 803003E2 		and	r3, r3, #128
 5297 0024 000053E3 		cmp	r3, #0
 5298 0028 1C00001A 		bne	.L331
 5299              		.loc 1 2837 5 is_stmt 0 discriminator 1
 5300 002c 18301BE5 		ldr	r3, [fp, #-24]
 5301 0030 142093E5 		ldr	r2, [r3, #20]
 5302 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5303 0038 030052E1 		cmp	r2, r3
 5304 003c 0100008A 		bhi	.L332
 5305              		.loc 1 2837 5 discriminator 3
 5306 0040 0230E0E3 		mvn	r3, #2
 5307              		.loc 1 2837 5
 5308 0044 7A0000EA 		b	.L333
 5309              	.L332:
 5310              		.loc 1 2837 5 discriminator 4
 5311 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5312 004c 8322A0E1 		lsl	r2, r3, #5
 5313 0050 18301BE5 		ldr	r3, [fp, #-24]
 5314 0054 0C3093E5 		ldr	r3, [r3, #12]
 5315 0058 033082E0 		add	r3, r2, r3
 5316 005c 08300BE5 		str	r3, [fp, #-8]
 5317 0060 08301BE5 		ldr	r3, [fp, #-8]
 5318 0064 0300A0E1 		mov	r0, r3
 5319 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5320 006c 0C000BE5 		str	r0, [fp, #-12]
 5321              		.loc 1 2837 5 discriminator 1
 5322 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5323 0074 FF3803E2 		and	r3, r3, #16711680
 5324 0078 020853E3 		cmp	r3, #131072
 5325 007c 0100001A 		bne	.L334
 5326              		.loc 1 2837 5 discriminator 5
 5327 0080 0830E0E3 		mvn	r3, #8
 5328              		.loc 1 2837 5
 5329 0084 6A0000EA 		b	.L333
 5330              	.L334:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 145


 5331              		.loc 1 2837 5 discriminator 6
 5332 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5333 008c 233CA0E1 		lsr	r3, r3, #24
 5334 0090 040053E3 		cmp	r3, #4
 5335 0094 3F00000A 		beq	.L335
 5336              		.loc 1 2837 5 discriminator 7
 5337 0098 0130E0E3 		mvn	r3, #1
 5338              		.loc 1 2837 5
 5339 009c 640000EA 		b	.L333
 5340              	.L331:
 5341              		.loc 1 2837 5 discriminator 2
 5342 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5343 00a4 2324A0E1 		lsr	r2, r3, #8
 5344 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5345 00ac 143093E5 		ldr	r3, [r3, #20]
 5346 00b0 030052E1 		cmp	r2, r3
 5347 00b4 0100003A 		bcc	.L336
 5348              		.loc 1 2837 5 discriminator 8
 5349 00b8 0230E0E3 		mvn	r3, #2
 5350              		.loc 1 2837 5
 5351 00bc 5C0000EA 		b	.L333
 5352              	.L336:
 5353              		.loc 1 2837 5 discriminator 9
 5354 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5355 00c4 2334A0E1 		lsr	r3, r3, #8
 5356 00c8 8322A0E1 		lsl	r2, r3, #5
 5357 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5358 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5359 00d4 033082E0 		add	r3, r2, r3
 5360 00d8 08300BE5 		str	r3, [fp, #-8]
 5361 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5362 00e0 0300A0E1 		mov	r0, r3
 5363 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5364 00e8 0C000BE5 		str	r0, [fp, #-12]
 5365              		.loc 1 2837 5 discriminator 1
 5366 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5367 00f0 FF3803E2 		and	r3, r3, #16711680
 5368 00f4 020853E3 		cmp	r3, #131072
 5369 00f8 0100001A 		bne	.L337
 5370              		.loc 1 2837 5 discriminator 10
 5371 00fc 0830E0E3 		mvn	r3, #8
 5372              		.loc 1 2837 5
 5373 0100 4B0000EA 		b	.L333
 5374              	.L337:
 5375              		.loc 1 2837 5 discriminator 11
 5376 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5377 0108 233CA0E1 		lsr	r3, r3, #24
 5378 010c 030053E3 		cmp	r3, #3
 5379 0110 0100000A 		beq	.L338
 5380              		.loc 1 2837 5 discriminator 12
 5381 0114 0130E0E3 		mvn	r3, #1
 5382              		.loc 1 2837 5
 5383 0118 450000EA 		b	.L333
 5384              	.L338:
 5385              		.loc 1 2837 5 discriminator 13
 5386 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5387 0120 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 146


 5388 0124 08301BE5 		ldr	r3, [fp, #-8]
 5389 0128 143093E5 		ldr	r3, [r3, #20]
 5390 012c 030052E1 		cmp	r2, r3
 5391 0130 0100003A 		bcc	.L339
 5392              		.loc 1 2837 5 discriminator 14
 5393 0134 0230E0E3 		mvn	r3, #2
 5394              		.loc 1 2837 5
 5395 0138 3D0000EA 		b	.L333
 5396              	.L339:
 5397              		.loc 1 2837 5 discriminator 15
 5398 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5399 0140 7F3003E2 		and	r3, r3, #127
 5400 0144 8322A0E1 		lsl	r2, r3, #5
 5401 0148 08301BE5 		ldr	r3, [fp, #-8]
 5402 014c 0C3093E5 		ldr	r3, [r3, #12]
 5403 0150 033082E0 		add	r3, r2, r3
 5404 0154 08300BE5 		str	r3, [fp, #-8]
 5405 0158 08301BE5 		ldr	r3, [fp, #-8]
 5406 015c 0300A0E1 		mov	r0, r3
 5407 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5408 0164 0C000BE5 		str	r0, [fp, #-12]
 5409              		.loc 1 2837 5 discriminator 1
 5410 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5411 016c FF3803E2 		and	r3, r3, #16711680
 5412 0170 020853E3 		cmp	r3, #131072
 5413 0174 0100001A 		bne	.L340
 5414              		.loc 1 2837 5 discriminator 16
 5415 0178 0830E0E3 		mvn	r3, #8
 5416              		.loc 1 2837 5
 5417 017c 2C0000EA 		b	.L333
 5418              	.L340:
 5419              		.loc 1 2837 5 discriminator 17
 5420 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5421 0184 233CA0E1 		lsr	r3, r3, #24
 5422 0188 040053E3 		cmp	r3, #4
 5423 018c 0100000A 		beq	.L335
 5424              		.loc 1 2837 5 discriminator 18
 5425 0190 0130E0E3 		mvn	r3, #1
 5426              		.loc 1 2837 5
 5427 0194 260000EA 		b	.L333
 5428              	.L335:
2838:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2839:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2840:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2841:../../Source/Kernel/rme_kernel.c **** 
2842:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5429              		.loc 1 2842 11 is_stmt 1
 5430 0198 08301BE5 		ldr	r3, [fp, #-8]
 5431 019c 143093E5 		ldr	r3, [r3, #20]
 5432              		.loc 1 2842 10
 5433 01a0 2338A0E1 		lsr	r3, r3, #16
 5434 01a4 10300BE5 		str	r3, [fp, #-16]
2843:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2844:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2845:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2846:../../Source/Kernel/rme_kernel.c ****     {
2847:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 147


2848:../../Source/Kernel/rme_kernel.c ****         
2849:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2850:../../Source/Kernel/rme_kernel.c ****         {
2851:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2852:../../Source/Kernel/rme_kernel.c ****             
2853:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2854:../../Source/Kernel/rme_kernel.c ****         }
2855:../../Source/Kernel/rme_kernel.c ****         else
2856:../../Source/Kernel/rme_kernel.c ****         {
2857:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2858:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2859:../../Source/Kernel/rme_kernel.c ****         }
2860:../../Source/Kernel/rme_kernel.c ****     }
2861:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2862:../../Source/Kernel/rme_kernel.c ****     {
2863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2864:../../Source/Kernel/rme_kernel.c ****         
2865:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2866:../../Source/Kernel/rme_kernel.c ****     }
2867:../../Source/Kernel/rme_kernel.c ****     else
2868:../../Source/Kernel/rme_kernel.c ****     {
2869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2870:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2871:../../Source/Kernel/rme_kernel.c ****     }
2872:../../Source/Kernel/rme_kernel.c **** #endif
2873:../../Source/Kernel/rme_kernel.c **** 
2874:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2875:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5435              		.loc 1 2875 15
 5436 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5437 01ac 143093E5 		ldr	r3, [r3, #20]
 5438 01b0 7330FFE6 		uxth	r3, r3
 5439              		.loc 1 2875 13
 5440 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5441 01b8 3233A0E1 		lsr	r3, r2, r3
 5442              		.loc 1 2875 7
 5443 01bc 000053E3 		cmp	r3, #0
 5444 01c0 0700001A 		bne	.L341
2876:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5445              		.loc 1 2876 16
 5446 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5447 01c8 203063E2 		rsb	r3, r3, #32
 5448 01cc 0020E0E3 		mvn	r2, #0
 5449 01d0 3223A0E1 		lsr	r2, r2, r3
 5450              		.loc 1 2876 15
 5451 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5452 01d8 023003E0 		and	r3, r3, r2
2875:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5453              		.loc 1 2875 49 discriminator 1
 5454 01dc 000053E3 		cmp	r3, #0
 5455 01e0 0100000A 		beq	.L342
 5456              	.L341:
2877:../../Source/Kernel/rme_kernel.c ****     {
2878:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2879:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nmapping range and the granularity is not allowed ");
2880:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5457              		.loc 1 2880 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 148


 5458 01e4 6430E0E3 		mvn	r3, #100
 5459 01e8 110000EA 		b	.L333
 5460              	.L342:
2881:../../Source/Kernel/rme_kernel.c ****     }
2882:../../Source/Kernel/rme_kernel.c ****     else
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2886:../../Source/Kernel/rme_kernel.c ****     }
2887:../../Source/Kernel/rme_kernel.c **** 
2888:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2889:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2890:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5461              		.loc 1 2890 8
 5462 01ec 04309BE5 		ldr	r3, [fp, #4]
 5463 01f0 24201BE5 		ldr	r2, [fp, #-36]
 5464 01f4 20101BE5 		ldr	r1, [fp, #-32]
 5465 01f8 08001BE5 		ldr	r0, [fp, #-8]
 5466 01fc FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5467 0200 0030A0E1 		mov	r3, r0
 5468              		.loc 1 2890 7 discriminator 1
 5469 0204 000053E3 		cmp	r3, #0
 5470 0208 0800000A 		beq	.L343
 5471              	.LBB2:
2891:../../Source/Kernel/rme_kernel.c ****     {
2892:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2893:../../Source/Kernel/rme_kernel.c ****         int a=__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag);
 5472              		.loc 1 2893 15
 5473 020c 04309BE5 		ldr	r3, [fp, #4]
 5474 0210 24201BE5 		ldr	r2, [fp, #-36]
 5475 0214 20101BE5 		ldr	r1, [fp, #-32]
 5476 0218 08001BE5 		ldr	r0, [fp, #-8]
 5477 021c FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5478 0220 0030A0E1 		mov	r3, r0
 5479              		.loc 1 2893 13 discriminator 1
 5480 0224 14300BE5 		str	r3, [fp, #-20]
2894:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nThis work is not passed down to the HAL ");
2895:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5481              		.loc 1 2895 16
 5482 0228 6530E0E3 		mvn	r3, #101
 5483 022c 000000EA 		b	.L333
 5484              	.L343:
 5485              	.LBE2:
2896:../../Source/Kernel/rme_kernel.c ****     }
2897:../../Source/Kernel/rme_kernel.c ****     else
2898:../../Source/Kernel/rme_kernel.c ****     {
2899:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2900:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2901:../../Source/Kernel/rme_kernel.c ****     }
2902:../../Source/Kernel/rme_kernel.c **** 
2903:../../Source/Kernel/rme_kernel.c ****     return 0;
 5486              		.loc 1 2903 12
 5487 0230 0030A0E3 		mov	r3, #0
 5488              	.L333:
2904:../../Source/Kernel/rme_kernel.c **** }
 5489              		.loc 1 2904 1
 5490 0234 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 149


 5491 0238 04D04BE2 		sub	sp, fp, #4
 5492              		.cfi_def_cfa 13, 8
 5493              		@ sp needed
 5494 023c 0088BDE8 		pop	{fp, pc}
 5495              		.cfi_endproc
 5496              	.LFE30:
 5498              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5499              		.align	2
 5500              		.global	_RME_Pgt_Boot_Con
 5501              		.syntax unified
 5502              		.arm
 5504              	_RME_Pgt_Boot_Con:
 5505              	.LFB31:
2905:../../Source/Kernel/rme_kernel.c **** #endif
2906:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2907:../../Source/Kernel/rme_kernel.c **** 
2908:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2909:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2910:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2911:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2912:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2913:../../Source/Kernel/rme_kernel.c ****                                          table.
2914:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2915:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2916:../../Source/Kernel/rme_kernel.c ****                               page table to.
2917:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2918:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2919:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2920:../../Source/Kernel/rme_kernel.c **** Output      : None.
2921:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2922:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2923:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2924:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2925:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2926:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2927:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2928:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2929:../../Source/Kernel/rme_kernel.c **** {
 5506              		.loc 1 2929 1
 5507              		.cfi_startproc
 5508              		@ args = 4, pretend = 0, frame = 40
 5509              		@ frame_needed = 1, uses_anonymous_args = 0
 5510 0000 00482DE9 		push	{fp, lr}
 5511              		.cfi_def_cfa_offset 8
 5512              		.cfi_offset 11, -8
 5513              		.cfi_offset 14, -4
 5514 0004 04B08DE2 		add	fp, sp, #4
 5515              		.cfi_def_cfa 11, 4
 5516 0008 28D04DE2 		sub	sp, sp, #40
 5517 000c 20000BE5 		str	r0, [fp, #-32]
 5518 0010 24100BE5 		str	r1, [fp, #-36]
 5519 0014 28200BE5 		str	r2, [fp, #-40]
 5520 0018 2C300BE5 		str	r3, [fp, #-44]
2930:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2931:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2932:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2933:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 150


2934:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2935:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2936:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2937:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2938:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2939:../../Source/Kernel/rme_kernel.c **** #endif
2940:../../Source/Kernel/rme_kernel.c ****     
2941:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2942:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5521              		.loc 1 2942 5
 5522 001c 24301BE5 		ldr	r3, [fp, #-36]
 5523 0020 803003E2 		and	r3, r3, #128
 5524 0024 000053E3 		cmp	r3, #0
 5525 0028 1C00001A 		bne	.L345
 5526              		.loc 1 2942 5 is_stmt 0 discriminator 1
 5527 002c 20301BE5 		ldr	r3, [fp, #-32]
 5528 0030 142093E5 		ldr	r2, [r3, #20]
 5529 0034 24301BE5 		ldr	r3, [fp, #-36]
 5530 0038 030052E1 		cmp	r2, r3
 5531 003c 0100008A 		bhi	.L346
 5532              		.loc 1 2942 5 discriminator 3
 5533 0040 0230E0E3 		mvn	r3, #2
 5534              		.loc 1 2942 5
 5535 0044 F70000EA 		b	.L347
 5536              	.L346:
 5537              		.loc 1 2942 5 discriminator 4
 5538 0048 24301BE5 		ldr	r3, [fp, #-36]
 5539 004c 8322A0E1 		lsl	r2, r3, #5
 5540 0050 20301BE5 		ldr	r3, [fp, #-32]
 5541 0054 0C3093E5 		ldr	r3, [r3, #12]
 5542 0058 033082E0 		add	r3, r2, r3
 5543 005c 08300BE5 		str	r3, [fp, #-8]
 5544 0060 08301BE5 		ldr	r3, [fp, #-8]
 5545 0064 0300A0E1 		mov	r0, r3
 5546 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5547 006c 10000BE5 		str	r0, [fp, #-16]
 5548              		.loc 1 2942 5 discriminator 1
 5549 0070 10301BE5 		ldr	r3, [fp, #-16]
 5550 0074 FF3803E2 		and	r3, r3, #16711680
 5551 0078 020853E3 		cmp	r3, #131072
 5552 007c 0100001A 		bne	.L348
 5553              		.loc 1 2942 5 discriminator 5
 5554 0080 0830E0E3 		mvn	r3, #8
 5555              		.loc 1 2942 5
 5556 0084 E70000EA 		b	.L347
 5557              	.L348:
 5558              		.loc 1 2942 5 discriminator 6
 5559 0088 10301BE5 		ldr	r3, [fp, #-16]
 5560 008c 233CA0E1 		lsr	r3, r3, #24
 5561 0090 040053E3 		cmp	r3, #4
 5562 0094 3F00000A 		beq	.L349
 5563              		.loc 1 2942 5 discriminator 7
 5564 0098 0130E0E3 		mvn	r3, #1
 5565              		.loc 1 2942 5
 5566 009c E10000EA 		b	.L347
 5567              	.L345:
 5568              		.loc 1 2942 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 151


 5569 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5570 00a4 2324A0E1 		lsr	r2, r3, #8
 5571 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5572 00ac 143093E5 		ldr	r3, [r3, #20]
 5573 00b0 030052E1 		cmp	r2, r3
 5574 00b4 0100003A 		bcc	.L350
 5575              		.loc 1 2942 5 discriminator 8
 5576 00b8 0230E0E3 		mvn	r3, #2
 5577              		.loc 1 2942 5
 5578 00bc D90000EA 		b	.L347
 5579              	.L350:
 5580              		.loc 1 2942 5 discriminator 9
 5581 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5582 00c4 2334A0E1 		lsr	r3, r3, #8
 5583 00c8 8322A0E1 		lsl	r2, r3, #5
 5584 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5585 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5586 00d4 033082E0 		add	r3, r2, r3
 5587 00d8 08300BE5 		str	r3, [fp, #-8]
 5588 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5589 00e0 0300A0E1 		mov	r0, r3
 5590 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5591 00e8 10000BE5 		str	r0, [fp, #-16]
 5592              		.loc 1 2942 5 discriminator 1
 5593 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5594 00f0 FF3803E2 		and	r3, r3, #16711680
 5595 00f4 020853E3 		cmp	r3, #131072
 5596 00f8 0100001A 		bne	.L351
 5597              		.loc 1 2942 5 discriminator 10
 5598 00fc 0830E0E3 		mvn	r3, #8
 5599              		.loc 1 2942 5
 5600 0100 C80000EA 		b	.L347
 5601              	.L351:
 5602              		.loc 1 2942 5 discriminator 11
 5603 0104 10301BE5 		ldr	r3, [fp, #-16]
 5604 0108 233CA0E1 		lsr	r3, r3, #24
 5605 010c 030053E3 		cmp	r3, #3
 5606 0110 0100000A 		beq	.L352
 5607              		.loc 1 2942 5 discriminator 12
 5608 0114 0130E0E3 		mvn	r3, #1
 5609              		.loc 1 2942 5
 5610 0118 C20000EA 		b	.L347
 5611              	.L352:
 5612              		.loc 1 2942 5 discriminator 13
 5613 011c 24301BE5 		ldr	r3, [fp, #-36]
 5614 0120 7F2003E2 		and	r2, r3, #127
 5615 0124 08301BE5 		ldr	r3, [fp, #-8]
 5616 0128 143093E5 		ldr	r3, [r3, #20]
 5617 012c 030052E1 		cmp	r2, r3
 5618 0130 0100003A 		bcc	.L353
 5619              		.loc 1 2942 5 discriminator 14
 5620 0134 0230E0E3 		mvn	r3, #2
 5621              		.loc 1 2942 5
 5622 0138 BA0000EA 		b	.L347
 5623              	.L353:
 5624              		.loc 1 2942 5 discriminator 15
 5625 013c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 152


 5626 0140 7F3003E2 		and	r3, r3, #127
 5627 0144 8322A0E1 		lsl	r2, r3, #5
 5628 0148 08301BE5 		ldr	r3, [fp, #-8]
 5629 014c 0C3093E5 		ldr	r3, [r3, #12]
 5630 0150 033082E0 		add	r3, r2, r3
 5631 0154 08300BE5 		str	r3, [fp, #-8]
 5632 0158 08301BE5 		ldr	r3, [fp, #-8]
 5633 015c 0300A0E1 		mov	r0, r3
 5634 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5635 0164 10000BE5 		str	r0, [fp, #-16]
 5636              		.loc 1 2942 5 discriminator 1
 5637 0168 10301BE5 		ldr	r3, [fp, #-16]
 5638 016c FF3803E2 		and	r3, r3, #16711680
 5639 0170 020853E3 		cmp	r3, #131072
 5640 0174 0100001A 		bne	.L354
 5641              		.loc 1 2942 5 discriminator 16
 5642 0178 0830E0E3 		mvn	r3, #8
 5643              		.loc 1 2942 5
 5644 017c A90000EA 		b	.L347
 5645              	.L354:
 5646              		.loc 1 2942 5 discriminator 17
 5647 0180 10301BE5 		ldr	r3, [fp, #-16]
 5648 0184 233CA0E1 		lsr	r3, r3, #24
 5649 0188 040053E3 		cmp	r3, #4
 5650 018c 0100000A 		beq	.L349
 5651              		.loc 1 2942 5 discriminator 18
 5652 0190 0130E0E3 		mvn	r3, #1
 5653              		.loc 1 2942 5
 5654 0194 A30000EA 		b	.L347
 5655              	.L349:
2943:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2944:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5656              		.loc 1 2944 5 is_stmt 1
 5657 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5658 019c 803003E2 		and	r3, r3, #128
 5659 01a0 000053E3 		cmp	r3, #0
 5660 01a4 1C00001A 		bne	.L355
 5661              		.loc 1 2944 5 is_stmt 0 discriminator 1
 5662 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5663 01ac 142093E5 		ldr	r2, [r3, #20]
 5664 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5665 01b4 030052E1 		cmp	r2, r3
 5666 01b8 0100008A 		bhi	.L356
 5667              		.loc 1 2944 5 discriminator 3
 5668 01bc 0230E0E3 		mvn	r3, #2
 5669              		.loc 1 2944 5
 5670 01c0 980000EA 		b	.L347
 5671              	.L356:
 5672              		.loc 1 2944 5 discriminator 4
 5673 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5674 01c8 8322A0E1 		lsl	r2, r3, #5
 5675 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5676 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5677 01d4 033082E0 		add	r3, r2, r3
 5678 01d8 0C300BE5 		str	r3, [fp, #-12]
 5679 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5680 01e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 153


 5681 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5682 01e8 10000BE5 		str	r0, [fp, #-16]
 5683              		.loc 1 2944 5 discriminator 1
 5684 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5685 01f0 FF3803E2 		and	r3, r3, #16711680
 5686 01f4 020853E3 		cmp	r3, #131072
 5687 01f8 0100001A 		bne	.L357
 5688              		.loc 1 2944 5 discriminator 5
 5689 01fc 0830E0E3 		mvn	r3, #8
 5690              		.loc 1 2944 5
 5691 0200 880000EA 		b	.L347
 5692              	.L357:
 5693              		.loc 1 2944 5 discriminator 6
 5694 0204 10301BE5 		ldr	r3, [fp, #-16]
 5695 0208 233CA0E1 		lsr	r3, r3, #24
 5696 020c 040053E3 		cmp	r3, #4
 5697 0210 3F00000A 		beq	.L358
 5698              		.loc 1 2944 5 discriminator 7
 5699 0214 0130E0E3 		mvn	r3, #1
 5700              		.loc 1 2944 5
 5701 0218 820000EA 		b	.L347
 5702              	.L355:
 5703              		.loc 1 2944 5 discriminator 2
 5704 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5705 0220 2324A0E1 		lsr	r2, r3, #8
 5706 0224 20301BE5 		ldr	r3, [fp, #-32]
 5707 0228 143093E5 		ldr	r3, [r3, #20]
 5708 022c 030052E1 		cmp	r2, r3
 5709 0230 0100003A 		bcc	.L359
 5710              		.loc 1 2944 5 discriminator 8
 5711 0234 0230E0E3 		mvn	r3, #2
 5712              		.loc 1 2944 5
 5713 0238 7A0000EA 		b	.L347
 5714              	.L359:
 5715              		.loc 1 2944 5 discriminator 9
 5716 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5717 0240 2334A0E1 		lsr	r3, r3, #8
 5718 0244 8322A0E1 		lsl	r2, r3, #5
 5719 0248 20301BE5 		ldr	r3, [fp, #-32]
 5720 024c 0C3093E5 		ldr	r3, [r3, #12]
 5721 0250 033082E0 		add	r3, r2, r3
 5722 0254 0C300BE5 		str	r3, [fp, #-12]
 5723 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5724 025c 0300A0E1 		mov	r0, r3
 5725 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5726 0264 10000BE5 		str	r0, [fp, #-16]
 5727              		.loc 1 2944 5 discriminator 1
 5728 0268 10301BE5 		ldr	r3, [fp, #-16]
 5729 026c FF3803E2 		and	r3, r3, #16711680
 5730 0270 020853E3 		cmp	r3, #131072
 5731 0274 0100001A 		bne	.L360
 5732              		.loc 1 2944 5 discriminator 10
 5733 0278 0830E0E3 		mvn	r3, #8
 5734              		.loc 1 2944 5
 5735 027c 690000EA 		b	.L347
 5736              	.L360:
 5737              		.loc 1 2944 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 154


 5738 0280 10301BE5 		ldr	r3, [fp, #-16]
 5739 0284 233CA0E1 		lsr	r3, r3, #24
 5740 0288 030053E3 		cmp	r3, #3
 5741 028c 0100000A 		beq	.L361
 5742              		.loc 1 2944 5 discriminator 12
 5743 0290 0130E0E3 		mvn	r3, #1
 5744              		.loc 1 2944 5
 5745 0294 630000EA 		b	.L347
 5746              	.L361:
 5747              		.loc 1 2944 5 discriminator 13
 5748 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5749 029c 7F2003E2 		and	r2, r3, #127
 5750 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5751 02a4 143093E5 		ldr	r3, [r3, #20]
 5752 02a8 030052E1 		cmp	r2, r3
 5753 02ac 0100003A 		bcc	.L362
 5754              		.loc 1 2944 5 discriminator 14
 5755 02b0 0230E0E3 		mvn	r3, #2
 5756              		.loc 1 2944 5
 5757 02b4 5B0000EA 		b	.L347
 5758              	.L362:
 5759              		.loc 1 2944 5 discriminator 15
 5760 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5761 02bc 7F3003E2 		and	r3, r3, #127
 5762 02c0 8322A0E1 		lsl	r2, r3, #5
 5763 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5764 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5765 02cc 033082E0 		add	r3, r2, r3
 5766 02d0 0C300BE5 		str	r3, [fp, #-12]
 5767 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5768 02d8 0300A0E1 		mov	r0, r3
 5769 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5770 02e0 10000BE5 		str	r0, [fp, #-16]
 5771              		.loc 1 2944 5 discriminator 1
 5772 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5773 02e8 FF3803E2 		and	r3, r3, #16711680
 5774 02ec 020853E3 		cmp	r3, #131072
 5775 02f0 0100001A 		bne	.L363
 5776              		.loc 1 2944 5 discriminator 16
 5777 02f4 0830E0E3 		mvn	r3, #8
 5778              		.loc 1 2944 5
 5779 02f8 4A0000EA 		b	.L347
 5780              	.L363:
 5781              		.loc 1 2944 5 discriminator 17
 5782 02fc 10301BE5 		ldr	r3, [fp, #-16]
 5783 0300 233CA0E1 		lsr	r3, r3, #24
 5784 0304 040053E3 		cmp	r3, #4
 5785 0308 0100000A 		beq	.L358
 5786              		.loc 1 2944 5 discriminator 18
 5787 030c 0130E0E3 		mvn	r3, #1
 5788              		.loc 1 2944 5
 5789 0310 440000EA 		b	.L347
 5790              	.L358:
2945:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2946:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2947:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2948:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 155


2949:../../Source/Kernel/rme_kernel.c ****     
2950:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2951:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5791              		.loc 1 2951 14 is_stmt 1
 5792 0314 08301BE5 		ldr	r3, [fp, #-8]
 5793 0318 143093E5 		ldr	r3, [r3, #20]
 5794 031c 7330FFE6 		uxth	r3, r3
 5795              		.loc 1 2951 12
 5796 0320 28201BE5 		ldr	r2, [fp, #-40]
 5797 0324 3233A0E1 		lsr	r3, r2, r3
 5798              		.loc 1 2951 7
 5799 0328 000053E3 		cmp	r3, #0
 5800 032c 0100000A 		beq	.L364
2952:../../Source/Kernel/rme_kernel.c ****     {
2953:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2954:../../Source/Kernel/rme_kernel.c ****         
2955:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5801              		.loc 1 2955 16
 5802 0330 6430E0E3 		mvn	r3, #100
 5803 0334 3B0000EA 		b	.L347
 5804              	.L364:
2956:../../Source/Kernel/rme_kernel.c ****     }
2957:../../Source/Kernel/rme_kernel.c ****     else
2958:../../Source/Kernel/rme_kernel.c ****     {
2959:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2960:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2961:../../Source/Kernel/rme_kernel.c ****     }
2962:../../Source/Kernel/rme_kernel.c ****     
2963:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2964:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5805              		.loc 1 2964 17
 5806 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5807 033c 143093E5 		ldr	r3, [r3, #20]
 5808 0340 7320FFE6 		uxth	r2, r3
 5809              		.loc 1 2964 49
 5810 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5811 0348 143093E5 		ldr	r3, [r3, #20]
 5812 034c 2338A0E1 		lsr	r3, r3, #16
 5813              		.loc 1 2964 16
 5814 0350 033082E0 		add	r3, r2, r3
 5815 0354 14300BE5 		str	r3, [fp, #-20]
2965:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5816              		.loc 1 2965 18
 5817 0358 08301BE5 		ldr	r3, [fp, #-8]
 5818 035c 143093E5 		ldr	r3, [r3, #20]
 5819              		.loc 1 2965 17
 5820 0360 2338A0E1 		lsr	r3, r3, #16
 5821 0364 18300BE5 		str	r3, [fp, #-24]
2966:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5822              		.loc 1 2966 7
 5823 0368 18201BE5 		ldr	r2, [fp, #-24]
 5824 036c 14301BE5 		ldr	r3, [fp, #-20]
 5825 0370 030052E1 		cmp	r2, r3
 5826 0374 0100002A 		bcs	.L365
2967:../../Source/Kernel/rme_kernel.c ****     {
2968:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2969:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 156


2970:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5827              		.loc 1 2970 16
 5828 0378 6430E0E3 		mvn	r3, #100
 5829 037c 290000EA 		b	.L347
 5830              	.L365:
2971:../../Source/Kernel/rme_kernel.c ****     }
2972:../../Source/Kernel/rme_kernel.c ****     else
2973:../../Source/Kernel/rme_kernel.c ****     {
2974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2975:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2976:../../Source/Kernel/rme_kernel.c ****     }
2977:../../Source/Kernel/rme_kernel.c **** 
2978:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2979:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2980:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2981:../../Source/Kernel/rme_kernel.c ****     {
2982:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2983:../../Source/Kernel/rme_kernel.c ****         
2984:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2985:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2986:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2987:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2988:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2989:../../Source/Kernel/rme_kernel.c ****         {
2990:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2991:../../Source/Kernel/rme_kernel.c ****             
2992:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2993:../../Source/Kernel/rme_kernel.c ****         }
2994:../../Source/Kernel/rme_kernel.c ****         else
2995:../../Source/Kernel/rme_kernel.c ****         {
2996:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2997:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2998:../../Source/Kernel/rme_kernel.c ****         }
2999:../../Source/Kernel/rme_kernel.c ****         
3000:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3001:../../Source/Kernel/rme_kernel.c ****         
3002:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3003:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3004:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3005:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3006:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3007:../../Source/Kernel/rme_kernel.c ****         {
3008:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3009:../../Source/Kernel/rme_kernel.c ****             
3010:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3011:../../Source/Kernel/rme_kernel.c ****             {
3012:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3013:../../Source/Kernel/rme_kernel.c **** 
3014:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3015:../../Source/Kernel/rme_kernel.c ****             }
3016:../../Source/Kernel/rme_kernel.c ****             else
3017:../../Source/Kernel/rme_kernel.c ****             {
3018:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3019:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3020:../../Source/Kernel/rme_kernel.c ****             }
3021:../../Source/Kernel/rme_kernel.c ****         }
3022:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 157


3023:../../Source/Kernel/rme_kernel.c ****         {
3024:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3025:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3026:../../Source/Kernel/rme_kernel.c ****         }
3027:../../Source/Kernel/rme_kernel.c ****     }
3028:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3029:../../Source/Kernel/rme_kernel.c ****     else
3030:../../Source/Kernel/rme_kernel.c ****     {
3031:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3032:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3033:../../Source/Kernel/rme_kernel.c ****     }
3034:../../Source/Kernel/rme_kernel.c **** #else
3035:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3036:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5831              		.loc 1 3036 7
 5832 0380 18201BE5 		ldr	r2, [fp, #-24]
 5833 0384 14301BE5 		ldr	r3, [fp, #-20]
 5834 0388 030052E1 		cmp	r2, r3
 5835 038c 0100000A 		beq	.L366
3037:../../Source/Kernel/rme_kernel.c ****     {
3038:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3039:../../Source/Kernel/rme_kernel.c **** 
3040:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5836              		.loc 1 3040 16
 5837 0390 6430E0E3 		mvn	r3, #100
 5838 0394 230000EA 		b	.L347
 5839              	.L366:
3041:../../Source/Kernel/rme_kernel.c ****     }
3042:../../Source/Kernel/rme_kernel.c ****     else
3043:../../Source/Kernel/rme_kernel.c ****     {
3044:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3045:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3046:../../Source/Kernel/rme_kernel.c ****     }
3047:../../Source/Kernel/rme_kernel.c **** #endif
3048:../../Source/Kernel/rme_kernel.c **** 
3049:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3050:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3051:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5840              		.loc 1 3051 8
 5841 0398 04309BE5 		ldr	r3, [fp, #4]
 5842 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5843 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5844 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5845 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3052:../../Source/Kernel/rme_kernel.c ****     {
3053:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3054:../../Source/Kernel/rme_kernel.c **** 
3055:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3056:../../Source/Kernel/rme_kernel.c ****     }
3057:../../Source/Kernel/rme_kernel.c ****     else
3058:../../Source/Kernel/rme_kernel.c ****     {
3059:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3060:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3061:../../Source/Kernel/rme_kernel.c ****     }
3062:../../Source/Kernel/rme_kernel.c ****     
3063:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3064:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 158


 5846              		.loc 1 3064 14
 5847 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5848 03b0 003093E5 		ldr	r3, [r3]
 5849 03b4 7330FFE6 		uxth	r3, r3
 5850 03b8 000053E3 		cmp	r3, #0
 5851 03bc 0200000A 		beq	.L367
 5852              		.loc 1 3064 14 is_stmt 0 discriminator 1
 5853 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5854 03c4 043093E5 		ldr	r3, [r3, #4]
 5855 03c8 000000EA 		b	.L368
 5856              	.L367:
 5857              		.loc 1 3064 14 discriminator 2
 5858 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5859              	.L368:
 5860              		.loc 1 3064 13 is_stmt 1 discriminator 4
 5861 03d0 1C300BE5 		str	r3, [fp, #-28]
3065:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5862              		.loc 1 3065 5
 5863 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 5864 03d8 043083E2 		add	r3, r3, #4
 5865 03dc 0110A0E3 		mov	r1, #1
 5866 03e0 0300A0E1 		mov	r0, r3
 5867 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3066:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5868              		.loc 1 3066 14
 5869 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5870 03ec 003093E5 		ldr	r3, [r3]
 5871 03f0 7330FFE6 		uxth	r3, r3
 5872 03f4 000053E3 		cmp	r3, #0
 5873 03f8 0200000A 		beq	.L369
 5874              		.loc 1 3066 14 is_stmt 0 discriminator 1
 5875 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5876 0400 043093E5 		ldr	r3, [r3, #4]
 5877 0404 000000EA 		b	.L370
 5878              	.L369:
 5879              		.loc 1 3066 14 discriminator 2
 5880 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5881              	.L370:
 5882              		.loc 1 3066 13 is_stmt 1 discriminator 4
 5883 040c 1C300BE5 		str	r3, [fp, #-28]
3067:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5884              		.loc 1 3067 5
 5885 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5886 0414 043083E2 		add	r3, r3, #4
 5887 0418 0110A0E3 		mov	r1, #1
 5888 041c 0300A0E1 		mov	r0, r3
 5889 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3068:../../Source/Kernel/rme_kernel.c **** 
3069:../../Source/Kernel/rme_kernel.c ****     return 0;
 5890              		.loc 1 3069 12
 5891 0424 0030A0E3 		mov	r3, #0
 5892              	.L347:
3070:../../Source/Kernel/rme_kernel.c **** }
 5893              		.loc 1 3070 1
 5894 0428 0300A0E1 		mov	r0, r3
 5895 042c 04D04BE2 		sub	sp, fp, #4
 5896              		.cfi_def_cfa 13, 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 159


 5897              		@ sp needed
 5898 0430 0088BDE8 		pop	{fp, pc}
 5899              		.cfi_endproc
 5900              	.LFE31:
 5902              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5903              		.align	2
 5904              		.syntax unified
 5905              		.arm
 5907              	_RME_Pgt_Crt:
 5908              	.LFB32:
3071:../../Source/Kernel/rme_kernel.c **** #endif
3072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3073:../../Source/Kernel/rme_kernel.c **** 
3074:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3075:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3076:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3077:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3078:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3079:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3081:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3082:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3083:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3086:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3087:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3088:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3089:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3090:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3091:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3092:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3093:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3094:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3095:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3096:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3097:../../Source/Kernel/rme_kernel.c **** Output      : None.
3098:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3099:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3100:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3101:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3102:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3103:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3104:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3105:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
3106:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3107:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3108:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3109:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3110:../../Source/Kernel/rme_kernel.c **** {
 5909              		.loc 1 3110 1
 5910              		.cfi_startproc
 5911              		@ args = 20, pretend = 0, frame = 40
 5912              		@ frame_needed = 1, uses_anonymous_args = 0
 5913 0000 00482DE9 		push	{fp, lr}
 5914              		.cfi_def_cfa_offset 8
 5915              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 160


 5916              		.cfi_offset 14, -4
 5917 0004 04B08DE2 		add	fp, sp, #4
 5918              		.cfi_def_cfa 11, 4
 5919 0008 30D04DE2 		sub	sp, sp, #48
 5920 000c 20000BE5 		str	r0, [fp, #-32]
 5921 0010 24100BE5 		str	r1, [fp, #-36]
 5922 0014 28200BE5 		str	r2, [fp, #-40]
 5923 0018 2C300BE5 		str	r3, [fp, #-44]
3111:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3112:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3113:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3114:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3115:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3116:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3117:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Cpt ");
3118:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
3119:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Kom ");
3120:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
3121:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Pgt ");
3122:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Pgt);
3123:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Raddr ");
3124:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
3125:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Base ");
3126:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Base);
3127:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Is_Top ");
3128:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Top);
3129:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Size_Order ");
3130:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Size_Order);
3131:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Num_Order ");
3132:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Num_Order);*/
3133:../../Source/Kernel/rme_kernel.c ****     
3134:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3135:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3136:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5924              		.loc 1 3136 19
 5925 001c 10209BE5 		ldr	r2, [fp, #16]
 5926 0020 14309BE5 		ldr	r3, [fp, #20]
 5927 0024 033082E0 		add	r3, r2, r3
 5928              		.loc 1 3136 7
 5929 0028 200053E3 		cmp	r3, #32
 5930 002c 0100009A 		bls	.L372
3137:../../Source/Kernel/rme_kernel.c ****     {
3138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3139:../../Source/Kernel/rme_kernel.c ****         
3140:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5931              		.loc 1 3140 16
 5932 0030 6630E0E3 		mvn	r3, #102
 5933 0034 550100EA 		b	.L373
 5934              	.L372:
3141:../../Source/Kernel/rme_kernel.c ****     }
3142:../../Source/Kernel/rme_kernel.c ****     else
3143:../../Source/Kernel/rme_kernel.c ****     {
3144:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3145:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3146:../../Source/Kernel/rme_kernel.c ****     }
3147:../../Source/Kernel/rme_kernel.c ****     
3148:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 161


3149:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5935              		.loc 1 3149 5
 5936 0038 24301BE5 		ldr	r3, [fp, #-36]
 5937 003c 803003E2 		and	r3, r3, #128
 5938 0040 000053E3 		cmp	r3, #0
 5939 0044 1C00001A 		bne	.L374
 5940              		.loc 1 3149 5 is_stmt 0 discriminator 1
 5941 0048 20301BE5 		ldr	r3, [fp, #-32]
 5942 004c 142093E5 		ldr	r2, [r3, #20]
 5943 0050 24301BE5 		ldr	r3, [fp, #-36]
 5944 0054 030052E1 		cmp	r2, r3
 5945 0058 0100008A 		bhi	.L375
 5946              		.loc 1 3149 5 discriminator 3
 5947 005c 0230E0E3 		mvn	r3, #2
 5948              		.loc 1 3149 5
 5949 0060 4A0100EA 		b	.L373
 5950              	.L375:
 5951              		.loc 1 3149 5 discriminator 4
 5952 0064 24301BE5 		ldr	r3, [fp, #-36]
 5953 0068 8322A0E1 		lsl	r2, r3, #5
 5954 006c 20301BE5 		ldr	r3, [fp, #-32]
 5955 0070 0C3093E5 		ldr	r3, [r3, #12]
 5956 0074 033082E0 		add	r3, r2, r3
 5957 0078 0C300BE5 		str	r3, [fp, #-12]
 5958 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5959 0080 0300A0E1 		mov	r0, r3
 5960 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5961 0088 14000BE5 		str	r0, [fp, #-20]
 5962              		.loc 1 3149 5 discriminator 1
 5963 008c 14301BE5 		ldr	r3, [fp, #-20]
 5964 0090 FF3803E2 		and	r3, r3, #16711680
 5965 0094 020853E3 		cmp	r3, #131072
 5966 0098 0100001A 		bne	.L376
 5967              		.loc 1 3149 5 discriminator 5
 5968 009c 0830E0E3 		mvn	r3, #8
 5969              		.loc 1 3149 5
 5970 00a0 3A0100EA 		b	.L373
 5971              	.L376:
 5972              		.loc 1 3149 5 discriminator 6
 5973 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5974 00a8 233CA0E1 		lsr	r3, r3, #24
 5975 00ac 030053E3 		cmp	r3, #3
 5976 00b0 3F00000A 		beq	.L377
 5977              		.loc 1 3149 5 discriminator 7
 5978 00b4 0130E0E3 		mvn	r3, #1
 5979              		.loc 1 3149 5
 5980 00b8 340100EA 		b	.L373
 5981              	.L374:
 5982              		.loc 1 3149 5 discriminator 2
 5983 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5984 00c0 2324A0E1 		lsr	r2, r3, #8
 5985 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5986 00c8 143093E5 		ldr	r3, [r3, #20]
 5987 00cc 030052E1 		cmp	r2, r3
 5988 00d0 0100003A 		bcc	.L378
 5989              		.loc 1 3149 5 discriminator 8
 5990 00d4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 162


 5991              		.loc 1 3149 5
 5992 00d8 2C0100EA 		b	.L373
 5993              	.L378:
 5994              		.loc 1 3149 5 discriminator 9
 5995 00dc 24301BE5 		ldr	r3, [fp, #-36]
 5996 00e0 2334A0E1 		lsr	r3, r3, #8
 5997 00e4 8322A0E1 		lsl	r2, r3, #5
 5998 00e8 20301BE5 		ldr	r3, [fp, #-32]
 5999 00ec 0C3093E5 		ldr	r3, [r3, #12]
 6000 00f0 033082E0 		add	r3, r2, r3
 6001 00f4 0C300BE5 		str	r3, [fp, #-12]
 6002 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 6003 00fc 0300A0E1 		mov	r0, r3
 6004 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6005 0104 14000BE5 		str	r0, [fp, #-20]
 6006              		.loc 1 3149 5 discriminator 1
 6007 0108 14301BE5 		ldr	r3, [fp, #-20]
 6008 010c FF3803E2 		and	r3, r3, #16711680
 6009 0110 020853E3 		cmp	r3, #131072
 6010 0114 0100001A 		bne	.L379
 6011              		.loc 1 3149 5 discriminator 10
 6012 0118 0830E0E3 		mvn	r3, #8
 6013              		.loc 1 3149 5
 6014 011c 1B0100EA 		b	.L373
 6015              	.L379:
 6016              		.loc 1 3149 5 discriminator 11
 6017 0120 14301BE5 		ldr	r3, [fp, #-20]
 6018 0124 233CA0E1 		lsr	r3, r3, #24
 6019 0128 030053E3 		cmp	r3, #3
 6020 012c 0100000A 		beq	.L380
 6021              		.loc 1 3149 5 discriminator 12
 6022 0130 0130E0E3 		mvn	r3, #1
 6023              		.loc 1 3149 5
 6024 0134 150100EA 		b	.L373
 6025              	.L380:
 6026              		.loc 1 3149 5 discriminator 13
 6027 0138 24301BE5 		ldr	r3, [fp, #-36]
 6028 013c 7F2003E2 		and	r2, r3, #127
 6029 0140 0C301BE5 		ldr	r3, [fp, #-12]
 6030 0144 143093E5 		ldr	r3, [r3, #20]
 6031 0148 030052E1 		cmp	r2, r3
 6032 014c 0100003A 		bcc	.L381
 6033              		.loc 1 3149 5 discriminator 14
 6034 0150 0230E0E3 		mvn	r3, #2
 6035              		.loc 1 3149 5
 6036 0154 0D0100EA 		b	.L373
 6037              	.L381:
 6038              		.loc 1 3149 5 discriminator 15
 6039 0158 24301BE5 		ldr	r3, [fp, #-36]
 6040 015c 7F3003E2 		and	r3, r3, #127
 6041 0160 8322A0E1 		lsl	r2, r3, #5
 6042 0164 0C301BE5 		ldr	r3, [fp, #-12]
 6043 0168 0C3093E5 		ldr	r3, [r3, #12]
 6044 016c 033082E0 		add	r3, r2, r3
 6045 0170 0C300BE5 		str	r3, [fp, #-12]
 6046 0174 0C301BE5 		ldr	r3, [fp, #-12]
 6047 0178 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 163


 6048 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6049 0180 14000BE5 		str	r0, [fp, #-20]
 6050              		.loc 1 3149 5 discriminator 1
 6051 0184 14301BE5 		ldr	r3, [fp, #-20]
 6052 0188 FF3803E2 		and	r3, r3, #16711680
 6053 018c 020853E3 		cmp	r3, #131072
 6054 0190 0100001A 		bne	.L382
 6055              		.loc 1 3149 5 discriminator 16
 6056 0194 0830E0E3 		mvn	r3, #8
 6057              		.loc 1 3149 5
 6058 0198 FC0000EA 		b	.L373
 6059              	.L382:
 6060              		.loc 1 3149 5 discriminator 17
 6061 019c 14301BE5 		ldr	r3, [fp, #-20]
 6062 01a0 233CA0E1 		lsr	r3, r3, #24
 6063 01a4 030053E3 		cmp	r3, #3
 6064 01a8 0100000A 		beq	.L377
 6065              		.loc 1 3149 5 discriminator 18
 6066 01ac 0130E0E3 		mvn	r3, #1
 6067              		.loc 1 3149 5
 6068 01b0 F60000EA 		b	.L373
 6069              	.L377:
3150:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3151:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6070              		.loc 1 3151 5 is_stmt 1
 6071 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6072 01b8 803003E2 		and	r3, r3, #128
 6073 01bc 000053E3 		cmp	r3, #0
 6074 01c0 1C00001A 		bne	.L383
 6075              		.loc 1 3151 5 is_stmt 0 discriminator 1
 6076 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6077 01c8 142093E5 		ldr	r2, [r3, #20]
 6078 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6079 01d0 030052E1 		cmp	r2, r3
 6080 01d4 0100008A 		bhi	.L384
 6081              		.loc 1 3151 5 discriminator 3
 6082 01d8 0230E0E3 		mvn	r3, #2
 6083              		.loc 1 3151 5
 6084 01dc EB0000EA 		b	.L373
 6085              	.L384:
 6086              		.loc 1 3151 5 discriminator 4
 6087 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6088 01e4 8322A0E1 		lsl	r2, r3, #5
 6089 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6090 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6091 01f0 033082E0 		add	r3, r2, r3
 6092 01f4 08300BE5 		str	r3, [fp, #-8]
 6093 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6094 01fc 0300A0E1 		mov	r0, r3
 6095 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6096 0204 14000BE5 		str	r0, [fp, #-20]
 6097              		.loc 1 3151 5 discriminator 1
 6098 0208 14301BE5 		ldr	r3, [fp, #-20]
 6099 020c FF3803E2 		and	r3, r3, #16711680
 6100 0210 020853E3 		cmp	r3, #131072
 6101 0214 0100001A 		bne	.L385
 6102              		.loc 1 3151 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 164


 6103 0218 0830E0E3 		mvn	r3, #8
 6104              		.loc 1 3151 5
 6105 021c DB0000EA 		b	.L373
 6106              	.L385:
 6107              		.loc 1 3151 5 discriminator 6
 6108 0220 14301BE5 		ldr	r3, [fp, #-20]
 6109 0224 233CA0E1 		lsr	r3, r3, #24
 6110 0228 020053E3 		cmp	r3, #2
 6111 022c 3F00000A 		beq	.L386
 6112              		.loc 1 3151 5 discriminator 7
 6113 0230 0130E0E3 		mvn	r3, #1
 6114              		.loc 1 3151 5
 6115 0234 D50000EA 		b	.L373
 6116              	.L383:
 6117              		.loc 1 3151 5 discriminator 2
 6118 0238 28301BE5 		ldr	r3, [fp, #-40]
 6119 023c 2324A0E1 		lsr	r2, r3, #8
 6120 0240 20301BE5 		ldr	r3, [fp, #-32]
 6121 0244 143093E5 		ldr	r3, [r3, #20]
 6122 0248 030052E1 		cmp	r2, r3
 6123 024c 0100003A 		bcc	.L387
 6124              		.loc 1 3151 5 discriminator 8
 6125 0250 0230E0E3 		mvn	r3, #2
 6126              		.loc 1 3151 5
 6127 0254 CD0000EA 		b	.L373
 6128              	.L387:
 6129              		.loc 1 3151 5 discriminator 9
 6130 0258 28301BE5 		ldr	r3, [fp, #-40]
 6131 025c 2334A0E1 		lsr	r3, r3, #8
 6132 0260 8322A0E1 		lsl	r2, r3, #5
 6133 0264 20301BE5 		ldr	r3, [fp, #-32]
 6134 0268 0C3093E5 		ldr	r3, [r3, #12]
 6135 026c 033082E0 		add	r3, r2, r3
 6136 0270 08300BE5 		str	r3, [fp, #-8]
 6137 0274 08301BE5 		ldr	r3, [fp, #-8]
 6138 0278 0300A0E1 		mov	r0, r3
 6139 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6140 0280 14000BE5 		str	r0, [fp, #-20]
 6141              		.loc 1 3151 5 discriminator 1
 6142 0284 14301BE5 		ldr	r3, [fp, #-20]
 6143 0288 FF3803E2 		and	r3, r3, #16711680
 6144 028c 020853E3 		cmp	r3, #131072
 6145 0290 0100001A 		bne	.L388
 6146              		.loc 1 3151 5 discriminator 10
 6147 0294 0830E0E3 		mvn	r3, #8
 6148              		.loc 1 3151 5
 6149 0298 BC0000EA 		b	.L373
 6150              	.L388:
 6151              		.loc 1 3151 5 discriminator 11
 6152 029c 14301BE5 		ldr	r3, [fp, #-20]
 6153 02a0 233CA0E1 		lsr	r3, r3, #24
 6154 02a4 030053E3 		cmp	r3, #3
 6155 02a8 0100000A 		beq	.L389
 6156              		.loc 1 3151 5 discriminator 12
 6157 02ac 0130E0E3 		mvn	r3, #1
 6158              		.loc 1 3151 5
 6159 02b0 B60000EA 		b	.L373
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 165


 6160              	.L389:
 6161              		.loc 1 3151 5 discriminator 13
 6162 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6163 02b8 7F2003E2 		and	r2, r3, #127
 6164 02bc 08301BE5 		ldr	r3, [fp, #-8]
 6165 02c0 143093E5 		ldr	r3, [r3, #20]
 6166 02c4 030052E1 		cmp	r2, r3
 6167 02c8 0100003A 		bcc	.L390
 6168              		.loc 1 3151 5 discriminator 14
 6169 02cc 0230E0E3 		mvn	r3, #2
 6170              		.loc 1 3151 5
 6171 02d0 AE0000EA 		b	.L373
 6172              	.L390:
 6173              		.loc 1 3151 5 discriminator 15
 6174 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6175 02d8 7F3003E2 		and	r3, r3, #127
 6176 02dc 8322A0E1 		lsl	r2, r3, #5
 6177 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6178 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6179 02e8 033082E0 		add	r3, r2, r3
 6180 02ec 08300BE5 		str	r3, [fp, #-8]
 6181 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6182 02f4 0300A0E1 		mov	r0, r3
 6183 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6184 02fc 14000BE5 		str	r0, [fp, #-20]
 6185              		.loc 1 3151 5 discriminator 1
 6186 0300 14301BE5 		ldr	r3, [fp, #-20]
 6187 0304 FF3803E2 		and	r3, r3, #16711680
 6188 0308 020853E3 		cmp	r3, #131072
 6189 030c 0100001A 		bne	.L391
 6190              		.loc 1 3151 5 discriminator 16
 6191 0310 0830E0E3 		mvn	r3, #8
 6192              		.loc 1 3151 5
 6193 0314 9D0000EA 		b	.L373
 6194              	.L391:
 6195              		.loc 1 3151 5 discriminator 17
 6196 0318 14301BE5 		ldr	r3, [fp, #-20]
 6197 031c 233CA0E1 		lsr	r3, r3, #24
 6198 0320 020053E3 		cmp	r3, #2
 6199 0324 0100000A 		beq	.L386
 6200              		.loc 1 3151 5 discriminator 18
 6201 0328 0130E0E3 		mvn	r3, #1
 6202              		.loc 1 3151 5
 6203 032c 970000EA 		b	.L373
 6204              	.L386:
3152:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3153:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3154:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6205              		.loc 1 3154 5 is_stmt 1
 6206 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6207 0334 083093E5 		ldr	r3, [r3, #8]
 6208 0338 013003E2 		and	r3, r3, #1
 6209 033c 000053E3 		cmp	r3, #0
 6210 0340 0100001A 		bne	.L392
 6211              		.loc 1 3154 5 is_stmt 0 discriminator 1
 6212 0344 0630E0E3 		mvn	r3, #6
 6213              		.loc 1 3154 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 166


 6214 0348 900000EA 		b	.L373
 6215              	.L392:
3155:../../Source/Kernel/rme_kernel.c ****     
3156:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
3157:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6216              		.loc 1 3157 7 is_stmt 1
 6217 034c 0C309BE5 		ldr	r3, [fp, #12]
 6218 0350 000053E3 		cmp	r3, #0
 6219 0354 0400000A 		beq	.L393
3158:../../Source/Kernel/rme_kernel.c ****     {
3159:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3160:../../Source/Kernel/rme_kernel.c **** 
3161:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6220              		.loc 1 3161 19
 6221 0358 0420A0E3 		mov	r2, #4
 6222 035c 14309BE5 		ldr	r3, [fp, #20]
 6223 0360 1233A0E1 		lsl	r3, r2, r3
 6224 0364 10300BE5 		str	r3, [fp, #-16]
 6225 0368 030000EA 		b	.L394
 6226              	.L393:
3162:../../Source/Kernel/rme_kernel.c ****     }
3163:../../Source/Kernel/rme_kernel.c ****     else
3164:../../Source/Kernel/rme_kernel.c ****     {
3165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3166:../../Source/Kernel/rme_kernel.c **** 
3167:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6227              		.loc 1 3167 19
 6228 036c 0420A0E3 		mov	r2, #4
 6229 0370 14309BE5 		ldr	r3, [fp, #20]
 6230 0374 1233A0E1 		lsl	r3, r2, r3
 6231 0378 10300BE5 		str	r3, [fp, #-16]
 6232              	.L394:
3168:../../Source/Kernel/rme_kernel.c ****     }
3169:../../Source/Kernel/rme_kernel.c ****     
3170:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3171:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6233              		.loc 1 3171 5
 6234 037c 08301BE5 		ldr	r3, [fp, #-8]
 6235 0380 083093E5 		ldr	r3, [r3, #8]
 6236 0384 023003E2 		and	r3, r3, #2
 6237 0388 000053E3 		cmp	r3, #0
 6238 038c 0100001A 		bne	.L395
 6239              		.loc 1 3171 5 is_stmt 0 discriminator 1
 6240 0390 0630E0E3 		mvn	r3, #6
 6241              		.loc 1 3171 5
 6242 0394 7D0000EA 		b	.L373
 6243              	.L395:
 6244              		.loc 1 3171 5 discriminator 2
 6245 0398 08301BE5 		ldr	r3, [fp, #-8]
 6246 039c 143093E5 		ldr	r3, [r3, #20]
 6247 03a0 04209BE5 		ldr	r2, [fp, #4]
 6248 03a4 033082E0 		add	r3, r2, r3
 6249 03a8 18300BE5 		str	r3, [fp, #-24]
 6250 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6251 03b0 04309BE5 		ldr	r3, [fp, #4]
 6252 03b4 030052E1 		cmp	r2, r3
 6253 03b8 0100002A 		bcs	.L396
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 167


 6254              		.loc 1 3171 5 discriminator 3
 6255 03bc 0630E0E3 		mvn	r3, #6
 6256              		.loc 1 3171 5
 6257 03c0 720000EA 		b	.L373
 6258              	.L396:
 6259              		.loc 1 3171 5 discriminator 4
 6260 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6261 03c8 143093E5 		ldr	r3, [r3, #20]
 6262 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6263 03d0 030052E1 		cmp	r2, r3
 6264 03d4 0100002A 		bcs	.L397
 6265              		.loc 1 3171 5 discriminator 5
 6266 03d8 0630E0E3 		mvn	r3, #6
 6267              		.loc 1 3171 5
 6268 03dc 6B0000EA 		b	.L373
 6269              	.L397:
 6270              		.loc 1 3171 5 discriminator 6
 6271 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6272 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6273 03e8 033082E0 		add	r3, r2, r3
 6274 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6275 03f0 030052E1 		cmp	r2, r3
 6276 03f4 0100009A 		bls	.L398
 6277              		.loc 1 3171 5 discriminator 7
 6278 03f8 0630E0E3 		mvn	r3, #6
 6279              		.loc 1 3171 5
 6280 03fc 630000EA 		b	.L373
 6281              	.L398:
 6282              		.loc 1 3171 5 discriminator 8
 6283 0400 08301BE5 		ldr	r3, [fp, #-8]
 6284 0404 182093E5 		ldr	r2, [r3, #24]
 6285 0408 18101BE5 		ldr	r1, [fp, #-24]
 6286 040c 10301BE5 		ldr	r3, [fp, #-16]
 6287 0410 033081E0 		add	r3, r1, r3
 6288 0414 013043E2 		sub	r3, r3, #1
 6289 0418 030052E1 		cmp	r2, r3
 6290 041c 0100002A 		bcs	.L399
 6291              		.loc 1 3171 5 discriminator 9
 6292 0420 0630E0E3 		mvn	r3, #6
 6293              		.loc 1 3171 5
 6294 0424 590000EA 		b	.L373
 6295              	.L399:
3172:../../Source/Kernel/rme_kernel.c **** 
3173:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3174:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6296              		.loc 1 3174 8 is_stmt 1
 6297 0428 18301BE5 		ldr	r3, [fp, #-24]
 6298 042c 00308DE5 		str	r3, [sp]
 6299 0430 14309BE5 		ldr	r3, [fp, #20]
 6300 0434 10209BE5 		ldr	r2, [fp, #16]
 6301 0438 0C109BE5 		ldr	r1, [fp, #12]
 6302 043c 08009BE5 		ldr	r0, [fp, #8]
 6303 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3175:../../Source/Kernel/rme_kernel.c ****     {
3176:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3177:../../Source/Kernel/rme_kernel.c **** 
3178:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 168


3179:../../Source/Kernel/rme_kernel.c ****     }
3180:../../Source/Kernel/rme_kernel.c ****     else
3181:../../Source/Kernel/rme_kernel.c ****     {
3182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3183:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3184:../../Source/Kernel/rme_kernel.c ****     }
3185:../../Source/Kernel/rme_kernel.c **** 
3186:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3187:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6304              		.loc 1 3187 14
 6305 0444 10209BE5 		ldr	r2, [fp, #16]
 6306 0448 14309BE5 		ldr	r3, [fp, #20]
 6307 044c 033082E0 		add	r3, r2, r3
 6308 0450 203063E2 		rsb	r3, r3, #32
 6309 0454 0020E0E3 		mvn	r2, #0
 6310 0458 3223A0E1 		lsr	r2, r2, r3
 6311              		.loc 1 3187 13
 6312 045c 08309BE5 		ldr	r3, [fp, #8]
 6313 0460 023003E0 		and	r3, r3, r2
 6314              		.loc 1 3187 7
 6315 0464 000053E3 		cmp	r3, #0
 6316 0468 0100000A 		beq	.L400
3188:../../Source/Kernel/rme_kernel.c ****     {
3189:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3190:../../Source/Kernel/rme_kernel.c **** 
3191:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6317              		.loc 1 3191 16
 6318 046c 6630E0E3 		mvn	r3, #102
 6319 0470 460000EA 		b	.L373
 6320              	.L400:
3192:../../Source/Kernel/rme_kernel.c ****     }
3193:../../Source/Kernel/rme_kernel.c ****     else
3194:../../Source/Kernel/rme_kernel.c ****     {
3195:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3196:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3197:../../Source/Kernel/rme_kernel.c ****     }
3198:../../Source/Kernel/rme_kernel.c **** 
3199:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3200:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6321              		.loc 1 3200 5
 6322 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6323 0478 142093E5 		ldr	r2, [r3, #20]
 6324 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6325 0480 030052E1 		cmp	r2, r3
 6326 0484 0100008A 		bhi	.L401
 6327              		.loc 1 3200 5 is_stmt 0 discriminator 1
 6328 0488 0230E0E3 		mvn	r3, #2
 6329              		.loc 1 3200 5
 6330 048c 3F0000EA 		b	.L373
 6331              	.L401:
 6332              		.loc 1 3200 5 discriminator 2
 6333 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6334 0494 8322A0E1 		lsl	r2, r3, #5
 6335 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6336 049c 0C3093E5 		ldr	r3, [r3, #12]
 6337 04a0 033082E0 		add	r3, r2, r3
 6338 04a4 1C300BE5 		str	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 169


3201:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3202:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6339              		.loc 1 3202 5 is_stmt 1
 6340 04a8 1C301BE5 		ldr	r3, [fp, #-28]
 6341 04ac 0128A0E3 		mov	r2, #65536
 6342 04b0 0010A0E3 		mov	r1, #0
 6343 04b4 0300A0E1 		mov	r0, r3
 6344 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6345 04bc 0030A0E1 		mov	r3, r0
 6346              		.loc 1 3202 5 is_stmt 0 discriminator 1
 6347 04c0 000053E3 		cmp	r3, #0
 6348 04c4 0100001A 		bne	.L402
 6349 04c8 0430E0E3 		mvn	r3, #4
 6350              		.loc 1 3202 5
 6351 04cc 2F0000EA 		b	.L373
 6352              	.L402:
 6353              		.loc 1 3202 5 discriminator 2
 6354 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6355 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6356 04d8 002093E5 		ldr	r2, [r3]
 6357 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6358 04e0 102083E5 		str	r2, [r3, #16]
3203:../../Source/Kernel/rme_kernel.c **** 
3204:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3205:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6359              		.loc 1 3205 8 is_stmt 1
 6360 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6361 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6362 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6363 04f0 0030A0E1 		mov	r3, r0
 6364              		.loc 1 3205 7 discriminator 1
 6365 04f4 000053E3 		cmp	r3, #0
 6366 04f8 0500000A 		beq	.L403
3206:../../Source/Kernel/rme_kernel.c ****     {
3207:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3208:../../Source/Kernel/rme_kernel.c **** 
3209:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6367              		.loc 1 3209 9
 6368 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6369 0500 0010A0E3 		mov	r1, #0
 6370 0504 0300A0E1 		mov	r0, r3
 6371 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3210:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6372              		.loc 1 3210 16
 6373 050c 0330E0E3 		mvn	r3, #3
 6374 0510 1E0000EA 		b	.L373
 6375              	.L403:
3211:../../Source/Kernel/rme_kernel.c ****     }
3212:../../Source/Kernel/rme_kernel.c ****     else
3213:../../Source/Kernel/rme_kernel.c ****     {
3214:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3215:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3216:../../Source/Kernel/rme_kernel.c ****     }
3217:../../Source/Kernel/rme_kernel.c ****     
3218:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3219:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6376              		.loc 1 3219 27
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 170


 6377 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6378 0518 0020A0E3 		mov	r2, #0
 6379 051c 042083E5 		str	r2, [r3, #4]
3220:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 6380              		.loc 1 3220 25
 6381 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6382 0524 18201BE5 		ldr	r2, [fp, #-24]
 6383 0528 0C2083E5 		str	r2, [r3, #12]
3221:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6384              		.loc 1 3221 23
 6385 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6386 0530 FF30A0E3 		mov	r3, #255
 6387 0534 F03F4FE3 		movt	r3, 65520
 6388 0538 083082E5 		str	r3, [r2, #8]
3222:../../Source/Kernel/rme_kernel.c ****     
3223:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3224:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6389              		.loc 1 3224 23
 6390 053c 08209BE5 		ldr	r2, [fp, #8]
 6391 0540 0C309BE5 		ldr	r3, [fp, #12]
 6392 0544 032082E1 		orr	r2, r2, r3
 6393              		.loc 1 3224 18
 6394 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6395 054c 182083E5 		str	r2, [r3, #24]
3225:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6396              		.loc 1 3225 20
 6397 0550 10309BE5 		ldr	r3, [fp, #16]
 6398 0554 0328A0E1 		lsl	r2, r3, #16
 6399 0558 14309BE5 		ldr	r3, [fp, #20]
 6400 055c 032082E1 		orr	r2, r2, r3
 6401              		.loc 1 3225 19
 6402 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6403 0564 142083E5 		str	r2, [r3, #20]
3226:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6404              		.loc 1 3226 18
 6405 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6406 056c 0020A0E3 		mov	r2, #0
 6407 0570 1C2083E5 		str	r2, [r3, #28]
3227:../../Source/Kernel/rme_kernel.c ****     
3228:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3229:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6408              		.loc 1 3229 8
 6409 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6410 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3230:../../Source/Kernel/rme_kernel.c ****     {
3231:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3232:../../Source/Kernel/rme_kernel.c **** 
3233:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3234:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3235:../../Source/Kernel/rme_kernel.c ****         
3236:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3237:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3238:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3239:../../Source/Kernel/rme_kernel.c ****     }
3240:../../Source/Kernel/rme_kernel.c ****     else
3241:../../Source/Kernel/rme_kernel.c ****     {
3242:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 171


3243:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3244:../../Source/Kernel/rme_kernel.c ****     }
3245:../../Source/Kernel/rme_kernel.c **** 
3246:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
3247:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6411              		.loc 1 3247 5
 6412 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6413 0580 0113A0E3 		mov	r1, #67108864
 6414 0584 0300A0E1 		mov	r0, r3
 6415 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3248:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3249:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3250:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3251:../../Source/Kernel/rme_kernel.c **** 
3252:../../Source/Kernel/rme_kernel.c ****     return 0;
 6416              		.loc 1 3252 12
 6417 058c 0030A0E3 		mov	r3, #0
 6418              	.L373:
3253:../../Source/Kernel/rme_kernel.c **** }
 6419              		.loc 1 3253 1
 6420 0590 0300A0E1 		mov	r0, r3
 6421 0594 04D04BE2 		sub	sp, fp, #4
 6422              		.cfi_def_cfa 13, 8
 6423              		@ sp needed
 6424 0598 0088BDE8 		pop	{fp, pc}
 6425              		.cfi_endproc
 6426              	.LFE32:
 6428              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6429              		.align	2
 6430              		.syntax unified
 6431              		.arm
 6433              	_RME_Pgt_Del:
 6434              	.LFB33:
3254:../../Source/Kernel/rme_kernel.c **** #endif
3255:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3256:../../Source/Kernel/rme_kernel.c **** 
3257:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3258:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3259:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3260:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3261:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3262:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3263:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3264:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3265:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3266:../../Source/Kernel/rme_kernel.c **** Output      : None.
3267:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3268:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3269:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3270:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3271:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3272:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3273:../../Source/Kernel/rme_kernel.c **** {
 6435              		.loc 1 3273 1
 6436              		.cfi_startproc
 6437              		@ args = 0, pretend = 0, frame = 40
 6438              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 172


 6439 0000 00482DE9 		push	{fp, lr}
 6440              		.cfi_def_cfa_offset 8
 6441              		.cfi_offset 11, -8
 6442              		.cfi_offset 14, -4
 6443 0004 04B08DE2 		add	fp, sp, #4
 6444              		.cfi_def_cfa 11, 4
 6445 0008 28D04DE2 		sub	sp, sp, #40
 6446 000c 20000BE5 		str	r0, [fp, #-32]
 6447 0010 24100BE5 		str	r1, [fp, #-36]
 6448 0014 28200BE5 		str	r2, [fp, #-40]
3274:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3275:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3276:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3277:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3278:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3279:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3280:../../Source/Kernel/rme_kernel.c ****     
3281:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3282:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6449              		.loc 1 3282 5
 6450 0018 24301BE5 		ldr	r3, [fp, #-36]
 6451 001c 803003E2 		and	r3, r3, #128
 6452 0020 000053E3 		cmp	r3, #0
 6453 0024 1C00001A 		bne	.L405
 6454              		.loc 1 3282 5 is_stmt 0 discriminator 1
 6455 0028 20301BE5 		ldr	r3, [fp, #-32]
 6456 002c 142093E5 		ldr	r2, [r3, #20]
 6457 0030 24301BE5 		ldr	r3, [fp, #-36]
 6458 0034 030052E1 		cmp	r2, r3
 6459 0038 0100008A 		bhi	.L406
 6460              		.loc 1 3282 5 discriminator 3
 6461 003c 0230E0E3 		mvn	r3, #2
 6462              		.loc 1 3282 5
 6463 0040 D20000EA 		b	.L407
 6464              	.L406:
 6465              		.loc 1 3282 5 discriminator 4
 6466 0044 24301BE5 		ldr	r3, [fp, #-36]
 6467 0048 8322A0E1 		lsl	r2, r3, #5
 6468 004c 20301BE5 		ldr	r3, [fp, #-32]
 6469 0050 0C3093E5 		ldr	r3, [r3, #12]
 6470 0054 033082E0 		add	r3, r2, r3
 6471 0058 08300BE5 		str	r3, [fp, #-8]
 6472 005c 08301BE5 		ldr	r3, [fp, #-8]
 6473 0060 0300A0E1 		mov	r0, r3
 6474 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6475 0068 10000BE5 		str	r0, [fp, #-16]
 6476              		.loc 1 3282 5 discriminator 1
 6477 006c 10301BE5 		ldr	r3, [fp, #-16]
 6478 0070 FF3803E2 		and	r3, r3, #16711680
 6479 0074 020853E3 		cmp	r3, #131072
 6480 0078 0100001A 		bne	.L408
 6481              		.loc 1 3282 5 discriminator 5
 6482 007c 0830E0E3 		mvn	r3, #8
 6483              		.loc 1 3282 5
 6484 0080 C20000EA 		b	.L407
 6485              	.L408:
 6486              		.loc 1 3282 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 173


 6487 0084 10301BE5 		ldr	r3, [fp, #-16]
 6488 0088 233CA0E1 		lsr	r3, r3, #24
 6489 008c 030053E3 		cmp	r3, #3
 6490 0090 3F00000A 		beq	.L409
 6491              		.loc 1 3282 5 discriminator 7
 6492 0094 0130E0E3 		mvn	r3, #1
 6493              		.loc 1 3282 5
 6494 0098 BC0000EA 		b	.L407
 6495              	.L405:
 6496              		.loc 1 3282 5 discriminator 2
 6497 009c 24301BE5 		ldr	r3, [fp, #-36]
 6498 00a0 2324A0E1 		lsr	r2, r3, #8
 6499 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6500 00a8 143093E5 		ldr	r3, [r3, #20]
 6501 00ac 030052E1 		cmp	r2, r3
 6502 00b0 0100003A 		bcc	.L410
 6503              		.loc 1 3282 5 discriminator 8
 6504 00b4 0230E0E3 		mvn	r3, #2
 6505              		.loc 1 3282 5
 6506 00b8 B40000EA 		b	.L407
 6507              	.L410:
 6508              		.loc 1 3282 5 discriminator 9
 6509 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6510 00c0 2334A0E1 		lsr	r3, r3, #8
 6511 00c4 8322A0E1 		lsl	r2, r3, #5
 6512 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6513 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6514 00d0 033082E0 		add	r3, r2, r3
 6515 00d4 08300BE5 		str	r3, [fp, #-8]
 6516 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6517 00dc 0300A0E1 		mov	r0, r3
 6518 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6519 00e4 10000BE5 		str	r0, [fp, #-16]
 6520              		.loc 1 3282 5 discriminator 1
 6521 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6522 00ec FF3803E2 		and	r3, r3, #16711680
 6523 00f0 020853E3 		cmp	r3, #131072
 6524 00f4 0100001A 		bne	.L411
 6525              		.loc 1 3282 5 discriminator 10
 6526 00f8 0830E0E3 		mvn	r3, #8
 6527              		.loc 1 3282 5
 6528 00fc A30000EA 		b	.L407
 6529              	.L411:
 6530              		.loc 1 3282 5 discriminator 11
 6531 0100 10301BE5 		ldr	r3, [fp, #-16]
 6532 0104 233CA0E1 		lsr	r3, r3, #24
 6533 0108 030053E3 		cmp	r3, #3
 6534 010c 0100000A 		beq	.L412
 6535              		.loc 1 3282 5 discriminator 12
 6536 0110 0130E0E3 		mvn	r3, #1
 6537              		.loc 1 3282 5
 6538 0114 9D0000EA 		b	.L407
 6539              	.L412:
 6540              		.loc 1 3282 5 discriminator 13
 6541 0118 24301BE5 		ldr	r3, [fp, #-36]
 6542 011c 7F2003E2 		and	r2, r3, #127
 6543 0120 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 174


 6544 0124 143093E5 		ldr	r3, [r3, #20]
 6545 0128 030052E1 		cmp	r2, r3
 6546 012c 0100003A 		bcc	.L413
 6547              		.loc 1 3282 5 discriminator 14
 6548 0130 0230E0E3 		mvn	r3, #2
 6549              		.loc 1 3282 5
 6550 0134 950000EA 		b	.L407
 6551              	.L413:
 6552              		.loc 1 3282 5 discriminator 15
 6553 0138 24301BE5 		ldr	r3, [fp, #-36]
 6554 013c 7F3003E2 		and	r3, r3, #127
 6555 0140 8322A0E1 		lsl	r2, r3, #5
 6556 0144 08301BE5 		ldr	r3, [fp, #-8]
 6557 0148 0C3093E5 		ldr	r3, [r3, #12]
 6558 014c 033082E0 		add	r3, r2, r3
 6559 0150 08300BE5 		str	r3, [fp, #-8]
 6560 0154 08301BE5 		ldr	r3, [fp, #-8]
 6561 0158 0300A0E1 		mov	r0, r3
 6562 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6563 0160 10000BE5 		str	r0, [fp, #-16]
 6564              		.loc 1 3282 5 discriminator 1
 6565 0164 10301BE5 		ldr	r3, [fp, #-16]
 6566 0168 FF3803E2 		and	r3, r3, #16711680
 6567 016c 020853E3 		cmp	r3, #131072
 6568 0170 0100001A 		bne	.L414
 6569              		.loc 1 3282 5 discriminator 16
 6570 0174 0830E0E3 		mvn	r3, #8
 6571              		.loc 1 3282 5
 6572 0178 840000EA 		b	.L407
 6573              	.L414:
 6574              		.loc 1 3282 5 discriminator 17
 6575 017c 10301BE5 		ldr	r3, [fp, #-16]
 6576 0180 233CA0E1 		lsr	r3, r3, #24
 6577 0184 030053E3 		cmp	r3, #3
 6578 0188 0100000A 		beq	.L409
 6579              		.loc 1 3282 5 discriminator 18
 6580 018c 0130E0E3 		mvn	r3, #1
 6581              		.loc 1 3282 5
 6582 0190 7E0000EA 		b	.L407
 6583              	.L409:
3283:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3284:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3285:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6584              		.loc 1 3285 5 is_stmt 1
 6585 0194 08301BE5 		ldr	r3, [fp, #-8]
 6586 0198 083093E5 		ldr	r3, [r3, #8]
 6587 019c 023003E2 		and	r3, r3, #2
 6588 01a0 000053E3 		cmp	r3, #0
 6589 01a4 0100001A 		bne	.L415
 6590              		.loc 1 3285 5 is_stmt 0 discriminator 1
 6591 01a8 0630E0E3 		mvn	r3, #6
 6592              		.loc 1 3285 5
 6593 01ac 770000EA 		b	.L407
 6594              	.L415:
3286:../../Source/Kernel/rme_kernel.c ****     
3287:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3288:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 175


 6595              		.loc 1 3288 5 is_stmt 1
 6596 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6597 01b4 142093E5 		ldr	r2, [r3, #20]
 6598 01b8 28301BE5 		ldr	r3, [fp, #-40]
 6599 01bc 030052E1 		cmp	r2, r3
 6600 01c0 0100008A 		bhi	.L416
 6601              		.loc 1 3288 5 is_stmt 0 discriminator 1
 6602 01c4 0230E0E3 		mvn	r3, #2
 6603              		.loc 1 3288 5
 6604 01c8 700000EA 		b	.L407
 6605              	.L416:
 6606              		.loc 1 3288 5 discriminator 2
 6607 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6608 01d0 8322A0E1 		lsl	r2, r3, #5
 6609 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6610 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6611 01dc 033082E0 		add	r3, r2, r3
 6612 01e0 14300BE5 		str	r3, [fp, #-20]
3289:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3290:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6613              		.loc 1 3290 5 is_stmt 1
 6614 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6615 01e8 0300A0E1 		mov	r0, r3
 6616 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6617 01f0 10000BE5 		str	r0, [fp, #-16]
 6618              		.loc 1 3290 5 is_stmt 0 discriminator 1
 6619 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6620 01f8 FF3803E2 		and	r3, r3, #16711680
 6621 01fc 020853E3 		cmp	r3, #131072
 6622 0200 0100000A 		beq	.L417
 6623 0204 0830E0E3 		mvn	r3, #8
 6624              		.loc 1 3290 5
 6625 0208 600000EA 		b	.L407
 6626              	.L417:
 6627              		.loc 1 3290 5 discriminator 2
 6628 020c 10301BE5 		ldr	r3, [fp, #-16]
 6629 0210 233CA0E1 		lsr	r3, r3, #24
 6630 0214 040053E3 		cmp	r3, #4
 6631 0218 0100000A 		beq	.L418
 6632              		.loc 1 3290 5 discriminator 3
 6633 021c 0130E0E3 		mvn	r3, #1
 6634              		.loc 1 3290 5
 6635 0220 5A0000EA 		b	.L407
 6636              	.L418:
 6637              		.loc 1 3290 5 discriminator 4
 6638 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6639 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6640 022c 002093E5 		ldr	r2, [r3]
 6641 0230 14301BE5 		ldr	r3, [fp, #-20]
 6642 0234 103093E5 		ldr	r3, [r3, #16]
 6643 0238 0310A0E1 		mov	r1, r3
 6644 023c 0200A0E1 		mov	r0, r2
 6645 0240 FEFFFFEB 		bl	_RME_Diff
 6646 0244 0030A0E1 		mov	r3, r0
 6647              		.loc 1 3290 5 discriminator 1
 6648 0248 0A0053E3 		cmp	r3, #10
 6649 024c 0100008A 		bhi	.L419
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 176


 6650              		.loc 1 3290 5 discriminator 5
 6651 0250 0730E0E3 		mvn	r3, #7
 6652              		.loc 1 3290 5
 6653 0254 4D0000EA 		b	.L407
 6654              	.L419:
 6655              		.loc 1 3290 5 discriminator 6
 6656 0258 14301BE5 		ldr	r3, [fp, #-20]
 6657 025c 043093E5 		ldr	r3, [r3, #4]
 6658 0260 000053E3 		cmp	r3, #0
 6659 0264 0B00000A 		beq	.L420
 6660              		.loc 1 3290 5 discriminator 7
 6661 0268 10301BE5 		ldr	r3, [fp, #-16]
 6662 026c 7330FFE6 		uxth	r3, r3
 6663 0270 000053E3 		cmp	r3, #0
 6664 0274 0500001A 		bne	.L421
 6665              		.loc 1 3290 5 discriminator 9
 6666 0278 14001BE5 		ldr	r0, [fp, #-20]
 6667 027c 10301BE5 		ldr	r3, [fp, #-16]
 6668 0280 FF38C3E3 		bic	r3, r3, #16711680
 6669 0284 0320A0E1 		mov	r2, r3
 6670 0288 10101BE5 		ldr	r1, [fp, #-16]
 6671 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6672              	.L421:
 6673              		.loc 1 3290 5 discriminator 11
 6674 0290 0530E0E3 		mvn	r3, #5
 6675              		.loc 1 3290 5
 6676 0294 3D0000EA 		b	.L407
 6677              	.L420:
 6678              		.loc 1 3290 5 discriminator 8
 6679 0298 10301BE5 		ldr	r3, [fp, #-16]
 6680 029c 7330FFE6 		uxth	r3, r3
 6681 02a0 000053E3 		cmp	r3, #0
 6682 02a4 0800000A 		beq	.L422
 6683              		.loc 1 3290 5 discriminator 12
 6684 02a8 003000E3 		movw	r3, #:lower16:.LC6
 6685 02ac 003040E3 		movt	r3, #:upper16:.LC6
 6686 02b0 002000E3 		movw	r2, #:lower16:.LC7
 6687 02b4 002040E3 		movt	r2, #:upper16:.LC7
 6688 02b8 DA1C00E3 		movw	r1, #3290
 6689 02bc 000000E3 		movw	r0, #:lower16:.LC8
 6690 02c0 000040E3 		movt	r0, #:upper16:.LC8
 6691 02c4 FEFFFFEB 		bl	RME_Log
 6692              	.L423:
 6693              		.loc 1 3290 5
 6694 02c8 FEFFFFEA 		b	.L423
 6695              	.L422:
3291:../../Source/Kernel/rme_kernel.c ****     
3292:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3293:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3294:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3295:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3296:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3297:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6696              		.loc 1 3297 8 is_stmt 1
 6697 02cc 14001BE5 		ldr	r0, [fp, #-20]
 6698 02d0 FEFFFFEB 		bl	__RME_Pgt_Del_Check
3298:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 177


3299:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3300:../../Source/Kernel/rme_kernel.c **** 
3301:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3302:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3303:../../Source/Kernel/rme_kernel.c ****     }
3304:../../Source/Kernel/rme_kernel.c ****     else
3305:../../Source/Kernel/rme_kernel.c ****     {
3306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3307:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3308:../../Source/Kernel/rme_kernel.c ****     }
3309:../../Source/Kernel/rme_kernel.c ****     
3310:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3311:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6699              		.loc 1 3311 11
 6700 02d4 14301BE5 		ldr	r3, [fp, #-20]
 6701 02d8 0C3093E5 		ldr	r3, [r3, #12]
 6702 02dc 18300BE5 		str	r3, [fp, #-24]
3312:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6703              		.loc 1 3312 17
 6704 02e0 14301BE5 		ldr	r3, [fp, #-20]
 6705 02e4 183093E5 		ldr	r3, [r3, #24]
 6706              		.loc 1 3312 24
 6707 02e8 013003E2 		and	r3, r3, #1
 6708              		.loc 1 3312 7
 6709 02ec 000053E3 		cmp	r3, #0
 6710 02f0 0600000A 		beq	.L424
3313:../../Source/Kernel/rme_kernel.c ****     {
3314:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3315:../../Source/Kernel/rme_kernel.c **** 
3316:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6711              		.loc 1 3316 20
 6712 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6713 02f8 143093E5 		ldr	r3, [r3, #20]
 6714 02fc 7330FFE6 		uxth	r3, r3
 6715              		.loc 1 3316 19
 6716 0300 0420A0E3 		mov	r2, #4
 6717 0304 1233A0E1 		lsl	r3, r2, r3
 6718 0308 0C300BE5 		str	r3, [fp, #-12]
 6719 030c 050000EA 		b	.L425
 6720              	.L424:
3317:../../Source/Kernel/rme_kernel.c ****     }
3318:../../Source/Kernel/rme_kernel.c ****     else
3319:../../Source/Kernel/rme_kernel.c ****     {
3320:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3321:../../Source/Kernel/rme_kernel.c **** 
3322:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6721              		.loc 1 3322 20
 6722 0310 14301BE5 		ldr	r3, [fp, #-20]
 6723 0314 143093E5 		ldr	r3, [r3, #20]
 6724 0318 7330FFE6 		uxth	r3, r3
 6725              		.loc 1 3322 19
 6726 031c 0420A0E3 		mov	r2, #4
 6727 0320 1233A0E1 		lsl	r3, r2, r3
 6728 0324 0C300BE5 		str	r3, [fp, #-12]
 6729              	.L425:
3323:../../Source/Kernel/rme_kernel.c ****     }
3324:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 178


3325:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3326:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6730              		.loc 1 3326 5
 6731 0328 14301BE5 		ldr	r3, [fp, #-20]
 6732 032c 0020A0E3 		mov	r2, #0
 6733 0330 10101BE5 		ldr	r1, [fp, #-16]
 6734 0334 0300A0E1 		mov	r0, r3
 6735 0338 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6736 033c 0030A0E1 		mov	r3, r0
 6737              		.loc 1 3326 5 is_stmt 0 discriminator 1
 6738 0340 000053E3 		cmp	r3, #0
 6739 0344 0100001A 		bne	.L426
 6740 0348 0030E0E3 		mvn	r3, #0
 6741              		.loc 1 3326 5
 6742 034c 0F0000EA 		b	.L407
 6743              	.L426:
3327:../../Source/Kernel/rme_kernel.c **** 
3328:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3329:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6744              		.loc 1 3329 5 is_stmt 1
 6745 0350 0C101BE5 		ldr	r1, [fp, #-12]
 6746 0354 18001BE5 		ldr	r0, [fp, #-24]
 6747 0358 FEFFFFEB 		bl	_RME_Kot_Erase
 6748 035c 0030A0E1 		mov	r3, r0
 6749              		.loc 1 3329 5 is_stmt 0 discriminator 1
 6750 0360 000053E3 		cmp	r3, #0
 6751 0364 0800000A 		beq	.L427
 6752 0368 003000E3 		movw	r3, #:lower16:.LC6
 6753 036c 003040E3 		movt	r3, #:upper16:.LC6
 6754 0370 002000E3 		movw	r2, #:lower16:.LC7
 6755 0374 002040E3 		movt	r2, #:upper16:.LC7
 6756 0378 011D00E3 		movw	r1, #3329
 6757 037c 000000E3 		movw	r0, #:lower16:.LC8
 6758 0380 000040E3 		movt	r0, #:upper16:.LC8
 6759 0384 FEFFFFEB 		bl	RME_Log
 6760              	.L428:
 6761              		.loc 1 3329 5
 6762 0388 FEFFFFEA 		b	.L428
 6763              	.L427:
3330:../../Source/Kernel/rme_kernel.c **** 
3331:../../Source/Kernel/rme_kernel.c ****     return 0;
 6764              		.loc 1 3331 12 is_stmt 1
 6765 038c 0030A0E3 		mov	r3, #0
 6766              	.L407:
3332:../../Source/Kernel/rme_kernel.c **** }
 6767              		.loc 1 3332 1
 6768 0390 0300A0E1 		mov	r0, r3
 6769 0394 04D04BE2 		sub	sp, fp, #4
 6770              		.cfi_def_cfa 13, 8
 6771              		@ sp needed
 6772 0398 0088BDE8 		pop	{fp, pc}
 6773              		.cfi_endproc
 6774              	.LFE33:
 6776              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6777              		.align	2
 6778              		.syntax unified
 6779              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 179


 6781              	_RME_Pgt_Add:
 6782              	.LFB34:
3333:../../Source/Kernel/rme_kernel.c **** #endif
3334:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
3335:../../Source/Kernel/rme_kernel.c **** 
3336:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3337:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3338:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3339:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3340:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3341:../../Source/Kernel/rme_kernel.c ****                                       directory.
3342:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3343:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3344:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3345:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3346:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3347:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3348:../../Source/Kernel/rme_kernel.c ****                                       directory.
3349:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3350:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3351:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3352:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3353:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3354:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3355:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3356:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3357:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3358:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3359:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3360:../../Source/Kernel/rme_kernel.c **** Output      : None.
3361:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3362:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3363:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3364:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3365:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3366:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3367:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3368:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3369:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3370:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3371:../../Source/Kernel/rme_kernel.c **** {
 6783              		.loc 1 3371 1
 6784              		.cfi_startproc
 6785              		@ args = 12, pretend = 0, frame = 48
 6786              		@ frame_needed = 1, uses_anonymous_args = 0
 6787 0000 00482DE9 		push	{fp, lr}
 6788              		.cfi_def_cfa_offset 8
 6789              		.cfi_offset 11, -8
 6790              		.cfi_offset 14, -4
 6791 0004 04B08DE2 		add	fp, sp, #4
 6792              		.cfi_def_cfa 11, 4
 6793 0008 30D04DE2 		sub	sp, sp, #48
 6794 000c 28000BE5 		str	r0, [fp, #-40]
 6795 0010 2C100BE5 		str	r1, [fp, #-44]
 6796 0014 30200BE5 		str	r2, [fp, #-48]
 6797 0018 34300BE5 		str	r3, [fp, #-52]
3372:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 180


3373:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3374:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3375:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3376:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
3377:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3378:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3379:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3380:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Pgt_Dst ");
3381:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Cap_Pgt_Dst);
3382:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Pos_Dst ");
3383:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pos_Dst);
3384:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Flag_Dst ");
3385:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Flag_Dst);
3386:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Cap_Pgt_Src ");
3387:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Cap_Pgt_Src);
3388:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Pos_Src ");
3389:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pos_Src);
3390:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Index ");
3391:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Index);*/
3392:../../Source/Kernel/rme_kernel.c **** 
3393:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3394:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6798              		.loc 1 3394 5
 6799 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6800 0020 803003E2 		and	r3, r3, #128
 6801 0024 000053E3 		cmp	r3, #0
 6802 0028 1C00001A 		bne	.L430
 6803              		.loc 1 3394 5 is_stmt 0 discriminator 1
 6804 002c 28301BE5 		ldr	r3, [fp, #-40]
 6805 0030 142093E5 		ldr	r2, [r3, #20]
 6806 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6807 0038 030052E1 		cmp	r2, r3
 6808 003c 0100008A 		bhi	.L431
 6809              		.loc 1 3394 5 discriminator 3
 6810 0040 0230E0E3 		mvn	r3, #2
 6811              		.loc 1 3394 5
 6812 0044 260100EA 		b	.L460
 6813              	.L431:
 6814              		.loc 1 3394 5 discriminator 4
 6815 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6816 004c 8322A0E1 		lsl	r2, r3, #5
 6817 0050 28301BE5 		ldr	r3, [fp, #-40]
 6818 0054 0C3093E5 		ldr	r3, [r3, #12]
 6819 0058 033082E0 		add	r3, r2, r3
 6820 005c 0C300BE5 		str	r3, [fp, #-12]
 6821 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6822 0064 0300A0E1 		mov	r0, r3
 6823 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6824 006c 14000BE5 		str	r0, [fp, #-20]
 6825              		.loc 1 3394 5 discriminator 1
 6826 0070 14301BE5 		ldr	r3, [fp, #-20]
 6827 0074 FF3803E2 		and	r3, r3, #16711680
 6828 0078 020853E3 		cmp	r3, #131072
 6829 007c 0100001A 		bne	.L433
 6830              		.loc 1 3394 5 discriminator 5
 6831 0080 0830E0E3 		mvn	r3, #8
 6832              		.loc 1 3394 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 181


 6833 0084 160100EA 		b	.L460
 6834              	.L433:
 6835              		.loc 1 3394 5 discriminator 6
 6836 0088 14301BE5 		ldr	r3, [fp, #-20]
 6837 008c 233CA0E1 		lsr	r3, r3, #24
 6838 0090 040053E3 		cmp	r3, #4
 6839 0094 3F00000A 		beq	.L434
 6840              		.loc 1 3394 5 discriminator 7
 6841 0098 0130E0E3 		mvn	r3, #1
 6842              		.loc 1 3394 5
 6843 009c 100100EA 		b	.L460
 6844              	.L430:
 6845              		.loc 1 3394 5 discriminator 2
 6846 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6847 00a4 2324A0E1 		lsr	r2, r3, #8
 6848 00a8 28301BE5 		ldr	r3, [fp, #-40]
 6849 00ac 143093E5 		ldr	r3, [r3, #20]
 6850 00b0 030052E1 		cmp	r2, r3
 6851 00b4 0100003A 		bcc	.L435
 6852              		.loc 1 3394 5 discriminator 8
 6853 00b8 0230E0E3 		mvn	r3, #2
 6854              		.loc 1 3394 5
 6855 00bc 080100EA 		b	.L460
 6856              	.L435:
 6857              		.loc 1 3394 5 discriminator 9
 6858 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6859 00c4 2334A0E1 		lsr	r3, r3, #8
 6860 00c8 8322A0E1 		lsl	r2, r3, #5
 6861 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6862 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6863 00d4 033082E0 		add	r3, r2, r3
 6864 00d8 0C300BE5 		str	r3, [fp, #-12]
 6865 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6866 00e0 0300A0E1 		mov	r0, r3
 6867 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6868 00e8 14000BE5 		str	r0, [fp, #-20]
 6869              		.loc 1 3394 5 discriminator 1
 6870 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6871 00f0 FF3803E2 		and	r3, r3, #16711680
 6872 00f4 020853E3 		cmp	r3, #131072
 6873 00f8 0100001A 		bne	.L436
 6874              		.loc 1 3394 5 discriminator 10
 6875 00fc 0830E0E3 		mvn	r3, #8
 6876              		.loc 1 3394 5
 6877 0100 F70000EA 		b	.L460
 6878              	.L436:
 6879              		.loc 1 3394 5 discriminator 11
 6880 0104 14301BE5 		ldr	r3, [fp, #-20]
 6881 0108 233CA0E1 		lsr	r3, r3, #24
 6882 010c 030053E3 		cmp	r3, #3
 6883 0110 0100000A 		beq	.L437
 6884              		.loc 1 3394 5 discriminator 12
 6885 0114 0130E0E3 		mvn	r3, #1
 6886              		.loc 1 3394 5
 6887 0118 F10000EA 		b	.L460
 6888              	.L437:
 6889              		.loc 1 3394 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 182


 6890 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6891 0120 7F2003E2 		and	r2, r3, #127
 6892 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6893 0128 143093E5 		ldr	r3, [r3, #20]
 6894 012c 030052E1 		cmp	r2, r3
 6895 0130 0100003A 		bcc	.L438
 6896              		.loc 1 3394 5 discriminator 14
 6897 0134 0230E0E3 		mvn	r3, #2
 6898              		.loc 1 3394 5
 6899 0138 E90000EA 		b	.L460
 6900              	.L438:
 6901              		.loc 1 3394 5 discriminator 15
 6902 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6903 0140 7F3003E2 		and	r3, r3, #127
 6904 0144 8322A0E1 		lsl	r2, r3, #5
 6905 0148 0C301BE5 		ldr	r3, [fp, #-12]
 6906 014c 0C3093E5 		ldr	r3, [r3, #12]
 6907 0150 033082E0 		add	r3, r2, r3
 6908 0154 0C300BE5 		str	r3, [fp, #-12]
 6909 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6910 015c 0300A0E1 		mov	r0, r3
 6911 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6912 0164 14000BE5 		str	r0, [fp, #-20]
 6913              		.loc 1 3394 5 discriminator 1
 6914 0168 14301BE5 		ldr	r3, [fp, #-20]
 6915 016c FF3803E2 		and	r3, r3, #16711680
 6916 0170 020853E3 		cmp	r3, #131072
 6917 0174 0100001A 		bne	.L439
 6918              		.loc 1 3394 5 discriminator 16
 6919 0178 0830E0E3 		mvn	r3, #8
 6920              		.loc 1 3394 5
 6921 017c D80000EA 		b	.L460
 6922              	.L439:
 6923              		.loc 1 3394 5 discriminator 17
 6924 0180 14301BE5 		ldr	r3, [fp, #-20]
 6925 0184 233CA0E1 		lsr	r3, r3, #24
 6926 0188 040053E3 		cmp	r3, #4
 6927 018c 0100000A 		beq	.L434
 6928              		.loc 1 3394 5 discriminator 18
 6929 0190 0130E0E3 		mvn	r3, #1
 6930              		.loc 1 3394 5
 6931 0194 D20000EA 		b	.L460
 6932              	.L434:
3395:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3396:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6933              		.loc 1 3396 5 is_stmt 1
 6934 0198 04309BE5 		ldr	r3, [fp, #4]
 6935 019c 803003E2 		and	r3, r3, #128
 6936 01a0 000053E3 		cmp	r3, #0
 6937 01a4 1C00001A 		bne	.L440
 6938              		.loc 1 3396 5 is_stmt 0 discriminator 1
 6939 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6940 01ac 142093E5 		ldr	r2, [r3, #20]
 6941 01b0 04309BE5 		ldr	r3, [fp, #4]
 6942 01b4 030052E1 		cmp	r2, r3
 6943 01b8 0100008A 		bhi	.L441
 6944              		.loc 1 3396 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 183


 6945 01bc 0230E0E3 		mvn	r3, #2
 6946              		.loc 1 3396 5
 6947 01c0 C70000EA 		b	.L460
 6948              	.L441:
 6949              		.loc 1 3396 5 discriminator 4
 6950 01c4 04309BE5 		ldr	r3, [fp, #4]
 6951 01c8 8322A0E1 		lsl	r2, r3, #5
 6952 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6953 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6954 01d4 033082E0 		add	r3, r2, r3
 6955 01d8 08300BE5 		str	r3, [fp, #-8]
 6956 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6957 01e0 0300A0E1 		mov	r0, r3
 6958 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6959 01e8 14000BE5 		str	r0, [fp, #-20]
 6960              		.loc 1 3396 5 discriminator 1
 6961 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6962 01f0 FF3803E2 		and	r3, r3, #16711680
 6963 01f4 020853E3 		cmp	r3, #131072
 6964 01f8 0100001A 		bne	.L442
 6965              		.loc 1 3396 5 discriminator 5
 6966 01fc 0830E0E3 		mvn	r3, #8
 6967              		.loc 1 3396 5
 6968 0200 B70000EA 		b	.L460
 6969              	.L442:
 6970              		.loc 1 3396 5 discriminator 6
 6971 0204 14301BE5 		ldr	r3, [fp, #-20]
 6972 0208 233CA0E1 		lsr	r3, r3, #24
 6973 020c 040053E3 		cmp	r3, #4
 6974 0210 3F00000A 		beq	.L443
 6975              		.loc 1 3396 5 discriminator 7
 6976 0214 0130E0E3 		mvn	r3, #1
 6977              		.loc 1 3396 5
 6978 0218 B10000EA 		b	.L460
 6979              	.L440:
 6980              		.loc 1 3396 5 discriminator 2
 6981 021c 04309BE5 		ldr	r3, [fp, #4]
 6982 0220 2324A0E1 		lsr	r2, r3, #8
 6983 0224 28301BE5 		ldr	r3, [fp, #-40]
 6984 0228 143093E5 		ldr	r3, [r3, #20]
 6985 022c 030052E1 		cmp	r2, r3
 6986 0230 0100003A 		bcc	.L444
 6987              		.loc 1 3396 5 discriminator 8
 6988 0234 0230E0E3 		mvn	r3, #2
 6989              		.loc 1 3396 5
 6990 0238 A90000EA 		b	.L460
 6991              	.L444:
 6992              		.loc 1 3396 5 discriminator 9
 6993 023c 04309BE5 		ldr	r3, [fp, #4]
 6994 0240 2334A0E1 		lsr	r3, r3, #8
 6995 0244 8322A0E1 		lsl	r2, r3, #5
 6996 0248 28301BE5 		ldr	r3, [fp, #-40]
 6997 024c 0C3093E5 		ldr	r3, [r3, #12]
 6998 0250 033082E0 		add	r3, r2, r3
 6999 0254 08300BE5 		str	r3, [fp, #-8]
 7000 0258 08301BE5 		ldr	r3, [fp, #-8]
 7001 025c 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 184


 7002 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7003 0264 14000BE5 		str	r0, [fp, #-20]
 7004              		.loc 1 3396 5 discriminator 1
 7005 0268 14301BE5 		ldr	r3, [fp, #-20]
 7006 026c FF3803E2 		and	r3, r3, #16711680
 7007 0270 020853E3 		cmp	r3, #131072
 7008 0274 0100001A 		bne	.L445
 7009              		.loc 1 3396 5 discriminator 10
 7010 0278 0830E0E3 		mvn	r3, #8
 7011              		.loc 1 3396 5
 7012 027c 980000EA 		b	.L460
 7013              	.L445:
 7014              		.loc 1 3396 5 discriminator 11
 7015 0280 14301BE5 		ldr	r3, [fp, #-20]
 7016 0284 233CA0E1 		lsr	r3, r3, #24
 7017 0288 030053E3 		cmp	r3, #3
 7018 028c 0100000A 		beq	.L446
 7019              		.loc 1 3396 5 discriminator 12
 7020 0290 0130E0E3 		mvn	r3, #1
 7021              		.loc 1 3396 5
 7022 0294 920000EA 		b	.L460
 7023              	.L446:
 7024              		.loc 1 3396 5 discriminator 13
 7025 0298 04309BE5 		ldr	r3, [fp, #4]
 7026 029c 7F2003E2 		and	r2, r3, #127
 7027 02a0 08301BE5 		ldr	r3, [fp, #-8]
 7028 02a4 143093E5 		ldr	r3, [r3, #20]
 7029 02a8 030052E1 		cmp	r2, r3
 7030 02ac 0100003A 		bcc	.L447
 7031              		.loc 1 3396 5 discriminator 14
 7032 02b0 0230E0E3 		mvn	r3, #2
 7033              		.loc 1 3396 5
 7034 02b4 8A0000EA 		b	.L460
 7035              	.L447:
 7036              		.loc 1 3396 5 discriminator 15
 7037 02b8 04309BE5 		ldr	r3, [fp, #4]
 7038 02bc 7F3003E2 		and	r3, r3, #127
 7039 02c0 8322A0E1 		lsl	r2, r3, #5
 7040 02c4 08301BE5 		ldr	r3, [fp, #-8]
 7041 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7042 02cc 033082E0 		add	r3, r2, r3
 7043 02d0 08300BE5 		str	r3, [fp, #-8]
 7044 02d4 08301BE5 		ldr	r3, [fp, #-8]
 7045 02d8 0300A0E1 		mov	r0, r3
 7046 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7047 02e0 14000BE5 		str	r0, [fp, #-20]
 7048              		.loc 1 3396 5 discriminator 1
 7049 02e4 14301BE5 		ldr	r3, [fp, #-20]
 7050 02e8 FF3803E2 		and	r3, r3, #16711680
 7051 02ec 020853E3 		cmp	r3, #131072
 7052 02f0 0100001A 		bne	.L448
 7053              		.loc 1 3396 5 discriminator 16
 7054 02f4 0830E0E3 		mvn	r3, #8
 7055              		.loc 1 3396 5
 7056 02f8 790000EA 		b	.L460
 7057              	.L448:
 7058              		.loc 1 3396 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 185


 7059 02fc 14301BE5 		ldr	r3, [fp, #-20]
 7060 0300 233CA0E1 		lsr	r3, r3, #24
 7061 0304 040053E3 		cmp	r3, #4
 7062 0308 0100000A 		beq	.L443
 7063              		.loc 1 3396 5 discriminator 18
 7064 030c 0130E0E3 		mvn	r3, #1
 7065              		.loc 1 3396 5
 7066 0310 730000EA 		b	.L460
 7067              	.L443:
3397:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3398:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3399:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 7068              		.loc 1 3399 5 is_stmt 1
 7069 0314 0C301BE5 		ldr	r3, [fp, #-12]
 7070 0318 083093E5 		ldr	r3, [r3, #8]
 7071 031c 023003E2 		and	r3, r3, #2
 7072 0320 000053E3 		cmp	r3, #0
 7073 0324 0100001A 		bne	.L449
 7074              		.loc 1 3399 5 is_stmt 0 discriminator 1
 7075 0328 0630E0E3 		mvn	r3, #6
 7076              		.loc 1 3399 5
 7077 032c 6C0000EA 		b	.L460
 7078              	.L449:
3400:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 7079              		.loc 1 3400 5 is_stmt 1
 7080 0330 08301BE5 		ldr	r3, [fp, #-8]
 7081 0334 083093E5 		ldr	r3, [r3, #8]
 7082 0338 013003E2 		and	r3, r3, #1
 7083 033c 000053E3 		cmp	r3, #0
 7084 0340 0100001A 		bne	.L450
 7085              		.loc 1 3400 5 is_stmt 0 discriminator 1
 7086 0344 0630E0E3 		mvn	r3, #6
 7087              		.loc 1 3400 5
 7088 0348 650000EA 		b	.L460
 7089              	.L450:
3401:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3402:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7090              		.loc 1 3402 17 is_stmt 1
 7091 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7092 0350 083093E5 		ldr	r3, [r3, #8]
 7093 0354 233AA0E1 		lsr	r3, r3, #20
 7094              		.loc 1 3402 7
 7095 0358 30201BE5 		ldr	r2, [fp, #-48]
 7096 035c 030052E1 		cmp	r2, r3
 7097 0360 1300008A 		bhi	.L451
3403:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7098              		.loc 1 3403 17
 7099 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7100 0368 083093E5 		ldr	r3, [r3, #8]
 7101 036c 2334A0E1 		lsr	r3, r3, #8
 7102 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3402:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7103              		.loc 1 3402 55 discriminator 1
 7104 0374 30201BE5 		ldr	r2, [fp, #-48]
 7105 0378 030052E1 		cmp	r2, r3
 7106 037c 0C00003A 		bcc	.L451
3404:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 186


 7107              		.loc 1 3404 17
 7108 0380 08301BE5 		ldr	r3, [fp, #-8]
 7109 0384 083093E5 		ldr	r3, [r3, #8]
 7110 0388 233AA0E1 		lsr	r3, r3, #20
3403:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7111              		.loc 1 3403 54
 7112 038c 08209BE5 		ldr	r2, [fp, #8]
 7113 0390 030052E1 		cmp	r2, r3
 7114 0394 0600008A 		bhi	.L451
3405:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7115              		.loc 1 3405 17
 7116 0398 08301BE5 		ldr	r3, [fp, #-8]
 7117 039c 083093E5 		ldr	r3, [r3, #8]
 7118 03a0 2334A0E1 		lsr	r3, r3, #8
 7119 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3404:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7120              		.loc 1 3404 55
 7121 03a8 08209BE5 		ldr	r2, [fp, #8]
 7122 03ac 030052E1 		cmp	r2, r3
 7123 03b0 0100002A 		bcs	.L452
 7124              	.L451:
3406:../../Source/Kernel/rme_kernel.c ****     {
3407:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3408:../../Source/Kernel/rme_kernel.c **** 
3409:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7125              		.loc 1 3409 16
 7126 03b4 0630E0E3 		mvn	r3, #6
 7127 03b8 490000EA 		b	.L460
 7128              	.L452:
3410:../../Source/Kernel/rme_kernel.c ****     }
3411:../../Source/Kernel/rme_kernel.c ****     else
3412:../../Source/Kernel/rme_kernel.c ****     {
3413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3414:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3415:../../Source/Kernel/rme_kernel.c ****     }
3416:../../Source/Kernel/rme_kernel.c **** 
3417:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3418:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7129              		.loc 1 3418 15
 7130 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7131 03c0 143093E5 		ldr	r3, [r3, #20]
 7132              		.loc 1 3418 14
 7133 03c4 2338A0E1 		lsr	r3, r3, #16
 7134 03c8 18300BE5 		str	r3, [fp, #-24]
3419:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7135              		.loc 1 3419 15
 7136 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7137 03d0 143093E5 		ldr	r3, [r3, #20]
 7138              		.loc 1 3419 14
 7139 03d4 2338A0E1 		lsr	r3, r3, #16
 7140 03d8 1C300BE5 		str	r3, [fp, #-28]
3420:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7141              		.loc 1 3420 7
 7142 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7143 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7144 03e4 030052E1 		cmp	r2, r3
 7145 03e8 0100009A 		bls	.L453
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 187


3421:../../Source/Kernel/rme_kernel.c ****     {
3422:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3423:../../Source/Kernel/rme_kernel.c **** 
3424:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7146              		.loc 1 3424 16
 7147 03ec 6430E0E3 		mvn	r3, #100
 7148 03f0 3B0000EA 		b	.L460
 7149              	.L453:
3425:../../Source/Kernel/rme_kernel.c ****     }
3426:../../Source/Kernel/rme_kernel.c ****     else
3427:../../Source/Kernel/rme_kernel.c ****     {
3428:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3429:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3430:../../Source/Kernel/rme_kernel.c ****     }
3431:../../Source/Kernel/rme_kernel.c **** 
3432:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
3433:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7150              		.loc 1 3433 19
 7151 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7152 03f8 143093E5 		ldr	r3, [r3, #20]
 7153 03fc 7330FFE6 		uxth	r3, r3
 7154              		.loc 1 3433 17
 7155 0400 30201BE5 		ldr	r2, [fp, #-48]
 7156 0404 3233A0E1 		lsr	r3, r2, r3
 7157              		.loc 1 3433 7
 7158 0408 000053E3 		cmp	r3, #0
 7159 040c 0600001A 		bne	.L454
3434:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7160              		.loc 1 3434 19
 7161 0410 08301BE5 		ldr	r3, [fp, #-8]
 7162 0414 143093E5 		ldr	r3, [r3, #20]
 7163 0418 7330FFE6 		uxth	r3, r3
 7164              		.loc 1 3434 17
 7165 041c 08209BE5 		ldr	r2, [fp, #8]
 7166 0420 3233A0E1 		lsr	r3, r2, r3
3433:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7167              		.loc 1 3433 54 discriminator 1
 7168 0424 000053E3 		cmp	r3, #0
 7169 0428 0100000A 		beq	.L455
 7170              	.L454:
3435:../../Source/Kernel/rme_kernel.c ****     {
3436:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3437:../../Source/Kernel/rme_kernel.c **** 
3438:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7171              		.loc 1 3438 16
 7172 042c 6430E0E3 		mvn	r3, #100
 7173 0430 2B0000EA 		b	.L460
 7174              	.L455:
3439:../../Source/Kernel/rme_kernel.c ****     }
3440:../../Source/Kernel/rme_kernel.c ****     else
3441:../../Source/Kernel/rme_kernel.c ****     {
3442:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3443:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3444:../../Source/Kernel/rme_kernel.c ****     }
3445:../../Source/Kernel/rme_kernel.c **** 
3446:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3447:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 188


 7175              		.loc 1 3447 7
 7176 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7177 0438 1F0053E3 		cmp	r3, #31
 7178 043c 0900008A 		bhi	.L456
3448:../../Source/Kernel/rme_kernel.c ****     {
3449:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3450:../../Source/Kernel/rme_kernel.c ****         
3451:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3452:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7179              		.loc 1 3452 12
 7180 0440 0120A0E3 		mov	r2, #1
 7181 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7182 0448 1223A0E1 		lsl	r2, r2, r3
 7183              		.loc 1 3452 39
 7184 044c 0C109BE5 		ldr	r1, [fp, #12]
 7185 0450 18301BE5 		ldr	r3, [fp, #-24]
 7186 0454 1133A0E1 		lsl	r3, r1, r3
 7187              		.loc 1 3452 11
 7188 0458 030052E1 		cmp	r2, r3
 7189 045c 0100008A 		bhi	.L456
3453:../../Source/Kernel/rme_kernel.c ****         {
3454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3455:../../Source/Kernel/rme_kernel.c **** 
3456:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7190              		.loc 1 3456 20
 7191 0460 6430E0E3 		mvn	r3, #100
 7192 0464 1E0000EA 		b	.L460
 7193              	.L456:
3457:../../Source/Kernel/rme_kernel.c ****         }
3458:../../Source/Kernel/rme_kernel.c ****         else
3459:../../Source/Kernel/rme_kernel.c ****         {
3460:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3461:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3462:../../Source/Kernel/rme_kernel.c ****         }
3463:../../Source/Kernel/rme_kernel.c ****     }
3464:../../Source/Kernel/rme_kernel.c ****     else
3465:../../Source/Kernel/rme_kernel.c ****     {
3466:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3467:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3468:../../Source/Kernel/rme_kernel.c ****     }
3469:../../Source/Kernel/rme_kernel.c **** 
3470:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3471:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7194              		.loc 1 3471 8
 7195 0468 24304BE2 		sub	r3, fp, #36
 7196 046c 20204BE2 		sub	r2, fp, #32
 7197 0470 08109BE5 		ldr	r1, [fp, #8]
 7198 0474 08001BE5 		ldr	r0, [fp, #-8]
 7199 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3472:../../Source/Kernel/rme_kernel.c ****     {
3473:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3474:../../Source/Kernel/rme_kernel.c **** 
3475:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3476:../../Source/Kernel/rme_kernel.c ****     }
3477:../../Source/Kernel/rme_kernel.c ****     else
3478:../../Source/Kernel/rme_kernel.c ****     {
3479:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 189


3480:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3481:../../Source/Kernel/rme_kernel.c ****     }
3482:../../Source/Kernel/rme_kernel.c **** 
3483:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3484:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 7200              		.loc 1 3484 7
 7201 047c 18301BE5 		ldr	r3, [fp, #-24]
 7202 0480 1F0053E3 		cmp	r3, #31
 7203 0484 0600008A 		bhi	.L457
3485:../../Source/Kernel/rme_kernel.c ****     {
3486:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3487:../../Source/Kernel/rme_kernel.c ****         
3488:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7204              		.loc 1 3488 35
 7205 0488 0C209BE5 		ldr	r2, [fp, #12]
 7206 048c 18301BE5 		ldr	r3, [fp, #-24]
 7207 0490 1223A0E1 		lsl	r2, r2, r3
 7208              		.loc 1 3488 28
 7209 0494 20301BE5 		ldr	r3, [fp, #-32]
 7210              		.loc 1 3488 18
 7211 0498 033082E0 		add	r3, r2, r3
 7212 049c 10300BE5 		str	r3, [fp, #-16]
 7213 04a0 010000EA 		b	.L458
 7214              	.L457:
3489:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3490:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3491:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3492:../../Source/Kernel/rme_kernel.c ****         {
3493:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3494:../../Source/Kernel/rme_kernel.c **** 
3495:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3496:../../Source/Kernel/rme_kernel.c ****         }
3497:../../Source/Kernel/rme_kernel.c ****         else
3498:../../Source/Kernel/rme_kernel.c ****         {
3499:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3500:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3501:../../Source/Kernel/rme_kernel.c ****         }
3502:../../Source/Kernel/rme_kernel.c **** #endif
3503:../../Source/Kernel/rme_kernel.c ****     }
3504:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3505:../../Source/Kernel/rme_kernel.c ****     else
3506:../../Source/Kernel/rme_kernel.c ****     {
3507:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3508:../../Source/Kernel/rme_kernel.c ****         
3509:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7215              		.loc 1 3509 18
 7216 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7217 04a8 10300BE5 		str	r3, [fp, #-16]
 7218              	.L458:
3510:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3511:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3512:../../Source/Kernel/rme_kernel.c ****         {
3513:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3514:../../Source/Kernel/rme_kernel.c **** 
3515:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3516:../../Source/Kernel/rme_kernel.c ****         }
3517:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 190


3518:../../Source/Kernel/rme_kernel.c ****         {
3519:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3520:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3521:../../Source/Kernel/rme_kernel.c ****         }
3522:../../Source/Kernel/rme_kernel.c **** #endif
3523:../../Source/Kernel/rme_kernel.c ****     }
3524:../../Source/Kernel/rme_kernel.c ****     
3525:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3526:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7219              		.loc 1 3526 21
 7220 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7221 04b0 0320E0E1 		mvn	r2, r3
 7222              		.loc 1 3526 19
 7223 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7224 04b8 023003E0 		and	r3, r3, r2
 7225              		.loc 1 3526 7
 7226 04bc 000053E3 		cmp	r3, #0
 7227 04c0 0100000A 		beq	.L459
3527:../../Source/Kernel/rme_kernel.c ****     {
3528:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3529:../../Source/Kernel/rme_kernel.c **** 
3530:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7228              		.loc 1 3530 16
 7229 04c4 6730E0E3 		mvn	r3, #103
 7230 04c8 050000EA 		b	.L460
 7231              	.L459:
3531:../../Source/Kernel/rme_kernel.c ****     }
3532:../../Source/Kernel/rme_kernel.c ****     else
3533:../../Source/Kernel/rme_kernel.c ****     {
3534:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3535:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3536:../../Source/Kernel/rme_kernel.c ****     }
3537:../../Source/Kernel/rme_kernel.c **** 
3538:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3539:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3540:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7232              		.loc 1 3540 8
 7233 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7234 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7235 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7236 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7237 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3541:../../Source/Kernel/rme_kernel.c ****     {
3542:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3543:../../Source/Kernel/rme_kernel.c **** 
3544:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3545:../../Source/Kernel/rme_kernel.c ****     }
3546:../../Source/Kernel/rme_kernel.c ****     else
3547:../../Source/Kernel/rme_kernel.c ****     {
3548:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3549:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3550:../../Source/Kernel/rme_kernel.c ****     }
3551:../../Source/Kernel/rme_kernel.c ****     return 0;
 7238              		.loc 1 3551 12
 7239 04e0 0030A0E3 		mov	r3, #0
 7240              	.L460:
3552:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 191


 7241              		.loc 1 3552 1
 7242 04e4 0300A0E1 		mov	r0, r3
 7243 04e8 04D04BE2 		sub	sp, fp, #4
 7244              		.cfi_def_cfa 13, 8
 7245              		@ sp needed
 7246 04ec 0088BDE8 		pop	{fp, pc}
 7247              		.cfi_endproc
 7248              	.LFE34:
 7250              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7251              		.align	2
 7252              		.syntax unified
 7253              		.arm
 7255              	_RME_Pgt_Rem:
 7256              	.LFB35:
3553:../../Source/Kernel/rme_kernel.c **** #endif
3554:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3555:../../Source/Kernel/rme_kernel.c **** 
3556:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3557:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3558:../../Source/Kernel/rme_kernel.c ****               page.
3559:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3560:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3561:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3562:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3563:../../Source/Kernel/rme_kernel.c **** Output      : None.
3564:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3565:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3566:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3567:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3568:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3569:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3570:../../Source/Kernel/rme_kernel.c **** {
 7257              		.loc 1 3570 1
 7258              		.cfi_startproc
 7259              		@ args = 0, pretend = 0, frame = 24
 7260              		@ frame_needed = 1, uses_anonymous_args = 0
 7261 0000 00482DE9 		push	{fp, lr}
 7262              		.cfi_def_cfa_offset 8
 7263              		.cfi_offset 11, -8
 7264              		.cfi_offset 14, -4
 7265 0004 04B08DE2 		add	fp, sp, #4
 7266              		.cfi_def_cfa 11, 4
 7267 0008 18D04DE2 		sub	sp, sp, #24
 7268 000c 10000BE5 		str	r0, [fp, #-16]
 7269 0010 14100BE5 		str	r1, [fp, #-20]
 7270 0014 18200BE5 		str	r2, [fp, #-24]
3571:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3572:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3573:../../Source/Kernel/rme_kernel.c ****     
3574:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3575:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7271              		.loc 1 3575 5
 7272 0018 14301BE5 		ldr	r3, [fp, #-20]
 7273 001c 803003E2 		and	r3, r3, #128
 7274 0020 000053E3 		cmp	r3, #0
 7275 0024 1C00001A 		bne	.L462
 7276              		.loc 1 3575 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 192


 7277 0028 10301BE5 		ldr	r3, [fp, #-16]
 7278 002c 142093E5 		ldr	r2, [r3, #20]
 7279 0030 14301BE5 		ldr	r3, [fp, #-20]
 7280 0034 030052E1 		cmp	r2, r3
 7281 0038 0100008A 		bhi	.L463
 7282              		.loc 1 3575 5 discriminator 3
 7283 003c 0230E0E3 		mvn	r3, #2
 7284              		.loc 1 3575 5
 7285 0040 760000EA 		b	.L464
 7286              	.L463:
 7287              		.loc 1 3575 5 discriminator 4
 7288 0044 14301BE5 		ldr	r3, [fp, #-20]
 7289 0048 8322A0E1 		lsl	r2, r3, #5
 7290 004c 10301BE5 		ldr	r3, [fp, #-16]
 7291 0050 0C3093E5 		ldr	r3, [r3, #12]
 7292 0054 033082E0 		add	r3, r2, r3
 7293 0058 08300BE5 		str	r3, [fp, #-8]
 7294 005c 08301BE5 		ldr	r3, [fp, #-8]
 7295 0060 0300A0E1 		mov	r0, r3
 7296 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7297 0068 0C000BE5 		str	r0, [fp, #-12]
 7298              		.loc 1 3575 5 discriminator 1
 7299 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7300 0070 FF3803E2 		and	r3, r3, #16711680
 7301 0074 020853E3 		cmp	r3, #131072
 7302 0078 0100001A 		bne	.L465
 7303              		.loc 1 3575 5 discriminator 5
 7304 007c 0830E0E3 		mvn	r3, #8
 7305              		.loc 1 3575 5
 7306 0080 660000EA 		b	.L464
 7307              	.L465:
 7308              		.loc 1 3575 5 discriminator 6
 7309 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7310 0088 233CA0E1 		lsr	r3, r3, #24
 7311 008c 030053E3 		cmp	r3, #3
 7312 0090 3F00000A 		beq	.L466
 7313              		.loc 1 3575 5 discriminator 7
 7314 0094 0130E0E3 		mvn	r3, #1
 7315              		.loc 1 3575 5
 7316 0098 600000EA 		b	.L464
 7317              	.L462:
 7318              		.loc 1 3575 5 discriminator 2
 7319 009c 14301BE5 		ldr	r3, [fp, #-20]
 7320 00a0 2324A0E1 		lsr	r2, r3, #8
 7321 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7322 00a8 143093E5 		ldr	r3, [r3, #20]
 7323 00ac 030052E1 		cmp	r2, r3
 7324 00b0 0100003A 		bcc	.L467
 7325              		.loc 1 3575 5 discriminator 8
 7326 00b4 0230E0E3 		mvn	r3, #2
 7327              		.loc 1 3575 5
 7328 00b8 580000EA 		b	.L464
 7329              	.L467:
 7330              		.loc 1 3575 5 discriminator 9
 7331 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7332 00c0 2334A0E1 		lsr	r3, r3, #8
 7333 00c4 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 193


 7334 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7335 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7336 00d0 033082E0 		add	r3, r2, r3
 7337 00d4 08300BE5 		str	r3, [fp, #-8]
 7338 00d8 08301BE5 		ldr	r3, [fp, #-8]
 7339 00dc 0300A0E1 		mov	r0, r3
 7340 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7341 00e4 0C000BE5 		str	r0, [fp, #-12]
 7342              		.loc 1 3575 5 discriminator 1
 7343 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7344 00ec FF3803E2 		and	r3, r3, #16711680
 7345 00f0 020853E3 		cmp	r3, #131072
 7346 00f4 0100001A 		bne	.L468
 7347              		.loc 1 3575 5 discriminator 10
 7348 00f8 0830E0E3 		mvn	r3, #8
 7349              		.loc 1 3575 5
 7350 00fc 470000EA 		b	.L464
 7351              	.L468:
 7352              		.loc 1 3575 5 discriminator 11
 7353 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7354 0104 233CA0E1 		lsr	r3, r3, #24
 7355 0108 030053E3 		cmp	r3, #3
 7356 010c 0100000A 		beq	.L469
 7357              		.loc 1 3575 5 discriminator 12
 7358 0110 0130E0E3 		mvn	r3, #1
 7359              		.loc 1 3575 5
 7360 0114 410000EA 		b	.L464
 7361              	.L469:
 7362              		.loc 1 3575 5 discriminator 13
 7363 0118 14301BE5 		ldr	r3, [fp, #-20]
 7364 011c 7F2003E2 		and	r2, r3, #127
 7365 0120 08301BE5 		ldr	r3, [fp, #-8]
 7366 0124 143093E5 		ldr	r3, [r3, #20]
 7367 0128 030052E1 		cmp	r2, r3
 7368 012c 0100003A 		bcc	.L470
 7369              		.loc 1 3575 5 discriminator 14
 7370 0130 0230E0E3 		mvn	r3, #2
 7371              		.loc 1 3575 5
 7372 0134 390000EA 		b	.L464
 7373              	.L470:
 7374              		.loc 1 3575 5 discriminator 15
 7375 0138 14301BE5 		ldr	r3, [fp, #-20]
 7376 013c 7F3003E2 		and	r3, r3, #127
 7377 0140 8322A0E1 		lsl	r2, r3, #5
 7378 0144 08301BE5 		ldr	r3, [fp, #-8]
 7379 0148 0C3093E5 		ldr	r3, [r3, #12]
 7380 014c 033082E0 		add	r3, r2, r3
 7381 0150 08300BE5 		str	r3, [fp, #-8]
 7382 0154 08301BE5 		ldr	r3, [fp, #-8]
 7383 0158 0300A0E1 		mov	r0, r3
 7384 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7385 0160 0C000BE5 		str	r0, [fp, #-12]
 7386              		.loc 1 3575 5 discriminator 1
 7387 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7388 0168 FF3803E2 		and	r3, r3, #16711680
 7389 016c 020853E3 		cmp	r3, #131072
 7390 0170 0100001A 		bne	.L471
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 194


 7391              		.loc 1 3575 5 discriminator 16
 7392 0174 0830E0E3 		mvn	r3, #8
 7393              		.loc 1 3575 5
 7394 0178 280000EA 		b	.L464
 7395              	.L471:
 7396              		.loc 1 3575 5 discriminator 17
 7397 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7398 0180 233CA0E1 		lsr	r3, r3, #24
 7399 0184 030053E3 		cmp	r3, #3
 7400 0188 0100000A 		beq	.L466
 7401              		.loc 1 3575 5 discriminator 18
 7402 018c 0130E0E3 		mvn	r3, #1
 7403              		.loc 1 3575 5
 7404 0190 220000EA 		b	.L464
 7405              	.L466:
3576:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3577:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3578:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7406              		.loc 1 3578 5 is_stmt 1
 7407 0194 08301BE5 		ldr	r3, [fp, #-8]
 7408 0198 083093E5 		ldr	r3, [r3, #8]
 7409 019c 043003E2 		and	r3, r3, #4
 7410 01a0 000053E3 		cmp	r3, #0
 7411 01a4 0100001A 		bne	.L472
 7412              		.loc 1 3578 5 is_stmt 0 discriminator 1
 7413 01a8 0630E0E3 		mvn	r3, #6
 7414              		.loc 1 3578 5
 7415 01ac 1B0000EA 		b	.L464
 7416              	.L472:
3579:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3580:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7417              		.loc 1 3580 13 is_stmt 1
 7418 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7419 01b4 083093E5 		ldr	r3, [r3, #8]
 7420 01b8 233AA0E1 		lsr	r3, r3, #20
 7421              		.loc 1 3580 7
 7422 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7423 01c0 030052E1 		cmp	r2, r3
 7424 01c4 0600008A 		bhi	.L473
3581:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7425              		.loc 1 3581 13
 7426 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7427 01cc 083093E5 		ldr	r3, [r3, #8]
 7428 01d0 2334A0E1 		lsr	r3, r3, #8
 7429 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3580:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7430              		.loc 1 3580 51 discriminator 1
 7431 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7432 01dc 030052E1 		cmp	r2, r3
 7433 01e0 0100002A 		bcs	.L474
 7434              	.L473:
3582:../../Source/Kernel/rme_kernel.c ****     {
3583:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3584:../../Source/Kernel/rme_kernel.c **** 
3585:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7435              		.loc 1 3585 16
 7436 01e4 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 195


 7437 01e8 0C0000EA 		b	.L464
 7438              	.L474:
3586:../../Source/Kernel/rme_kernel.c ****     }
3587:../../Source/Kernel/rme_kernel.c ****     else
3588:../../Source/Kernel/rme_kernel.c ****     {
3589:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3590:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3591:../../Source/Kernel/rme_kernel.c ****     }
3592:../../Source/Kernel/rme_kernel.c **** 
3593:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3594:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7439              		.loc 1 3594 14
 7440 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7441 01f0 143093E5 		ldr	r3, [r3, #20]
 7442 01f4 7330FFE6 		uxth	r3, r3
 7443              		.loc 1 3594 12
 7444 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7445 01fc 3233A0E1 		lsr	r3, r2, r3
 7446              		.loc 1 3594 7
 7447 0200 000053E3 		cmp	r3, #0
 7448 0204 0100000A 		beq	.L475
3595:../../Source/Kernel/rme_kernel.c ****     {
3596:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3597:../../Source/Kernel/rme_kernel.c **** 
3598:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7449              		.loc 1 3598 16
 7450 0208 6430E0E3 		mvn	r3, #100
 7451 020c 030000EA 		b	.L464
 7452              	.L475:
3599:../../Source/Kernel/rme_kernel.c ****     }
3600:../../Source/Kernel/rme_kernel.c ****     else
3601:../../Source/Kernel/rme_kernel.c ****     {
3602:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3603:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3604:../../Source/Kernel/rme_kernel.c ****     }
3605:../../Source/Kernel/rme_kernel.c **** 
3606:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3607:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3608:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7453              		.loc 1 3608 8
 7454 0210 18101BE5 		ldr	r1, [fp, #-24]
 7455 0214 08001BE5 		ldr	r0, [fp, #-8]
 7456 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3609:../../Source/Kernel/rme_kernel.c ****     {
3610:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3611:../../Source/Kernel/rme_kernel.c **** 
3612:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3613:../../Source/Kernel/rme_kernel.c ****     }
3614:../../Source/Kernel/rme_kernel.c ****     else
3615:../../Source/Kernel/rme_kernel.c ****     {
3616:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3617:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3618:../../Source/Kernel/rme_kernel.c ****     }
3619:../../Source/Kernel/rme_kernel.c **** 
3620:../../Source/Kernel/rme_kernel.c ****     return 0;
 7457              		.loc 1 3620 12
 7458 021c 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 196


 7459              	.L464:
3621:../../Source/Kernel/rme_kernel.c **** }
 7460              		.loc 1 3621 1
 7461 0220 0300A0E1 		mov	r0, r3
 7462 0224 04D04BE2 		sub	sp, fp, #4
 7463              		.cfi_def_cfa 13, 8
 7464              		@ sp needed
 7465 0228 0088BDE8 		pop	{fp, pc}
 7466              		.cfi_endproc
 7467              	.LFE35:
 7469              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7470              		.align	2
 7471              		.syntax unified
 7472              		.arm
 7474              	_RME_Pgt_Con:
 7475              	.LFB36:
3622:../../Source/Kernel/rme_kernel.c **** #endif
3623:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3624:../../Source/Kernel/rme_kernel.c **** 
3625:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3626:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3627:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3628:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3629:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3630:../../Source/Kernel/rme_kernel.c ****                                          table.
3631:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3632:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3633:../../Source/Kernel/rme_kernel.c ****                               page table to.
3634:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3635:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3636:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3637:../../Source/Kernel/rme_kernel.c **** Output      : None.
3638:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3639:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3640:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3641:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3642:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3643:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3644:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3645:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3646:../../Source/Kernel/rme_kernel.c **** {
 7476              		.loc 1 3646 1
 7477              		.cfi_startproc
 7478              		@ args = 4, pretend = 0, frame = 40
 7479              		@ frame_needed = 1, uses_anonymous_args = 0
 7480 0000 00482DE9 		push	{fp, lr}
 7481              		.cfi_def_cfa_offset 8
 7482              		.cfi_offset 11, -8
 7483              		.cfi_offset 14, -4
 7484 0004 04B08DE2 		add	fp, sp, #4
 7485              		.cfi_def_cfa 11, 4
 7486 0008 28D04DE2 		sub	sp, sp, #40
 7487 000c 20000BE5 		str	r0, [fp, #-32]
 7488 0010 24100BE5 		str	r1, [fp, #-36]
 7489 0014 28200BE5 		str	r2, [fp, #-40]
 7490 0018 2C300BE5 		str	r3, [fp, #-44]
3647:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 197


3648:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3649:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3650:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3651:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3652:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3653:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3654:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3655:../../Source/Kernel/rme_kernel.c **** #endif
3656:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3657:../../Source/Kernel/rme_kernel.c ****     
3658:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3659:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7491              		.loc 1 3659 5
 7492 001c 24301BE5 		ldr	r3, [fp, #-36]
 7493 0020 803003E2 		and	r3, r3, #128
 7494 0024 000053E3 		cmp	r3, #0
 7495 0028 1C00001A 		bne	.L477
 7496              		.loc 1 3659 5 is_stmt 0 discriminator 1
 7497 002c 20301BE5 		ldr	r3, [fp, #-32]
 7498 0030 142093E5 		ldr	r2, [r3, #20]
 7499 0034 24301BE5 		ldr	r3, [fp, #-36]
 7500 0038 030052E1 		cmp	r2, r3
 7501 003c 0100008A 		bhi	.L478
 7502              		.loc 1 3659 5 discriminator 3
 7503 0040 0230E0E3 		mvn	r3, #2
 7504              		.loc 1 3659 5
 7505 0044 140100EA 		b	.L479
 7506              	.L478:
 7507              		.loc 1 3659 5 discriminator 4
 7508 0048 24301BE5 		ldr	r3, [fp, #-36]
 7509 004c 8322A0E1 		lsl	r2, r3, #5
 7510 0050 20301BE5 		ldr	r3, [fp, #-32]
 7511 0054 0C3093E5 		ldr	r3, [r3, #12]
 7512 0058 033082E0 		add	r3, r2, r3
 7513 005c 08300BE5 		str	r3, [fp, #-8]
 7514 0060 08301BE5 		ldr	r3, [fp, #-8]
 7515 0064 0300A0E1 		mov	r0, r3
 7516 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7517 006c 10000BE5 		str	r0, [fp, #-16]
 7518              		.loc 1 3659 5 discriminator 1
 7519 0070 10301BE5 		ldr	r3, [fp, #-16]
 7520 0074 FF3803E2 		and	r3, r3, #16711680
 7521 0078 020853E3 		cmp	r3, #131072
 7522 007c 0100001A 		bne	.L480
 7523              		.loc 1 3659 5 discriminator 5
 7524 0080 0830E0E3 		mvn	r3, #8
 7525              		.loc 1 3659 5
 7526 0084 040100EA 		b	.L479
 7527              	.L480:
 7528              		.loc 1 3659 5 discriminator 6
 7529 0088 10301BE5 		ldr	r3, [fp, #-16]
 7530 008c 233CA0E1 		lsr	r3, r3, #24
 7531 0090 040053E3 		cmp	r3, #4
 7532 0094 3F00000A 		beq	.L481
 7533              		.loc 1 3659 5 discriminator 7
 7534 0098 0130E0E3 		mvn	r3, #1
 7535              		.loc 1 3659 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 198


 7536 009c FE0000EA 		b	.L479
 7537              	.L477:
 7538              		.loc 1 3659 5 discriminator 2
 7539 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7540 00a4 2324A0E1 		lsr	r2, r3, #8
 7541 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7542 00ac 143093E5 		ldr	r3, [r3, #20]
 7543 00b0 030052E1 		cmp	r2, r3
 7544 00b4 0100003A 		bcc	.L482
 7545              		.loc 1 3659 5 discriminator 8
 7546 00b8 0230E0E3 		mvn	r3, #2
 7547              		.loc 1 3659 5
 7548 00bc F60000EA 		b	.L479
 7549              	.L482:
 7550              		.loc 1 3659 5 discriminator 9
 7551 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7552 00c4 2334A0E1 		lsr	r3, r3, #8
 7553 00c8 8322A0E1 		lsl	r2, r3, #5
 7554 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7555 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7556 00d4 033082E0 		add	r3, r2, r3
 7557 00d8 08300BE5 		str	r3, [fp, #-8]
 7558 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7559 00e0 0300A0E1 		mov	r0, r3
 7560 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7561 00e8 10000BE5 		str	r0, [fp, #-16]
 7562              		.loc 1 3659 5 discriminator 1
 7563 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7564 00f0 FF3803E2 		and	r3, r3, #16711680
 7565 00f4 020853E3 		cmp	r3, #131072
 7566 00f8 0100001A 		bne	.L483
 7567              		.loc 1 3659 5 discriminator 10
 7568 00fc 0830E0E3 		mvn	r3, #8
 7569              		.loc 1 3659 5
 7570 0100 E50000EA 		b	.L479
 7571              	.L483:
 7572              		.loc 1 3659 5 discriminator 11
 7573 0104 10301BE5 		ldr	r3, [fp, #-16]
 7574 0108 233CA0E1 		lsr	r3, r3, #24
 7575 010c 030053E3 		cmp	r3, #3
 7576 0110 0100000A 		beq	.L484
 7577              		.loc 1 3659 5 discriminator 12
 7578 0114 0130E0E3 		mvn	r3, #1
 7579              		.loc 1 3659 5
 7580 0118 DF0000EA 		b	.L479
 7581              	.L484:
 7582              		.loc 1 3659 5 discriminator 13
 7583 011c 24301BE5 		ldr	r3, [fp, #-36]
 7584 0120 7F2003E2 		and	r2, r3, #127
 7585 0124 08301BE5 		ldr	r3, [fp, #-8]
 7586 0128 143093E5 		ldr	r3, [r3, #20]
 7587 012c 030052E1 		cmp	r2, r3
 7588 0130 0100003A 		bcc	.L485
 7589              		.loc 1 3659 5 discriminator 14
 7590 0134 0230E0E3 		mvn	r3, #2
 7591              		.loc 1 3659 5
 7592 0138 D70000EA 		b	.L479
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 199


 7593              	.L485:
 7594              		.loc 1 3659 5 discriminator 15
 7595 013c 24301BE5 		ldr	r3, [fp, #-36]
 7596 0140 7F3003E2 		and	r3, r3, #127
 7597 0144 8322A0E1 		lsl	r2, r3, #5
 7598 0148 08301BE5 		ldr	r3, [fp, #-8]
 7599 014c 0C3093E5 		ldr	r3, [r3, #12]
 7600 0150 033082E0 		add	r3, r2, r3
 7601 0154 08300BE5 		str	r3, [fp, #-8]
 7602 0158 08301BE5 		ldr	r3, [fp, #-8]
 7603 015c 0300A0E1 		mov	r0, r3
 7604 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7605 0164 10000BE5 		str	r0, [fp, #-16]
 7606              		.loc 1 3659 5 discriminator 1
 7607 0168 10301BE5 		ldr	r3, [fp, #-16]
 7608 016c FF3803E2 		and	r3, r3, #16711680
 7609 0170 020853E3 		cmp	r3, #131072
 7610 0174 0100001A 		bne	.L486
 7611              		.loc 1 3659 5 discriminator 16
 7612 0178 0830E0E3 		mvn	r3, #8
 7613              		.loc 1 3659 5
 7614 017c C60000EA 		b	.L479
 7615              	.L486:
 7616              		.loc 1 3659 5 discriminator 17
 7617 0180 10301BE5 		ldr	r3, [fp, #-16]
 7618 0184 233CA0E1 		lsr	r3, r3, #24
 7619 0188 040053E3 		cmp	r3, #4
 7620 018c 0100000A 		beq	.L481
 7621              		.loc 1 3659 5 discriminator 18
 7622 0190 0130E0E3 		mvn	r3, #1
 7623              		.loc 1 3659 5
 7624 0194 C00000EA 		b	.L479
 7625              	.L481:
3660:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3661:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7626              		.loc 1 3661 5 is_stmt 1
 7627 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7628 019c 803003E2 		and	r3, r3, #128
 7629 01a0 000053E3 		cmp	r3, #0
 7630 01a4 1C00001A 		bne	.L487
 7631              		.loc 1 3661 5 is_stmt 0 discriminator 1
 7632 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7633 01ac 142093E5 		ldr	r2, [r3, #20]
 7634 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7635 01b4 030052E1 		cmp	r2, r3
 7636 01b8 0100008A 		bhi	.L488
 7637              		.loc 1 3661 5 discriminator 3
 7638 01bc 0230E0E3 		mvn	r3, #2
 7639              		.loc 1 3661 5
 7640 01c0 B50000EA 		b	.L479
 7641              	.L488:
 7642              		.loc 1 3661 5 discriminator 4
 7643 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7644 01c8 8322A0E1 		lsl	r2, r3, #5
 7645 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7646 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7647 01d4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 200


 7648 01d8 0C300BE5 		str	r3, [fp, #-12]
 7649 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7650 01e0 0300A0E1 		mov	r0, r3
 7651 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7652 01e8 10000BE5 		str	r0, [fp, #-16]
 7653              		.loc 1 3661 5 discriminator 1
 7654 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7655 01f0 FF3803E2 		and	r3, r3, #16711680
 7656 01f4 020853E3 		cmp	r3, #131072
 7657 01f8 0100001A 		bne	.L489
 7658              		.loc 1 3661 5 discriminator 5
 7659 01fc 0830E0E3 		mvn	r3, #8
 7660              		.loc 1 3661 5
 7661 0200 A50000EA 		b	.L479
 7662              	.L489:
 7663              		.loc 1 3661 5 discriminator 6
 7664 0204 10301BE5 		ldr	r3, [fp, #-16]
 7665 0208 233CA0E1 		lsr	r3, r3, #24
 7666 020c 040053E3 		cmp	r3, #4
 7667 0210 3F00000A 		beq	.L490
 7668              		.loc 1 3661 5 discriminator 7
 7669 0214 0130E0E3 		mvn	r3, #1
 7670              		.loc 1 3661 5
 7671 0218 9F0000EA 		b	.L479
 7672              	.L487:
 7673              		.loc 1 3661 5 discriminator 2
 7674 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7675 0220 2324A0E1 		lsr	r2, r3, #8
 7676 0224 20301BE5 		ldr	r3, [fp, #-32]
 7677 0228 143093E5 		ldr	r3, [r3, #20]
 7678 022c 030052E1 		cmp	r2, r3
 7679 0230 0100003A 		bcc	.L491
 7680              		.loc 1 3661 5 discriminator 8
 7681 0234 0230E0E3 		mvn	r3, #2
 7682              		.loc 1 3661 5
 7683 0238 970000EA 		b	.L479
 7684              	.L491:
 7685              		.loc 1 3661 5 discriminator 9
 7686 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7687 0240 2334A0E1 		lsr	r3, r3, #8
 7688 0244 8322A0E1 		lsl	r2, r3, #5
 7689 0248 20301BE5 		ldr	r3, [fp, #-32]
 7690 024c 0C3093E5 		ldr	r3, [r3, #12]
 7691 0250 033082E0 		add	r3, r2, r3
 7692 0254 0C300BE5 		str	r3, [fp, #-12]
 7693 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7694 025c 0300A0E1 		mov	r0, r3
 7695 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7696 0264 10000BE5 		str	r0, [fp, #-16]
 7697              		.loc 1 3661 5 discriminator 1
 7698 0268 10301BE5 		ldr	r3, [fp, #-16]
 7699 026c FF3803E2 		and	r3, r3, #16711680
 7700 0270 020853E3 		cmp	r3, #131072
 7701 0274 0100001A 		bne	.L492
 7702              		.loc 1 3661 5 discriminator 10
 7703 0278 0830E0E3 		mvn	r3, #8
 7704              		.loc 1 3661 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 201


 7705 027c 860000EA 		b	.L479
 7706              	.L492:
 7707              		.loc 1 3661 5 discriminator 11
 7708 0280 10301BE5 		ldr	r3, [fp, #-16]
 7709 0284 233CA0E1 		lsr	r3, r3, #24
 7710 0288 030053E3 		cmp	r3, #3
 7711 028c 0100000A 		beq	.L493
 7712              		.loc 1 3661 5 discriminator 12
 7713 0290 0130E0E3 		mvn	r3, #1
 7714              		.loc 1 3661 5
 7715 0294 800000EA 		b	.L479
 7716              	.L493:
 7717              		.loc 1 3661 5 discriminator 13
 7718 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7719 029c 7F2003E2 		and	r2, r3, #127
 7720 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7721 02a4 143093E5 		ldr	r3, [r3, #20]
 7722 02a8 030052E1 		cmp	r2, r3
 7723 02ac 0100003A 		bcc	.L494
 7724              		.loc 1 3661 5 discriminator 14
 7725 02b0 0230E0E3 		mvn	r3, #2
 7726              		.loc 1 3661 5
 7727 02b4 780000EA 		b	.L479
 7728              	.L494:
 7729              		.loc 1 3661 5 discriminator 15
 7730 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7731 02bc 7F3003E2 		and	r3, r3, #127
 7732 02c0 8322A0E1 		lsl	r2, r3, #5
 7733 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7734 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7735 02cc 033082E0 		add	r3, r2, r3
 7736 02d0 0C300BE5 		str	r3, [fp, #-12]
 7737 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7738 02d8 0300A0E1 		mov	r0, r3
 7739 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7740 02e0 10000BE5 		str	r0, [fp, #-16]
 7741              		.loc 1 3661 5 discriminator 1
 7742 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7743 02e8 FF3803E2 		and	r3, r3, #16711680
 7744 02ec 020853E3 		cmp	r3, #131072
 7745 02f0 0100001A 		bne	.L495
 7746              		.loc 1 3661 5 discriminator 16
 7747 02f4 0830E0E3 		mvn	r3, #8
 7748              		.loc 1 3661 5
 7749 02f8 670000EA 		b	.L479
 7750              	.L495:
 7751              		.loc 1 3661 5 discriminator 17
 7752 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7753 0300 233CA0E1 		lsr	r3, r3, #24
 7754 0304 040053E3 		cmp	r3, #4
 7755 0308 0100000A 		beq	.L490
 7756              		.loc 1 3661 5 discriminator 18
 7757 030c 0130E0E3 		mvn	r3, #1
 7758              		.loc 1 3661 5
 7759 0310 610000EA 		b	.L479
 7760              	.L490:
3662:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 202


3663:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3664:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7761              		.loc 1 3664 5 is_stmt 1
 7762 0314 08301BE5 		ldr	r3, [fp, #-8]
 7763 0318 083093E5 		ldr	r3, [r3, #8]
 7764 031c 103003E2 		and	r3, r3, #16
 7765 0320 000053E3 		cmp	r3, #0
 7766 0324 0100001A 		bne	.L496
 7767              		.loc 1 3664 5 is_stmt 0 discriminator 1
 7768 0328 0630E0E3 		mvn	r3, #6
 7769              		.loc 1 3664 5
 7770 032c 5A0000EA 		b	.L479
 7771              	.L496:
3665:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7772              		.loc 1 3665 5 is_stmt 1
 7773 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7774 0334 083093E5 		ldr	r3, [r3, #8]
 7775 0338 083003E2 		and	r3, r3, #8
 7776 033c 000053E3 		cmp	r3, #0
 7777 0340 0100001A 		bne	.L497
 7778              		.loc 1 3665 5 is_stmt 0 discriminator 1
 7779 0344 0630E0E3 		mvn	r3, #6
 7780              		.loc 1 3665 5
 7781 0348 530000EA 		b	.L479
 7782              	.L497:
3666:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3667:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7783              		.loc 1 3667 13 is_stmt 1
 7784 034c 08301BE5 		ldr	r3, [fp, #-8]
 7785 0350 083093E5 		ldr	r3, [r3, #8]
 7786 0354 233AA0E1 		lsr	r3, r3, #20
 7787              		.loc 1 3667 7
 7788 0358 28201BE5 		ldr	r2, [fp, #-40]
 7789 035c 030052E1 		cmp	r2, r3
 7790 0360 0600008A 		bhi	.L498
3668:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7791              		.loc 1 3668 13
 7792 0364 08301BE5 		ldr	r3, [fp, #-8]
 7793 0368 083093E5 		ldr	r3, [r3, #8]
 7794 036c 2334A0E1 		lsr	r3, r3, #8
 7795 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3667:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7796              		.loc 1 3667 54 discriminator 1
 7797 0374 28201BE5 		ldr	r2, [fp, #-40]
 7798 0378 030052E1 		cmp	r2, r3
 7799 037c 0100002A 		bcs	.L499
 7800              	.L498:
3669:../../Source/Kernel/rme_kernel.c ****     {
3670:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3671:../../Source/Kernel/rme_kernel.c **** 
3672:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7801              		.loc 1 3672 16
 7802 0380 0630E0E3 		mvn	r3, #6
 7803 0384 440000EA 		b	.L479
 7804              	.L499:
3673:../../Source/Kernel/rme_kernel.c ****     }
3674:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 203


3675:../../Source/Kernel/rme_kernel.c ****     {
3676:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3677:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3678:../../Source/Kernel/rme_kernel.c ****     }
3679:../../Source/Kernel/rme_kernel.c ****     
3680:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3681:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7805              		.loc 1 3681 14
 7806 0388 08301BE5 		ldr	r3, [fp, #-8]
 7807 038c 143093E5 		ldr	r3, [r3, #20]
 7808 0390 7330FFE6 		uxth	r3, r3
 7809              		.loc 1 3681 12
 7810 0394 28201BE5 		ldr	r2, [fp, #-40]
 7811 0398 3233A0E1 		lsr	r3, r2, r3
 7812              		.loc 1 3681 7
 7813 039c 000053E3 		cmp	r3, #0
 7814 03a0 0100000A 		beq	.L500
3682:../../Source/Kernel/rme_kernel.c ****     {
3683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3684:../../Source/Kernel/rme_kernel.c **** 
3685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7815              		.loc 1 3685 16
 7816 03a4 6430E0E3 		mvn	r3, #100
 7817 03a8 3B0000EA 		b	.L479
 7818              	.L500:
3686:../../Source/Kernel/rme_kernel.c ****     }
3687:../../Source/Kernel/rme_kernel.c ****     else
3688:../../Source/Kernel/rme_kernel.c ****     {
3689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3691:../../Source/Kernel/rme_kernel.c ****     }
3692:../../Source/Kernel/rme_kernel.c ****     
3693:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3694:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7819              		.loc 1 3694 17
 7820 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7821 03b0 143093E5 		ldr	r3, [r3, #20]
 7822 03b4 7320FFE6 		uxth	r2, r3
 7823              		.loc 1 3694 49
 7824 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7825 03bc 143093E5 		ldr	r3, [r3, #20]
 7826 03c0 2338A0E1 		lsr	r3, r3, #16
 7827              		.loc 1 3694 16
 7828 03c4 033082E0 		add	r3, r2, r3
 7829 03c8 14300BE5 		str	r3, [fp, #-20]
3695:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7830              		.loc 1 3695 18
 7831 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7832 03d0 143093E5 		ldr	r3, [r3, #20]
 7833              		.loc 1 3695 17
 7834 03d4 2338A0E1 		lsr	r3, r3, #16
 7835 03d8 18300BE5 		str	r3, [fp, #-24]
3696:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7836              		.loc 1 3696 7
 7837 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7838 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7839 03e4 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 204


 7840 03e8 0100002A 		bcs	.L501
3697:../../Source/Kernel/rme_kernel.c ****     {
3698:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3699:../../Source/Kernel/rme_kernel.c ****         
3700:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7841              		.loc 1 3700 16
 7842 03ec 6430E0E3 		mvn	r3, #100
 7843 03f0 290000EA 		b	.L479
 7844              	.L501:
3701:../../Source/Kernel/rme_kernel.c ****     }
3702:../../Source/Kernel/rme_kernel.c ****     else
3703:../../Source/Kernel/rme_kernel.c ****     {
3704:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3705:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3706:../../Source/Kernel/rme_kernel.c ****     }
3707:../../Source/Kernel/rme_kernel.c **** 
3708:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3709:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3710:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3711:../../Source/Kernel/rme_kernel.c ****     {
3712:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3713:../../Source/Kernel/rme_kernel.c ****         
3714:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3715:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3716:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3717:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3718:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3719:../../Source/Kernel/rme_kernel.c ****         {
3720:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3721:../../Source/Kernel/rme_kernel.c ****             
3722:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3723:../../Source/Kernel/rme_kernel.c ****         }
3724:../../Source/Kernel/rme_kernel.c ****         else
3725:../../Source/Kernel/rme_kernel.c ****         {
3726:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3727:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3728:../../Source/Kernel/rme_kernel.c ****         }
3729:../../Source/Kernel/rme_kernel.c ****         
3730:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3731:../../Source/Kernel/rme_kernel.c ****         
3732:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3733:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3734:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3735:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3736:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3737:../../Source/Kernel/rme_kernel.c ****         {
3738:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3739:../../Source/Kernel/rme_kernel.c ****             
3740:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3741:../../Source/Kernel/rme_kernel.c ****             {
3742:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3743:../../Source/Kernel/rme_kernel.c **** 
3744:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3745:../../Source/Kernel/rme_kernel.c ****             }
3746:../../Source/Kernel/rme_kernel.c ****             else
3747:../../Source/Kernel/rme_kernel.c ****             {
3748:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 205


3749:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3750:../../Source/Kernel/rme_kernel.c ****             }
3751:../../Source/Kernel/rme_kernel.c ****         }
3752:../../Source/Kernel/rme_kernel.c ****         else
3753:../../Source/Kernel/rme_kernel.c ****         {
3754:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3755:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3756:../../Source/Kernel/rme_kernel.c ****         }
3757:../../Source/Kernel/rme_kernel.c ****     }
3758:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3759:../../Source/Kernel/rme_kernel.c ****     else
3760:../../Source/Kernel/rme_kernel.c ****     {
3761:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3762:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3763:../../Source/Kernel/rme_kernel.c ****     }
3764:../../Source/Kernel/rme_kernel.c **** #else
3765:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3766:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7845              		.loc 1 3766 7
 7846 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7847 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7848 03fc 030052E1 		cmp	r2, r3
 7849 0400 0100000A 		beq	.L502
3767:../../Source/Kernel/rme_kernel.c ****     {
3768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3769:../../Source/Kernel/rme_kernel.c **** 
3770:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7850              		.loc 1 3770 16
 7851 0404 6430E0E3 		mvn	r3, #100
 7852 0408 230000EA 		b	.L479
 7853              	.L502:
3771:../../Source/Kernel/rme_kernel.c ****     }
3772:../../Source/Kernel/rme_kernel.c ****     else
3773:../../Source/Kernel/rme_kernel.c ****     {
3774:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3775:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3776:../../Source/Kernel/rme_kernel.c ****     }
3777:../../Source/Kernel/rme_kernel.c **** #endif
3778:../../Source/Kernel/rme_kernel.c **** 
3779:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3780:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3781:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7854              		.loc 1 3781 8
 7855 040c 04309BE5 		ldr	r3, [fp, #4]
 7856 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7857 0414 28101BE5 		ldr	r1, [fp, #-40]
 7858 0418 08001BE5 		ldr	r0, [fp, #-8]
 7859 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3782:../../Source/Kernel/rme_kernel.c ****     {
3783:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3784:../../Source/Kernel/rme_kernel.c **** 
3785:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3786:../../Source/Kernel/rme_kernel.c ****     }
3787:../../Source/Kernel/rme_kernel.c ****     else
3788:../../Source/Kernel/rme_kernel.c ****     {
3789:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3790:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 206


3791:../../Source/Kernel/rme_kernel.c ****     }
3792:../../Source/Kernel/rme_kernel.c ****     
3793:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3794:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7860              		.loc 1 3794 14
 7861 0420 08301BE5 		ldr	r3, [fp, #-8]
 7862 0424 003093E5 		ldr	r3, [r3]
 7863 0428 7330FFE6 		uxth	r3, r3
 7864 042c 000053E3 		cmp	r3, #0
 7865 0430 0200000A 		beq	.L503
 7866              		.loc 1 3794 14 is_stmt 0 discriminator 1
 7867 0434 08301BE5 		ldr	r3, [fp, #-8]
 7868 0438 043093E5 		ldr	r3, [r3, #4]
 7869 043c 000000EA 		b	.L504
 7870              	.L503:
 7871              		.loc 1 3794 14 discriminator 2
 7872 0440 08301BE5 		ldr	r3, [fp, #-8]
 7873              	.L504:
 7874              		.loc 1 3794 13 is_stmt 1 discriminator 4
 7875 0444 1C300BE5 		str	r3, [fp, #-28]
3795:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7876              		.loc 1 3795 5
 7877 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7878 044c 043083E2 		add	r3, r3, #4
 7879 0450 0110A0E3 		mov	r1, #1
 7880 0454 0300A0E1 		mov	r0, r3
 7881 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3796:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7882              		.loc 1 3796 14
 7883 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7884 0460 003093E5 		ldr	r3, [r3]
 7885 0464 7330FFE6 		uxth	r3, r3
 7886 0468 000053E3 		cmp	r3, #0
 7887 046c 0200000A 		beq	.L505
 7888              		.loc 1 3796 14 is_stmt 0 discriminator 1
 7889 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7890 0474 043093E5 		ldr	r3, [r3, #4]
 7891 0478 000000EA 		b	.L506
 7892              	.L505:
 7893              		.loc 1 3796 14 discriminator 2
 7894 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7895              	.L506:
 7896              		.loc 1 3796 13 is_stmt 1 discriminator 4
 7897 0480 1C300BE5 		str	r3, [fp, #-28]
3797:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7898              		.loc 1 3797 5
 7899 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7900 0488 043083E2 		add	r3, r3, #4
 7901 048c 0110A0E3 		mov	r1, #1
 7902 0490 0300A0E1 		mov	r0, r3
 7903 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3798:../../Source/Kernel/rme_kernel.c **** 
3799:../../Source/Kernel/rme_kernel.c ****     return 0;
 7904              		.loc 1 3799 12
 7905 0498 0030A0E3 		mov	r3, #0
 7906              	.L479:
3800:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 207


 7907              		.loc 1 3800 1
 7908 049c 0300A0E1 		mov	r0, r3
 7909 04a0 04D04BE2 		sub	sp, fp, #4
 7910              		.cfi_def_cfa 13, 8
 7911              		@ sp needed
 7912 04a4 0088BDE8 		pop	{fp, pc}
 7913              		.cfi_endproc
 7914              	.LFE36:
 7916              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7917              		.align	2
 7918              		.syntax unified
 7919              		.arm
 7921              	_RME_Pgt_Des:
 7922              	.LFB37:
3801:../../Source/Kernel/rme_kernel.c **** #endif
3802:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3803:../../Source/Kernel/rme_kernel.c **** 
3804:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3805:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3806:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3807:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3808:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3809:../../Source/Kernel/rme_kernel.c ****                                          table.
3810:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3812:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3813:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3814:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3815:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3816:../../Source/Kernel/rme_kernel.c **** Output      : None.
3817:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3818:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3819:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3820:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3821:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3822:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3823:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3824:../../Source/Kernel/rme_kernel.c **** {
 7923              		.loc 1 3824 1
 7924              		.cfi_startproc
 7925              		@ args = 0, pretend = 0, frame = 32
 7926              		@ frame_needed = 1, uses_anonymous_args = 0
 7927 0000 00482DE9 		push	{fp, lr}
 7928              		.cfi_def_cfa_offset 8
 7929              		.cfi_offset 11, -8
 7930              		.cfi_offset 14, -4
 7931 0004 04B08DE2 		add	fp, sp, #4
 7932              		.cfi_def_cfa 11, 4
 7933 0008 20D04DE2 		sub	sp, sp, #32
 7934 000c 18000BE5 		str	r0, [fp, #-24]
 7935 0010 1C100BE5 		str	r1, [fp, #-28]
 7936 0014 20200BE5 		str	r2, [fp, #-32]
 7937 0018 24300BE5 		str	r3, [fp, #-36]
3825:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3826:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3827:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3828:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 208


3829:../../Source/Kernel/rme_kernel.c ****     
3830:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3831:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7938              		.loc 1 3831 5
 7939 001c 1C301BE5 		ldr	r3, [fp, #-28]
 7940 0020 803003E2 		and	r3, r3, #128
 7941 0024 000053E3 		cmp	r3, #0
 7942 0028 1C00001A 		bne	.L508
 7943              		.loc 1 3831 5 is_stmt 0 discriminator 1
 7944 002c 18301BE5 		ldr	r3, [fp, #-24]
 7945 0030 142093E5 		ldr	r2, [r3, #20]
 7946 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7947 0038 030052E1 		cmp	r2, r3
 7948 003c 0100008A 		bhi	.L509
 7949              		.loc 1 3831 5 discriminator 3
 7950 0040 0230E0E3 		mvn	r3, #2
 7951              		.loc 1 3831 5
 7952 0044 000100EA 		b	.L510
 7953              	.L509:
 7954              		.loc 1 3831 5 discriminator 4
 7955 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7956 004c 8322A0E1 		lsl	r2, r3, #5
 7957 0050 18301BE5 		ldr	r3, [fp, #-24]
 7958 0054 0C3093E5 		ldr	r3, [r3, #12]
 7959 0058 033082E0 		add	r3, r2, r3
 7960 005c 08300BE5 		str	r3, [fp, #-8]
 7961 0060 08301BE5 		ldr	r3, [fp, #-8]
 7962 0064 0300A0E1 		mov	r0, r3
 7963 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7964 006c 10000BE5 		str	r0, [fp, #-16]
 7965              		.loc 1 3831 5 discriminator 1
 7966 0070 10301BE5 		ldr	r3, [fp, #-16]
 7967 0074 FF3803E2 		and	r3, r3, #16711680
 7968 0078 020853E3 		cmp	r3, #131072
 7969 007c 0100001A 		bne	.L511
 7970              		.loc 1 3831 5 discriminator 5
 7971 0080 0830E0E3 		mvn	r3, #8
 7972              		.loc 1 3831 5
 7973 0084 F00000EA 		b	.L510
 7974              	.L511:
 7975              		.loc 1 3831 5 discriminator 6
 7976 0088 10301BE5 		ldr	r3, [fp, #-16]
 7977 008c 233CA0E1 		lsr	r3, r3, #24
 7978 0090 030053E3 		cmp	r3, #3
 7979 0094 3F00000A 		beq	.L512
 7980              		.loc 1 3831 5 discriminator 7
 7981 0098 0130E0E3 		mvn	r3, #1
 7982              		.loc 1 3831 5
 7983 009c EA0000EA 		b	.L510
 7984              	.L508:
 7985              		.loc 1 3831 5 discriminator 2
 7986 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7987 00a4 2324A0E1 		lsr	r2, r3, #8
 7988 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7989 00ac 143093E5 		ldr	r3, [r3, #20]
 7990 00b0 030052E1 		cmp	r2, r3
 7991 00b4 0100003A 		bcc	.L513
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 209


 7992              		.loc 1 3831 5 discriminator 8
 7993 00b8 0230E0E3 		mvn	r3, #2
 7994              		.loc 1 3831 5
 7995 00bc E20000EA 		b	.L510
 7996              	.L513:
 7997              		.loc 1 3831 5 discriminator 9
 7998 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 7999 00c4 2334A0E1 		lsr	r3, r3, #8
 8000 00c8 8322A0E1 		lsl	r2, r3, #5
 8001 00cc 18301BE5 		ldr	r3, [fp, #-24]
 8002 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8003 00d4 033082E0 		add	r3, r2, r3
 8004 00d8 08300BE5 		str	r3, [fp, #-8]
 8005 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8006 00e0 0300A0E1 		mov	r0, r3
 8007 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8008 00e8 10000BE5 		str	r0, [fp, #-16]
 8009              		.loc 1 3831 5 discriminator 1
 8010 00ec 10301BE5 		ldr	r3, [fp, #-16]
 8011 00f0 FF3803E2 		and	r3, r3, #16711680
 8012 00f4 020853E3 		cmp	r3, #131072
 8013 00f8 0100001A 		bne	.L514
 8014              		.loc 1 3831 5 discriminator 10
 8015 00fc 0830E0E3 		mvn	r3, #8
 8016              		.loc 1 3831 5
 8017 0100 D10000EA 		b	.L510
 8018              	.L514:
 8019              		.loc 1 3831 5 discriminator 11
 8020 0104 10301BE5 		ldr	r3, [fp, #-16]
 8021 0108 233CA0E1 		lsr	r3, r3, #24
 8022 010c 030053E3 		cmp	r3, #3
 8023 0110 0100000A 		beq	.L515
 8024              		.loc 1 3831 5 discriminator 12
 8025 0114 0130E0E3 		mvn	r3, #1
 8026              		.loc 1 3831 5
 8027 0118 CB0000EA 		b	.L510
 8028              	.L515:
 8029              		.loc 1 3831 5 discriminator 13
 8030 011c 1C301BE5 		ldr	r3, [fp, #-28]
 8031 0120 7F2003E2 		and	r2, r3, #127
 8032 0124 08301BE5 		ldr	r3, [fp, #-8]
 8033 0128 143093E5 		ldr	r3, [r3, #20]
 8034 012c 030052E1 		cmp	r2, r3
 8035 0130 0100003A 		bcc	.L516
 8036              		.loc 1 3831 5 discriminator 14
 8037 0134 0230E0E3 		mvn	r3, #2
 8038              		.loc 1 3831 5
 8039 0138 C30000EA 		b	.L510
 8040              	.L516:
 8041              		.loc 1 3831 5 discriminator 15
 8042 013c 1C301BE5 		ldr	r3, [fp, #-28]
 8043 0140 7F3003E2 		and	r3, r3, #127
 8044 0144 8322A0E1 		lsl	r2, r3, #5
 8045 0148 08301BE5 		ldr	r3, [fp, #-8]
 8046 014c 0C3093E5 		ldr	r3, [r3, #12]
 8047 0150 033082E0 		add	r3, r2, r3
 8048 0154 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 210


 8049 0158 08301BE5 		ldr	r3, [fp, #-8]
 8050 015c 0300A0E1 		mov	r0, r3
 8051 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8052 0164 10000BE5 		str	r0, [fp, #-16]
 8053              		.loc 1 3831 5 discriminator 1
 8054 0168 10301BE5 		ldr	r3, [fp, #-16]
 8055 016c FF3803E2 		and	r3, r3, #16711680
 8056 0170 020853E3 		cmp	r3, #131072
 8057 0174 0100001A 		bne	.L517
 8058              		.loc 1 3831 5 discriminator 16
 8059 0178 0830E0E3 		mvn	r3, #8
 8060              		.loc 1 3831 5
 8061 017c B20000EA 		b	.L510
 8062              	.L517:
 8063              		.loc 1 3831 5 discriminator 17
 8064 0180 10301BE5 		ldr	r3, [fp, #-16]
 8065 0184 233CA0E1 		lsr	r3, r3, #24
 8066 0188 030053E3 		cmp	r3, #3
 8067 018c 0100000A 		beq	.L512
 8068              		.loc 1 3831 5 discriminator 18
 8069 0190 0130E0E3 		mvn	r3, #1
 8070              		.loc 1 3831 5
 8071 0194 AC0000EA 		b	.L510
 8072              	.L512:
3832:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3833:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 8073              		.loc 1 3833 5 is_stmt 1
 8074 0198 24301BE5 		ldr	r3, [fp, #-36]
 8075 019c 803003E2 		and	r3, r3, #128
 8076 01a0 000053E3 		cmp	r3, #0
 8077 01a4 1C00001A 		bne	.L518
 8078              		.loc 1 3833 5 is_stmt 0 discriminator 1
 8079 01a8 18301BE5 		ldr	r3, [fp, #-24]
 8080 01ac 142093E5 		ldr	r2, [r3, #20]
 8081 01b0 24301BE5 		ldr	r3, [fp, #-36]
 8082 01b4 030052E1 		cmp	r2, r3
 8083 01b8 0100008A 		bhi	.L519
 8084              		.loc 1 3833 5 discriminator 3
 8085 01bc 0230E0E3 		mvn	r3, #2
 8086              		.loc 1 3833 5
 8087 01c0 A10000EA 		b	.L510
 8088              	.L519:
 8089              		.loc 1 3833 5 discriminator 4
 8090 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8091 01c8 8322A0E1 		lsl	r2, r3, #5
 8092 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8093 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8094 01d4 033082E0 		add	r3, r2, r3
 8095 01d8 0C300BE5 		str	r3, [fp, #-12]
 8096 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8097 01e0 0300A0E1 		mov	r0, r3
 8098 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8099 01e8 10000BE5 		str	r0, [fp, #-16]
 8100              		.loc 1 3833 5 discriminator 1
 8101 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8102 01f0 FF3803E2 		and	r3, r3, #16711680
 8103 01f4 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 211


 8104 01f8 0100001A 		bne	.L520
 8105              		.loc 1 3833 5 discriminator 5
 8106 01fc 0830E0E3 		mvn	r3, #8
 8107              		.loc 1 3833 5
 8108 0200 910000EA 		b	.L510
 8109              	.L520:
 8110              		.loc 1 3833 5 discriminator 6
 8111 0204 10301BE5 		ldr	r3, [fp, #-16]
 8112 0208 233CA0E1 		lsr	r3, r3, #24
 8113 020c 030053E3 		cmp	r3, #3
 8114 0210 3F00000A 		beq	.L521
 8115              		.loc 1 3833 5 discriminator 7
 8116 0214 0130E0E3 		mvn	r3, #1
 8117              		.loc 1 3833 5
 8118 0218 8B0000EA 		b	.L510
 8119              	.L518:
 8120              		.loc 1 3833 5 discriminator 2
 8121 021c 24301BE5 		ldr	r3, [fp, #-36]
 8122 0220 2324A0E1 		lsr	r2, r3, #8
 8123 0224 18301BE5 		ldr	r3, [fp, #-24]
 8124 0228 143093E5 		ldr	r3, [r3, #20]
 8125 022c 030052E1 		cmp	r2, r3
 8126 0230 0100003A 		bcc	.L522
 8127              		.loc 1 3833 5 discriminator 8
 8128 0234 0230E0E3 		mvn	r3, #2
 8129              		.loc 1 3833 5
 8130 0238 830000EA 		b	.L510
 8131              	.L522:
 8132              		.loc 1 3833 5 discriminator 9
 8133 023c 24301BE5 		ldr	r3, [fp, #-36]
 8134 0240 2334A0E1 		lsr	r3, r3, #8
 8135 0244 8322A0E1 		lsl	r2, r3, #5
 8136 0248 18301BE5 		ldr	r3, [fp, #-24]
 8137 024c 0C3093E5 		ldr	r3, [r3, #12]
 8138 0250 033082E0 		add	r3, r2, r3
 8139 0254 0C300BE5 		str	r3, [fp, #-12]
 8140 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8141 025c 0300A0E1 		mov	r0, r3
 8142 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8143 0264 10000BE5 		str	r0, [fp, #-16]
 8144              		.loc 1 3833 5 discriminator 1
 8145 0268 10301BE5 		ldr	r3, [fp, #-16]
 8146 026c FF3803E2 		and	r3, r3, #16711680
 8147 0270 020853E3 		cmp	r3, #131072
 8148 0274 0100001A 		bne	.L523
 8149              		.loc 1 3833 5 discriminator 10
 8150 0278 0830E0E3 		mvn	r3, #8
 8151              		.loc 1 3833 5
 8152 027c 720000EA 		b	.L510
 8153              	.L523:
 8154              		.loc 1 3833 5 discriminator 11
 8155 0280 10301BE5 		ldr	r3, [fp, #-16]
 8156 0284 233CA0E1 		lsr	r3, r3, #24
 8157 0288 030053E3 		cmp	r3, #3
 8158 028c 0100000A 		beq	.L524
 8159              		.loc 1 3833 5 discriminator 12
 8160 0290 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 212


 8161              		.loc 1 3833 5
 8162 0294 6C0000EA 		b	.L510
 8163              	.L524:
 8164              		.loc 1 3833 5 discriminator 13
 8165 0298 24301BE5 		ldr	r3, [fp, #-36]
 8166 029c 7F2003E2 		and	r2, r3, #127
 8167 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8168 02a4 143093E5 		ldr	r3, [r3, #20]
 8169 02a8 030052E1 		cmp	r2, r3
 8170 02ac 0100003A 		bcc	.L525
 8171              		.loc 1 3833 5 discriminator 14
 8172 02b0 0230E0E3 		mvn	r3, #2
 8173              		.loc 1 3833 5
 8174 02b4 640000EA 		b	.L510
 8175              	.L525:
 8176              		.loc 1 3833 5 discriminator 15
 8177 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8178 02bc 7F3003E2 		and	r3, r3, #127
 8179 02c0 8322A0E1 		lsl	r2, r3, #5
 8180 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8181 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8182 02cc 033082E0 		add	r3, r2, r3
 8183 02d0 0C300BE5 		str	r3, [fp, #-12]
 8184 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8185 02d8 0300A0E1 		mov	r0, r3
 8186 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8187 02e0 10000BE5 		str	r0, [fp, #-16]
 8188              		.loc 1 3833 5 discriminator 1
 8189 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8190 02e8 FF3803E2 		and	r3, r3, #16711680
 8191 02ec 020853E3 		cmp	r3, #131072
 8192 02f0 0100001A 		bne	.L526
 8193              		.loc 1 3833 5 discriminator 16
 8194 02f4 0830E0E3 		mvn	r3, #8
 8195              		.loc 1 3833 5
 8196 02f8 530000EA 		b	.L510
 8197              	.L526:
 8198              		.loc 1 3833 5 discriminator 17
 8199 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8200 0300 233CA0E1 		lsr	r3, r3, #24
 8201 0304 030053E3 		cmp	r3, #3
 8202 0308 0100000A 		beq	.L521
 8203              		.loc 1 3833 5 discriminator 18
 8204 030c 0130E0E3 		mvn	r3, #1
 8205              		.loc 1 3833 5
 8206 0310 4D0000EA 		b	.L510
 8207              	.L521:
3834:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3835:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3836:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8208              		.loc 1 3836 5 is_stmt 1
 8209 0314 08301BE5 		ldr	r3, [fp, #-8]
 8210 0318 083093E5 		ldr	r3, [r3, #8]
 8211 031c 203003E2 		and	r3, r3, #32
 8212 0320 000053E3 		cmp	r3, #0
 8213 0324 0100001A 		bne	.L527
 8214              		.loc 1 3836 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 213


 8215 0328 0630E0E3 		mvn	r3, #6
 8216              		.loc 1 3836 5
 8217 032c 460000EA 		b	.L510
 8218              	.L527:
3837:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 8219              		.loc 1 3837 5 is_stmt 1
 8220 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8221 0334 083093E5 		ldr	r3, [r3, #8]
 8222 0338 083003E2 		and	r3, r3, #8
 8223 033c 000053E3 		cmp	r3, #0
 8224 0340 0100001A 		bne	.L528
 8225              		.loc 1 3837 5 is_stmt 0 discriminator 1
 8226 0344 0630E0E3 		mvn	r3, #6
 8227              		.loc 1 3837 5
 8228 0348 3F0000EA 		b	.L510
 8229              	.L528:
3838:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3839:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8230              		.loc 1 3839 13 is_stmt 1
 8231 034c 08301BE5 		ldr	r3, [fp, #-8]
 8232 0350 083093E5 		ldr	r3, [r3, #8]
 8233 0354 233AA0E1 		lsr	r3, r3, #20
 8234              		.loc 1 3839 7
 8235 0358 20201BE5 		ldr	r2, [fp, #-32]
 8236 035c 030052E1 		cmp	r2, r3
 8237 0360 0600008A 		bhi	.L529
3840:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8238              		.loc 1 3840 13
 8239 0364 08301BE5 		ldr	r3, [fp, #-8]
 8240 0368 083093E5 		ldr	r3, [r3, #8]
 8241 036c 2334A0E1 		lsr	r3, r3, #8
 8242 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3839:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8243              		.loc 1 3839 54 discriminator 1
 8244 0374 20201BE5 		ldr	r2, [fp, #-32]
 8245 0378 030052E1 		cmp	r2, r3
 8246 037c 0100002A 		bcs	.L530
 8247              	.L529:
3841:../../Source/Kernel/rme_kernel.c ****     {
3842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3843:../../Source/Kernel/rme_kernel.c **** 
3844:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8248              		.loc 1 3844 16
 8249 0380 0630E0E3 		mvn	r3, #6
 8250 0384 300000EA 		b	.L510
 8251              	.L530:
3845:../../Source/Kernel/rme_kernel.c ****     }
3846:../../Source/Kernel/rme_kernel.c ****     else
3847:../../Source/Kernel/rme_kernel.c ****     {
3848:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3849:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3850:../../Source/Kernel/rme_kernel.c ****     }
3851:../../Source/Kernel/rme_kernel.c **** 
3852:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3853:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8252              		.loc 1 3853 14
 8253 0388 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 214


 8254 038c 143093E5 		ldr	r3, [r3, #20]
 8255 0390 7330FFE6 		uxth	r3, r3
 8256              		.loc 1 3853 12
 8257 0394 20201BE5 		ldr	r2, [fp, #-32]
 8258 0398 3233A0E1 		lsr	r3, r2, r3
 8259              		.loc 1 3853 7
 8260 039c 000053E3 		cmp	r3, #0
 8261 03a0 0100000A 		beq	.L531
3854:../../Source/Kernel/rme_kernel.c ****     {
3855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3856:../../Source/Kernel/rme_kernel.c **** 
3857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8262              		.loc 1 3857 16
 8263 03a4 6430E0E3 		mvn	r3, #100
 8264 03a8 270000EA 		b	.L510
 8265              	.L531:
3858:../../Source/Kernel/rme_kernel.c ****     }
3859:../../Source/Kernel/rme_kernel.c ****     else
3860:../../Source/Kernel/rme_kernel.c ****     {
3861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3863:../../Source/Kernel/rme_kernel.c ****     }
3864:../../Source/Kernel/rme_kernel.c **** 
3865:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3866:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3867:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3868:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3869:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8266              		.loc 1 3869 8
 8267 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8268 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8269 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8270 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8271 03bc 0030A0E1 		mov	r3, r0
 8272              		.loc 1 3869 7 discriminator 1
 8273 03c0 000053E3 		cmp	r3, #0
 8274 03c4 010000AA 		bge	.L532
3870:../../Source/Kernel/rme_kernel.c ****     {
3871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3872:../../Source/Kernel/rme_kernel.c **** 
3873:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8275              		.loc 1 3873 16
 8276 03c8 6530E0E3 		mvn	r3, #101
 8277 03cc 1E0000EA 		b	.L510
 8278              	.L532:
3874:../../Source/Kernel/rme_kernel.c ****     }
3875:../../Source/Kernel/rme_kernel.c ****     else
3876:../../Source/Kernel/rme_kernel.c ****     {
3877:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3878:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3879:../../Source/Kernel/rme_kernel.c ****     }
3880:../../Source/Kernel/rme_kernel.c ****     
3881:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3882:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8279              		.loc 1 3882 14
 8280 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8281 03d4 003093E5 		ldr	r3, [r3]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 215


 8282 03d8 7330FFE6 		uxth	r3, r3
 8283 03dc 000053E3 		cmp	r3, #0
 8284 03e0 0200000A 		beq	.L533
 8285              		.loc 1 3882 14 is_stmt 0 discriminator 1
 8286 03e4 08301BE5 		ldr	r3, [fp, #-8]
 8287 03e8 043093E5 		ldr	r3, [r3, #4]
 8288 03ec 000000EA 		b	.L534
 8289              	.L533:
 8290              		.loc 1 3882 14 discriminator 2
 8291 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8292              	.L534:
 8293              		.loc 1 3882 13 is_stmt 1 discriminator 4
 8294 03f4 14300BE5 		str	r3, [fp, #-20]
3883:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8295              		.loc 1 3883 5
 8296 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8297 03fc 043083E2 		add	r3, r3, #4
 8298 0400 0010E0E3 		mvn	r1, #0
 8299 0404 0300A0E1 		mov	r0, r3
 8300 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3884:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8301              		.loc 1 3884 14
 8302 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8303 0410 003093E5 		ldr	r3, [r3]
 8304 0414 7330FFE6 		uxth	r3, r3
 8305 0418 000053E3 		cmp	r3, #0
 8306 041c 0200000A 		beq	.L535
 8307              		.loc 1 3884 14 is_stmt 0 discriminator 1
 8308 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8309 0424 043093E5 		ldr	r3, [r3, #4]
 8310 0428 000000EA 		b	.L536
 8311              	.L535:
 8312              		.loc 1 3884 14 discriminator 2
 8313 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8314              	.L536:
 8315              		.loc 1 3884 13 is_stmt 1 discriminator 4
 8316 0430 14300BE5 		str	r3, [fp, #-20]
3885:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8317              		.loc 1 3885 5
 8318 0434 14301BE5 		ldr	r3, [fp, #-20]
 8319 0438 043083E2 		add	r3, r3, #4
 8320 043c 0010E0E3 		mvn	r1, #0
 8321 0440 0300A0E1 		mov	r0, r3
 8322 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3886:../../Source/Kernel/rme_kernel.c **** 
3887:../../Source/Kernel/rme_kernel.c ****     return 0;
 8323              		.loc 1 3887 12
 8324 0448 0030A0E3 		mov	r3, #0
 8325              	.L510:
3888:../../Source/Kernel/rme_kernel.c **** }
 8326              		.loc 1 3888 1
 8327 044c 0300A0E1 		mov	r0, r3
 8328 0450 04D04BE2 		sub	sp, fp, #4
 8329              		.cfi_def_cfa 13, 8
 8330              		@ sp needed
 8331 0454 0088BDE8 		pop	{fp, pc}
 8332              		.cfi_endproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 216


 8333              	.LFE37:
 8335              		.section	.text._RME_Kot_Init,"ax",%progbits
 8336              		.align	2
 8337              		.global	_RME_Kot_Init
 8338              		.syntax unified
 8339              		.arm
 8341              	_RME_Kot_Init:
 8342              	.LFB38:
3889:../../Source/Kernel/rme_kernel.c **** #endif
3890:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3891:../../Source/Kernel/rme_kernel.c **** 
3892:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3893:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3894:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3895:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
3896:../../Source/Kernel/rme_kernel.c **** Output      : None.
3897:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3898:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3900:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3901:../../Source/Kernel/rme_kernel.c **** {
 8343              		.loc 1 3901 1
 8344              		.cfi_startproc
 8345              		@ args = 0, pretend = 0, frame = 16
 8346              		@ frame_needed = 1, uses_anonymous_args = 0
 8347              		@ link register save eliminated.
 8348 0000 04B02DE5 		str	fp, [sp, #-4]!
 8349              		.cfi_def_cfa_offset 4
 8350              		.cfi_offset 11, -4
 8351 0004 00B08DE2 		add	fp, sp, #0
 8352              		.cfi_def_cfa_register 11
 8353 0008 14D04DE2 		sub	sp, sp, #20
 8354 000c 10000BE5 		str	r0, [fp, #-16]
3902:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3903:../../Source/Kernel/rme_kernel.c ****     
3904:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8355              		.loc 1 3904 7
 8356 0010 10301BE5 		ldr	r3, [fp, #-16]
 8357 0014 020953E3 		cmp	r3, #32768
 8358 0018 0100002A 		bcs	.L538
3905:../../Source/Kernel/rme_kernel.c ****     {
3906:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3907:../../Source/Kernel/rme_kernel.c **** 
3908:../../Source/Kernel/rme_kernel.c ****         return -1;
 8359              		.loc 1 3908 16
 8360 001c 0030E0E3 		mvn	r3, #0
 8361 0020 0F0000EA 		b	.L539
 8362              	.L538:
3909:../../Source/Kernel/rme_kernel.c ****     }
3910:../../Source/Kernel/rme_kernel.c ****     else
3911:../../Source/Kernel/rme_kernel.c ****     {
3912:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3913:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3914:../../Source/Kernel/rme_kernel.c ****     }
3915:../../Source/Kernel/rme_kernel.c **** 
3916:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3917:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 217


 8363              		.loc 1 3917 14
 8364 0024 0030A0E3 		mov	r3, #0
 8365 0028 08300BE5 		str	r3, [fp, #-8]
 8366              		.loc 1 3917 5
 8367 002c 070000EA 		b	.L540
 8368              	.L541:
3918:../../Source/Kernel/rme_kernel.c ****     {
3919:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8369              		.loc 1 3919 31
 8370 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8371 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8372 0038 08201BE5 		ldr	r2, [fp, #-8]
 8373 003c 0010A0E3 		mov	r1, #0
 8374 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3917:../../Source/Kernel/rme_kernel.c ****     {
 8375              		.loc 1 3917 34 discriminator 3
 8376 0044 08301BE5 		ldr	r3, [fp, #-8]
 8377 0048 013083E2 		add	r3, r3, #1
 8378 004c 08300BE5 		str	r3, [fp, #-8]
 8379              	.L540:
3917:../../Source/Kernel/rme_kernel.c ****     {
 8380              		.loc 1 3917 23 discriminator 1
 8381 0050 08201BE5 		ldr	r2, [fp, #-8]
 8382 0054 10301BE5 		ldr	r3, [fp, #-16]
 8383 0058 030052E1 		cmp	r2, r3
 8384 005c F3FFFF3A 		bcc	.L541
3920:../../Source/Kernel/rme_kernel.c ****     }
3921:../../Source/Kernel/rme_kernel.c **** 
3922:../../Source/Kernel/rme_kernel.c ****     return 0;
 8385              		.loc 1 3922 12
 8386 0060 0030A0E3 		mov	r3, #0
 8387              	.L539:
3923:../../Source/Kernel/rme_kernel.c **** }
 8388              		.loc 1 3923 1
 8389 0064 0300A0E1 		mov	r0, r3
 8390 0068 00D08BE2 		add	sp, fp, #0
 8391              		.cfi_def_cfa_register 13
 8392              		@ sp needed
 8393 006c 04B09DE4 		ldr	fp, [sp], #4
 8394              		.cfi_restore 11
 8395              		.cfi_def_cfa_offset 0
 8396 0070 1EFF2FE1 		bx	lr
 8397              		.cfi_endproc
 8398              	.LFE38:
 8400              		.section	.rodata
 8401 005d 000000   		.align	2
 8402              	.LC9:
 8403 0060 0D0A4368 		.ascii	"\015\012Check&Mark the start\000"
 8403      65636B26 
 8403      4D61726B 
 8403      20746865 
 8403      20737461 
 8404              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8405              		.align	2
 8406              		.global	_RME_Kot_Mark
 8407              		.syntax unified
 8408              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 218


 8410              	_RME_Kot_Mark:
 8411              	.LFB39:
3924:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3925:../../Source/Kernel/rme_kernel.c **** 
3926:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3927:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3928:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3929:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3930:../../Source/Kernel/rme_kernel.c **** Output      : None.
3931:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3932:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3933:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3934:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3935:../../Source/Kernel/rme_kernel.c **** {
 8412              		.loc 1 3935 1
 8413              		.cfi_startproc
 8414              		@ args = 0, pretend = 0, frame = 40
 8415              		@ frame_needed = 1, uses_anonymous_args = 0
 8416 0000 00482DE9 		push	{fp, lr}
 8417              		.cfi_def_cfa_offset 8
 8418              		.cfi_offset 11, -8
 8419              		.cfi_offset 14, -4
 8420 0004 04B08DE2 		add	fp, sp, #4
 8421              		.cfi_def_cfa 11, 4
 8422 0008 28D04DE2 		sub	sp, sp, #40
 8423 000c 28000BE5 		str	r0, [fp, #-40]
 8424 0010 2C100BE5 		str	r1, [fp, #-44]
3936:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3937:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3938:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3939:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3940:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3941:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3942:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3943:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3944:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3945:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3946:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3947:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3948:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3949:../../Source/Kernel/rme_kernel.c **** 
3950:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3951:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8425              		.loc 1 3951 14
 8426 0014 28301BE5 		ldr	r3, [fp, #-40]
 8427 0018 0F3003E2 		and	r3, r3, #15
 8428              		.loc 1 3951 7
 8429 001c 000053E3 		cmp	r3, #0
 8430 0020 0100000A 		beq	.L543
3952:../../Source/Kernel/rme_kernel.c ****     {
3953:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3954:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nCheck if the marking is well aligned");
3955:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8431              		.loc 1 3955 16
 8432 0024 0030E0E3 		mvn	r3, #0
 8433 0028 C50000EA 		b	.L544
 8434              	.L543:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 219


3956:../../Source/Kernel/rme_kernel.c ****     }
3957:../../Source/Kernel/rme_kernel.c ****     else
3958:../../Source/Kernel/rme_kernel.c ****     {
3959:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3960:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3961:../../Source/Kernel/rme_kernel.c ****     }
3962:../../Source/Kernel/rme_kernel.c ****     
3963:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3964:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8435              		.loc 1 3964 17
 8436 002c 28301BE5 		ldr	r3, [fp, #-40]
 8437 0030 7F3483E2 		add	r3, r3, #2130706432
 8438              		.loc 1 3964 10
 8439 0034 2332A0E1 		lsr	r3, r3, #4
 8440 0038 10300BE5 		str	r3, [fp, #-16]
3965:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8441              		.loc 1 3965 16
 8442 003c 10301BE5 		ldr	r3, [fp, #-16]
 8443 0040 1F3003E2 		and	r3, r3, #31
 8444              		.loc 1 3965 15
 8445 0044 0020E0E3 		mvn	r2, #0
 8446 0048 1233A0E1 		lsl	r3, r2, r3
 8447 004c 14300BE5 		str	r3, [fp, #-20]
3966:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8448              		.loc 1 3966 10
 8449 0050 10301BE5 		ldr	r3, [fp, #-16]
 8450 0054 A332A0E1 		lsr	r3, r3, #5
 8451 0058 10300BE5 		str	r3, [fp, #-16]
3967:../../Source/Kernel/rme_kernel.c ****     
3968:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8452              		.loc 1 3968 15
 8453 005c 28201BE5 		ldr	r2, [fp, #-40]
 8454 0060 2C301BE5 		ldr	r3, [fp, #-44]
 8455 0064 033082E0 		add	r3, r2, r3
 8456              		.loc 1 3968 23
 8457 0068 7F3483E2 		add	r3, r3, #2130706432
 8458 006c 013043E2 		sub	r3, r3, #1
 8459              		.loc 1 3968 8
 8460 0070 2332A0E1 		lsr	r3, r3, #4
 8461 0074 18300BE5 		str	r3, [fp, #-24]
3969:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8462              		.loc 1 3969 14
 8463 0078 18301BE5 		ldr	r3, [fp, #-24]
 8464 007c 0330E0E1 		mvn	r3, r3
 8465 0080 1F3003E2 		and	r3, r3, #31
 8466              		.loc 1 3969 13
 8467 0084 0020E0E3 		mvn	r2, #0
 8468 0088 3233A0E1 		lsr	r3, r2, r3
 8469 008c 1C300BE5 		str	r3, [fp, #-28]
3970:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8470              		.loc 1 3970 8
 8471 0090 18301BE5 		ldr	r3, [fp, #-24]
 8472 0094 A332A0E1 		lsr	r3, r3, #5
 8473 0098 18300BE5 		str	r3, [fp, #-24]
3971:../../Source/Kernel/rme_kernel.c ****     
3972:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3973:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 220


 8474              		.loc 1 3973 7
 8475 009c 10201BE5 		ldr	r2, [fp, #-16]
 8476 00a0 18301BE5 		ldr	r3, [fp, #-24]
 8477 00a4 030052E1 		cmp	r2, r3
 8478 00a8 1F00001A 		bne	.L545
3974:../../Source/Kernel/rme_kernel.c ****     {
3975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3976:../../Source/Kernel/rme_kernel.c ****         
3977:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3978:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8479              		.loc 1 3978 16
 8480 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8481 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8482 00b4 10201BE5 		ldr	r2, [fp, #-16]
 8483 00b8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8484 00bc 20300BE5 		str	r3, [fp, #-32]
3979:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8485              		.loc 1 3979 32
 8486 00c0 14201BE5 		ldr	r2, [fp, #-20]
 8487 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 8488 00c8 032002E0 		and	r2, r2, r3
 8489              		.loc 1 3979 20
 8490 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8491 00d0 023003E0 		and	r3, r3, r2
 8492              		.loc 1 3979 11
 8493 00d4 000053E3 		cmp	r3, #0
 8494 00d8 0100000A 		beq	.L546
3980:../../Source/Kernel/rme_kernel.c ****         {
3981:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3982:../../Source/Kernel/rme_kernel.c ****             /*RME_DBG_S("\r\nSomeone already populated something here");
3983:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nOld_Val ");
3984:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Old_Val);
3985:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_Begin ");
3986:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_Begin);
3987:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_End ");
3988:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_End);*/
3989:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8495              		.loc 1 3989 20
 8496 00dc 0030E0E3 		mvn	r3, #0
 8497 00e0 970000EA 		b	.L544
 8498              	.L546:
3990:../../Source/Kernel/rme_kernel.c ****         }
3991:../../Source/Kernel/rme_kernel.c ****         else
3992:../../Source/Kernel/rme_kernel.c ****         {
3993:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3994:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3995:../../Source/Kernel/rme_kernel.c ****         }
3996:../../Source/Kernel/rme_kernel.c ****         
3997:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3998:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8499              		.loc 1 3998 12
 8500 00e4 10301BE5 		ldr	r3, [fp, #-16]
 8501 00e8 0321A0E1 		lsl	r2, r3, #2
 8502 00ec 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8503 00f0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8504 00f4 030082E0 		add	r0, r2, r3
 8505 00f8 14201BE5 		ldr	r2, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 221


 8506 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 8507 0100 032002E0 		and	r2, r2, r3
 8508 0104 20301BE5 		ldr	r3, [fp, #-32]
 8509 0108 033082E1 		orr	r3, r2, r3
 8510 010c 0320A0E1 		mov	r2, r3
 8511 0110 20101BE5 		ldr	r1, [fp, #-32]
 8512 0114 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8513 0118 0030A0E1 		mov	r3, r0
 8514              		.loc 1 3998 11 discriminator 1
 8515 011c 000053E3 		cmp	r3, #0
 8516 0120 8600001A 		bne	.L547
3999:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
4000:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
4001:../../Source/Kernel/rme_kernel.c ****         {
4002:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4003:../../Source/Kernel/rme_kernel.c ****             //RME_DBG_S("\r\nCheck done, do the marking with CAS");
4004:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8517              		.loc 1 4004 20
 8518 0124 0030E0E3 		mvn	r3, #0
 8519 0128 850000EA 		b	.L544
 8520              	.L545:
4005:../../Source/Kernel/rme_kernel.c ****         }
4006:../../Source/Kernel/rme_kernel.c ****         else
4007:../../Source/Kernel/rme_kernel.c ****         {
4008:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4009:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4010:../../Source/Kernel/rme_kernel.c ****         }
4011:../../Source/Kernel/rme_kernel.c ****     }
4012:../../Source/Kernel/rme_kernel.c ****     else
4013:../../Source/Kernel/rme_kernel.c ****     {
4014:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4015:../../Source/Kernel/rme_kernel.c ****         
4016:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8521              		.loc 1 4016 13
 8522 012c 0030A0E3 		mov	r3, #0
 8523 0130 0C300BE5 		str	r3, [fp, #-12]
4017:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
4018:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8524              		.loc 1 4018 16
 8525 0134 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8526 0138 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8527 013c 10201BE5 		ldr	r2, [fp, #-16]
 8528 0140 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8529 0144 20300BE5 		str	r3, [fp, #-32]
4019:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8530              		.loc 1 4019 20
 8531 0148 20201BE5 		ldr	r2, [fp, #-32]
 8532 014c 14301BE5 		ldr	r3, [fp, #-20]
 8533 0150 023003E0 		and	r3, r3, r2
 8534              		.loc 1 4019 11
 8535 0154 000053E3 		cmp	r3, #0
 8536 0158 0400000A 		beq	.L548
4020:../../Source/Kernel/rme_kernel.c ****         {
4021:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4022:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck&Mark the start");
 8537              		.loc 1 4022 13
 8538 015c 000000E3 		movw	r0, #:lower16:.LC9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 222


 8539 0160 000040E3 		movt	r0, #:upper16:.LC9
 8540 0164 FEFFFFEB 		bl	RME_Str_Print
4023:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8541              		.loc 1 4023 20
 8542 0168 0030E0E3 		mvn	r3, #0
 8543 016c 740000EA 		b	.L544
 8544              	.L548:
4024:../../Source/Kernel/rme_kernel.c ****         }
4025:../../Source/Kernel/rme_kernel.c ****         else
4026:../../Source/Kernel/rme_kernel.c ****         {
4027:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4028:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4029:../../Source/Kernel/rme_kernel.c ****         }
4030:../../Source/Kernel/rme_kernel.c ****         
4031:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8545              		.loc 1 4031 12
 8546 0170 10301BE5 		ldr	r3, [fp, #-16]
 8547 0174 0321A0E1 		lsl	r2, r3, #2
 8548 0178 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8549 017c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8550 0180 030082E0 		add	r0, r2, r3
 8551 0184 20201BE5 		ldr	r2, [fp, #-32]
 8552 0188 14301BE5 		ldr	r3, [fp, #-20]
 8553 018c 033082E1 		orr	r3, r2, r3
 8554 0190 0320A0E1 		mov	r2, r3
 8555 0194 20101BE5 		ldr	r1, [fp, #-32]
 8556 0198 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8557 019c 0030A0E1 		mov	r3, r0
 8558              		.loc 1 4031 11 discriminator 1
 8559 01a0 000053E3 		cmp	r3, #0
 8560 01a4 0100001A 		bne	.L549
4032:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
4033:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
4034:../../Source/Kernel/rme_kernel.c ****         {
4035:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4036:../../Source/Kernel/rme_kernel.c ****             //RME_DBG_S("\r\nRME_COMP_SWAP(&RME_KOT_VA_BASE[Start],");
4037:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8561              		.loc 1 4037 20
 8562 01a8 0030E0E3 		mvn	r3, #0
 8563 01ac 640000EA 		b	.L544
 8564              	.L549:
4038:../../Source/Kernel/rme_kernel.c ****         }
4039:../../Source/Kernel/rme_kernel.c ****         else
4040:../../Source/Kernel/rme_kernel.c ****         {
4041:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4042:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4043:../../Source/Kernel/rme_kernel.c ****         }
4044:../../Source/Kernel/rme_kernel.c ****         
4045:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4046:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8565              		.loc 1 4046 18
 8566 01b0 10301BE5 		ldr	r3, [fp, #-16]
 8567 01b4 013083E2 		add	r3, r3, #1
 8568 01b8 08300BE5 		str	r3, [fp, #-8]
 8569              		.loc 1 4046 9
 8570 01bc 1C0000EA 		b	.L550
 8571              	.L554:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 223


4047:../../Source/Kernel/rme_kernel.c ****         {
4048:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8572              		.loc 1 4048 20
 8573 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8574 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8575 01c8 08201BE5 		ldr	r2, [fp, #-8]
 8576 01cc 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8577 01d0 20300BE5 		str	r3, [fp, #-32]
4049:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8578              		.loc 1 4049 15
 8579 01d4 20301BE5 		ldr	r3, [fp, #-32]
 8580 01d8 000053E3 		cmp	r3, #0
 8581 01dc 0200000A 		beq	.L551
4050:../../Source/Kernel/rme_kernel.c ****             {
4051:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4052:../../Source/Kernel/rme_kernel.c **** 
4053:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8582              		.loc 1 4053 21
 8583 01e0 0130A0E3 		mov	r3, #1
 8584 01e4 0C300BE5 		str	r3, [fp, #-12]
4054:../../Source/Kernel/rme_kernel.c ****                 break;
 8585              		.loc 1 4054 17
 8586 01e8 150000EA 		b	.L552
 8587              	.L551:
4055:../../Source/Kernel/rme_kernel.c ****             }
4056:../../Source/Kernel/rme_kernel.c ****             else
4057:../../Source/Kernel/rme_kernel.c ****             {
4058:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4059:../../Source/Kernel/rme_kernel.c ****                 
4060:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8588              		.loc 1 4060 20
 8589 01ec 08301BE5 		ldr	r3, [fp, #-8]
 8590 01f0 0321A0E1 		lsl	r2, r3, #2
 8591 01f4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8592 01f8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8593 01fc 033082E0 		add	r3, r2, r3
 8594 0200 0020E0E3 		mvn	r2, #0
 8595 0204 20101BE5 		ldr	r1, [fp, #-32]
 8596 0208 0300A0E1 		mov	r0, r3
 8597 020c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8598 0210 0030A0E1 		mov	r3, r0
 8599              		.loc 1 4060 19 discriminator 1
 8600 0214 000053E3 		cmp	r3, #0
 8601 0218 0200001A 		bne	.L553
4061:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4062:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4063:../../Source/Kernel/rme_kernel.c ****                 {
4064:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4065:../../Source/Kernel/rme_kernel.c ****                     
4066:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8602              		.loc 1 4066 25
 8603 021c 0130A0E3 		mov	r3, #1
 8604 0220 0C300BE5 		str	r3, [fp, #-12]
4067:../../Source/Kernel/rme_kernel.c ****                     break;
 8605              		.loc 1 4067 21
 8606 0224 060000EA 		b	.L552
 8607              	.L553:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 224


4046:../../Source/Kernel/rme_kernel.c ****         {
 8608              		.loc 1 4046 43 discriminator 2
 8609 0228 08301BE5 		ldr	r3, [fp, #-8]
 8610 022c 013083E2 		add	r3, r3, #1
 8611 0230 08300BE5 		str	r3, [fp, #-8]
 8612              	.L550:
4046:../../Source/Kernel/rme_kernel.c ****         {
 8613              		.loc 1 4046 33 discriminator 1
 8614 0234 08201BE5 		ldr	r2, [fp, #-8]
 8615 0238 18301BE5 		ldr	r3, [fp, #-24]
 8616 023c 030052E1 		cmp	r2, r3
 8617 0240 DEFFFF3A 		bcc	.L554
 8618              	.L552:
4068:../../Source/Kernel/rme_kernel.c ****                 }
4069:../../Source/Kernel/rme_kernel.c ****                 else
4070:../../Source/Kernel/rme_kernel.c ****                 {
4071:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4072:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4073:../../Source/Kernel/rme_kernel.c ****                 }
4074:../../Source/Kernel/rme_kernel.c ****             }
4075:../../Source/Kernel/rme_kernel.c ****         }
4076:../../Source/Kernel/rme_kernel.c ****         
4077:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4078:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8619              		.loc 1 4078 11
 8620 0244 0C301BE5 		ldr	r3, [fp, #-12]
 8621 0248 000053E3 		cmp	r3, #0
 8622 024c 1C00001A 		bne	.L555
4079:../../Source/Kernel/rme_kernel.c ****         {
4080:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4081:../../Source/Kernel/rme_kernel.c **** 
4082:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4083:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8623              		.loc 1 4083 20
 8624 0250 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8625 0254 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8626 0258 18201BE5 		ldr	r2, [fp, #-24]
 8627 025c 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8628 0260 20300BE5 		str	r3, [fp, #-32]
4084:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8629              		.loc 1 4084 24
 8630 0264 20201BE5 		ldr	r2, [fp, #-32]
 8631 0268 1C301BE5 		ldr	r3, [fp, #-28]
 8632 026c 023003E0 		and	r3, r3, r2
 8633              		.loc 1 4084 15
 8634 0270 000053E3 		cmp	r3, #0
 8635 0274 0200000A 		beq	.L556
4085:../../Source/Kernel/rme_kernel.c ****             {
4086:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4087:../../Source/Kernel/rme_kernel.c **** 
4088:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8636              		.loc 1 4088 21
 8637 0278 0130A0E3 		mov	r3, #1
 8638 027c 0C300BE5 		str	r3, [fp, #-12]
 8639 0280 0F0000EA 		b	.L555
 8640              	.L556:
4089:../../Source/Kernel/rme_kernel.c ****             }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 225


4090:../../Source/Kernel/rme_kernel.c ****             else
4091:../../Source/Kernel/rme_kernel.c ****             {
4092:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4093:../../Source/Kernel/rme_kernel.c **** 
4094:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8641              		.loc 1 4094 20
 8642 0284 18301BE5 		ldr	r3, [fp, #-24]
 8643 0288 0321A0E1 		lsl	r2, r3, #2
 8644 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8645 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8646 0294 030082E0 		add	r0, r2, r3
 8647 0298 20201BE5 		ldr	r2, [fp, #-32]
 8648 029c 1C301BE5 		ldr	r3, [fp, #-28]
 8649 02a0 033082E1 		orr	r3, r2, r3
 8650 02a4 0320A0E1 		mov	r2, r3
 8651 02a8 20101BE5 		ldr	r1, [fp, #-32]
 8652 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8653 02b0 0030A0E1 		mov	r3, r0
 8654              		.loc 1 4094 19 discriminator 1
 8655 02b4 000053E3 		cmp	r3, #0
 8656 02b8 0100001A 		bne	.L555
4095:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4096:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4097:../../Source/Kernel/rme_kernel.c ****                 {
4098:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4099:../../Source/Kernel/rme_kernel.c **** 
4100:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8657              		.loc 1 4100 25
 8658 02bc 0130A0E3 		mov	r3, #1
 8659 02c0 0C300BE5 		str	r3, [fp, #-12]
 8660              	.L555:
4101:../../Source/Kernel/rme_kernel.c ****                 }
4102:../../Source/Kernel/rme_kernel.c ****                 else
4103:../../Source/Kernel/rme_kernel.c ****                 {
4104:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4105:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4106:../../Source/Kernel/rme_kernel.c ****                 }
4107:../../Source/Kernel/rme_kernel.c ****             }
4108:../../Source/Kernel/rme_kernel.c ****         }
4109:../../Source/Kernel/rme_kernel.c ****         else
4110:../../Source/Kernel/rme_kernel.c ****         {
4111:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4112:../../Source/Kernel/rme_kernel.c ****         }
4113:../../Source/Kernel/rme_kernel.c ****         
4114:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4115:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8661              		.loc 1 4115 11
 8662 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8663 02c8 000053E3 		cmp	r3, #0
 8664 02cc 1B00000A 		beq	.L547
4116:../../Source/Kernel/rme_kernel.c ****         {
4117:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4118:../../Source/Kernel/rme_kernel.c **** 
4119:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4120:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8665              		.loc 1 4120 22
 8666 02d0 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 226


 8667 02d4 013043E2 		sub	r3, r3, #1
 8668 02d8 08300BE5 		str	r3, [fp, #-8]
 8669              		.loc 1 4120 13
 8670 02dc 070000EA 		b	.L557
 8671              	.L558:
4121:../../Source/Kernel/rme_kernel.c ****             {
4122:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8672              		.loc 1 4122 39
 8673 02e0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8674 02e4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8675 02e8 08201BE5 		ldr	r2, [fp, #-8]
 8676 02ec 0010A0E3 		mov	r1, #0
 8677 02f0 021183E7 		str	r1, [r3, r2, lsl #2]
4120:../../Source/Kernel/rme_kernel.c ****             {
 8678              		.loc 1 4120 42 discriminator 3
 8679 02f4 08301BE5 		ldr	r3, [fp, #-8]
 8680 02f8 013043E2 		sub	r3, r3, #1
 8681 02fc 08300BE5 		str	r3, [fp, #-8]
 8682              	.L557:
4120:../../Source/Kernel/rme_kernel.c ****             {
 8683              		.loc 1 4120 30 discriminator 1
 8684 0300 08201BE5 		ldr	r2, [fp, #-8]
 8685 0304 10301BE5 		ldr	r3, [fp, #-16]
 8686 0308 030052E1 		cmp	r2, r3
 8687 030c F3FFFF8A 		bhi	.L558
4123:../../Source/Kernel/rme_kernel.c ****             }
4124:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4125:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8688              		.loc 1 4125 13
 8689 0310 10301BE5 		ldr	r3, [fp, #-16]
 8690 0314 0321A0E1 		lsl	r2, r3, #2
 8691 0318 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8692 031c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8693 0320 032082E0 		add	r2, r2, r3
 8694 0324 14301BE5 		ldr	r3, [fp, #-20]
 8695 0328 0330E0E1 		mvn	r3, r3
 8696 032c 0310A0E1 		mov	r1, r3
 8697 0330 0200A0E1 		mov	r0, r2
 8698 0334 FEFFFFEB 		bl	_RME_Fetch_And_Single
4126:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4127:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8699              		.loc 1 4127 20
 8700 0338 0030E0E3 		mvn	r3, #0
 8701 033c 000000EA 		b	.L544
 8702              	.L547:
4128:../../Source/Kernel/rme_kernel.c ****         }
4129:../../Source/Kernel/rme_kernel.c ****         else
4130:../../Source/Kernel/rme_kernel.c ****         {
4131:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4132:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4133:../../Source/Kernel/rme_kernel.c ****         }
4134:../../Source/Kernel/rme_kernel.c ****     }
4135:../../Source/Kernel/rme_kernel.c **** 
4136:../../Source/Kernel/rme_kernel.c ****     return 0;
 8703              		.loc 1 4136 12
 8704 0340 0030A0E3 		mov	r3, #0
 8705              	.L544:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 227


4137:../../Source/Kernel/rme_kernel.c **** }
 8706              		.loc 1 4137 1
 8707 0344 0300A0E1 		mov	r0, r3
 8708 0348 04D04BE2 		sub	sp, fp, #4
 8709              		.cfi_def_cfa 13, 8
 8710              		@ sp needed
 8711 034c 0088BDE8 		pop	{fp, pc}
 8712              		.cfi_endproc
 8713              	.LFE39:
 8715              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8716              		.align	2
 8717              		.global	_RME_Kot_Erase
 8718              		.syntax unified
 8719              		.arm
 8721              	_RME_Kot_Erase:
 8722              	.LFB40:
4138:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4139:../../Source/Kernel/rme_kernel.c **** 
4140:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4141:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4142:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4143:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4144:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4145:../../Source/Kernel/rme_kernel.c **** Output      : None.
4146:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4147:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4148:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4149:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4150:../../Source/Kernel/rme_kernel.c **** {
 8723              		.loc 1 4150 1
 8724              		.cfi_startproc
 8725              		@ args = 0, pretend = 0, frame = 32
 8726              		@ frame_needed = 1, uses_anonymous_args = 0
 8727 0000 00482DE9 		push	{fp, lr}
 8728              		.cfi_def_cfa_offset 8
 8729              		.cfi_offset 11, -8
 8730              		.cfi_offset 14, -4
 8731 0004 04B08DE2 		add	fp, sp, #4
 8732              		.cfi_def_cfa 11, 4
 8733 0008 20D04DE2 		sub	sp, sp, #32
 8734 000c 20000BE5 		str	r0, [fp, #-32]
 8735 0010 24100BE5 		str	r1, [fp, #-36]
4151:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4152:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4153:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4154:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4155:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4156:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
4157:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4158:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4159:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4160:../../Source/Kernel/rme_kernel.c **** 
4161:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4162:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8736              		.loc 1 4162 14
 8737 0014 20301BE5 		ldr	r3, [fp, #-32]
 8738 0018 0F3003E2 		and	r3, r3, #15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 228


 8739              		.loc 1 4162 7
 8740 001c 000053E3 		cmp	r3, #0
 8741 0020 0100000A 		beq	.L560
4163:../../Source/Kernel/rme_kernel.c ****     {
4164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4165:../../Source/Kernel/rme_kernel.c **** 
4166:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8742              		.loc 1 4166 16
 8743 0024 0030E0E3 		mvn	r3, #0
 8744 0028 8A0000EA 		b	.L561
 8745              	.L560:
4167:../../Source/Kernel/rme_kernel.c ****     }
4168:../../Source/Kernel/rme_kernel.c ****     else
4169:../../Source/Kernel/rme_kernel.c ****     {
4170:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4171:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4172:../../Source/Kernel/rme_kernel.c ****     }
4173:../../Source/Kernel/rme_kernel.c ****     
4174:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4175:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8746              		.loc 1 4175 17
 8747 002c 20301BE5 		ldr	r3, [fp, #-32]
 8748 0030 7F3483E2 		add	r3, r3, #2130706432
 8749              		.loc 1 4175 10
 8750 0034 2332A0E1 		lsr	r3, r3, #4
 8751 0038 0C300BE5 		str	r3, [fp, #-12]
4176:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8752              		.loc 1 4176 16
 8753 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8754 0040 1F3003E2 		and	r3, r3, #31
 8755              		.loc 1 4176 15
 8756 0044 0020E0E3 		mvn	r2, #0
 8757 0048 1233A0E1 		lsl	r3, r2, r3
 8758 004c 10300BE5 		str	r3, [fp, #-16]
4177:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8759              		.loc 1 4177 10
 8760 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8761 0054 A332A0E1 		lsr	r3, r3, #5
 8762 0058 0C300BE5 		str	r3, [fp, #-12]
4178:../../Source/Kernel/rme_kernel.c ****     
4179:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8763              		.loc 1 4179 15
 8764 005c 20201BE5 		ldr	r2, [fp, #-32]
 8765 0060 24301BE5 		ldr	r3, [fp, #-36]
 8766 0064 033082E0 		add	r3, r2, r3
 8767              		.loc 1 4179 23
 8768 0068 7F3483E2 		add	r3, r3, #2130706432
 8769 006c 013043E2 		sub	r3, r3, #1
 8770              		.loc 1 4179 8
 8771 0070 2332A0E1 		lsr	r3, r3, #4
 8772 0074 14300BE5 		str	r3, [fp, #-20]
4180:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8773              		.loc 1 4180 14
 8774 0078 14301BE5 		ldr	r3, [fp, #-20]
 8775 007c 0330E0E1 		mvn	r3, r3
 8776 0080 1F3003E2 		and	r3, r3, #31
 8777              		.loc 1 4180 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 229


 8778 0084 0020E0E3 		mvn	r2, #0
 8779 0088 3233A0E1 		lsr	r3, r2, r3
 8780 008c 18300BE5 		str	r3, [fp, #-24]
4181:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8781              		.loc 1 4181 8
 8782 0090 14301BE5 		ldr	r3, [fp, #-20]
 8783 0094 A332A0E1 		lsr	r3, r3, #5
 8784 0098 14300BE5 		str	r3, [fp, #-20]
4182:../../Source/Kernel/rme_kernel.c ****     
4183:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4184:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8785              		.loc 1 4184 7
 8786 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8787 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8788 00a4 030052E1 		cmp	r2, r3
 8789 00a8 1A00001A 		bne	.L562
4185:../../Source/Kernel/rme_kernel.c ****     {
4186:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4187:../../Source/Kernel/rme_kernel.c **** 
4188:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4189:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8790              		.loc 1 4189 28
 8791 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8792 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8793 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8794 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8795              		.loc 1 4189 47
 8796 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8797 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8798 00c4 013003E0 		and	r3, r3, r1
 8799              		.loc 1 4189 35
 8800 00c8 032002E0 		and	r2, r2, r3
 8801              		.loc 1 4189 71
 8802 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8803 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8804 00d4 013003E0 		and	r3, r3, r1
 8805              		.loc 1 4189 11
 8806 00d8 030052E1 		cmp	r2, r3
 8807 00dc 0100000A 		beq	.L563
4190:../../Source/Kernel/rme_kernel.c ****         {
4191:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4192:../../Source/Kernel/rme_kernel.c **** 
4193:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8808              		.loc 1 4193 20
 8809 00e0 0030E0E3 		mvn	r3, #0
 8810 00e4 5B0000EA 		b	.L561
 8811              	.L563:
4194:../../Source/Kernel/rme_kernel.c ****         }
4195:../../Source/Kernel/rme_kernel.c ****         else
4196:../../Source/Kernel/rme_kernel.c ****         {
4197:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4198:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4199:../../Source/Kernel/rme_kernel.c ****         }
4200:../../Source/Kernel/rme_kernel.c **** 
4201:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4202:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8812              		.loc 1 4202 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 230


 8813 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8814 00ec 0321A0E1 		lsl	r2, r3, #2
 8815 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8816 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8817 00f8 030082E0 		add	r0, r2, r3
 8818 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8819 0100 18301BE5 		ldr	r3, [fp, #-24]
 8820 0104 023003E0 		and	r3, r3, r2
 8821 0108 0330E0E1 		mvn	r3, r3
 8822 010c 0310A0E1 		mov	r1, r3
 8823 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8824 0114 4E0000EA 		b	.L564
 8825              	.L562:
4203:../../Source/Kernel/rme_kernel.c ****     }
4204:../../Source/Kernel/rme_kernel.c ****     else
4205:../../Source/Kernel/rme_kernel.c ****     {
4206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4207:../../Source/Kernel/rme_kernel.c **** 
4208:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4209:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8826              		.loc 1 4209 28
 8827 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8828 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8829 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8830 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8831              		.loc 1 4209 35
 8832 0128 10301BE5 		ldr	r3, [fp, #-16]
 8833 012c 023003E0 		and	r3, r3, r2
 8834              		.loc 1 4209 11
 8835 0130 10201BE5 		ldr	r2, [fp, #-16]
 8836 0134 030052E1 		cmp	r2, r3
 8837 0138 0100000A 		beq	.L565
4210:../../Source/Kernel/rme_kernel.c ****         {
4211:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4212:../../Source/Kernel/rme_kernel.c **** 
4213:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8838              		.loc 1 4213 20
 8839 013c 0030E0E3 		mvn	r3, #0
 8840 0140 440000EA 		b	.L561
 8841              	.L565:
4214:../../Source/Kernel/rme_kernel.c ****         }
4215:../../Source/Kernel/rme_kernel.c ****         else
4216:../../Source/Kernel/rme_kernel.c ****         {
4217:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4218:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4219:../../Source/Kernel/rme_kernel.c ****         }
4220:../../Source/Kernel/rme_kernel.c ****         
4221:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
4222:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8842              		.loc 1 4222 18
 8843 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8844 0148 013083E2 		add	r3, r3, #1
 8845 014c 08300BE5 		str	r3, [fp, #-8]
 8846              		.loc 1 4222 9
 8847 0150 0A0000EA 		b	.L566
 8848              	.L568:
4223:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 231


4224:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8849              		.loc 1 4224 31
 8850 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8851 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8852 015c 08201BE5 		ldr	r2, [fp, #-8]
 8853 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8854              		.loc 1 4224 15
 8855 0164 010073E3 		cmn	r3, #1
 8856 0168 0100000A 		beq	.L567
4225:../../Source/Kernel/rme_kernel.c ****             {
4226:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4227:../../Source/Kernel/rme_kernel.c **** 
4228:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8857              		.loc 1 4228 24
 8858 016c 0030E0E3 		mvn	r3, #0
 8859 0170 380000EA 		b	.L561
 8860              	.L567:
4222:../../Source/Kernel/rme_kernel.c ****         {
 8861              		.loc 1 4222 46 discriminator 2
 8862 0174 08301BE5 		ldr	r3, [fp, #-8]
 8863 0178 013083E2 		add	r3, r3, #1
 8864 017c 08300BE5 		str	r3, [fp, #-8]
 8865              	.L566:
4222:../../Source/Kernel/rme_kernel.c ****         {
 8866              		.loc 1 4222 37 discriminator 1
 8867 0180 14301BE5 		ldr	r3, [fp, #-20]
 8868 0184 013043E2 		sub	r3, r3, #1
4222:../../Source/Kernel/rme_kernel.c ****         {
 8869              		.loc 1 4222 33 discriminator 1
 8870 0188 08201BE5 		ldr	r2, [fp, #-8]
 8871 018c 030052E1 		cmp	r2, r3
 8872 0190 EFFFFF3A 		bcc	.L568
4229:../../Source/Kernel/rme_kernel.c ****             }
4230:../../Source/Kernel/rme_kernel.c ****             else
4231:../../Source/Kernel/rme_kernel.c ****             {
4232:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4233:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4234:../../Source/Kernel/rme_kernel.c ****             }
4235:../../Source/Kernel/rme_kernel.c ****         }
4236:../../Source/Kernel/rme_kernel.c **** 
4237:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4238:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8873              		.loc 1 4238 28
 8874 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8875 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8876 019c 14201BE5 		ldr	r2, [fp, #-20]
 8877 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8878              		.loc 1 4238 33
 8879 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8880 01a8 023003E0 		and	r3, r3, r2
 8881              		.loc 1 4238 11
 8882 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8883 01b0 030052E1 		cmp	r2, r3
 8884 01b4 0100000A 		beq	.L569
4239:../../Source/Kernel/rme_kernel.c ****         {
4240:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4241:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 232


4242:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8885              		.loc 1 4242 20
 8886 01b8 0030E0E3 		mvn	r3, #0
 8887 01bc 250000EA 		b	.L561
 8888              	.L569:
4243:../../Source/Kernel/rme_kernel.c ****         }
4244:../../Source/Kernel/rme_kernel.c ****         else
4245:../../Source/Kernel/rme_kernel.c ****         {
4246:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4247:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4248:../../Source/Kernel/rme_kernel.c ****         }
4249:../../Source/Kernel/rme_kernel.c ****         
4250:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4251:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8889              		.loc 1 4251 9
 8890 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8891 01c4 0321A0E1 		lsl	r2, r3, #2
 8892 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8893 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8894 01d0 032082E0 		add	r2, r2, r3
 8895 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8896 01d8 0330E0E1 		mvn	r3, r3
 8897 01dc 0310A0E1 		mov	r1, r3
 8898 01e0 0200A0E1 		mov	r0, r2
 8899 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4252:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4253:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8900              		.loc 1 4253 18
 8901 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8902 01ec 013083E2 		add	r3, r3, #1
 8903 01f0 08300BE5 		str	r3, [fp, #-8]
 8904              		.loc 1 4253 9
 8905 01f4 070000EA 		b	.L570
 8906              	.L571:
4254:../../Source/Kernel/rme_kernel.c ****         {
4255:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8907              		.loc 1 4255 35
 8908 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8909 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8910 0200 08201BE5 		ldr	r2, [fp, #-8]
 8911 0204 0010A0E3 		mov	r1, #0
 8912 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4253:../../Source/Kernel/rme_kernel.c ****         {
 8913              		.loc 1 4253 46 discriminator 3
 8914 020c 08301BE5 		ldr	r3, [fp, #-8]
 8915 0210 013083E2 		add	r3, r3, #1
 8916 0214 08300BE5 		str	r3, [fp, #-8]
 8917              	.L570:
4253:../../Source/Kernel/rme_kernel.c ****         {
 8918              		.loc 1 4253 37 discriminator 1
 8919 0218 14301BE5 		ldr	r3, [fp, #-20]
 8920 021c 013043E2 		sub	r3, r3, #1
4253:../../Source/Kernel/rme_kernel.c ****         {
 8921              		.loc 1 4253 33 discriminator 1
 8922 0220 08201BE5 		ldr	r2, [fp, #-8]
 8923 0224 030052E1 		cmp	r2, r3
 8924 0228 F2FFFF3A 		bcc	.L571
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 233


4256:../../Source/Kernel/rme_kernel.c ****         }
4257:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4258:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8925              		.loc 1 4258 9
 8926 022c 14301BE5 		ldr	r3, [fp, #-20]
 8927 0230 0321A0E1 		lsl	r2, r3, #2
 8928 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8929 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8930 023c 032082E0 		add	r2, r2, r3
 8931 0240 18301BE5 		ldr	r3, [fp, #-24]
 8932 0244 0330E0E1 		mvn	r3, r3
 8933 0248 0310A0E1 		mov	r1, r3
 8934 024c 0200A0E1 		mov	r0, r2
 8935 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8936              	.L564:
4259:../../Source/Kernel/rme_kernel.c ****     }
4260:../../Source/Kernel/rme_kernel.c **** 
4261:../../Source/Kernel/rme_kernel.c ****     return 0;
 8937              		.loc 1 4261 12
 8938 0254 0030A0E3 		mov	r3, #0
 8939              	.L561:
4262:../../Source/Kernel/rme_kernel.c **** }
 8940              		.loc 1 4262 1
 8941 0258 0300A0E1 		mov	r0, r3
 8942 025c 04D04BE2 		sub	sp, fp, #4
 8943              		.cfi_def_cfa 13, 8
 8944              		@ sp needed
 8945 0260 0088BDE8 		pop	{fp, pc}
 8946              		.cfi_endproc
 8947              	.LFE40:
 8949              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 8950              		.align	2
 8951              		.global	_RME_Kom_Boot_Crt
 8952              		.syntax unified
 8953              		.arm
 8955              	_RME_Kom_Boot_Crt:
 8956              	.LFB41:
4263:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4264:../../Source/Kernel/rme_kernel.c **** 
4265:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4266:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4267:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4268:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4269:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4270:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4271:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4272:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4273:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4274:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4275:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4276:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4277:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4278:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4279:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4280:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4281:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4282:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 234


4283:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4284:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4285:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4286:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4287:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4288:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4289:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4290:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4291:../../Source/Kernel/rme_kernel.c **** {
 8957              		.loc 1 4291 1
 8958              		.cfi_startproc
 8959              		@ args = 8, pretend = 0, frame = 40
 8960              		@ frame_needed = 1, uses_anonymous_args = 0
 8961 0000 00482DE9 		push	{fp, lr}
 8962              		.cfi_def_cfa_offset 8
 8963              		.cfi_offset 11, -8
 8964              		.cfi_offset 14, -4
 8965 0004 04B08DE2 		add	fp, sp, #4
 8966              		.cfi_def_cfa 11, 4
 8967 0008 28D04DE2 		sub	sp, sp, #40
 8968 000c 20000BE5 		str	r0, [fp, #-32]
 8969 0010 24100BE5 		str	r1, [fp, #-36]
 8970 0014 28200BE5 		str	r2, [fp, #-40]
 8971 0018 2C300BE5 		str	r3, [fp, #-44]
4292:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4293:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4294:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4295:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4296:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4297:../../Source/Kernel/rme_kernel.c ****     
4298:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4299:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 8972              		.loc 1 4299 5
 8973 001c 24301BE5 		ldr	r3, [fp, #-36]
 8974 0020 803003E2 		and	r3, r3, #128
 8975 0024 000053E3 		cmp	r3, #0
 8976 0028 1C00001A 		bne	.L573
 8977              		.loc 1 4299 5 is_stmt 0 discriminator 1
 8978 002c 20301BE5 		ldr	r3, [fp, #-32]
 8979 0030 142093E5 		ldr	r2, [r3, #20]
 8980 0034 24301BE5 		ldr	r3, [fp, #-36]
 8981 0038 030052E1 		cmp	r2, r3
 8982 003c 0100008A 		bhi	.L574
 8983              		.loc 1 4299 5 discriminator 3
 8984 0040 0230E0E3 		mvn	r3, #2
 8985              		.loc 1 4299 5
 8986 0044 9F0000EA 		b	.L575
 8987              	.L574:
 8988              		.loc 1 4299 5 discriminator 4
 8989 0048 24301BE5 		ldr	r3, [fp, #-36]
 8990 004c 8322A0E1 		lsl	r2, r3, #5
 8991 0050 20301BE5 		ldr	r3, [fp, #-32]
 8992 0054 0C3093E5 		ldr	r3, [r3, #12]
 8993 0058 033082E0 		add	r3, r2, r3
 8994 005c 08300BE5 		str	r3, [fp, #-8]
 8995 0060 08301BE5 		ldr	r3, [fp, #-8]
 8996 0064 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 235


 8997 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8998 006c 0C000BE5 		str	r0, [fp, #-12]
 8999              		.loc 1 4299 5 discriminator 1
 9000 0070 0C301BE5 		ldr	r3, [fp, #-12]
 9001 0074 FF3803E2 		and	r3, r3, #16711680
 9002 0078 020853E3 		cmp	r3, #131072
 9003 007c 0100001A 		bne	.L576
 9004              		.loc 1 4299 5 discriminator 5
 9005 0080 0830E0E3 		mvn	r3, #8
 9006              		.loc 1 4299 5
 9007 0084 8F0000EA 		b	.L575
 9008              	.L576:
 9009              		.loc 1 4299 5 discriminator 6
 9010 0088 0C301BE5 		ldr	r3, [fp, #-12]
 9011 008c 233CA0E1 		lsr	r3, r3, #24
 9012 0090 030053E3 		cmp	r3, #3
 9013 0094 3F00000A 		beq	.L577
 9014              		.loc 1 4299 5 discriminator 7
 9015 0098 0130E0E3 		mvn	r3, #1
 9016              		.loc 1 4299 5
 9017 009c 890000EA 		b	.L575
 9018              	.L573:
 9019              		.loc 1 4299 5 discriminator 2
 9020 00a0 24301BE5 		ldr	r3, [fp, #-36]
 9021 00a4 2324A0E1 		lsr	r2, r3, #8
 9022 00a8 20301BE5 		ldr	r3, [fp, #-32]
 9023 00ac 143093E5 		ldr	r3, [r3, #20]
 9024 00b0 030052E1 		cmp	r2, r3
 9025 00b4 0100003A 		bcc	.L578
 9026              		.loc 1 4299 5 discriminator 8
 9027 00b8 0230E0E3 		mvn	r3, #2
 9028              		.loc 1 4299 5
 9029 00bc 810000EA 		b	.L575
 9030              	.L578:
 9031              		.loc 1 4299 5 discriminator 9
 9032 00c0 24301BE5 		ldr	r3, [fp, #-36]
 9033 00c4 2334A0E1 		lsr	r3, r3, #8
 9034 00c8 8322A0E1 		lsl	r2, r3, #5
 9035 00cc 20301BE5 		ldr	r3, [fp, #-32]
 9036 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9037 00d4 033082E0 		add	r3, r2, r3
 9038 00d8 08300BE5 		str	r3, [fp, #-8]
 9039 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9040 00e0 0300A0E1 		mov	r0, r3
 9041 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9042 00e8 0C000BE5 		str	r0, [fp, #-12]
 9043              		.loc 1 4299 5 discriminator 1
 9044 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 9045 00f0 FF3803E2 		and	r3, r3, #16711680
 9046 00f4 020853E3 		cmp	r3, #131072
 9047 00f8 0100001A 		bne	.L579
 9048              		.loc 1 4299 5 discriminator 10
 9049 00fc 0830E0E3 		mvn	r3, #8
 9050              		.loc 1 4299 5
 9051 0100 700000EA 		b	.L575
 9052              	.L579:
 9053              		.loc 1 4299 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 236


 9054 0104 0C301BE5 		ldr	r3, [fp, #-12]
 9055 0108 233CA0E1 		lsr	r3, r3, #24
 9056 010c 030053E3 		cmp	r3, #3
 9057 0110 0100000A 		beq	.L580
 9058              		.loc 1 4299 5 discriminator 12
 9059 0114 0130E0E3 		mvn	r3, #1
 9060              		.loc 1 4299 5
 9061 0118 6A0000EA 		b	.L575
 9062              	.L580:
 9063              		.loc 1 4299 5 discriminator 13
 9064 011c 24301BE5 		ldr	r3, [fp, #-36]
 9065 0120 7F2003E2 		and	r2, r3, #127
 9066 0124 08301BE5 		ldr	r3, [fp, #-8]
 9067 0128 143093E5 		ldr	r3, [r3, #20]
 9068 012c 030052E1 		cmp	r2, r3
 9069 0130 0100003A 		bcc	.L581
 9070              		.loc 1 4299 5 discriminator 14
 9071 0134 0230E0E3 		mvn	r3, #2
 9072              		.loc 1 4299 5
 9073 0138 620000EA 		b	.L575
 9074              	.L581:
 9075              		.loc 1 4299 5 discriminator 15
 9076 013c 24301BE5 		ldr	r3, [fp, #-36]
 9077 0140 7F3003E2 		and	r3, r3, #127
 9078 0144 8322A0E1 		lsl	r2, r3, #5
 9079 0148 08301BE5 		ldr	r3, [fp, #-8]
 9080 014c 0C3093E5 		ldr	r3, [r3, #12]
 9081 0150 033082E0 		add	r3, r2, r3
 9082 0154 08300BE5 		str	r3, [fp, #-8]
 9083 0158 08301BE5 		ldr	r3, [fp, #-8]
 9084 015c 0300A0E1 		mov	r0, r3
 9085 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9086 0164 0C000BE5 		str	r0, [fp, #-12]
 9087              		.loc 1 4299 5 discriminator 1
 9088 0168 0C301BE5 		ldr	r3, [fp, #-12]
 9089 016c FF3803E2 		and	r3, r3, #16711680
 9090 0170 020853E3 		cmp	r3, #131072
 9091 0174 0100001A 		bne	.L582
 9092              		.loc 1 4299 5 discriminator 16
 9093 0178 0830E0E3 		mvn	r3, #8
 9094              		.loc 1 4299 5
 9095 017c 510000EA 		b	.L575
 9096              	.L582:
 9097              		.loc 1 4299 5 discriminator 17
 9098 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9099 0184 233CA0E1 		lsr	r3, r3, #24
 9100 0188 030053E3 		cmp	r3, #3
 9101 018c 0100000A 		beq	.L577
 9102              		.loc 1 4299 5 discriminator 18
 9103 0190 0130E0E3 		mvn	r3, #1
 9104              		.loc 1 4299 5
 9105 0194 4B0000EA 		b	.L575
 9106              	.L577:
4300:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4301:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9107              		.loc 1 4302 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 237


 9108 0198 08301BE5 		ldr	r3, [fp, #-8]
 9109 019c 083093E5 		ldr	r3, [r3, #8]
 9110 01a0 013003E2 		and	r3, r3, #1
 9111 01a4 000053E3 		cmp	r3, #0
 9112 01a8 0100001A 		bne	.L583
 9113              		.loc 1 4302 5 is_stmt 0 discriminator 1
 9114 01ac 0630E0E3 		mvn	r3, #6
 9115              		.loc 1 4302 5
 9116 01b0 440000EA 		b	.L575
 9117              	.L583:
4303:../../Source/Kernel/rme_kernel.c **** 
4304:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4305:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9118              		.loc 1 4305 5 is_stmt 1
 9119 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9120 01b8 142093E5 		ldr	r2, [r3, #20]
 9121 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9122 01c0 030052E1 		cmp	r2, r3
 9123 01c4 0100008A 		bhi	.L584
 9124              		.loc 1 4305 5 is_stmt 0 discriminator 1
 9125 01c8 0230E0E3 		mvn	r3, #2
 9126              		.loc 1 4305 5
 9127 01cc 3D0000EA 		b	.L575
 9128              	.L584:
 9129              		.loc 1 4305 5 discriminator 2
 9130 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9131 01d4 8322A0E1 		lsl	r2, r3, #5
 9132 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9133 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9134 01e0 033082E0 		add	r3, r2, r3
 9135 01e4 10300BE5 		str	r3, [fp, #-16]
4306:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4307:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 9136              		.loc 1 4307 5 is_stmt 1
 9137 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9138 01ec 0128A0E3 		mov	r2, #65536
 9139 01f0 0010A0E3 		mov	r1, #0
 9140 01f4 0300A0E1 		mov	r0, r3
 9141 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9142 01fc 0030A0E1 		mov	r3, r0
 9143              		.loc 1 4307 5 is_stmt 0 discriminator 1
 9144 0200 000053E3 		cmp	r3, #0
 9145 0204 0100001A 		bne	.L585
 9146 0208 0430E0E3 		mvn	r3, #4
 9147              		.loc 1 4307 5
 9148 020c 2D0000EA 		b	.L575
 9149              	.L585:
 9150              		.loc 1 4307 5 discriminator 2
 9151 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9152 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9153 0218 002093E5 		ldr	r2, [r3]
 9154 021c 10301BE5 		ldr	r3, [fp, #-16]
 9155 0220 102083E5 		str	r2, [r3, #16]
4308:../../Source/Kernel/rme_kernel.c ****     
4309:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4310:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4311:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 238


4312:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4313:../../Source/Kernel/rme_kernel.c **** #else
4314:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9156              		.loc 1 4314 13 is_stmt 1
 9157 0224 04309BE5 		ldr	r3, [fp, #4]
 9158 0228 013083E2 		add	r3, r3, #1
 9159              		.loc 1 4314 12
 9160 022c 3F30C3E3 		bic	r3, r3, #63
 9161 0230 14300BE5 		str	r3, [fp, #-20]
4315:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9162              		.loc 1 4315 15
 9163 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9164 0238 3F3083E2 		add	r3, r3, #63
 9165              		.loc 1 4315 14
 9166 023c 3F30C3E3 		bic	r3, r3, #63
 9167 0240 18300BE5 		str	r3, [fp, #-24]
4316:../../Source/Kernel/rme_kernel.c **** #endif
4317:../../Source/Kernel/rme_kernel.c **** 
4318:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4319:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9168              		.loc 1 4319 5
 9169 0244 08309BE5 		ldr	r3, [fp, #8]
 9170 0248 000053E3 		cmp	r3, #0
 9171 024c 0800001A 		bne	.L586
 9172              		.loc 1 4319 5 is_stmt 0 discriminator 1
 9173 0250 003000E3 		movw	r3, #:lower16:.LC6
 9174 0254 003040E3 		movt	r3, #:upper16:.LC6
 9175 0258 002000E3 		movw	r2, #:lower16:.LC7
 9176 025c 002040E3 		movt	r2, #:upper16:.LC7
 9177 0260 DF1001E3 		movw	r1, #4319
 9178 0264 000000E3 		movw	r0, #:lower16:.LC8
 9179 0268 000040E3 		movt	r0, #:upper16:.LC8
 9180 026c FEFFFFEB 		bl	RME_Log
 9181              	.L587:
 9182              		.loc 1 4319 5
 9183 0270 FEFFFFEA 		b	.L587
 9184              	.L586:
4320:../../Source/Kernel/rme_kernel.c **** 
4321:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4322:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9185              		.loc 1 4322 27 is_stmt 1
 9186 0274 10301BE5 		ldr	r3, [fp, #-16]
 9187 0278 0120A0E3 		mov	r2, #1
 9188 027c 042083E5 		str	r2, [r3, #4]
4323:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9189              		.loc 1 4323 25
 9190 0280 10301BE5 		ldr	r3, [fp, #-16]
 9191 0284 0020A0E3 		mov	r2, #0
 9192 0288 0C2083E5 		str	r2, [r3, #12]
4324:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9193              		.loc 1 4324 23
 9194 028c 10301BE5 		ldr	r3, [fp, #-16]
 9195 0290 08209BE5 		ldr	r2, [fp, #8]
 9196 0294 082083E5 		str	r2, [r3, #8]
4325:../../Source/Kernel/rme_kernel.c ****     
4326:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4327:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 239


 9197              		.loc 1 4327 19
 9198 0298 10301BE5 		ldr	r3, [fp, #-16]
 9199 029c 18201BE5 		ldr	r2, [fp, #-24]
 9200 02a0 142083E5 		str	r2, [r3, #20]
4328:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 9201              		.loc 1 4328 25
 9202 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9203 02a8 012043E2 		sub	r2, r3, #1
 9204              		.loc 1 4328 17
 9205 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9206 02b0 182083E5 		str	r2, [r3, #24]
4329:../../Source/Kernel/rme_kernel.c **** 
4330:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4331:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9207              		.loc 1 4331 5
 9208 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9209 02b8 0214A0E3 		mov	r1, #33554432
 9210 02bc 0300A0E1 		mov	r0, r3
 9211 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4332:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4333:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4334:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4335:../../Source/Kernel/rme_kernel.c **** 
4336:../../Source/Kernel/rme_kernel.c ****     return 0;
 9212              		.loc 1 4336 12
 9213 02c4 0030A0E3 		mov	r3, #0
 9214              	.L575:
4337:../../Source/Kernel/rme_kernel.c **** }
 9215              		.loc 1 4337 1
 9216 02c8 0300A0E1 		mov	r0, r3
 9217 02cc 04D04BE2 		sub	sp, fp, #4
 9218              		.cfi_def_cfa 13, 8
 9219              		@ sp needed
 9220 02d0 0088BDE8 		pop	{fp, pc}
 9221              		.cfi_endproc
 9222              	.LFE41:
 9224              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9225              		.align	2
 9226              		.global	_RME_CPU_Local_Init
 9227              		.syntax unified
 9228              		.arm
 9230              	_RME_CPU_Local_Init:
 9231              	.LFB42:
4338:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4339:../../Source/Kernel/rme_kernel.c **** 
4340:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4341:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4342:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
4343:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4344:../../Source/Kernel/rme_kernel.c **** Output      : None.
4345:../../Source/Kernel/rme_kernel.c **** Return      : None.
4346:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4347:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4348:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4349:../../Source/Kernel/rme_kernel.c **** {
 9232              		.loc 1 4349 1
 9233              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 240


 9234              		@ args = 0, pretend = 0, frame = 16
 9235              		@ frame_needed = 1, uses_anonymous_args = 0
 9236 0000 00482DE9 		push	{fp, lr}
 9237              		.cfi_def_cfa_offset 8
 9238              		.cfi_offset 11, -8
 9239              		.cfi_offset 14, -4
 9240 0004 04B08DE2 		add	fp, sp, #4
 9241              		.cfi_def_cfa 11, 4
 9242 0008 10D04DE2 		sub	sp, sp, #16
 9243 000c 10000BE5 		str	r0, [fp, #-16]
 9244 0010 14100BE5 		str	r1, [fp, #-20]
4350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4351:../../Source/Kernel/rme_kernel.c ****     
4352:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9245              		.loc 1 4352 17
 9246 0014 10301BE5 		ldr	r3, [fp, #-16]
 9247 0018 14201BE5 		ldr	r2, [fp, #-20]
 9248 001c 002083E5 		str	r2, [r3]
4353:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9249              		.loc 1 4353 19
 9250 0020 10301BE5 		ldr	r3, [fp, #-16]
 9251 0024 0020A0E3 		mov	r2, #0
 9252 0028 042083E5 		str	r2, [r3, #4]
4354:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9253              		.loc 1 4354 19
 9254 002c 10301BE5 		ldr	r3, [fp, #-16]
 9255 0030 0020A0E3 		mov	r2, #0
 9256 0034 0C2083E5 		str	r2, [r3, #12]
4355:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9257              		.loc 1 4355 19
 9258 0038 10301BE5 		ldr	r3, [fp, #-16]
 9259 003c 0020A0E3 		mov	r2, #0
 9260 0040 082083E5 		str	r2, [r3, #8]
4356:../../Source/Kernel/rme_kernel.c ****     
4357:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4358:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9261              		.loc 1 4358 17
 9262 0044 0030A0E3 		mov	r3, #0
 9263 0048 08300BE5 		str	r3, [fp, #-8]
 9264              		.loc 1 4358 5
 9265 004c 100000EA 		b	.L589
 9266              	.L590:
4359:../../Source/Kernel/rme_kernel.c ****     {
4360:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9267              		.loc 1 4360 35
 9268 0050 08301BE5 		ldr	r3, [fp, #-8]
 9269 0054 A322A0E1 		lsr	r2, r3, #5
 9270              		.loc 1 4360 52
 9271 0058 10301BE5 		ldr	r3, [fp, #-16]
 9272 005c 042082E2 		add	r2, r2, #4
 9273 0060 0010A0E3 		mov	r1, #0
 9274 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4361:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9275              		.loc 1 4361 9
 9276 0068 08301BE5 		ldr	r3, [fp, #-8]
 9277 006c 023083E2 		add	r3, r3, #2
 9278 0070 8331A0E1 		lsl	r3, r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 241


 9279 0074 10201BE5 		ldr	r2, [fp, #-16]
 9280 0078 033082E0 		add	r3, r2, r3
 9281 007c 043083E2 		add	r3, r3, #4
 9282 0080 0300A0E1 		mov	r0, r3
 9283 0084 FEFFFFEB 		bl	_RME_List_Crt
4358:../../Source/Kernel/rme_kernel.c ****     {
 9284              		.loc 1 4358 59 discriminator 3
 9285 0088 08301BE5 		ldr	r3, [fp, #-8]
 9286 008c 013083E2 		add	r3, r3, #1
 9287 0090 08300BE5 		str	r3, [fp, #-8]
 9288              	.L589:
4358:../../Source/Kernel/rme_kernel.c ****     {
 9289              		.loc 1 4358 29 discriminator 1
 9290 0094 08301BE5 		ldr	r3, [fp, #-8]
 9291 0098 1F0053E3 		cmp	r3, #31
 9292 009c EBFFFF9A 		bls	.L590
4362:../../Source/Kernel/rme_kernel.c ****     }
4363:../../Source/Kernel/rme_kernel.c **** }
 9293              		.loc 1 4363 1
 9294 00a0 00F020E3 		nop
 9295 00a4 00F020E3 		nop
 9296 00a8 04D04BE2 		sub	sp, fp, #4
 9297              		.cfi_def_cfa 13, 8
 9298              		@ sp needed
 9299 00ac 0088BDE8 		pop	{fp, pc}
 9300              		.cfi_endproc
 9301              	.LFE42:
 9303              		.section	.rodata
 9304 0077 00       		.align	2
 9305              	.LC10:
 9306 0078 41747465 		.ascii	"Attempted to kill init thread.\000"
 9306      6D707465 
 9306      6420746F 
 9306      206B696C 
 9306      6C20696E 
 9307              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9308              		.align	2
 9309              		.global	_RME_Thd_Fatal
 9310              		.syntax unified
 9311              		.arm
 9313              	_RME_Thd_Fatal:
 9314              	.LFB43:
4364:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4365:../../Source/Kernel/rme_kernel.c **** 
4366:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4367:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4368:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4369:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
4370:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4371:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4372:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4373:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4374:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4375:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4376:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4377:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4378:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 242


4379:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4380:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4381:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4382:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4383:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4384:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4385:../../Source/Kernel/rme_kernel.c **** Return      : None.
4386:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4387:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4388:../../Source/Kernel/rme_kernel.c **** {
 9315              		.loc 1 4388 1
 9316              		.cfi_startproc
 9317              		@ args = 0, pretend = 0, frame = 16
 9318              		@ frame_needed = 1, uses_anonymous_args = 0
 9319 0000 00482DE9 		push	{fp, lr}
 9320              		.cfi_def_cfa_offset 8
 9321              		.cfi_offset 11, -8
 9322              		.cfi_offset 14, -4
 9323 0004 04B08DE2 		add	fp, sp, #4
 9324              		.cfi_def_cfa 11, 4
 9325 0008 10D04DE2 		sub	sp, sp, #16
 9326 000c 10000BE5 		str	r0, [fp, #-16]
4389:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4390:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4391:../../Source/Kernel/rme_kernel.c ****     
4392:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4393:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9327              		.loc 1 4393 8
 9328 0010 0120A0E3 		mov	r2, #1
 9329 0014 0010A0E3 		mov	r1, #0
 9330 0018 10001BE5 		ldr	r0, [fp, #-16]
 9331 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9332 0020 0030A0E1 		mov	r3, r0
 9333              		.loc 1 4393 7 discriminator 1
 9334 0024 000053E3 		cmp	r3, #0
 9335 0028 2C00000A 		beq	.L597
4394:../../Source/Kernel/rme_kernel.c ****     {
4395:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4396:../../Source/Kernel/rme_kernel.c **** 
4397:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4398:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9336              		.loc 1 4398 14
 9337 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9338 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9339 0034 08300BE5 		str	r3, [fp, #-8]
4399:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9340              		.loc 1 4399 16
 9341 0038 08301BE5 		ldr	r3, [fp, #-8]
 9342 003c 043093E5 		ldr	r3, [r3, #4]
 9343 0040 0C300BE5 		str	r3, [fp, #-12]
4400:../../Source/Kernel/rme_kernel.c ****         
4401:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4402:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9344              		.loc 1 4402 26
 9345 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9346 0048 183093E5 		ldr	r3, [r3, #24]
 9347              		.loc 1 4402 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 243


 9348 004c 060173E3 		cmn	r3, #-2147483647
 9349 0050 0B00001A 		bne	.L593
4403:../../Source/Kernel/rme_kernel.c ****         {
4404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4405:../../Source/Kernel/rme_kernel.c ****             
4406:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9350              		.loc 1 4406 13
 9351 0054 000000E3 		movw	r0, #:lower16:.LC10
 9352 0058 000040E3 		movt	r0, #:upper16:.LC10
 9353 005c FEFFFFEB 		bl	RME_Str_Print
4407:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9354              		.loc 1 4407 13 discriminator 1
 9355 0060 003000E3 		movw	r3, #:lower16:.LC6
 9356 0064 003040E3 		movt	r3, #:upper16:.LC6
 9357 0068 002000E3 		movw	r2, #:lower16:.LC7
 9358 006c 002040E3 		movt	r2, #:upper16:.LC7
 9359 0070 371101E3 		movw	r1, #4407
 9360 0074 000000E3 		movw	r0, #:lower16:.LC8
 9361 0078 000040E3 		movt	r0, #:upper16:.LC8
 9362 007c FEFFFFEB 		bl	RME_Log
 9363              	.L594:
 9364              		.loc 1 4407 13 is_stmt 0
 9365 0080 FEFFFFEA 		b	.L594
 9366              	.L593:
4408:../../Source/Kernel/rme_kernel.c ****         }
4409:../../Source/Kernel/rme_kernel.c ****         else
4410:../../Source/Kernel/rme_kernel.c ****         {
4411:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4412:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4413:../../Source/Kernel/rme_kernel.c ****         }
4414:../../Source/Kernel/rme_kernel.c ****         
4415:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4416:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9367              		.loc 1 4416 9 is_stmt 1
 9368 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9369 0088 1C3093E5 		ldr	r3, [r3, #28]
 9370 008c 000053E3 		cmp	r3, #0
 9371 0090 0800000A 		beq	.L595
 9372              		.loc 1 4416 9 is_stmt 0 discriminator 1
 9373 0094 003000E3 		movw	r3, #:lower16:.LC6
 9374 0098 003040E3 		movt	r3, #:upper16:.LC6
 9375 009c 002000E3 		movw	r2, #:lower16:.LC7
 9376 00a0 002040E3 		movt	r2, #:upper16:.LC7
 9377 00a4 451DA0E3 		mov	r1, #4416
 9378 00a8 000000E3 		movw	r0, #:lower16:.LC8
 9379 00ac 000040E3 		movt	r0, #:upper16:.LC8
 9380 00b0 FEFFFFEB 		bl	RME_Log
 9381              	.L596:
 9382              		.loc 1 4416 9
 9383 00b4 FEFFFFEA 		b	.L596
 9384              	.L595:
4417:../../Source/Kernel/rme_kernel.c ****         
4418:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4419:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9385              		.loc 1 4419 9 is_stmt 1
 9386 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9387 00bc FEFFFFEB 		bl	_RME_Run_Del
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 244


4420:../../Source/Kernel/rme_kernel.c ****         
4421:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4422:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9388              		.loc 1 4422 29
 9389 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9390 00c4 0320A0E3 		mov	r2, #3
 9391 00c8 1C2083E5 		str	r2, [r3, #28]
4423:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9392              		.loc 1 4423 9
 9393 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9394 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4424:../../Source/Kernel/rme_kernel.c ****         
4425:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4426:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9395              		.loc 1 4426 9
 9396 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9397 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9398 00dc FEFFFFEB 		bl	_RME_Kern_High
 9399              	.L597:
4427:../../Source/Kernel/rme_kernel.c ****     }
4428:../../Source/Kernel/rme_kernel.c ****     else
4429:../../Source/Kernel/rme_kernel.c ****     {
4430:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4431:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4432:../../Source/Kernel/rme_kernel.c ****     }
4433:../../Source/Kernel/rme_kernel.c **** }
 9400              		.loc 1 4433 1
 9401 00e0 00F020E3 		nop
 9402 00e4 04D04BE2 		sub	sp, fp, #4
 9403              		.cfi_def_cfa 13, 8
 9404              		@ sp needed
 9405 00e8 0088BDE8 		pop	{fp, pc}
 9406              		.cfi_endproc
 9407              	.LFE43:
 9409              		.section	.text._RME_Run_Ins,"ax",%progbits
 9410              		.align	2
 9411              		.syntax unified
 9412              		.arm
 9414              	_RME_Run_Ins:
 9415              	.LFB44:
4434:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4435:../../Source/Kernel/rme_kernel.c **** 
4436:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4437:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4438:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4439:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4440:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4441:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
4442:../../Source/Kernel/rme_kernel.c **** Output      : None.
4443:../../Source/Kernel/rme_kernel.c **** Return      : None.
4444:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4445:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4446:../../Source/Kernel/rme_kernel.c **** {
 9416              		.loc 1 4446 1
 9417              		.cfi_startproc
 9418              		@ args = 0, pretend = 0, frame = 16
 9419              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 245


 9420 0000 00482DE9 		push	{fp, lr}
 9421              		.cfi_def_cfa_offset 8
 9422              		.cfi_offset 11, -8
 9423              		.cfi_offset 14, -4
 9424 0004 04B08DE2 		add	fp, sp, #4
 9425              		.cfi_def_cfa 11, 4
 9426 0008 10D04DE2 		sub	sp, sp, #16
 9427 000c 10000BE5 		str	r0, [fp, #-16]
4447:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4448:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4449:../../Source/Kernel/rme_kernel.c ****     
4450:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9428              		.loc 1 4450 9
 9429 0010 10301BE5 		ldr	r3, [fp, #-16]
 9430 0014 203093E5 		ldr	r3, [r3, #32]
 9431 0018 08300BE5 		str	r3, [fp, #-8]
4451:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9432              		.loc 1 4451 10
 9433 001c 10301BE5 		ldr	r3, [fp, #-16]
 9434 0020 143093E5 		ldr	r3, [r3, #20]
 9435 0024 0C300BE5 		str	r3, [fp, #-12]
4452:../../Source/Kernel/rme_kernel.c ****     
4453:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4454:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9436              		.loc 1 4454 5
 9437 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9438 002c 010073E3 		cmn	r3, #1
 9439 0030 0800001A 		bne	.L599
 9440              		.loc 1 4454 5 is_stmt 0 discriminator 1
 9441 0034 003000E3 		movw	r3, #:lower16:.LC6
 9442 0038 003040E3 		movt	r3, #:upper16:.LC6
 9443 003c 002000E3 		movw	r2, #:lower16:.LC7
 9444 0040 002040E3 		movt	r2, #:upper16:.LC7
 9445 0044 661101E3 		movw	r1, #4454
 9446 0048 000000E3 		movw	r0, #:lower16:.LC8
 9447 004c 000040E3 		movt	r0, #:upper16:.LC8
 9448 0050 FEFFFFEB 		bl	RME_Log
 9449              	.L600:
 9450              		.loc 1 4454 5
 9451 0054 FEFFFFEA 		b	.L600
 9452              	.L599:
4455:../../Source/Kernel/rme_kernel.c ****     
4456:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4457:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9453              		.loc 1 4457 5 is_stmt 1
 9454 0058 10001BE5 		ldr	r0, [fp, #-16]
 9455 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9456 0060 08301BE5 		ldr	r3, [fp, #-8]
 9457 0064 023083E2 		add	r3, r3, #2
 9458 0068 8331A0E1 		lsl	r3, r3, #3
 9459 006c 033082E0 		add	r3, r2, r3
 9460 0070 081093E5 		ldr	r1, [r3, #8]
 9461 0074 08301BE5 		ldr	r3, [fp, #-8]
 9462 0078 023083E2 		add	r3, r3, #2
 9463 007c 8331A0E1 		lsl	r3, r3, #3
 9464 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9465 0084 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 246


 9466 0088 043083E2 		add	r3, r3, #4
 9467 008c 0320A0E1 		mov	r2, r3
 9468 0090 FEFFFFEB 		bl	_RME_List_Ins
4458:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4459:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4460:../../Source/Kernel/rme_kernel.c ****     
4461:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4462:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9469              		.loc 1 4462 5
 9470 0094 08301BE5 		ldr	r3, [fp, #-8]
 9471 0098 A322A0E1 		lsr	r2, r3, #5
 9472 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9473 00a0 042082E2 		add	r2, r2, #4
 9474 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9475 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9476 00ac 1F3003E2 		and	r3, r3, #31
 9477 00b0 0120A0E3 		mov	r2, #1
 9478 00b4 1233A0E1 		lsl	r3, r2, r3
 9479 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9480 00bc A222A0E1 		lsr	r2, r2, #5
 9481 00c0 031081E1 		orr	r1, r1, r3
 9482 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9483 00c8 042082E2 		add	r2, r2, #4
 9484 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4463:../../Source/Kernel/rme_kernel.c **** }
 9485              		.loc 1 4463 1
 9486 00d0 00F020E3 		nop
 9487 00d4 04D04BE2 		sub	sp, fp, #4
 9488              		.cfi_def_cfa 13, 8
 9489              		@ sp needed
 9490 00d8 0088BDE8 		pop	{fp, pc}
 9491              		.cfi_endproc
 9492              	.LFE44:
 9494              		.section	.text._RME_Run_Del,"ax",%progbits
 9495              		.align	2
 9496              		.syntax unified
 9497              		.arm
 9499              	_RME_Run_Del:
 9500              	.LFB45:
4464:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4465:../../Source/Kernel/rme_kernel.c **** 
4466:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4467:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4468:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4469:../../Source/Kernel/rme_kernel.c **** Output      : None.
4470:../../Source/Kernel/rme_kernel.c **** Return      : None.
4471:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4472:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
4473:../../Source/Kernel/rme_kernel.c **** {
 9501              		.loc 1 4473 1
 9502              		.cfi_startproc
 9503              		@ args = 0, pretend = 0, frame = 16
 9504              		@ frame_needed = 1, uses_anonymous_args = 0
 9505 0000 00482DE9 		push	{fp, lr}
 9506              		.cfi_def_cfa_offset 8
 9507              		.cfi_offset 11, -8
 9508              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 247


 9509 0004 04B08DE2 		add	fp, sp, #4
 9510              		.cfi_def_cfa 11, 4
 9511 0008 10D04DE2 		sub	sp, sp, #16
 9512 000c 10000BE5 		str	r0, [fp, #-16]
4474:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4475:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4476:../../Source/Kernel/rme_kernel.c ****     
4477:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9513              		.loc 1 4477 9
 9514 0010 10301BE5 		ldr	r3, [fp, #-16]
 9515 0014 203093E5 		ldr	r3, [r3, #32]
 9516 0018 08300BE5 		str	r3, [fp, #-8]
4478:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9517              		.loc 1 4478 10
 9518 001c 10301BE5 		ldr	r3, [fp, #-16]
 9519 0020 143093E5 		ldr	r3, [r3, #20]
 9520 0024 0C300BE5 		str	r3, [fp, #-12]
4479:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4480:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9521              		.loc 1 4480 5
 9522 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9523 002c 010073E3 		cmn	r3, #1
 9524 0030 0800001A 		bne	.L602
 9525              		.loc 1 4480 5 is_stmt 0 discriminator 1
 9526 0034 003000E3 		movw	r3, #:lower16:.LC6
 9527 0038 003040E3 		movt	r3, #:upper16:.LC6
 9528 003c 002000E3 		movw	r2, #:lower16:.LC7
 9529 0040 002040E3 		movt	r2, #:upper16:.LC7
 9530 0044 461DA0E3 		mov	r1, #4480
 9531 0048 000000E3 		movw	r0, #:lower16:.LC8
 9532 004c 000040E3 		movt	r0, #:upper16:.LC8
 9533 0050 FEFFFFEB 		bl	RME_Log
 9534              	.L603:
 9535              		.loc 1 4480 5
 9536 0054 FEFFFFEA 		b	.L603
 9537              	.L602:
4481:../../Source/Kernel/rme_kernel.c ****     
4482:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4483:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9538              		.loc 1 4483 5 is_stmt 1
 9539 0058 10301BE5 		ldr	r3, [fp, #-16]
 9540 005c 042093E5 		ldr	r2, [r3, #4]
 9541 0060 10301BE5 		ldr	r3, [fp, #-16]
 9542 0064 003093E5 		ldr	r3, [r3]
 9543 0068 0310A0E1 		mov	r1, r3
 9544 006c 0200A0E1 		mov	r0, r2
 9545 0070 FEFFFFEB 		bl	_RME_List_Del
4484:../../Source/Kernel/rme_kernel.c ****     
4485:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4486:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9546              		.loc 1 4486 29
 9547 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9548 0078 08301BE5 		ldr	r3, [fp, #-8]
 9549 007c 023083E2 		add	r3, r3, #2
 9550 0080 8331A0E1 		lsl	r3, r3, #3
 9551 0084 033082E0 		add	r3, r2, r3
 9552 0088 042093E5 		ldr	r2, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 248


 9553              		.loc 1 4486 36
 9554 008c 08301BE5 		ldr	r3, [fp, #-8]
 9555 0090 023083E2 		add	r3, r3, #2
 9556 0094 8331A0E1 		lsl	r3, r3, #3
 9557 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9558 009c 033081E0 		add	r3, r1, r3
 9559 00a0 043083E2 		add	r3, r3, #4
 9560              		.loc 1 4486 7
 9561 00a4 030052E1 		cmp	r2, r3
 9562 00a8 0F00001A 		bne	.L605
4487:../../Source/Kernel/rme_kernel.c ****     {
4488:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4489:../../Source/Kernel/rme_kernel.c **** 
4490:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4491:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9563              		.loc 1 4491 9
 9564 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9565 00b0 A322A0E1 		lsr	r2, r3, #5
 9566 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9567 00b8 042082E2 		add	r2, r2, #4
 9568 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9569 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9570 00c4 1F3003E2 		and	r3, r3, #31
 9571 00c8 0120A0E3 		mov	r2, #1
 9572 00cc 1233A0E1 		lsl	r3, r2, r3
 9573 00d0 0330E0E1 		mvn	r3, r3
 9574 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9575 00d8 A222A0E1 		lsr	r2, r2, #5
 9576 00dc 031001E0 		and	r1, r1, r3
 9577 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9578 00e4 042082E2 		add	r2, r2, #4
 9579 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9580              	.L605:
4492:../../Source/Kernel/rme_kernel.c ****     }
4493:../../Source/Kernel/rme_kernel.c ****     else
4494:../../Source/Kernel/rme_kernel.c ****     {
4495:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4496:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4497:../../Source/Kernel/rme_kernel.c ****     }
4498:../../Source/Kernel/rme_kernel.c **** }
 9581              		.loc 1 4498 1
 9582 00ec 00F020E3 		nop
 9583 00f0 04D04BE2 		sub	sp, fp, #4
 9584              		.cfi_def_cfa 13, 8
 9585              		@ sp needed
 9586 00f4 0088BDE8 		pop	{fp, pc}
 9587              		.cfi_endproc
 9588              	.LFE45:
 9590              		.section	.text._RME_Run_High,"ax",%progbits
 9591              		.align	2
 9592              		.syntax unified
 9593              		.arm
 9595              	_RME_Run_High:
 9596              	.LFB46:
4499:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4500:../../Source/Kernel/rme_kernel.c **** 
4501:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 249


4502:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4503:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4504:../../Source/Kernel/rme_kernel.c **** Output      : None.
4505:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4506:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4507:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4508:../../Source/Kernel/rme_kernel.c **** {
 9597              		.loc 1 4508 1
 9598              		.cfi_startproc
 9599              		@ args = 0, pretend = 0, frame = 16
 9600              		@ frame_needed = 1, uses_anonymous_args = 0
 9601 0000 00482DE9 		push	{fp, lr}
 9602              		.cfi_def_cfa_offset 8
 9603              		.cfi_offset 11, -8
 9604              		.cfi_offset 14, -4
 9605 0004 04B08DE2 		add	fp, sp, #4
 9606              		.cfi_def_cfa 11, 4
 9607 0008 10D04DE2 		sub	sp, sp, #16
 9608 000c 10000BE5 		str	r0, [fp, #-16]
4509:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4510:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4511:../../Source/Kernel/rme_kernel.c ****     
4512:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4513:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9609              		.loc 1 4513 14
 9610 0010 0030A0E3 		mov	r3, #0
 9611 0014 08300BE5 		str	r3, [fp, #-8]
 9612              		.loc 1 4513 5
 9613 0018 080000EA 		b	.L607
 9614              	.L610:
4514:../../Source/Kernel/rme_kernel.c ****     {
4515:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9615              		.loc 1 4515 29
 9616 001c 10301BE5 		ldr	r3, [fp, #-16]
 9617 0020 08201BE5 		ldr	r2, [fp, #-8]
 9618 0024 042082E2 		add	r2, r2, #4
 9619 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9620              		.loc 1 4515 11
 9621 002c 000053E3 		cmp	r3, #0
 9622 0030 0600001A 		bne	.L614
4513:../../Source/Kernel/rme_kernel.c ****     {
 9623              		.loc 1 4513 63 discriminator 2
 9624 0034 08301BE5 		ldr	r3, [fp, #-8]
 9625 0038 013043E2 		sub	r3, r3, #1
 9626 003c 08300BE5 		str	r3, [fp, #-8]
 9627              	.L607:
4513:../../Source/Kernel/rme_kernel.c ****     {
 9628              		.loc 1 4513 54 discriminator 1
 9629 0040 08301BE5 		ldr	r3, [fp, #-8]
 9630 0044 000053E3 		cmp	r3, #0
 9631 0048 F3FFFFAA 		bge	.L610
 9632 004c 000000EA 		b	.L609
 9633              	.L614:
4516:../../Source/Kernel/rme_kernel.c ****         {
4517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4518:../../Source/Kernel/rme_kernel.c ****             
4519:../../Source/Kernel/rme_kernel.c ****             break;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 250


 9634              		.loc 1 4519 13
 9635 0050 00F020E3 		nop
 9636              	.L609:
4520:../../Source/Kernel/rme_kernel.c ****         }
4521:../../Source/Kernel/rme_kernel.c ****         else
4522:../../Source/Kernel/rme_kernel.c ****         {
4523:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4524:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4525:../../Source/Kernel/rme_kernel.c ****         }
4526:../../Source/Kernel/rme_kernel.c ****     }
4527:../../Source/Kernel/rme_kernel.c ****     
4528:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4529:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9637              		.loc 1 4529 5
 9638 0054 08301BE5 		ldr	r3, [fp, #-8]
 9639 0058 000053E3 		cmp	r3, #0
 9640 005c 080000AA 		bge	.L611
 9641              		.loc 1 4529 5 is_stmt 0 discriminator 1
 9642 0060 003000E3 		movw	r3, #:lower16:.LC6
 9643 0064 003040E3 		movt	r3, #:upper16:.LC6
 9644 0068 002000E3 		movw	r2, #:lower16:.LC7
 9645 006c 002040E3 		movt	r2, #:upper16:.LC7
 9646 0070 B11101E3 		movw	r1, #4529
 9647 0074 000000E3 		movw	r0, #:lower16:.LC8
 9648 0078 000040E3 		movt	r0, #:upper16:.LC8
 9649 007c FEFFFFEB 		bl	RME_Log
 9650              	.L612:
 9651              		.loc 1 4529 5
 9652 0080 FEFFFFEA 		b	.L612
 9653              	.L611:
4530:../../Source/Kernel/rme_kernel.c **** 
4531:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4532:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9654              		.loc 1 4532 10 is_stmt 1
 9655 0084 10301BE5 		ldr	r3, [fp, #-16]
 9656 0088 08201BE5 		ldr	r2, [fp, #-8]
 9657 008c 042082E2 		add	r2, r2, #4
 9658 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9659 0094 0300A0E1 		mov	r0, r3
 9660 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9661 009c 0C000BE5 		str	r0, [fp, #-12]
4533:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9662              		.loc 1 4533 29
 9663 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9664 00a4 8332A0E1 		lsl	r3, r3, #5
 9665              		.loc 1 4533 9
 9666 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9667 00ac 033082E0 		add	r3, r2, r3
 9668 00b0 0C300BE5 		str	r3, [fp, #-12]
4534:../../Source/Kernel/rme_kernel.c **** 
4535:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4536:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9669              		.loc 1 4536 12
 9670 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9671 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9672 00bc 023083E2 		add	r3, r3, #2
 9673 00c0 8331A0E1 		lsl	r3, r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 251


 9674 00c4 033082E0 		add	r3, r2, r3
 9675 00c8 043093E5 		ldr	r3, [r3, #4]
4537:../../Source/Kernel/rme_kernel.c **** }
 9676              		.loc 1 4537 1
 9677 00cc 0300A0E1 		mov	r0, r3
 9678 00d0 04D04BE2 		sub	sp, fp, #4
 9679              		.cfi_def_cfa 13, 8
 9680              		@ sp needed
 9681 00d4 0088BDE8 		pop	{fp, pc}
 9682              		.cfi_endproc
 9683              	.LFE46:
 9685              		.section	.text._RME_Run_Notif,"ax",%progbits
 9686              		.align	2
 9687              		.syntax unified
 9688              		.arm
 9690              	_RME_Run_Notif:
 9691              	.LFB47:
4538:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4539:../../Source/Kernel/rme_kernel.c **** 
4540:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4541:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4542:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4543:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4544:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4545:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4546:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4547:../../Source/Kernel/rme_kernel.c **** Output      : None.
4548:../../Source/Kernel/rme_kernel.c **** Return      : None.
4549:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4550:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4551:../../Source/Kernel/rme_kernel.c **** {
 9692              		.loc 1 4551 1
 9693              		.cfi_startproc
 9694              		@ args = 0, pretend = 0, frame = 16
 9695              		@ frame_needed = 1, uses_anonymous_args = 0
 9696 0000 00482DE9 		push	{fp, lr}
 9697              		.cfi_def_cfa_offset 8
 9698              		.cfi_offset 11, -8
 9699              		.cfi_offset 14, -4
 9700 0004 04B08DE2 		add	fp, sp, #4
 9701              		.cfi_def_cfa 11, 4
 9702 0008 10D04DE2 		sub	sp, sp, #16
 9703 000c 10000BE5 		str	r0, [fp, #-16]
4552:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4553:../../Source/Kernel/rme_kernel.c ****     
4554:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9704              		.loc 1 4554 14
 9705 0010 10301BE5 		ldr	r3, [fp, #-16]
 9706 0014 343093E5 		ldr	r3, [r3, #52]
 9707 0018 08300BE5 		str	r3, [fp, #-8]
4555:../../Source/Kernel/rme_kernel.c ****     
4556:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4557:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9708              		.loc 1 4557 24
 9709 001c 10301BE5 		ldr	r3, [fp, #-16]
 9710 0020 082093E5 		ldr	r2, [r3, #8]
 9711              		.loc 1 4557 31
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 252


 9712 0024 10301BE5 		ldr	r3, [fp, #-16]
 9713 0028 083083E2 		add	r3, r3, #8
 9714              		.loc 1 4557 7
 9715 002c 030052E1 		cmp	r2, r3
 9716 0030 0700001A 		bne	.L616
4558:../../Source/Kernel/rme_kernel.c ****     {
4559:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4560:../../Source/Kernel/rme_kernel.c **** 
4561:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9717              		.loc 1 4561 9
 9718 0034 10301BE5 		ldr	r3, [fp, #-16]
 9719 0038 080083E2 		add	r0, r3, #8
 9720 003c 08301BE5 		ldr	r3, [fp, #-8]
 9721 0040 401093E5 		ldr	r1, [r3, #64]
 9722 0044 08301BE5 		ldr	r3, [fp, #-8]
 9723 0048 3C3083E2 		add	r3, r3, #60
 9724 004c 0320A0E1 		mov	r2, r3
 9725 0050 FEFFFFEB 		bl	_RME_List_Ins
 9726              	.L616:
4562:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4563:../../Source/Kernel/rme_kernel.c ****     }
4564:../../Source/Kernel/rme_kernel.c ****     else
4565:../../Source/Kernel/rme_kernel.c ****     {
4566:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4567:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4568:../../Source/Kernel/rme_kernel.c ****     }
4569:../../Source/Kernel/rme_kernel.c **** 
4570:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4571:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9727              		.loc 1 4571 18
 9728 0054 10301BE5 		ldr	r3, [fp, #-16]
 9729 0058 383093E5 		ldr	r3, [r3, #56]
 9730              		.loc 1 4571 7
 9731 005c 000053E3 		cmp	r3, #0
 9732 0060 0300000A 		beq	.L618
4572:../../Source/Kernel/rme_kernel.c ****     {
4573:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4574:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9733              		.loc 1 4574 9
 9734 0064 10301BE5 		ldr	r3, [fp, #-16]
 9735 0068 383093E5 		ldr	r3, [r3, #56]
 9736 006c 0300A0E1 		mov	r0, r3
 9737 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9738              	.L618:
4575:../../Source/Kernel/rme_kernel.c ****     }
4576:../../Source/Kernel/rme_kernel.c ****     else
4577:../../Source/Kernel/rme_kernel.c ****     {
4578:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4579:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4580:../../Source/Kernel/rme_kernel.c ****     }
4581:../../Source/Kernel/rme_kernel.c **** }
 9739              		.loc 1 4581 1
 9740 0074 00F020E3 		nop
 9741 0078 04D04BE2 		sub	sp, fp, #4
 9742              		.cfi_def_cfa 13, 8
 9743              		@ sp needed
 9744 007c 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 253


 9745              		.cfi_endproc
 9746              	.LFE47:
 9748              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9749              		.align	2
 9750              		.global	_RME_Thd_Pgt
 9751              		.syntax unified
 9752              		.arm
 9754              	_RME_Thd_Pgt:
 9755              	.LFB48:
4582:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4583:../../Source/Kernel/rme_kernel.c **** 
4584:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4585:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4586:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4587:../../Source/Kernel/rme_kernel.c **** Output      : None.
4588:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4589:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4590:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4591:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4592:../../Source/Kernel/rme_kernel.c **** #else
4593:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4594:../../Source/Kernel/rme_kernel.c **** #endif
4595:../../Source/Kernel/rme_kernel.c **** {
 9756              		.loc 1 4595 1
 9757              		.cfi_startproc
 9758              		@ args = 0, pretend = 0, frame = 16
 9759              		@ frame_needed = 1, uses_anonymous_args = 0
 9760              		@ link register save eliminated.
 9761 0000 04B02DE5 		str	fp, [sp, #-4]!
 9762              		.cfi_def_cfa_offset 4
 9763              		.cfi_offset 11, -4
 9764 0004 00B08DE2 		add	fp, sp, #0
 9765              		.cfi_def_cfa_register 11
 9766 0008 14D04DE2 		sub	sp, sp, #20
 9767 000c 10000BE5 		str	r0, [fp, #-16]
4596:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4597:../../Source/Kernel/rme_kernel.c ****     
4598:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9768              		.loc 1 4598 13
 9769 0010 10301BE5 		ldr	r3, [fp, #-16]
 9770 0014 4C2093E5 		ldr	r2, [r3, #76]
 9771 0018 10301BE5 		ldr	r3, [fp, #-16]
 9772 001c 4C3083E2 		add	r3, r3, #76
 9773 0020 030052E1 		cmp	r2, r3
 9774 0024 0200000A 		beq	.L620
 9775              		.loc 1 4598 13 is_stmt 0 discriminator 1
 9776 0028 10301BE5 		ldr	r3, [fp, #-16]
 9777 002c 4C3093E5 		ldr	r3, [r3, #76]
 9778 0030 000000EA 		b	.L621
 9779              	.L620:
 9780              		.loc 1 4598 13 discriminator 2
 9781 0034 0030A0E3 		mov	r3, #0
 9782              	.L621:
 9783              		.loc 1 4598 12 is_stmt 1 discriminator 4
 9784 0038 08300BE5 		str	r3, [fp, #-8]
4599:../../Source/Kernel/rme_kernel.c ****     
4600:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 254


 9785              		.loc 1 4600 7
 9786 003c 08301BE5 		ldr	r3, [fp, #-8]
 9787 0040 000053E3 		cmp	r3, #0
 9788 0044 0300001A 		bne	.L622
4601:../../Source/Kernel/rme_kernel.c ****     {
4602:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4603:../../Source/Kernel/rme_kernel.c **** 
4604:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9789              		.loc 1 4604 26
 9790 0048 10301BE5 		ldr	r3, [fp, #-16]
 9791 004c 2C3093E5 		ldr	r3, [r3, #44]
 9792              		.loc 1 4604 30
 9793 0050 183093E5 		ldr	r3, [r3, #24]
 9794 0054 020000EA 		b	.L623
 9795              	.L622:
4605:../../Source/Kernel/rme_kernel.c ****     }
4606:../../Source/Kernel/rme_kernel.c ****     else
4607:../../Source/Kernel/rme_kernel.c ****     {
4608:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4609:../../Source/Kernel/rme_kernel.c **** 
4610:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9796              		.loc 1 4610 23
 9797 0058 08301BE5 		ldr	r3, [fp, #-8]
 9798 005c 083093E5 		ldr	r3, [r3, #8]
 9799              		.loc 1 4610 28
 9800 0060 183093E5 		ldr	r3, [r3, #24]
 9801              	.L623:
4611:../../Source/Kernel/rme_kernel.c ****     }
4612:../../Source/Kernel/rme_kernel.c **** }
 9802              		.loc 1 4612 1
 9803 0064 0300A0E1 		mov	r0, r3
 9804 0068 00D08BE2 		add	sp, fp, #0
 9805              		.cfi_def_cfa_register 13
 9806              		@ sp needed
 9807 006c 04B09DE4 		ldr	fp, [sp], #4
 9808              		.cfi_restore 11
 9809              		.cfi_def_cfa_offset 0
 9810 0070 1EFF2FE1 		bx	lr
 9811              		.cfi_endproc
 9812              	.LFE48:
 9814              		.section	.text._RME_Run_Swt,"ax",%progbits
 9815              		.align	2
 9816              		.syntax unified
 9817              		.arm
 9819              	_RME_Run_Swt:
 9820              	.LFB49:
4613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4614:../../Source/Kernel/rme_kernel.c **** 
4615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4616:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4618:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4619:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4620:../../Source/Kernel/rme_kernel.c **** Output      : None.
4621:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4623:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 255


4624:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4625:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4626:../../Source/Kernel/rme_kernel.c **** {
 9821              		.loc 1 4626 1
 9822              		.cfi_startproc
 9823              		@ args = 0, pretend = 0, frame = 32
 9824              		@ frame_needed = 1, uses_anonymous_args = 0
 9825 0000 00482DE9 		push	{fp, lr}
 9826              		.cfi_def_cfa_offset 8
 9827              		.cfi_offset 11, -8
 9828              		.cfi_offset 14, -4
 9829 0004 04B08DE2 		add	fp, sp, #4
 9830              		.cfi_def_cfa 11, 4
 9831 0008 20D04DE2 		sub	sp, sp, #32
 9832 000c 18000BE5 		str	r0, [fp, #-24]
 9833 0010 1C100BE5 		str	r1, [fp, #-28]
 9834 0014 20200BE5 		str	r2, [fp, #-32]
4627:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4628:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4629:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4630:../../Source/Kernel/rme_kernel.c **** #else
4631:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4632:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4633:../../Source/Kernel/rme_kernel.c **** #endif
4634:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4635:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4636:../../Source/Kernel/rme_kernel.c ****     
4637:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9835              		.loc 1 4637 27
 9836 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9837 001c 483093E5 		ldr	r3, [r3, #72]
 9838              		.loc 1 4637 12
 9839 0020 08300BE5 		str	r3, [fp, #-8]
4638:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9840              		.loc 1 4638 27
 9841 0024 20301BE5 		ldr	r3, [fp, #-32]
 9842 0028 483093E5 		ldr	r3, [r3, #72]
 9843              		.loc 1 4638 12
 9844 002c 0C300BE5 		str	r3, [fp, #-12]
4639:../../Source/Kernel/rme_kernel.c ****     
4640:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4641:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9845              		.loc 1 4641 5
 9846 0030 18101BE5 		ldr	r1, [fp, #-24]
 9847 0034 08001BE5 		ldr	r0, [fp, #-8]
 9848 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4642:../../Source/Kernel/rme_kernel.c ****     
4643:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4644:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4645:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4646:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4647:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4648:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4649:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4650:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4651:../../Source/Kernel/rme_kernel.c **** #endif
4652:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 256


4653:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4654:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9849              		.loc 1 4654 5
 9850 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9851 0040 18001BE5 		ldr	r0, [fp, #-24]
 9852 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4655:../../Source/Kernel/rme_kernel.c **** 
4656:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4657:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9853              		.loc 1 4657 13
 9854 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9855 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9856 0050 10000BE5 		str	r0, [fp, #-16]
4658:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9857              		.loc 1 4658 13
 9858 0054 20001BE5 		ldr	r0, [fp, #-32]
 9859 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9860 005c 14000BE5 		str	r0, [fp, #-20]
4659:../../Source/Kernel/rme_kernel.c **** 
4660:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4661:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4662:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9861              		.loc 1 4662 5
 9862 0060 10301BE5 		ldr	r3, [fp, #-16]
 9863 0064 003093E5 		ldr	r3, [r3]
 9864 0068 7330FFE6 		uxth	r3, r3
 9865 006c 000053E3 		cmp	r3, #0
 9866 0070 0800000A 		beq	.L625
 9867              		.loc 1 4662 5 is_stmt 0 discriminator 1
 9868 0074 003000E3 		movw	r3, #:lower16:.LC6
 9869 0078 003040E3 		movt	r3, #:upper16:.LC6
 9870 007c 002000E3 		movw	r2, #:lower16:.LC7
 9871 0080 002040E3 		movt	r2, #:upper16:.LC7
 9872 0084 361201E3 		movw	r1, #4662
 9873 0088 000000E3 		movw	r0, #:lower16:.LC8
 9874 008c 000040E3 		movt	r0, #:upper16:.LC8
 9875 0090 FEFFFFEB 		bl	RME_Log
 9876              	.L626:
 9877              		.loc 1 4662 5
 9878 0094 FEFFFFEA 		b	.L626
 9879              	.L625:
4663:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9880              		.loc 1 4663 5 is_stmt 1
 9881 0098 14301BE5 		ldr	r3, [fp, #-20]
 9882 009c 003093E5 		ldr	r3, [r3]
 9883 00a0 7330FFE6 		uxth	r3, r3
 9884 00a4 000053E3 		cmp	r3, #0
 9885 00a8 0800000A 		beq	.L627
 9886              		.loc 1 4663 5 is_stmt 0 discriminator 1
 9887 00ac 003000E3 		movw	r3, #:lower16:.LC6
 9888 00b0 003040E3 		movt	r3, #:upper16:.LC6
 9889 00b4 002000E3 		movw	r2, #:lower16:.LC7
 9890 00b8 002040E3 		movt	r2, #:upper16:.LC7
 9891 00bc 371201E3 		movw	r1, #4663
 9892 00c0 000000E3 		movw	r0, #:lower16:.LC8
 9893 00c4 000040E3 		movt	r0, #:upper16:.LC8
 9894 00c8 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 257


 9895              	.L628:
 9896              		.loc 1 4663 5
 9897 00cc FEFFFFEA 		b	.L628
 9898              	.L627:
4664:../../Source/Kernel/rme_kernel.c **** #endif
4665:../../Source/Kernel/rme_kernel.c ****     
4666:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4667:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9899              		.loc 1 4667 8 is_stmt 1
 9900 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9901 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9902              		.loc 1 4667 43
 9903 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9904 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9905              		.loc 1 4667 7
 9906 00e0 030052E1 		cmp	r2, r3
 9907 00e4 0100000A 		beq	.L629
4668:../../Source/Kernel/rme_kernel.c **** #else
4669:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4670:../../Source/Kernel/rme_kernel.c **** #endif
4671:../../Source/Kernel/rme_kernel.c ****     {
4672:../../Source/Kernel/rme_kernel.c ****         /*RME_COV_MARKER();
4673:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n***************************SWT PGT*********************************\r\n");
4674:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("Cur - ");
4675:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_Cur);
4676:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");;
4677:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("New - ");
4678:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_New);
4679:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");*/
4680:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9908              		.loc 1 4680 9
 9909 00e8 14001BE5 		ldr	r0, [fp, #-20]
 9910 00ec FEFFFFEB 		bl	__RME_Pgt_Set
 9911              	.L629:
4681:../../Source/Kernel/rme_kernel.c ****     }
4682:../../Source/Kernel/rme_kernel.c ****     else
4683:../../Source/Kernel/rme_kernel.c ****     {
4684:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4685:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4686:../../Source/Kernel/rme_kernel.c ****     }
4687:../../Source/Kernel/rme_kernel.c **** 
4688:../../Source/Kernel/rme_kernel.c ****     return 0;
 9912              		.loc 1 4688 12
 9913 00f0 0030A0E3 		mov	r3, #0
4689:../../Source/Kernel/rme_kernel.c **** }
 9914              		.loc 1 4689 1
 9915 00f4 0300A0E1 		mov	r0, r3
 9916 00f8 04D04BE2 		sub	sp, fp, #4
 9917              		.cfi_def_cfa 13, 8
 9918              		@ sp needed
 9919 00fc 0088BDE8 		pop	{fp, pc}
 9920              		.cfi_endproc
 9921              	.LFE49:
 9923              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 9924              		.align	2
 9925              		.global	_RME_Prc_Boot_Crt
 9926              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 258


 9927              		.arm
 9929              	_RME_Prc_Boot_Crt:
 9930              	.LFB50:
4690:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4691:../../Source/Kernel/rme_kernel.c **** 
4692:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4693:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4694:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4695:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4696:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4697:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4698:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4699:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4700:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4701:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4702:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4703:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4704:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4705:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4706:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4707:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4708:../../Source/Kernel/rme_kernel.c ****                                   this process.
4709:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4710:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4711:../../Source/Kernel/rme_kernel.c ****                                   address.
4712:../../Source/Kernel/rme_kernel.c **** Output      : None.
4713:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4714:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4715:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4716:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4717:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4718:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4719:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4720:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4721:../../Source/Kernel/rme_kernel.c **** #else
4722:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4723:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4724:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4725:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4726:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4727:../../Source/Kernel/rme_kernel.c **** #endif
4728:../../Source/Kernel/rme_kernel.c **** {
 9931              		.loc 1 4728 1
 9932              		.cfi_startproc
 9933              		@ args = 4, pretend = 0, frame = 48
 9934              		@ frame_needed = 1, uses_anonymous_args = 0
 9935 0000 00482DE9 		push	{fp, lr}
 9936              		.cfi_def_cfa_offset 8
 9937              		.cfi_offset 11, -8
 9938              		.cfi_offset 14, -4
 9939 0004 04B08DE2 		add	fp, sp, #4
 9940              		.cfi_def_cfa 11, 4
 9941 0008 30D04DE2 		sub	sp, sp, #48
 9942 000c 28000BE5 		str	r0, [fp, #-40]
 9943 0010 2C100BE5 		str	r1, [fp, #-44]
 9944 0014 30200BE5 		str	r2, [fp, #-48]
 9945 0018 34300BE5 		str	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 259


4729:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4730:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4731:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4732:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4733:../../Source/Kernel/rme_kernel.c **** #endif
4734:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4735:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4736:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4737:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4738:../../Source/Kernel/rme_kernel.c **** #endif
4739:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4740:../../Source/Kernel/rme_kernel.c ****     
4741:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4742:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 9946              		.loc 1 4742 5
 9947 001c 2C301BE5 		ldr	r3, [fp, #-44]
 9948 0020 803003E2 		and	r3, r3, #128
 9949 0024 000053E3 		cmp	r3, #0
 9950 0028 1C00001A 		bne	.L632
 9951              		.loc 1 4742 5 is_stmt 0 discriminator 1
 9952 002c 28301BE5 		ldr	r3, [fp, #-40]
 9953 0030 142093E5 		ldr	r2, [r3, #20]
 9954 0034 2C301BE5 		ldr	r3, [fp, #-44]
 9955 0038 030052E1 		cmp	r2, r3
 9956 003c 0100008A 		bhi	.L633
 9957              		.loc 1 4742 5 discriminator 3
 9958 0040 0230E0E3 		mvn	r3, #2
 9959              		.loc 1 4742 5
 9960 0044 740100EA 		b	.L634
 9961              	.L633:
 9962              		.loc 1 4742 5 discriminator 4
 9963 0048 2C301BE5 		ldr	r3, [fp, #-44]
 9964 004c 8322A0E1 		lsl	r2, r3, #5
 9965 0050 28301BE5 		ldr	r3, [fp, #-40]
 9966 0054 0C3093E5 		ldr	r3, [r3, #12]
 9967 0058 033082E0 		add	r3, r2, r3
 9968 005c 08300BE5 		str	r3, [fp, #-8]
 9969 0060 08301BE5 		ldr	r3, [fp, #-8]
 9970 0064 0300A0E1 		mov	r0, r3
 9971 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9972 006c 14000BE5 		str	r0, [fp, #-20]
 9973              		.loc 1 4742 5 discriminator 1
 9974 0070 14301BE5 		ldr	r3, [fp, #-20]
 9975 0074 FF3803E2 		and	r3, r3, #16711680
 9976 0078 020853E3 		cmp	r3, #131072
 9977 007c 0100001A 		bne	.L635
 9978              		.loc 1 4742 5 discriminator 5
 9979 0080 0830E0E3 		mvn	r3, #8
 9980              		.loc 1 4742 5
 9981 0084 640100EA 		b	.L634
 9982              	.L635:
 9983              		.loc 1 4742 5 discriminator 6
 9984 0088 14301BE5 		ldr	r3, [fp, #-20]
 9985 008c 233CA0E1 		lsr	r3, r3, #24
 9986 0090 030053E3 		cmp	r3, #3
 9987 0094 3F00000A 		beq	.L636
 9988              		.loc 1 4742 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 260


 9989 0098 0130E0E3 		mvn	r3, #1
 9990              		.loc 1 4742 5
 9991 009c 5E0100EA 		b	.L634
 9992              	.L632:
 9993              		.loc 1 4742 5 discriminator 2
 9994 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 9995 00a4 2324A0E1 		lsr	r2, r3, #8
 9996 00a8 28301BE5 		ldr	r3, [fp, #-40]
 9997 00ac 143093E5 		ldr	r3, [r3, #20]
 9998 00b0 030052E1 		cmp	r2, r3
 9999 00b4 0100003A 		bcc	.L637
 10000              		.loc 1 4742 5 discriminator 8
 10001 00b8 0230E0E3 		mvn	r3, #2
 10002              		.loc 1 4742 5
 10003 00bc 560100EA 		b	.L634
 10004              	.L637:
 10005              		.loc 1 4742 5 discriminator 9
 10006 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10007 00c4 2334A0E1 		lsr	r3, r3, #8
 10008 00c8 8322A0E1 		lsl	r2, r3, #5
 10009 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10010 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10011 00d4 033082E0 		add	r3, r2, r3
 10012 00d8 08300BE5 		str	r3, [fp, #-8]
 10013 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10014 00e0 0300A0E1 		mov	r0, r3
 10015 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10016 00e8 14000BE5 		str	r0, [fp, #-20]
 10017              		.loc 1 4742 5 discriminator 1
 10018 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10019 00f0 FF3803E2 		and	r3, r3, #16711680
 10020 00f4 020853E3 		cmp	r3, #131072
 10021 00f8 0100001A 		bne	.L638
 10022              		.loc 1 4742 5 discriminator 10
 10023 00fc 0830E0E3 		mvn	r3, #8
 10024              		.loc 1 4742 5
 10025 0100 450100EA 		b	.L634
 10026              	.L638:
 10027              		.loc 1 4742 5 discriminator 11
 10028 0104 14301BE5 		ldr	r3, [fp, #-20]
 10029 0108 233CA0E1 		lsr	r3, r3, #24
 10030 010c 030053E3 		cmp	r3, #3
 10031 0110 0100000A 		beq	.L639
 10032              		.loc 1 4742 5 discriminator 12
 10033 0114 0130E0E3 		mvn	r3, #1
 10034              		.loc 1 4742 5
 10035 0118 3F0100EA 		b	.L634
 10036              	.L639:
 10037              		.loc 1 4742 5 discriminator 13
 10038 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10039 0120 7F2003E2 		and	r2, r3, #127
 10040 0124 08301BE5 		ldr	r3, [fp, #-8]
 10041 0128 143093E5 		ldr	r3, [r3, #20]
 10042 012c 030052E1 		cmp	r2, r3
 10043 0130 0100003A 		bcc	.L640
 10044              		.loc 1 4742 5 discriminator 14
 10045 0134 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 261


 10046              		.loc 1 4742 5
 10047 0138 370100EA 		b	.L634
 10048              	.L640:
 10049              		.loc 1 4742 5 discriminator 15
 10050 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10051 0140 7F3003E2 		and	r3, r3, #127
 10052 0144 8322A0E1 		lsl	r2, r3, #5
 10053 0148 08301BE5 		ldr	r3, [fp, #-8]
 10054 014c 0C3093E5 		ldr	r3, [r3, #12]
 10055 0150 033082E0 		add	r3, r2, r3
 10056 0154 08300BE5 		str	r3, [fp, #-8]
 10057 0158 08301BE5 		ldr	r3, [fp, #-8]
 10058 015c 0300A0E1 		mov	r0, r3
 10059 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10060 0164 14000BE5 		str	r0, [fp, #-20]
 10061              		.loc 1 4742 5 discriminator 1
 10062 0168 14301BE5 		ldr	r3, [fp, #-20]
 10063 016c FF3803E2 		and	r3, r3, #16711680
 10064 0170 020853E3 		cmp	r3, #131072
 10065 0174 0100001A 		bne	.L641
 10066              		.loc 1 4742 5 discriminator 16
 10067 0178 0830E0E3 		mvn	r3, #8
 10068              		.loc 1 4742 5
 10069 017c 260100EA 		b	.L634
 10070              	.L641:
 10071              		.loc 1 4742 5 discriminator 17
 10072 0180 14301BE5 		ldr	r3, [fp, #-20]
 10073 0184 233CA0E1 		lsr	r3, r3, #24
 10074 0188 030053E3 		cmp	r3, #3
 10075 018c 0100000A 		beq	.L636
 10076              		.loc 1 4742 5 discriminator 18
 10077 0190 0130E0E3 		mvn	r3, #1
 10078              		.loc 1 4742 5
 10079 0194 200100EA 		b	.L634
 10080              	.L636:
4743:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4744:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10081              		.loc 1 4744 5 is_stmt 1
 10082 0198 34301BE5 		ldr	r3, [fp, #-52]
 10083 019c 803003E2 		and	r3, r3, #128
 10084 01a0 000053E3 		cmp	r3, #0
 10085 01a4 1C00001A 		bne	.L642
 10086              		.loc 1 4744 5 is_stmt 0 discriminator 1
 10087 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10088 01ac 142093E5 		ldr	r2, [r3, #20]
 10089 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10090 01b4 030052E1 		cmp	r2, r3
 10091 01b8 0100008A 		bhi	.L643
 10092              		.loc 1 4744 5 discriminator 3
 10093 01bc 0230E0E3 		mvn	r3, #2
 10094              		.loc 1 4744 5
 10095 01c0 150100EA 		b	.L634
 10096              	.L643:
 10097              		.loc 1 4744 5 discriminator 4
 10098 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10099 01c8 8322A0E1 		lsl	r2, r3, #5
 10100 01cc 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 262


 10101 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10102 01d4 033082E0 		add	r3, r2, r3
 10103 01d8 0C300BE5 		str	r3, [fp, #-12]
 10104 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10105 01e0 0300A0E1 		mov	r0, r3
 10106 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10107 01e8 14000BE5 		str	r0, [fp, #-20]
 10108              		.loc 1 4744 5 discriminator 1
 10109 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10110 01f0 FF3803E2 		and	r3, r3, #16711680
 10111 01f4 020853E3 		cmp	r3, #131072
 10112 01f8 0100001A 		bne	.L644
 10113              		.loc 1 4744 5 discriminator 5
 10114 01fc 0830E0E3 		mvn	r3, #8
 10115              		.loc 1 4744 5
 10116 0200 050100EA 		b	.L634
 10117              	.L644:
 10118              		.loc 1 4744 5 discriminator 6
 10119 0204 14301BE5 		ldr	r3, [fp, #-20]
 10120 0208 233CA0E1 		lsr	r3, r3, #24
 10121 020c 030053E3 		cmp	r3, #3
 10122 0210 3F00000A 		beq	.L645
 10123              		.loc 1 4744 5 discriminator 7
 10124 0214 0130E0E3 		mvn	r3, #1
 10125              		.loc 1 4744 5
 10126 0218 FF0000EA 		b	.L634
 10127              	.L642:
 10128              		.loc 1 4744 5 discriminator 2
 10129 021c 34301BE5 		ldr	r3, [fp, #-52]
 10130 0220 2324A0E1 		lsr	r2, r3, #8
 10131 0224 28301BE5 		ldr	r3, [fp, #-40]
 10132 0228 143093E5 		ldr	r3, [r3, #20]
 10133 022c 030052E1 		cmp	r2, r3
 10134 0230 0100003A 		bcc	.L646
 10135              		.loc 1 4744 5 discriminator 8
 10136 0234 0230E0E3 		mvn	r3, #2
 10137              		.loc 1 4744 5
 10138 0238 F70000EA 		b	.L634
 10139              	.L646:
 10140              		.loc 1 4744 5 discriminator 9
 10141 023c 34301BE5 		ldr	r3, [fp, #-52]
 10142 0240 2334A0E1 		lsr	r3, r3, #8
 10143 0244 8322A0E1 		lsl	r2, r3, #5
 10144 0248 28301BE5 		ldr	r3, [fp, #-40]
 10145 024c 0C3093E5 		ldr	r3, [r3, #12]
 10146 0250 033082E0 		add	r3, r2, r3
 10147 0254 0C300BE5 		str	r3, [fp, #-12]
 10148 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10149 025c 0300A0E1 		mov	r0, r3
 10150 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10151 0264 14000BE5 		str	r0, [fp, #-20]
 10152              		.loc 1 4744 5 discriminator 1
 10153 0268 14301BE5 		ldr	r3, [fp, #-20]
 10154 026c FF3803E2 		and	r3, r3, #16711680
 10155 0270 020853E3 		cmp	r3, #131072
 10156 0274 0100001A 		bne	.L647
 10157              		.loc 1 4744 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 263


 10158 0278 0830E0E3 		mvn	r3, #8
 10159              		.loc 1 4744 5
 10160 027c E60000EA 		b	.L634
 10161              	.L647:
 10162              		.loc 1 4744 5 discriminator 11
 10163 0280 14301BE5 		ldr	r3, [fp, #-20]
 10164 0284 233CA0E1 		lsr	r3, r3, #24
 10165 0288 030053E3 		cmp	r3, #3
 10166 028c 0100000A 		beq	.L648
 10167              		.loc 1 4744 5 discriminator 12
 10168 0290 0130E0E3 		mvn	r3, #1
 10169              		.loc 1 4744 5
 10170 0294 E00000EA 		b	.L634
 10171              	.L648:
 10172              		.loc 1 4744 5 discriminator 13
 10173 0298 34301BE5 		ldr	r3, [fp, #-52]
 10174 029c 7F2003E2 		and	r2, r3, #127
 10175 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10176 02a4 143093E5 		ldr	r3, [r3, #20]
 10177 02a8 030052E1 		cmp	r2, r3
 10178 02ac 0100003A 		bcc	.L649
 10179              		.loc 1 4744 5 discriminator 14
 10180 02b0 0230E0E3 		mvn	r3, #2
 10181              		.loc 1 4744 5
 10182 02b4 D80000EA 		b	.L634
 10183              	.L649:
 10184              		.loc 1 4744 5 discriminator 15
 10185 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10186 02bc 7F3003E2 		and	r3, r3, #127
 10187 02c0 8322A0E1 		lsl	r2, r3, #5
 10188 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10189 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10190 02cc 033082E0 		add	r3, r2, r3
 10191 02d0 0C300BE5 		str	r3, [fp, #-12]
 10192 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10193 02d8 0300A0E1 		mov	r0, r3
 10194 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10195 02e0 14000BE5 		str	r0, [fp, #-20]
 10196              		.loc 1 4744 5 discriminator 1
 10197 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10198 02e8 FF3803E2 		and	r3, r3, #16711680
 10199 02ec 020853E3 		cmp	r3, #131072
 10200 02f0 0100001A 		bne	.L650
 10201              		.loc 1 4744 5 discriminator 16
 10202 02f4 0830E0E3 		mvn	r3, #8
 10203              		.loc 1 4744 5
 10204 02f8 C70000EA 		b	.L634
 10205              	.L650:
 10206              		.loc 1 4744 5 discriminator 17
 10207 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10208 0300 233CA0E1 		lsr	r3, r3, #24
 10209 0304 030053E3 		cmp	r3, #3
 10210 0308 0100000A 		beq	.L645
 10211              		.loc 1 4744 5 discriminator 18
 10212 030c 0130E0E3 		mvn	r3, #1
 10213              		.loc 1 4744 5
 10214 0310 C10000EA 		b	.L634
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 264


 10215              	.L645:
4745:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4746:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4747:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10216              		.loc 1 4747 5 is_stmt 1
 10217 0314 04309BE5 		ldr	r3, [fp, #4]
 10218 0318 803003E2 		and	r3, r3, #128
 10219 031c 000053E3 		cmp	r3, #0
 10220 0320 1C00001A 		bne	.L651
 10221              		.loc 1 4747 5 is_stmt 0 discriminator 1
 10222 0324 28301BE5 		ldr	r3, [fp, #-40]
 10223 0328 142093E5 		ldr	r2, [r3, #20]
 10224 032c 04309BE5 		ldr	r3, [fp, #4]
 10225 0330 030052E1 		cmp	r2, r3
 10226 0334 0100008A 		bhi	.L652
 10227              		.loc 1 4747 5 discriminator 3
 10228 0338 0230E0E3 		mvn	r3, #2
 10229              		.loc 1 4747 5
 10230 033c B60000EA 		b	.L634
 10231              	.L652:
 10232              		.loc 1 4747 5 discriminator 4
 10233 0340 04309BE5 		ldr	r3, [fp, #4]
 10234 0344 8322A0E1 		lsl	r2, r3, #5
 10235 0348 28301BE5 		ldr	r3, [fp, #-40]
 10236 034c 0C3093E5 		ldr	r3, [r3, #12]
 10237 0350 033082E0 		add	r3, r2, r3
 10238 0354 10300BE5 		str	r3, [fp, #-16]
 10239 0358 10301BE5 		ldr	r3, [fp, #-16]
 10240 035c 0300A0E1 		mov	r0, r3
 10241 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10242 0364 14000BE5 		str	r0, [fp, #-20]
 10243              		.loc 1 4747 5 discriminator 1
 10244 0368 14301BE5 		ldr	r3, [fp, #-20]
 10245 036c FF3803E2 		and	r3, r3, #16711680
 10246 0370 020853E3 		cmp	r3, #131072
 10247 0374 0100001A 		bne	.L653
 10248              		.loc 1 4747 5 discriminator 5
 10249 0378 0830E0E3 		mvn	r3, #8
 10250              		.loc 1 4747 5
 10251 037c A60000EA 		b	.L634
 10252              	.L653:
 10253              		.loc 1 4747 5 discriminator 6
 10254 0380 14301BE5 		ldr	r3, [fp, #-20]
 10255 0384 233CA0E1 		lsr	r3, r3, #24
 10256 0388 040053E3 		cmp	r3, #4
 10257 038c 3F00000A 		beq	.L654
 10258              		.loc 1 4747 5 discriminator 7
 10259 0390 0130E0E3 		mvn	r3, #1
 10260              		.loc 1 4747 5
 10261 0394 A00000EA 		b	.L634
 10262              	.L651:
 10263              		.loc 1 4747 5 discriminator 2
 10264 0398 04309BE5 		ldr	r3, [fp, #4]
 10265 039c 2324A0E1 		lsr	r2, r3, #8
 10266 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10267 03a4 143093E5 		ldr	r3, [r3, #20]
 10268 03a8 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 265


 10269 03ac 0100003A 		bcc	.L655
 10270              		.loc 1 4747 5 discriminator 8
 10271 03b0 0230E0E3 		mvn	r3, #2
 10272              		.loc 1 4747 5
 10273 03b4 980000EA 		b	.L634
 10274              	.L655:
 10275              		.loc 1 4747 5 discriminator 9
 10276 03b8 04309BE5 		ldr	r3, [fp, #4]
 10277 03bc 2334A0E1 		lsr	r3, r3, #8
 10278 03c0 8322A0E1 		lsl	r2, r3, #5
 10279 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10280 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10281 03cc 033082E0 		add	r3, r2, r3
 10282 03d0 10300BE5 		str	r3, [fp, #-16]
 10283 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10284 03d8 0300A0E1 		mov	r0, r3
 10285 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10286 03e0 14000BE5 		str	r0, [fp, #-20]
 10287              		.loc 1 4747 5 discriminator 1
 10288 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10289 03e8 FF3803E2 		and	r3, r3, #16711680
 10290 03ec 020853E3 		cmp	r3, #131072
 10291 03f0 0100001A 		bne	.L656
 10292              		.loc 1 4747 5 discriminator 10
 10293 03f4 0830E0E3 		mvn	r3, #8
 10294              		.loc 1 4747 5
 10295 03f8 870000EA 		b	.L634
 10296              	.L656:
 10297              		.loc 1 4747 5 discriminator 11
 10298 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10299 0400 233CA0E1 		lsr	r3, r3, #24
 10300 0404 030053E3 		cmp	r3, #3
 10301 0408 0100000A 		beq	.L657
 10302              		.loc 1 4747 5 discriminator 12
 10303 040c 0130E0E3 		mvn	r3, #1
 10304              		.loc 1 4747 5
 10305 0410 810000EA 		b	.L634
 10306              	.L657:
 10307              		.loc 1 4747 5 discriminator 13
 10308 0414 04309BE5 		ldr	r3, [fp, #4]
 10309 0418 7F2003E2 		and	r2, r3, #127
 10310 041c 10301BE5 		ldr	r3, [fp, #-16]
 10311 0420 143093E5 		ldr	r3, [r3, #20]
 10312 0424 030052E1 		cmp	r2, r3
 10313 0428 0100003A 		bcc	.L658
 10314              		.loc 1 4747 5 discriminator 14
 10315 042c 0230E0E3 		mvn	r3, #2
 10316              		.loc 1 4747 5
 10317 0430 790000EA 		b	.L634
 10318              	.L658:
 10319              		.loc 1 4747 5 discriminator 15
 10320 0434 04309BE5 		ldr	r3, [fp, #4]
 10321 0438 7F3003E2 		and	r3, r3, #127
 10322 043c 8322A0E1 		lsl	r2, r3, #5
 10323 0440 10301BE5 		ldr	r3, [fp, #-16]
 10324 0444 0C3093E5 		ldr	r3, [r3, #12]
 10325 0448 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 266


 10326 044c 10300BE5 		str	r3, [fp, #-16]
 10327 0450 10301BE5 		ldr	r3, [fp, #-16]
 10328 0454 0300A0E1 		mov	r0, r3
 10329 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10330 045c 14000BE5 		str	r0, [fp, #-20]
 10331              		.loc 1 4747 5 discriminator 1
 10332 0460 14301BE5 		ldr	r3, [fp, #-20]
 10333 0464 FF3803E2 		and	r3, r3, #16711680
 10334 0468 020853E3 		cmp	r3, #131072
 10335 046c 0100001A 		bne	.L659
 10336              		.loc 1 4747 5 discriminator 16
 10337 0470 0830E0E3 		mvn	r3, #8
 10338              		.loc 1 4747 5
 10339 0474 680000EA 		b	.L634
 10340              	.L659:
 10341              		.loc 1 4747 5 discriminator 17
 10342 0478 14301BE5 		ldr	r3, [fp, #-20]
 10343 047c 233CA0E1 		lsr	r3, r3, #24
 10344 0480 040053E3 		cmp	r3, #4
 10345 0484 0100000A 		beq	.L654
 10346              		.loc 1 4747 5 discriminator 18
 10347 0488 0130E0E3 		mvn	r3, #1
 10348              		.loc 1 4747 5
 10349 048c 620000EA 		b	.L634
 10350              	.L654:
4748:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4749:../../Source/Kernel/rme_kernel.c **** #endif
4750:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4751:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10351              		.loc 1 4751 5 is_stmt 1
 10352 0490 08301BE5 		ldr	r3, [fp, #-8]
 10353 0494 083093E5 		ldr	r3, [r3, #8]
 10354 0498 013003E2 		and	r3, r3, #1
 10355 049c 000053E3 		cmp	r3, #0
 10356 04a0 0100001A 		bne	.L660
 10357              		.loc 1 4751 5 is_stmt 0 discriminator 1
 10358 04a4 0630E0E3 		mvn	r3, #6
 10359              		.loc 1 4751 5
 10360 04a8 5B0000EA 		b	.L634
 10361              	.L660:
4752:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10362              		.loc 1 4752 5 is_stmt 1
 10363 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10364 04b0 083093E5 		ldr	r3, [r3, #8]
 10365 04b4 403003E2 		and	r3, r3, #64
 10366 04b8 000053E3 		cmp	r3, #0
 10367 04bc 0100001A 		bne	.L661
 10368              		.loc 1 4752 5 is_stmt 0 discriminator 1
 10369 04c0 0630E0E3 		mvn	r3, #6
 10370              		.loc 1 4752 5
 10371 04c4 540000EA 		b	.L634
 10372              	.L661:
4753:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4754:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10373              		.loc 1 4754 5 is_stmt 1
 10374 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10375 04cc 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 267


 10376 04d0 403003E2 		and	r3, r3, #64
 10377 04d4 000053E3 		cmp	r3, #0
 10378 04d8 0100001A 		bne	.L662
 10379              		.loc 1 4754 5 is_stmt 0 discriminator 1
 10380 04dc 0630E0E3 		mvn	r3, #6
 10381              		.loc 1 4754 5
 10382 04e0 4D0000EA 		b	.L634
 10383              	.L662:
4755:../../Source/Kernel/rme_kernel.c **** #endif
4756:../../Source/Kernel/rme_kernel.c ****     
4757:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4758:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10384              		.loc 1 4758 5 is_stmt 1
 10385 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10386 04e8 142093E5 		ldr	r2, [r3, #20]
 10387 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10388 04f0 030052E1 		cmp	r2, r3
 10389 04f4 0100008A 		bhi	.L663
 10390              		.loc 1 4758 5 is_stmt 0 discriminator 1
 10391 04f8 0230E0E3 		mvn	r3, #2
 10392              		.loc 1 4758 5
 10393 04fc 460000EA 		b	.L634
 10394              	.L663:
 10395              		.loc 1 4758 5 discriminator 2
 10396 0500 30301BE5 		ldr	r3, [fp, #-48]
 10397 0504 8322A0E1 		lsl	r2, r3, #5
 10398 0508 08301BE5 		ldr	r3, [fp, #-8]
 10399 050c 0C3093E5 		ldr	r3, [r3, #12]
 10400 0510 033082E0 		add	r3, r2, r3
 10401 0514 18300BE5 		str	r3, [fp, #-24]
4759:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4760:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10402              		.loc 1 4760 5 is_stmt 1
 10403 0518 18301BE5 		ldr	r3, [fp, #-24]
 10404 051c 0128A0E3 		mov	r2, #65536
 10405 0520 0010A0E3 		mov	r1, #0
 10406 0524 0300A0E1 		mov	r0, r3
 10407 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10408 052c 0030A0E1 		mov	r3, r0
 10409              		.loc 1 4760 5 is_stmt 0 discriminator 1
 10410 0530 000053E3 		cmp	r3, #0
 10411 0534 0100001A 		bne	.L664
 10412 0538 0430E0E3 		mvn	r3, #4
 10413              		.loc 1 4760 5
 10414 053c 360000EA 		b	.L634
 10415              	.L664:
 10416              		.loc 1 4760 5 discriminator 2
 10417 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10418 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10419 0548 002093E5 		ldr	r2, [r3]
 10420 054c 18301BE5 		ldr	r3, [fp, #-24]
 10421 0550 102083E5 		str	r2, [r3, #16]
4761:../../Source/Kernel/rme_kernel.c **** 
4762:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4763:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10422              		.loc 1 4763 27 is_stmt 1
 10423 0554 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 268


 10424 0558 0120A0E3 		mov	r2, #1
 10425 055c 042083E5 		str	r2, [r3, #4]
4764:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10426              		.loc 1 4764 25
 10427 0560 18301BE5 		ldr	r3, [fp, #-24]
 10428 0564 0020A0E3 		mov	r2, #0
 10429 0568 0C2083E5 		str	r2, [r3, #12]
4765:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10430              		.loc 1 4765 23
 10431 056c 18301BE5 		ldr	r3, [fp, #-24]
 10432 0570 0320A0E3 		mov	r2, #3
 10433 0574 082083E5 		str	r2, [r3, #8]
4766:../../Source/Kernel/rme_kernel.c **** 
4767:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4768:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10434              		.loc 1 4768 13
 10435 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10436 057c 003093E5 		ldr	r3, [r3]
 10437 0580 7330FFE6 		uxth	r3, r3
 10438 0584 000053E3 		cmp	r3, #0
 10439 0588 0200000A 		beq	.L665
 10440              		.loc 1 4768 13 is_stmt 0 discriminator 1
 10441 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10442 0590 043093E5 		ldr	r3, [r3, #4]
 10443 0594 000000EA 		b	.L666
 10444              	.L665:
 10445              		.loc 1 4768 13 discriminator 2
 10446 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10447              	.L666:
 10448              		.loc 1 4768 12 is_stmt 1 discriminator 4
 10449 059c 1C300BE5 		str	r3, [fp, #-28]
4769:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4770:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10450              		.loc 1 4770 13
 10451 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10452 05a4 003093E5 		ldr	r3, [r3]
 10453 05a8 7330FFE6 		uxth	r3, r3
 10454 05ac 000053E3 		cmp	r3, #0
 10455 05b0 0200000A 		beq	.L667
 10456              		.loc 1 4770 13 is_stmt 0 discriminator 1
 10457 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10458 05b8 043093E5 		ldr	r3, [r3, #4]
 10459 05bc 000000EA 		b	.L668
 10460              	.L667:
 10461              		.loc 1 4770 13 discriminator 2
 10462 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10463              	.L668:
 10464              		.loc 1 4770 12 is_stmt 1 discriminator 4
 10465 05c4 20300BE5 		str	r3, [fp, #-32]
4771:../../Source/Kernel/rme_kernel.c **** #endif
4772:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10466              		.loc 1 4772 17
 10467 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10468 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10469 05d0 142083E5 		str	r2, [r3, #20]
4773:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4774:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 269


 10470              		.loc 1 4774 17
 10471 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10472 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10473 05dc 182083E5 		str	r2, [r3, #24]
4775:../../Source/Kernel/rme_kernel.c **** #else
4776:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4777:../../Source/Kernel/rme_kernel.c **** #endif
4778:../../Source/Kernel/rme_kernel.c ****     
4779:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4780:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10474              		.loc 1 4780 5
 10475 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10476 05e4 043083E2 		add	r3, r3, #4
 10477 05e8 0110A0E3 		mov	r1, #1
 10478 05ec 0300A0E1 		mov	r0, r3
 10479 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4781:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4782:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10480              		.loc 1 4782 5
 10481 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10482 05f8 043083E2 		add	r3, r3, #4
 10483 05fc 0110A0E3 		mov	r1, #1
 10484 0600 0300A0E1 		mov	r0, r3
 10485 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4783:../../Source/Kernel/rme_kernel.c **** #endif
4784:../../Source/Kernel/rme_kernel.c **** 
4785:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4786:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10486              		.loc 1 4786 5
 10487 0608 18301BE5 		ldr	r3, [fp, #-24]
 10488 060c 0514A0E3 		mov	r1, #83886080
 10489 0610 0300A0E1 		mov	r0, r3
 10490 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4787:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4788:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4789:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4790:../../Source/Kernel/rme_kernel.c **** 
4791:../../Source/Kernel/rme_kernel.c ****     return 0;
 10491              		.loc 1 4791 12
 10492 0618 0030A0E3 		mov	r3, #0
 10493              	.L634:
4792:../../Source/Kernel/rme_kernel.c **** }
 10494              		.loc 1 4792 1
 10495 061c 0300A0E1 		mov	r0, r3
 10496 0620 04D04BE2 		sub	sp, fp, #4
 10497              		.cfi_def_cfa 13, 8
 10498              		@ sp needed
 10499 0624 0088BDE8 		pop	{fp, pc}
 10500              		.cfi_endproc
 10501              	.LFE50:
 10503              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10504              		.align	2
 10505              		.syntax unified
 10506              		.arm
 10508              	_RME_Prc_Crt:
 10509              	.LFB51:
4793:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 270


4794:../../Source/Kernel/rme_kernel.c **** 
4795:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4796:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4797:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4798:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4799:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4800:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4801:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4803:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4804:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4806:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4807:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4808:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4809:../../Source/Kernel/rme_kernel.c ****                                   this process.
4810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4812:../../Source/Kernel/rme_kernel.c ****                                   address.
4813:../../Source/Kernel/rme_kernel.c **** Output      : None.
4814:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4815:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4816:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4817:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4818:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4819:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4820:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4821:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4822:../../Source/Kernel/rme_kernel.c **** #else
4823:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4824:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4825:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4826:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4827:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4828:../../Source/Kernel/rme_kernel.c **** #endif
4829:../../Source/Kernel/rme_kernel.c **** {
 10510              		.loc 1 4829 1
 10511              		.cfi_startproc
 10512              		@ args = 4, pretend = 0, frame = 48
 10513              		@ frame_needed = 1, uses_anonymous_args = 0
 10514 0000 00482DE9 		push	{fp, lr}
 10515              		.cfi_def_cfa_offset 8
 10516              		.cfi_offset 11, -8
 10517              		.cfi_offset 14, -4
 10518 0004 04B08DE2 		add	fp, sp, #4
 10519              		.cfi_def_cfa 11, 4
 10520 0008 30D04DE2 		sub	sp, sp, #48
 10521 000c 28000BE5 		str	r0, [fp, #-40]
 10522 0010 2C100BE5 		str	r1, [fp, #-44]
 10523 0014 30200BE5 		str	r2, [fp, #-48]
 10524 0018 34300BE5 		str	r3, [fp, #-52]
4830:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4831:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4832:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4833:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4834:../../Source/Kernel/rme_kernel.c **** #endif
4835:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 271


4836:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4837:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4838:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4839:../../Source/Kernel/rme_kernel.c **** #endif
4840:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4841:../../Source/Kernel/rme_kernel.c ****     
4842:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4843:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10525              		.loc 1 4843 5
 10526 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10527 0020 803003E2 		and	r3, r3, #128
 10528 0024 000053E3 		cmp	r3, #0
 10529 0028 1C00001A 		bne	.L670
 10530              		.loc 1 4843 5 is_stmt 0 discriminator 1
 10531 002c 28301BE5 		ldr	r3, [fp, #-40]
 10532 0030 142093E5 		ldr	r2, [r3, #20]
 10533 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10534 0038 030052E1 		cmp	r2, r3
 10535 003c 0100008A 		bhi	.L671
 10536              		.loc 1 4843 5 discriminator 3
 10537 0040 0230E0E3 		mvn	r3, #2
 10538              		.loc 1 4843 5
 10539 0044 740100EA 		b	.L672
 10540              	.L671:
 10541              		.loc 1 4843 5 discriminator 4
 10542 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10543 004c 8322A0E1 		lsl	r2, r3, #5
 10544 0050 28301BE5 		ldr	r3, [fp, #-40]
 10545 0054 0C3093E5 		ldr	r3, [r3, #12]
 10546 0058 033082E0 		add	r3, r2, r3
 10547 005c 08300BE5 		str	r3, [fp, #-8]
 10548 0060 08301BE5 		ldr	r3, [fp, #-8]
 10549 0064 0300A0E1 		mov	r0, r3
 10550 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10551 006c 14000BE5 		str	r0, [fp, #-20]
 10552              		.loc 1 4843 5 discriminator 1
 10553 0070 14301BE5 		ldr	r3, [fp, #-20]
 10554 0074 FF3803E2 		and	r3, r3, #16711680
 10555 0078 020853E3 		cmp	r3, #131072
 10556 007c 0100001A 		bne	.L673
 10557              		.loc 1 4843 5 discriminator 5
 10558 0080 0830E0E3 		mvn	r3, #8
 10559              		.loc 1 4843 5
 10560 0084 640100EA 		b	.L672
 10561              	.L673:
 10562              		.loc 1 4843 5 discriminator 6
 10563 0088 14301BE5 		ldr	r3, [fp, #-20]
 10564 008c 233CA0E1 		lsr	r3, r3, #24
 10565 0090 030053E3 		cmp	r3, #3
 10566 0094 3F00000A 		beq	.L674
 10567              		.loc 1 4843 5 discriminator 7
 10568 0098 0130E0E3 		mvn	r3, #1
 10569              		.loc 1 4843 5
 10570 009c 5E0100EA 		b	.L672
 10571              	.L670:
 10572              		.loc 1 4843 5 discriminator 2
 10573 00a0 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 272


 10574 00a4 2324A0E1 		lsr	r2, r3, #8
 10575 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10576 00ac 143093E5 		ldr	r3, [r3, #20]
 10577 00b0 030052E1 		cmp	r2, r3
 10578 00b4 0100003A 		bcc	.L675
 10579              		.loc 1 4843 5 discriminator 8
 10580 00b8 0230E0E3 		mvn	r3, #2
 10581              		.loc 1 4843 5
 10582 00bc 560100EA 		b	.L672
 10583              	.L675:
 10584              		.loc 1 4843 5 discriminator 9
 10585 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10586 00c4 2334A0E1 		lsr	r3, r3, #8
 10587 00c8 8322A0E1 		lsl	r2, r3, #5
 10588 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10589 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10590 00d4 033082E0 		add	r3, r2, r3
 10591 00d8 08300BE5 		str	r3, [fp, #-8]
 10592 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10593 00e0 0300A0E1 		mov	r0, r3
 10594 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10595 00e8 14000BE5 		str	r0, [fp, #-20]
 10596              		.loc 1 4843 5 discriminator 1
 10597 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10598 00f0 FF3803E2 		and	r3, r3, #16711680
 10599 00f4 020853E3 		cmp	r3, #131072
 10600 00f8 0100001A 		bne	.L676
 10601              		.loc 1 4843 5 discriminator 10
 10602 00fc 0830E0E3 		mvn	r3, #8
 10603              		.loc 1 4843 5
 10604 0100 450100EA 		b	.L672
 10605              	.L676:
 10606              		.loc 1 4843 5 discriminator 11
 10607 0104 14301BE5 		ldr	r3, [fp, #-20]
 10608 0108 233CA0E1 		lsr	r3, r3, #24
 10609 010c 030053E3 		cmp	r3, #3
 10610 0110 0100000A 		beq	.L677
 10611              		.loc 1 4843 5 discriminator 12
 10612 0114 0130E0E3 		mvn	r3, #1
 10613              		.loc 1 4843 5
 10614 0118 3F0100EA 		b	.L672
 10615              	.L677:
 10616              		.loc 1 4843 5 discriminator 13
 10617 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10618 0120 7F2003E2 		and	r2, r3, #127
 10619 0124 08301BE5 		ldr	r3, [fp, #-8]
 10620 0128 143093E5 		ldr	r3, [r3, #20]
 10621 012c 030052E1 		cmp	r2, r3
 10622 0130 0100003A 		bcc	.L678
 10623              		.loc 1 4843 5 discriminator 14
 10624 0134 0230E0E3 		mvn	r3, #2
 10625              		.loc 1 4843 5
 10626 0138 370100EA 		b	.L672
 10627              	.L678:
 10628              		.loc 1 4843 5 discriminator 15
 10629 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10630 0140 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 273


 10631 0144 8322A0E1 		lsl	r2, r3, #5
 10632 0148 08301BE5 		ldr	r3, [fp, #-8]
 10633 014c 0C3093E5 		ldr	r3, [r3, #12]
 10634 0150 033082E0 		add	r3, r2, r3
 10635 0154 08300BE5 		str	r3, [fp, #-8]
 10636 0158 08301BE5 		ldr	r3, [fp, #-8]
 10637 015c 0300A0E1 		mov	r0, r3
 10638 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10639 0164 14000BE5 		str	r0, [fp, #-20]
 10640              		.loc 1 4843 5 discriminator 1
 10641 0168 14301BE5 		ldr	r3, [fp, #-20]
 10642 016c FF3803E2 		and	r3, r3, #16711680
 10643 0170 020853E3 		cmp	r3, #131072
 10644 0174 0100001A 		bne	.L679
 10645              		.loc 1 4843 5 discriminator 16
 10646 0178 0830E0E3 		mvn	r3, #8
 10647              		.loc 1 4843 5
 10648 017c 260100EA 		b	.L672
 10649              	.L679:
 10650              		.loc 1 4843 5 discriminator 17
 10651 0180 14301BE5 		ldr	r3, [fp, #-20]
 10652 0184 233CA0E1 		lsr	r3, r3, #24
 10653 0188 030053E3 		cmp	r3, #3
 10654 018c 0100000A 		beq	.L674
 10655              		.loc 1 4843 5 discriminator 18
 10656 0190 0130E0E3 		mvn	r3, #1
 10657              		.loc 1 4843 5
 10658 0194 200100EA 		b	.L672
 10659              	.L674:
4844:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4845:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10660              		.loc 1 4845 5 is_stmt 1
 10661 0198 34301BE5 		ldr	r3, [fp, #-52]
 10662 019c 803003E2 		and	r3, r3, #128
 10663 01a0 000053E3 		cmp	r3, #0
 10664 01a4 1C00001A 		bne	.L680
 10665              		.loc 1 4845 5 is_stmt 0 discriminator 1
 10666 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10667 01ac 142093E5 		ldr	r2, [r3, #20]
 10668 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10669 01b4 030052E1 		cmp	r2, r3
 10670 01b8 0100008A 		bhi	.L681
 10671              		.loc 1 4845 5 discriminator 3
 10672 01bc 0230E0E3 		mvn	r3, #2
 10673              		.loc 1 4845 5
 10674 01c0 150100EA 		b	.L672
 10675              	.L681:
 10676              		.loc 1 4845 5 discriminator 4
 10677 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10678 01c8 8322A0E1 		lsl	r2, r3, #5
 10679 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10680 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10681 01d4 033082E0 		add	r3, r2, r3
 10682 01d8 0C300BE5 		str	r3, [fp, #-12]
 10683 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10684 01e0 0300A0E1 		mov	r0, r3
 10685 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 274


 10686 01e8 14000BE5 		str	r0, [fp, #-20]
 10687              		.loc 1 4845 5 discriminator 1
 10688 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10689 01f0 FF3803E2 		and	r3, r3, #16711680
 10690 01f4 020853E3 		cmp	r3, #131072
 10691 01f8 0100001A 		bne	.L682
 10692              		.loc 1 4845 5 discriminator 5
 10693 01fc 0830E0E3 		mvn	r3, #8
 10694              		.loc 1 4845 5
 10695 0200 050100EA 		b	.L672
 10696              	.L682:
 10697              		.loc 1 4845 5 discriminator 6
 10698 0204 14301BE5 		ldr	r3, [fp, #-20]
 10699 0208 233CA0E1 		lsr	r3, r3, #24
 10700 020c 030053E3 		cmp	r3, #3
 10701 0210 3F00000A 		beq	.L683
 10702              		.loc 1 4845 5 discriminator 7
 10703 0214 0130E0E3 		mvn	r3, #1
 10704              		.loc 1 4845 5
 10705 0218 FF0000EA 		b	.L672
 10706              	.L680:
 10707              		.loc 1 4845 5 discriminator 2
 10708 021c 34301BE5 		ldr	r3, [fp, #-52]
 10709 0220 2324A0E1 		lsr	r2, r3, #8
 10710 0224 28301BE5 		ldr	r3, [fp, #-40]
 10711 0228 143093E5 		ldr	r3, [r3, #20]
 10712 022c 030052E1 		cmp	r2, r3
 10713 0230 0100003A 		bcc	.L684
 10714              		.loc 1 4845 5 discriminator 8
 10715 0234 0230E0E3 		mvn	r3, #2
 10716              		.loc 1 4845 5
 10717 0238 F70000EA 		b	.L672
 10718              	.L684:
 10719              		.loc 1 4845 5 discriminator 9
 10720 023c 34301BE5 		ldr	r3, [fp, #-52]
 10721 0240 2334A0E1 		lsr	r3, r3, #8
 10722 0244 8322A0E1 		lsl	r2, r3, #5
 10723 0248 28301BE5 		ldr	r3, [fp, #-40]
 10724 024c 0C3093E5 		ldr	r3, [r3, #12]
 10725 0250 033082E0 		add	r3, r2, r3
 10726 0254 0C300BE5 		str	r3, [fp, #-12]
 10727 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10728 025c 0300A0E1 		mov	r0, r3
 10729 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10730 0264 14000BE5 		str	r0, [fp, #-20]
 10731              		.loc 1 4845 5 discriminator 1
 10732 0268 14301BE5 		ldr	r3, [fp, #-20]
 10733 026c FF3803E2 		and	r3, r3, #16711680
 10734 0270 020853E3 		cmp	r3, #131072
 10735 0274 0100001A 		bne	.L685
 10736              		.loc 1 4845 5 discriminator 10
 10737 0278 0830E0E3 		mvn	r3, #8
 10738              		.loc 1 4845 5
 10739 027c E60000EA 		b	.L672
 10740              	.L685:
 10741              		.loc 1 4845 5 discriminator 11
 10742 0280 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 275


 10743 0284 233CA0E1 		lsr	r3, r3, #24
 10744 0288 030053E3 		cmp	r3, #3
 10745 028c 0100000A 		beq	.L686
 10746              		.loc 1 4845 5 discriminator 12
 10747 0290 0130E0E3 		mvn	r3, #1
 10748              		.loc 1 4845 5
 10749 0294 E00000EA 		b	.L672
 10750              	.L686:
 10751              		.loc 1 4845 5 discriminator 13
 10752 0298 34301BE5 		ldr	r3, [fp, #-52]
 10753 029c 7F2003E2 		and	r2, r3, #127
 10754 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10755 02a4 143093E5 		ldr	r3, [r3, #20]
 10756 02a8 030052E1 		cmp	r2, r3
 10757 02ac 0100003A 		bcc	.L687
 10758              		.loc 1 4845 5 discriminator 14
 10759 02b0 0230E0E3 		mvn	r3, #2
 10760              		.loc 1 4845 5
 10761 02b4 D80000EA 		b	.L672
 10762              	.L687:
 10763              		.loc 1 4845 5 discriminator 15
 10764 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10765 02bc 7F3003E2 		and	r3, r3, #127
 10766 02c0 8322A0E1 		lsl	r2, r3, #5
 10767 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10768 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10769 02cc 033082E0 		add	r3, r2, r3
 10770 02d0 0C300BE5 		str	r3, [fp, #-12]
 10771 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10772 02d8 0300A0E1 		mov	r0, r3
 10773 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10774 02e0 14000BE5 		str	r0, [fp, #-20]
 10775              		.loc 1 4845 5 discriminator 1
 10776 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10777 02e8 FF3803E2 		and	r3, r3, #16711680
 10778 02ec 020853E3 		cmp	r3, #131072
 10779 02f0 0100001A 		bne	.L688
 10780              		.loc 1 4845 5 discriminator 16
 10781 02f4 0830E0E3 		mvn	r3, #8
 10782              		.loc 1 4845 5
 10783 02f8 C70000EA 		b	.L672
 10784              	.L688:
 10785              		.loc 1 4845 5 discriminator 17
 10786 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10787 0300 233CA0E1 		lsr	r3, r3, #24
 10788 0304 030053E3 		cmp	r3, #3
 10789 0308 0100000A 		beq	.L683
 10790              		.loc 1 4845 5 discriminator 18
 10791 030c 0130E0E3 		mvn	r3, #1
 10792              		.loc 1 4845 5
 10793 0310 C10000EA 		b	.L672
 10794              	.L683:
4846:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4847:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10795              		.loc 1 4848 5 is_stmt 1
 10796 0314 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 276


 10797 0318 803003E2 		and	r3, r3, #128
 10798 031c 000053E3 		cmp	r3, #0
 10799 0320 1C00001A 		bne	.L689
 10800              		.loc 1 4848 5 is_stmt 0 discriminator 1
 10801 0324 28301BE5 		ldr	r3, [fp, #-40]
 10802 0328 142093E5 		ldr	r2, [r3, #20]
 10803 032c 04309BE5 		ldr	r3, [fp, #4]
 10804 0330 030052E1 		cmp	r2, r3
 10805 0334 0100008A 		bhi	.L690
 10806              		.loc 1 4848 5 discriminator 3
 10807 0338 0230E0E3 		mvn	r3, #2
 10808              		.loc 1 4848 5
 10809 033c B60000EA 		b	.L672
 10810              	.L690:
 10811              		.loc 1 4848 5 discriminator 4
 10812 0340 04309BE5 		ldr	r3, [fp, #4]
 10813 0344 8322A0E1 		lsl	r2, r3, #5
 10814 0348 28301BE5 		ldr	r3, [fp, #-40]
 10815 034c 0C3093E5 		ldr	r3, [r3, #12]
 10816 0350 033082E0 		add	r3, r2, r3
 10817 0354 10300BE5 		str	r3, [fp, #-16]
 10818 0358 10301BE5 		ldr	r3, [fp, #-16]
 10819 035c 0300A0E1 		mov	r0, r3
 10820 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10821 0364 14000BE5 		str	r0, [fp, #-20]
 10822              		.loc 1 4848 5 discriminator 1
 10823 0368 14301BE5 		ldr	r3, [fp, #-20]
 10824 036c FF3803E2 		and	r3, r3, #16711680
 10825 0370 020853E3 		cmp	r3, #131072
 10826 0374 0100001A 		bne	.L691
 10827              		.loc 1 4848 5 discriminator 5
 10828 0378 0830E0E3 		mvn	r3, #8
 10829              		.loc 1 4848 5
 10830 037c A60000EA 		b	.L672
 10831              	.L691:
 10832              		.loc 1 4848 5 discriminator 6
 10833 0380 14301BE5 		ldr	r3, [fp, #-20]
 10834 0384 233CA0E1 		lsr	r3, r3, #24
 10835 0388 040053E3 		cmp	r3, #4
 10836 038c 3F00000A 		beq	.L692
 10837              		.loc 1 4848 5 discriminator 7
 10838 0390 0130E0E3 		mvn	r3, #1
 10839              		.loc 1 4848 5
 10840 0394 A00000EA 		b	.L672
 10841              	.L689:
 10842              		.loc 1 4848 5 discriminator 2
 10843 0398 04309BE5 		ldr	r3, [fp, #4]
 10844 039c 2324A0E1 		lsr	r2, r3, #8
 10845 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10846 03a4 143093E5 		ldr	r3, [r3, #20]
 10847 03a8 030052E1 		cmp	r2, r3
 10848 03ac 0100003A 		bcc	.L693
 10849              		.loc 1 4848 5 discriminator 8
 10850 03b0 0230E0E3 		mvn	r3, #2
 10851              		.loc 1 4848 5
 10852 03b4 980000EA 		b	.L672
 10853              	.L693:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 277


 10854              		.loc 1 4848 5 discriminator 9
 10855 03b8 04309BE5 		ldr	r3, [fp, #4]
 10856 03bc 2334A0E1 		lsr	r3, r3, #8
 10857 03c0 8322A0E1 		lsl	r2, r3, #5
 10858 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10859 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10860 03cc 033082E0 		add	r3, r2, r3
 10861 03d0 10300BE5 		str	r3, [fp, #-16]
 10862 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10863 03d8 0300A0E1 		mov	r0, r3
 10864 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10865 03e0 14000BE5 		str	r0, [fp, #-20]
 10866              		.loc 1 4848 5 discriminator 1
 10867 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10868 03e8 FF3803E2 		and	r3, r3, #16711680
 10869 03ec 020853E3 		cmp	r3, #131072
 10870 03f0 0100001A 		bne	.L694
 10871              		.loc 1 4848 5 discriminator 10
 10872 03f4 0830E0E3 		mvn	r3, #8
 10873              		.loc 1 4848 5
 10874 03f8 870000EA 		b	.L672
 10875              	.L694:
 10876              		.loc 1 4848 5 discriminator 11
 10877 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10878 0400 233CA0E1 		lsr	r3, r3, #24
 10879 0404 030053E3 		cmp	r3, #3
 10880 0408 0100000A 		beq	.L695
 10881              		.loc 1 4848 5 discriminator 12
 10882 040c 0130E0E3 		mvn	r3, #1
 10883              		.loc 1 4848 5
 10884 0410 810000EA 		b	.L672
 10885              	.L695:
 10886              		.loc 1 4848 5 discriminator 13
 10887 0414 04309BE5 		ldr	r3, [fp, #4]
 10888 0418 7F2003E2 		and	r2, r3, #127
 10889 041c 10301BE5 		ldr	r3, [fp, #-16]
 10890 0420 143093E5 		ldr	r3, [r3, #20]
 10891 0424 030052E1 		cmp	r2, r3
 10892 0428 0100003A 		bcc	.L696
 10893              		.loc 1 4848 5 discriminator 14
 10894 042c 0230E0E3 		mvn	r3, #2
 10895              		.loc 1 4848 5
 10896 0430 790000EA 		b	.L672
 10897              	.L696:
 10898              		.loc 1 4848 5 discriminator 15
 10899 0434 04309BE5 		ldr	r3, [fp, #4]
 10900 0438 7F3003E2 		and	r3, r3, #127
 10901 043c 8322A0E1 		lsl	r2, r3, #5
 10902 0440 10301BE5 		ldr	r3, [fp, #-16]
 10903 0444 0C3093E5 		ldr	r3, [r3, #12]
 10904 0448 033082E0 		add	r3, r2, r3
 10905 044c 10300BE5 		str	r3, [fp, #-16]
 10906 0450 10301BE5 		ldr	r3, [fp, #-16]
 10907 0454 0300A0E1 		mov	r0, r3
 10908 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10909 045c 14000BE5 		str	r0, [fp, #-20]
 10910              		.loc 1 4848 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 278


 10911 0460 14301BE5 		ldr	r3, [fp, #-20]
 10912 0464 FF3803E2 		and	r3, r3, #16711680
 10913 0468 020853E3 		cmp	r3, #131072
 10914 046c 0100001A 		bne	.L697
 10915              		.loc 1 4848 5 discriminator 16
 10916 0470 0830E0E3 		mvn	r3, #8
 10917              		.loc 1 4848 5
 10918 0474 680000EA 		b	.L672
 10919              	.L697:
 10920              		.loc 1 4848 5 discriminator 17
 10921 0478 14301BE5 		ldr	r3, [fp, #-20]
 10922 047c 233CA0E1 		lsr	r3, r3, #24
 10923 0480 040053E3 		cmp	r3, #4
 10924 0484 0100000A 		beq	.L692
 10925              		.loc 1 4848 5 discriminator 18
 10926 0488 0130E0E3 		mvn	r3, #1
 10927              		.loc 1 4848 5
 10928 048c 620000EA 		b	.L672
 10929              	.L692:
4849:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4850:../../Source/Kernel/rme_kernel.c **** #endif
4851:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4852:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10930              		.loc 1 4852 5 is_stmt 1
 10931 0490 08301BE5 		ldr	r3, [fp, #-8]
 10932 0494 083093E5 		ldr	r3, [r3, #8]
 10933 0498 013003E2 		and	r3, r3, #1
 10934 049c 000053E3 		cmp	r3, #0
 10935 04a0 0100001A 		bne	.L698
 10936              		.loc 1 4852 5 is_stmt 0 discriminator 1
 10937 04a4 0630E0E3 		mvn	r3, #6
 10938              		.loc 1 4852 5
 10939 04a8 5B0000EA 		b	.L672
 10940              	.L698:
4853:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10941              		.loc 1 4853 5 is_stmt 1
 10942 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10943 04b0 083093E5 		ldr	r3, [r3, #8]
 10944 04b4 403003E2 		and	r3, r3, #64
 10945 04b8 000053E3 		cmp	r3, #0
 10946 04bc 0100001A 		bne	.L699
 10947              		.loc 1 4853 5 is_stmt 0 discriminator 1
 10948 04c0 0630E0E3 		mvn	r3, #6
 10949              		.loc 1 4853 5
 10950 04c4 540000EA 		b	.L672
 10951              	.L699:
4854:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4855:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10952              		.loc 1 4855 5 is_stmt 1
 10953 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10954 04cc 083093E5 		ldr	r3, [r3, #8]
 10955 04d0 403003E2 		and	r3, r3, #64
 10956 04d4 000053E3 		cmp	r3, #0
 10957 04d8 0100001A 		bne	.L700
 10958              		.loc 1 4855 5 is_stmt 0 discriminator 1
 10959 04dc 0630E0E3 		mvn	r3, #6
 10960              		.loc 1 4855 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 279


 10961 04e0 4D0000EA 		b	.L672
 10962              	.L700:
4856:../../Source/Kernel/rme_kernel.c **** #endif
4857:../../Source/Kernel/rme_kernel.c ****     
4858:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4859:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10963              		.loc 1 4859 5 is_stmt 1
 10964 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10965 04e8 142093E5 		ldr	r2, [r3, #20]
 10966 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10967 04f0 030052E1 		cmp	r2, r3
 10968 04f4 0100008A 		bhi	.L701
 10969              		.loc 1 4859 5 is_stmt 0 discriminator 1
 10970 04f8 0230E0E3 		mvn	r3, #2
 10971              		.loc 1 4859 5
 10972 04fc 460000EA 		b	.L672
 10973              	.L701:
 10974              		.loc 1 4859 5 discriminator 2
 10975 0500 30301BE5 		ldr	r3, [fp, #-48]
 10976 0504 8322A0E1 		lsl	r2, r3, #5
 10977 0508 08301BE5 		ldr	r3, [fp, #-8]
 10978 050c 0C3093E5 		ldr	r3, [r3, #12]
 10979 0510 033082E0 		add	r3, r2, r3
 10980 0514 18300BE5 		str	r3, [fp, #-24]
4860:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4861:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10981              		.loc 1 4861 5 is_stmt 1
 10982 0518 18301BE5 		ldr	r3, [fp, #-24]
 10983 051c 0128A0E3 		mov	r2, #65536
 10984 0520 0010A0E3 		mov	r1, #0
 10985 0524 0300A0E1 		mov	r0, r3
 10986 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10987 052c 0030A0E1 		mov	r3, r0
 10988              		.loc 1 4861 5 is_stmt 0 discriminator 1
 10989 0530 000053E3 		cmp	r3, #0
 10990 0534 0100001A 		bne	.L702
 10991 0538 0430E0E3 		mvn	r3, #4
 10992              		.loc 1 4861 5
 10993 053c 360000EA 		b	.L672
 10994              	.L702:
 10995              		.loc 1 4861 5 discriminator 2
 10996 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10997 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10998 0548 002093E5 		ldr	r2, [r3]
 10999 054c 18301BE5 		ldr	r3, [fp, #-24]
 11000 0550 102083E5 		str	r2, [r3, #16]
4862:../../Source/Kernel/rme_kernel.c ****     
4863:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4864:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 11001              		.loc 1 4864 27 is_stmt 1
 11002 0554 18301BE5 		ldr	r3, [fp, #-24]
 11003 0558 0020A0E3 		mov	r2, #0
 11004 055c 042083E5 		str	r2, [r3, #4]
4865:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 11005              		.loc 1 4865 25
 11006 0560 18301BE5 		ldr	r3, [fp, #-24]
 11007 0564 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 280


 11008 0568 0C2083E5 		str	r2, [r3, #12]
4866:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 11009              		.loc 1 4866 23
 11010 056c 18301BE5 		ldr	r3, [fp, #-24]
 11011 0570 0F20A0E3 		mov	r2, #15
 11012 0574 082083E5 		str	r2, [r3, #8]
4867:../../Source/Kernel/rme_kernel.c ****     
4868:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4869:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 11013              		.loc 1 4869 13
 11014 0578 0C301BE5 		ldr	r3, [fp, #-12]
 11015 057c 003093E5 		ldr	r3, [r3]
 11016 0580 7330FFE6 		uxth	r3, r3
 11017 0584 000053E3 		cmp	r3, #0
 11018 0588 0200000A 		beq	.L703
 11019              		.loc 1 4869 13 is_stmt 0 discriminator 1
 11020 058c 0C301BE5 		ldr	r3, [fp, #-12]
 11021 0590 043093E5 		ldr	r3, [r3, #4]
 11022 0594 000000EA 		b	.L704
 11023              	.L703:
 11024              		.loc 1 4869 13 discriminator 2
 11025 0598 0C301BE5 		ldr	r3, [fp, #-12]
 11026              	.L704:
 11027              		.loc 1 4869 12 is_stmt 1 discriminator 4
 11028 059c 1C300BE5 		str	r3, [fp, #-28]
4870:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4871:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 11029              		.loc 1 4871 13
 11030 05a0 10301BE5 		ldr	r3, [fp, #-16]
 11031 05a4 003093E5 		ldr	r3, [r3]
 11032 05a8 7330FFE6 		uxth	r3, r3
 11033 05ac 000053E3 		cmp	r3, #0
 11034 05b0 0200000A 		beq	.L705
 11035              		.loc 1 4871 13 is_stmt 0 discriminator 1
 11036 05b4 10301BE5 		ldr	r3, [fp, #-16]
 11037 05b8 043093E5 		ldr	r3, [r3, #4]
 11038 05bc 000000EA 		b	.L706
 11039              	.L705:
 11040              		.loc 1 4871 13 discriminator 2
 11041 05c0 10301BE5 		ldr	r3, [fp, #-16]
 11042              	.L706:
 11043              		.loc 1 4871 12 is_stmt 1 discriminator 4
 11044 05c4 20300BE5 		str	r3, [fp, #-32]
4872:../../Source/Kernel/rme_kernel.c **** #endif
4873:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 11045              		.loc 1 4873 17
 11046 05c8 18301BE5 		ldr	r3, [fp, #-24]
 11047 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 11048 05d0 142083E5 		str	r2, [r3, #20]
4874:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4875:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 11049              		.loc 1 4875 17
 11050 05d4 18301BE5 		ldr	r3, [fp, #-24]
 11051 05d8 20201BE5 		ldr	r2, [fp, #-32]
 11052 05dc 182083E5 		str	r2, [r3, #24]
4876:../../Source/Kernel/rme_kernel.c **** #else
4877:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 281


4878:../../Source/Kernel/rme_kernel.c **** #endif
4879:../../Source/Kernel/rme_kernel.c ****     
4880:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4881:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 11053              		.loc 1 4881 5
 11054 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 11055 05e4 043083E2 		add	r3, r3, #4
 11056 05e8 0110A0E3 		mov	r1, #1
 11057 05ec 0300A0E1 		mov	r0, r3
 11058 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4882:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4883:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 11059              		.loc 1 4883 5
 11060 05f4 20301BE5 		ldr	r3, [fp, #-32]
 11061 05f8 043083E2 		add	r3, r3, #4
 11062 05fc 0110A0E3 		mov	r1, #1
 11063 0600 0300A0E1 		mov	r0, r3
 11064 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4884:../../Source/Kernel/rme_kernel.c **** #endif
4885:../../Source/Kernel/rme_kernel.c **** 
4886:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4887:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 11065              		.loc 1 4887 5
 11066 0608 18301BE5 		ldr	r3, [fp, #-24]
 11067 060c 0514A0E3 		mov	r1, #83886080
 11068 0610 0300A0E1 		mov	r0, r3
 11069 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4888:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4889:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4890:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4891:../../Source/Kernel/rme_kernel.c **** 
4892:../../Source/Kernel/rme_kernel.c ****     return 0;
 11070              		.loc 1 4892 12
 11071 0618 0030A0E3 		mov	r3, #0
 11072              	.L672:
4893:../../Source/Kernel/rme_kernel.c **** }
 11073              		.loc 1 4893 1
 11074 061c 0300A0E1 		mov	r0, r3
 11075 0620 04D04BE2 		sub	sp, fp, #4
 11076              		.cfi_def_cfa 13, 8
 11077              		@ sp needed
 11078 0624 0088BDE8 		pop	{fp, pc}
 11079              		.cfi_endproc
 11080              	.LFE51:
 11082              		.section	.text._RME_Prc_Del,"ax",%progbits
 11083              		.align	2
 11084              		.syntax unified
 11085              		.arm
 11087              	_RME_Prc_Del:
 11088              	.LFB52:
4894:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4895:../../Source/Kernel/rme_kernel.c **** 
4896:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4897:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4898:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4899:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4900:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 282


4901:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4902:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4903:../../Source/Kernel/rme_kernel.c **** Output      : None.
4904:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4905:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4906:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4907:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4909:../../Source/Kernel/rme_kernel.c **** {
 11089              		.loc 1 4909 1
 11090              		.cfi_startproc
 11091              		@ args = 0, pretend = 0, frame = 40
 11092              		@ frame_needed = 1, uses_anonymous_args = 0
 11093 0000 00482DE9 		push	{fp, lr}
 11094              		.cfi_def_cfa_offset 8
 11095              		.cfi_offset 11, -8
 11096              		.cfi_offset 14, -4
 11097 0004 04B08DE2 		add	fp, sp, #4
 11098              		.cfi_def_cfa 11, 4
 11099 0008 28D04DE2 		sub	sp, sp, #40
 11100 000c 20000BE5 		str	r0, [fp, #-32]
 11101 0010 24100BE5 		str	r1, [fp, #-36]
 11102 0014 28200BE5 		str	r2, [fp, #-40]
4910:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4911:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4912:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4913:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4914:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4915:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4917:../../Source/Kernel/rme_kernel.c **** #endif
4918:../../Source/Kernel/rme_kernel.c **** 
4919:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4920:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11103              		.loc 1 4920 5
 11104 0018 24301BE5 		ldr	r3, [fp, #-36]
 11105 001c 803003E2 		and	r3, r3, #128
 11106 0020 000053E3 		cmp	r3, #0
 11107 0024 1C00001A 		bne	.L708
 11108              		.loc 1 4920 5 is_stmt 0 discriminator 1
 11109 0028 20301BE5 		ldr	r3, [fp, #-32]
 11110 002c 142093E5 		ldr	r2, [r3, #20]
 11111 0030 24301BE5 		ldr	r3, [fp, #-36]
 11112 0034 030052E1 		cmp	r2, r3
 11113 0038 0100008A 		bhi	.L709
 11114              		.loc 1 4920 5 discriminator 3
 11115 003c 0230E0E3 		mvn	r3, #2
 11116              		.loc 1 4920 5
 11117 0040 BC0000EA 		b	.L710
 11118              	.L709:
 11119              		.loc 1 4920 5 discriminator 4
 11120 0044 24301BE5 		ldr	r3, [fp, #-36]
 11121 0048 8322A0E1 		lsl	r2, r3, #5
 11122 004c 20301BE5 		ldr	r3, [fp, #-32]
 11123 0050 0C3093E5 		ldr	r3, [r3, #12]
 11124 0054 033082E0 		add	r3, r2, r3
 11125 0058 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 283


 11126 005c 08301BE5 		ldr	r3, [fp, #-8]
 11127 0060 0300A0E1 		mov	r0, r3
 11128 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11129 0068 0C000BE5 		str	r0, [fp, #-12]
 11130              		.loc 1 4920 5 discriminator 1
 11131 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11132 0070 FF3803E2 		and	r3, r3, #16711680
 11133 0074 020853E3 		cmp	r3, #131072
 11134 0078 0100001A 		bne	.L711
 11135              		.loc 1 4920 5 discriminator 5
 11136 007c 0830E0E3 		mvn	r3, #8
 11137              		.loc 1 4920 5
 11138 0080 AC0000EA 		b	.L710
 11139              	.L711:
 11140              		.loc 1 4920 5 discriminator 6
 11141 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11142 0088 233CA0E1 		lsr	r3, r3, #24
 11143 008c 030053E3 		cmp	r3, #3
 11144 0090 3F00000A 		beq	.L712
 11145              		.loc 1 4920 5 discriminator 7
 11146 0094 0130E0E3 		mvn	r3, #1
 11147              		.loc 1 4920 5
 11148 0098 A60000EA 		b	.L710
 11149              	.L708:
 11150              		.loc 1 4920 5 discriminator 2
 11151 009c 24301BE5 		ldr	r3, [fp, #-36]
 11152 00a0 2324A0E1 		lsr	r2, r3, #8
 11153 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11154 00a8 143093E5 		ldr	r3, [r3, #20]
 11155 00ac 030052E1 		cmp	r2, r3
 11156 00b0 0100003A 		bcc	.L713
 11157              		.loc 1 4920 5 discriminator 8
 11158 00b4 0230E0E3 		mvn	r3, #2
 11159              		.loc 1 4920 5
 11160 00b8 9E0000EA 		b	.L710
 11161              	.L713:
 11162              		.loc 1 4920 5 discriminator 9
 11163 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11164 00c0 2334A0E1 		lsr	r3, r3, #8
 11165 00c4 8322A0E1 		lsl	r2, r3, #5
 11166 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11167 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11168 00d0 033082E0 		add	r3, r2, r3
 11169 00d4 08300BE5 		str	r3, [fp, #-8]
 11170 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11171 00dc 0300A0E1 		mov	r0, r3
 11172 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11173 00e4 0C000BE5 		str	r0, [fp, #-12]
 11174              		.loc 1 4920 5 discriminator 1
 11175 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11176 00ec FF3803E2 		and	r3, r3, #16711680
 11177 00f0 020853E3 		cmp	r3, #131072
 11178 00f4 0100001A 		bne	.L714
 11179              		.loc 1 4920 5 discriminator 10
 11180 00f8 0830E0E3 		mvn	r3, #8
 11181              		.loc 1 4920 5
 11182 00fc 8D0000EA 		b	.L710
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 284


 11183              	.L714:
 11184              		.loc 1 4920 5 discriminator 11
 11185 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11186 0104 233CA0E1 		lsr	r3, r3, #24
 11187 0108 030053E3 		cmp	r3, #3
 11188 010c 0100000A 		beq	.L715
 11189              		.loc 1 4920 5 discriminator 12
 11190 0110 0130E0E3 		mvn	r3, #1
 11191              		.loc 1 4920 5
 11192 0114 870000EA 		b	.L710
 11193              	.L715:
 11194              		.loc 1 4920 5 discriminator 13
 11195 0118 24301BE5 		ldr	r3, [fp, #-36]
 11196 011c 7F2003E2 		and	r2, r3, #127
 11197 0120 08301BE5 		ldr	r3, [fp, #-8]
 11198 0124 143093E5 		ldr	r3, [r3, #20]
 11199 0128 030052E1 		cmp	r2, r3
 11200 012c 0100003A 		bcc	.L716
 11201              		.loc 1 4920 5 discriminator 14
 11202 0130 0230E0E3 		mvn	r3, #2
 11203              		.loc 1 4920 5
 11204 0134 7F0000EA 		b	.L710
 11205              	.L716:
 11206              		.loc 1 4920 5 discriminator 15
 11207 0138 24301BE5 		ldr	r3, [fp, #-36]
 11208 013c 7F3003E2 		and	r3, r3, #127
 11209 0140 8322A0E1 		lsl	r2, r3, #5
 11210 0144 08301BE5 		ldr	r3, [fp, #-8]
 11211 0148 0C3093E5 		ldr	r3, [r3, #12]
 11212 014c 033082E0 		add	r3, r2, r3
 11213 0150 08300BE5 		str	r3, [fp, #-8]
 11214 0154 08301BE5 		ldr	r3, [fp, #-8]
 11215 0158 0300A0E1 		mov	r0, r3
 11216 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11217 0160 0C000BE5 		str	r0, [fp, #-12]
 11218              		.loc 1 4920 5 discriminator 1
 11219 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11220 0168 FF3803E2 		and	r3, r3, #16711680
 11221 016c 020853E3 		cmp	r3, #131072
 11222 0170 0100001A 		bne	.L717
 11223              		.loc 1 4920 5 discriminator 16
 11224 0174 0830E0E3 		mvn	r3, #8
 11225              		.loc 1 4920 5
 11226 0178 6E0000EA 		b	.L710
 11227              	.L717:
 11228              		.loc 1 4920 5 discriminator 17
 11229 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11230 0180 233CA0E1 		lsr	r3, r3, #24
 11231 0184 030053E3 		cmp	r3, #3
 11232 0188 0100000A 		beq	.L712
 11233              		.loc 1 4920 5 discriminator 18
 11234 018c 0130E0E3 		mvn	r3, #1
 11235              		.loc 1 4920 5
 11236 0190 680000EA 		b	.L710
 11237              	.L712:
4921:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4922:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 285


4923:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11238              		.loc 1 4923 5 is_stmt 1
 11239 0194 08301BE5 		ldr	r3, [fp, #-8]
 11240 0198 083093E5 		ldr	r3, [r3, #8]
 11241 019c 023003E2 		and	r3, r3, #2
 11242 01a0 000053E3 		cmp	r3, #0
 11243 01a4 0100001A 		bne	.L718
 11244              		.loc 1 4923 5 is_stmt 0 discriminator 1
 11245 01a8 0630E0E3 		mvn	r3, #6
 11246              		.loc 1 4923 5
 11247 01ac 610000EA 		b	.L710
 11248              	.L718:
4924:../../Source/Kernel/rme_kernel.c **** 
4925:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4926:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11249              		.loc 1 4926 5 is_stmt 1
 11250 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11251 01b4 142093E5 		ldr	r2, [r3, #20]
 11252 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11253 01bc 030052E1 		cmp	r2, r3
 11254 01c0 0100008A 		bhi	.L719
 11255              		.loc 1 4926 5 is_stmt 0 discriminator 1
 11256 01c4 0230E0E3 		mvn	r3, #2
 11257              		.loc 1 4926 5
 11258 01c8 5A0000EA 		b	.L710
 11259              	.L719:
 11260              		.loc 1 4926 5 discriminator 2
 11261 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11262 01d0 8322A0E1 		lsl	r2, r3, #5
 11263 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11264 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11265 01dc 033082E0 		add	r3, r2, r3
 11266 01e0 10300BE5 		str	r3, [fp, #-16]
4927:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4928:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11267              		.loc 1 4928 5 is_stmt 1
 11268 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11269 01e8 0300A0E1 		mov	r0, r3
 11270 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11271 01f0 0C000BE5 		str	r0, [fp, #-12]
 11272              		.loc 1 4928 5 is_stmt 0 discriminator 1
 11273 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11274 01f8 FF3803E2 		and	r3, r3, #16711680
 11275 01fc 020853E3 		cmp	r3, #131072
 11276 0200 0100000A 		beq	.L720
 11277 0204 0830E0E3 		mvn	r3, #8
 11278              		.loc 1 4928 5
 11279 0208 4A0000EA 		b	.L710
 11280              	.L720:
 11281              		.loc 1 4928 5 discriminator 2
 11282 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11283 0210 233CA0E1 		lsr	r3, r3, #24
 11284 0214 050053E3 		cmp	r3, #5
 11285 0218 0100000A 		beq	.L721
 11286              		.loc 1 4928 5 discriminator 3
 11287 021c 0130E0E3 		mvn	r3, #1
 11288              		.loc 1 4928 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 286


 11289 0220 440000EA 		b	.L710
 11290              	.L721:
 11291              		.loc 1 4928 5 discriminator 4
 11292 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11293 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11294 022c 002093E5 		ldr	r2, [r3]
 11295 0230 10301BE5 		ldr	r3, [fp, #-16]
 11296 0234 103093E5 		ldr	r3, [r3, #16]
 11297 0238 0310A0E1 		mov	r1, r3
 11298 023c 0200A0E1 		mov	r0, r2
 11299 0240 FEFFFFEB 		bl	_RME_Diff
 11300 0244 0030A0E1 		mov	r3, r0
 11301              		.loc 1 4928 5 discriminator 1
 11302 0248 0A0053E3 		cmp	r3, #10
 11303 024c 0100008A 		bhi	.L722
 11304              		.loc 1 4928 5 discriminator 5
 11305 0250 0730E0E3 		mvn	r3, #7
 11306              		.loc 1 4928 5
 11307 0254 370000EA 		b	.L710
 11308              	.L722:
 11309              		.loc 1 4928 5 discriminator 6
 11310 0258 10301BE5 		ldr	r3, [fp, #-16]
 11311 025c 043093E5 		ldr	r3, [r3, #4]
 11312 0260 000053E3 		cmp	r3, #0
 11313 0264 0B00000A 		beq	.L723
 11314              		.loc 1 4928 5 discriminator 7
 11315 0268 0C301BE5 		ldr	r3, [fp, #-12]
 11316 026c 7330FFE6 		uxth	r3, r3
 11317 0270 000053E3 		cmp	r3, #0
 11318 0274 0500001A 		bne	.L724
 11319              		.loc 1 4928 5 discriminator 9
 11320 0278 10001BE5 		ldr	r0, [fp, #-16]
 11321 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11322 0280 FF38C3E3 		bic	r3, r3, #16711680
 11323 0284 0320A0E1 		mov	r2, r3
 11324 0288 0C101BE5 		ldr	r1, [fp, #-12]
 11325 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11326              	.L724:
 11327              		.loc 1 4928 5 discriminator 11
 11328 0290 0530E0E3 		mvn	r3, #5
 11329              		.loc 1 4928 5
 11330 0294 270000EA 		b	.L710
 11331              	.L723:
 11332              		.loc 1 4928 5 discriminator 8
 11333 0298 0C301BE5 		ldr	r3, [fp, #-12]
 11334 029c 7330FFE6 		uxth	r3, r3
 11335 02a0 000053E3 		cmp	r3, #0
 11336 02a4 0800000A 		beq	.L725
 11337              		.loc 1 4928 5 discriminator 12
 11338 02a8 003000E3 		movw	r3, #:lower16:.LC6
 11339 02ac 003040E3 		movt	r3, #:upper16:.LC6
 11340 02b0 002000E3 		movw	r2, #:lower16:.LC7
 11341 02b4 002040E3 		movt	r2, #:upper16:.LC7
 11342 02b8 4D1DA0E3 		mov	r1, #4928
 11343 02bc 000000E3 		movw	r0, #:lower16:.LC8
 11344 02c0 000040E3 		movt	r0, #:upper16:.LC8
 11345 02c4 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 287


 11346              	.L726:
 11347              		.loc 1 4928 5
 11348 02c8 FEFFFFEA 		b	.L726
 11349              	.L725:
4929:../../Source/Kernel/rme_kernel.c **** 
4930:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4931:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11350              		.loc 1 4931 12 is_stmt 1
 11351 02cc 10301BE5 		ldr	r3, [fp, #-16]
 11352 02d0 143093E5 		ldr	r3, [r3, #20]
 11353 02d4 14300BE5 		str	r3, [fp, #-20]
4932:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4933:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11354              		.loc 1 4933 12
 11355 02d8 10301BE5 		ldr	r3, [fp, #-16]
 11356 02dc 183093E5 		ldr	r3, [r3, #24]
 11357 02e0 18300BE5 		str	r3, [fp, #-24]
4934:../../Source/Kernel/rme_kernel.c **** #endif
4935:../../Source/Kernel/rme_kernel.c **** 
4936:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4937:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11358              		.loc 1 4937 5
 11359 02e4 10301BE5 		ldr	r3, [fp, #-16]
 11360 02e8 0020A0E3 		mov	r2, #0
 11361 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 11362 02f0 0300A0E1 		mov	r0, r3
 11363 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11364 02f8 0030A0E1 		mov	r3, r0
 11365              		.loc 1 4937 5 is_stmt 0 discriminator 1
 11366 02fc 000053E3 		cmp	r3, #0
 11367 0300 0100001A 		bne	.L727
 11368 0304 0030E0E3 		mvn	r3, #0
 11369              		.loc 1 4937 5
 11370 0308 0A0000EA 		b	.L710
 11371              	.L727:
4938:../../Source/Kernel/rme_kernel.c **** 
4939:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4940:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11372              		.loc 1 4940 5 is_stmt 1
 11373 030c 14301BE5 		ldr	r3, [fp, #-20]
 11374 0310 043083E2 		add	r3, r3, #4
 11375 0314 0010E0E3 		mvn	r1, #0
 11376 0318 0300A0E1 		mov	r0, r3
 11377 031c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4941:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4942:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11378              		.loc 1 4942 5
 11379 0320 18301BE5 		ldr	r3, [fp, #-24]
 11380 0324 043083E2 		add	r3, r3, #4
 11381 0328 0010E0E3 		mvn	r1, #0
 11382 032c 0300A0E1 		mov	r0, r3
 11383 0330 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4943:../../Source/Kernel/rme_kernel.c **** #endif
4944:../../Source/Kernel/rme_kernel.c ****     
4945:../../Source/Kernel/rme_kernel.c ****     return 0;
 11384              		.loc 1 4945 12
 11385 0334 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 288


 11386              	.L710:
4946:../../Source/Kernel/rme_kernel.c **** }
 11387              		.loc 1 4946 1
 11388 0338 0300A0E1 		mov	r0, r3
 11389 033c 04D04BE2 		sub	sp, fp, #4
 11390              		.cfi_def_cfa 13, 8
 11391              		@ sp needed
 11392 0340 0088BDE8 		pop	{fp, pc}
 11393              		.cfi_endproc
 11394              	.LFE52:
 11396              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11397              		.align	2
 11398              		.syntax unified
 11399              		.arm
 11401              	_RME_Prc_Cpt:
 11402              	.LFB53:
4947:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4948:../../Source/Kernel/rme_kernel.c **** 
4949:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4950:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4951:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4952:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4953:../../Source/Kernel/rme_kernel.c ****                                   created already.
4954:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4955:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4956:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4957:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4958:../../Source/Kernel/rme_kernel.c **** Output      : None.
4959:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4960:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4961:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4962:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4963:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4964:../../Source/Kernel/rme_kernel.c **** {
 11403              		.loc 1 4964 1
 11404              		.cfi_startproc
 11405              		@ args = 0, pretend = 0, frame = 32
 11406              		@ frame_needed = 1, uses_anonymous_args = 0
 11407 0000 00482DE9 		push	{fp, lr}
 11408              		.cfi_def_cfa_offset 8
 11409              		.cfi_offset 11, -8
 11410              		.cfi_offset 14, -4
 11411 0004 04B08DE2 		add	fp, sp, #4
 11412              		.cfi_def_cfa 11, 4
 11413 0008 20D04DE2 		sub	sp, sp, #32
 11414 000c 18000BE5 		str	r0, [fp, #-24]
 11415 0010 1C100BE5 		str	r1, [fp, #-28]
 11416 0014 20200BE5 		str	r2, [fp, #-32]
4965:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4966:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4967:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4968:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4969:../../Source/Kernel/rme_kernel.c ****     
4970:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4971:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11417              		.loc 1 4971 5
 11418 0018 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 289


 11419 001c 803003E2 		and	r3, r3, #128
 11420 0020 000053E3 		cmp	r3, #0
 11421 0024 1C00001A 		bne	.L729
 11422              		.loc 1 4971 5 is_stmt 0 discriminator 1
 11423 0028 18301BE5 		ldr	r3, [fp, #-24]
 11424 002c 142093E5 		ldr	r2, [r3, #20]
 11425 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11426 0034 030052E1 		cmp	r2, r3
 11427 0038 0100008A 		bhi	.L730
 11428              		.loc 1 4971 5 discriminator 3
 11429 003c 0230E0E3 		mvn	r3, #2
 11430              		.loc 1 4971 5
 11431 0040 E30000EA 		b	.L731
 11432              	.L730:
 11433              		.loc 1 4971 5 discriminator 4
 11434 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11435 0048 8322A0E1 		lsl	r2, r3, #5
 11436 004c 18301BE5 		ldr	r3, [fp, #-24]
 11437 0050 0C3093E5 		ldr	r3, [r3, #12]
 11438 0054 033082E0 		add	r3, r2, r3
 11439 0058 08300BE5 		str	r3, [fp, #-8]
 11440 005c 08301BE5 		ldr	r3, [fp, #-8]
 11441 0060 0300A0E1 		mov	r0, r3
 11442 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11443 0068 10000BE5 		str	r0, [fp, #-16]
 11444              		.loc 1 4971 5 discriminator 1
 11445 006c 10301BE5 		ldr	r3, [fp, #-16]
 11446 0070 FF3803E2 		and	r3, r3, #16711680
 11447 0074 020853E3 		cmp	r3, #131072
 11448 0078 0100001A 		bne	.L732
 11449              		.loc 1 4971 5 discriminator 5
 11450 007c 0830E0E3 		mvn	r3, #8
 11451              		.loc 1 4971 5
 11452 0080 D30000EA 		b	.L731
 11453              	.L732:
 11454              		.loc 1 4971 5 discriminator 6
 11455 0084 10301BE5 		ldr	r3, [fp, #-16]
 11456 0088 233CA0E1 		lsr	r3, r3, #24
 11457 008c 050053E3 		cmp	r3, #5
 11458 0090 3F00000A 		beq	.L733
 11459              		.loc 1 4971 5 discriminator 7
 11460 0094 0130E0E3 		mvn	r3, #1
 11461              		.loc 1 4971 5
 11462 0098 CD0000EA 		b	.L731
 11463              	.L729:
 11464              		.loc 1 4971 5 discriminator 2
 11465 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11466 00a0 2324A0E1 		lsr	r2, r3, #8
 11467 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11468 00a8 143093E5 		ldr	r3, [r3, #20]
 11469 00ac 030052E1 		cmp	r2, r3
 11470 00b0 0100003A 		bcc	.L734
 11471              		.loc 1 4971 5 discriminator 8
 11472 00b4 0230E0E3 		mvn	r3, #2
 11473              		.loc 1 4971 5
 11474 00b8 C50000EA 		b	.L731
 11475              	.L734:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 290


 11476              		.loc 1 4971 5 discriminator 9
 11477 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11478 00c0 2334A0E1 		lsr	r3, r3, #8
 11479 00c4 8322A0E1 		lsl	r2, r3, #5
 11480 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11481 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11482 00d0 033082E0 		add	r3, r2, r3
 11483 00d4 08300BE5 		str	r3, [fp, #-8]
 11484 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11485 00dc 0300A0E1 		mov	r0, r3
 11486 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11487 00e4 10000BE5 		str	r0, [fp, #-16]
 11488              		.loc 1 4971 5 discriminator 1
 11489 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11490 00ec FF3803E2 		and	r3, r3, #16711680
 11491 00f0 020853E3 		cmp	r3, #131072
 11492 00f4 0100001A 		bne	.L735
 11493              		.loc 1 4971 5 discriminator 10
 11494 00f8 0830E0E3 		mvn	r3, #8
 11495              		.loc 1 4971 5
 11496 00fc B40000EA 		b	.L731
 11497              	.L735:
 11498              		.loc 1 4971 5 discriminator 11
 11499 0100 10301BE5 		ldr	r3, [fp, #-16]
 11500 0104 233CA0E1 		lsr	r3, r3, #24
 11501 0108 030053E3 		cmp	r3, #3
 11502 010c 0100000A 		beq	.L736
 11503              		.loc 1 4971 5 discriminator 12
 11504 0110 0130E0E3 		mvn	r3, #1
 11505              		.loc 1 4971 5
 11506 0114 AE0000EA 		b	.L731
 11507              	.L736:
 11508              		.loc 1 4971 5 discriminator 13
 11509 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11510 011c 7F2003E2 		and	r2, r3, #127
 11511 0120 08301BE5 		ldr	r3, [fp, #-8]
 11512 0124 143093E5 		ldr	r3, [r3, #20]
 11513 0128 030052E1 		cmp	r2, r3
 11514 012c 0100003A 		bcc	.L737
 11515              		.loc 1 4971 5 discriminator 14
 11516 0130 0230E0E3 		mvn	r3, #2
 11517              		.loc 1 4971 5
 11518 0134 A60000EA 		b	.L731
 11519              	.L737:
 11520              		.loc 1 4971 5 discriminator 15
 11521 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11522 013c 7F3003E2 		and	r3, r3, #127
 11523 0140 8322A0E1 		lsl	r2, r3, #5
 11524 0144 08301BE5 		ldr	r3, [fp, #-8]
 11525 0148 0C3093E5 		ldr	r3, [r3, #12]
 11526 014c 033082E0 		add	r3, r2, r3
 11527 0150 08300BE5 		str	r3, [fp, #-8]
 11528 0154 08301BE5 		ldr	r3, [fp, #-8]
 11529 0158 0300A0E1 		mov	r0, r3
 11530 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11531 0160 10000BE5 		str	r0, [fp, #-16]
 11532              		.loc 1 4971 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 291


 11533 0164 10301BE5 		ldr	r3, [fp, #-16]
 11534 0168 FF3803E2 		and	r3, r3, #16711680
 11535 016c 020853E3 		cmp	r3, #131072
 11536 0170 0100001A 		bne	.L738
 11537              		.loc 1 4971 5 discriminator 16
 11538 0174 0830E0E3 		mvn	r3, #8
 11539              		.loc 1 4971 5
 11540 0178 950000EA 		b	.L731
 11541              	.L738:
 11542              		.loc 1 4971 5 discriminator 17
 11543 017c 10301BE5 		ldr	r3, [fp, #-16]
 11544 0180 233CA0E1 		lsr	r3, r3, #24
 11545 0184 050053E3 		cmp	r3, #5
 11546 0188 0100000A 		beq	.L733
 11547              		.loc 1 4971 5 discriminator 18
 11548 018c 0130E0E3 		mvn	r3, #1
 11549              		.loc 1 4971 5
 11550 0190 8F0000EA 		b	.L731
 11551              	.L733:
4972:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4973:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11552              		.loc 1 4973 5 is_stmt 1
 11553 0194 20301BE5 		ldr	r3, [fp, #-32]
 11554 0198 803003E2 		and	r3, r3, #128
 11555 019c 000053E3 		cmp	r3, #0
 11556 01a0 1C00001A 		bne	.L739
 11557              		.loc 1 4973 5 is_stmt 0 discriminator 1
 11558 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11559 01a8 142093E5 		ldr	r2, [r3, #20]
 11560 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11561 01b0 030052E1 		cmp	r2, r3
 11562 01b4 0100008A 		bhi	.L740
 11563              		.loc 1 4973 5 discriminator 3
 11564 01b8 0230E0E3 		mvn	r3, #2
 11565              		.loc 1 4973 5
 11566 01bc 840000EA 		b	.L731
 11567              	.L740:
 11568              		.loc 1 4973 5 discriminator 4
 11569 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11570 01c4 8322A0E1 		lsl	r2, r3, #5
 11571 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11572 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11573 01d0 033082E0 		add	r3, r2, r3
 11574 01d4 0C300BE5 		str	r3, [fp, #-12]
 11575 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11576 01dc 0300A0E1 		mov	r0, r3
 11577 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11578 01e4 10000BE5 		str	r0, [fp, #-16]
 11579              		.loc 1 4973 5 discriminator 1
 11580 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11581 01ec FF3803E2 		and	r3, r3, #16711680
 11582 01f0 020853E3 		cmp	r3, #131072
 11583 01f4 0100001A 		bne	.L741
 11584              		.loc 1 4973 5 discriminator 5
 11585 01f8 0830E0E3 		mvn	r3, #8
 11586              		.loc 1 4973 5
 11587 01fc 740000EA 		b	.L731
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 292


 11588              	.L741:
 11589              		.loc 1 4973 5 discriminator 6
 11590 0200 10301BE5 		ldr	r3, [fp, #-16]
 11591 0204 233CA0E1 		lsr	r3, r3, #24
 11592 0208 030053E3 		cmp	r3, #3
 11593 020c 3F00000A 		beq	.L742
 11594              		.loc 1 4973 5 discriminator 7
 11595 0210 0130E0E3 		mvn	r3, #1
 11596              		.loc 1 4973 5
 11597 0214 6E0000EA 		b	.L731
 11598              	.L739:
 11599              		.loc 1 4973 5 discriminator 2
 11600 0218 20301BE5 		ldr	r3, [fp, #-32]
 11601 021c 2324A0E1 		lsr	r2, r3, #8
 11602 0220 18301BE5 		ldr	r3, [fp, #-24]
 11603 0224 143093E5 		ldr	r3, [r3, #20]
 11604 0228 030052E1 		cmp	r2, r3
 11605 022c 0100003A 		bcc	.L743
 11606              		.loc 1 4973 5 discriminator 8
 11607 0230 0230E0E3 		mvn	r3, #2
 11608              		.loc 1 4973 5
 11609 0234 660000EA 		b	.L731
 11610              	.L743:
 11611              		.loc 1 4973 5 discriminator 9
 11612 0238 20301BE5 		ldr	r3, [fp, #-32]
 11613 023c 2334A0E1 		lsr	r3, r3, #8
 11614 0240 8322A0E1 		lsl	r2, r3, #5
 11615 0244 18301BE5 		ldr	r3, [fp, #-24]
 11616 0248 0C3093E5 		ldr	r3, [r3, #12]
 11617 024c 033082E0 		add	r3, r2, r3
 11618 0250 0C300BE5 		str	r3, [fp, #-12]
 11619 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11620 0258 0300A0E1 		mov	r0, r3
 11621 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11622 0260 10000BE5 		str	r0, [fp, #-16]
 11623              		.loc 1 4973 5 discriminator 1
 11624 0264 10301BE5 		ldr	r3, [fp, #-16]
 11625 0268 FF3803E2 		and	r3, r3, #16711680
 11626 026c 020853E3 		cmp	r3, #131072
 11627 0270 0100001A 		bne	.L744
 11628              		.loc 1 4973 5 discriminator 10
 11629 0274 0830E0E3 		mvn	r3, #8
 11630              		.loc 1 4973 5
 11631 0278 550000EA 		b	.L731
 11632              	.L744:
 11633              		.loc 1 4973 5 discriminator 11
 11634 027c 10301BE5 		ldr	r3, [fp, #-16]
 11635 0280 233CA0E1 		lsr	r3, r3, #24
 11636 0284 030053E3 		cmp	r3, #3
 11637 0288 0100000A 		beq	.L745
 11638              		.loc 1 4973 5 discriminator 12
 11639 028c 0130E0E3 		mvn	r3, #1
 11640              		.loc 1 4973 5
 11641 0290 4F0000EA 		b	.L731
 11642              	.L745:
 11643              		.loc 1 4973 5 discriminator 13
 11644 0294 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 293


 11645 0298 7F2003E2 		and	r2, r3, #127
 11646 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11647 02a0 143093E5 		ldr	r3, [r3, #20]
 11648 02a4 030052E1 		cmp	r2, r3
 11649 02a8 0100003A 		bcc	.L746
 11650              		.loc 1 4973 5 discriminator 14
 11651 02ac 0230E0E3 		mvn	r3, #2
 11652              		.loc 1 4973 5
 11653 02b0 470000EA 		b	.L731
 11654              	.L746:
 11655              		.loc 1 4973 5 discriminator 15
 11656 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11657 02b8 7F3003E2 		and	r3, r3, #127
 11658 02bc 8322A0E1 		lsl	r2, r3, #5
 11659 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11660 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11661 02c8 033082E0 		add	r3, r2, r3
 11662 02cc 0C300BE5 		str	r3, [fp, #-12]
 11663 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11664 02d4 0300A0E1 		mov	r0, r3
 11665 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11666 02dc 10000BE5 		str	r0, [fp, #-16]
 11667              		.loc 1 4973 5 discriminator 1
 11668 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11669 02e4 FF3803E2 		and	r3, r3, #16711680
 11670 02e8 020853E3 		cmp	r3, #131072
 11671 02ec 0100001A 		bne	.L747
 11672              		.loc 1 4973 5 discriminator 16
 11673 02f0 0830E0E3 		mvn	r3, #8
 11674              		.loc 1 4973 5
 11675 02f4 360000EA 		b	.L731
 11676              	.L747:
 11677              		.loc 1 4973 5 discriminator 17
 11678 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11679 02fc 233CA0E1 		lsr	r3, r3, #24
 11680 0300 030053E3 		cmp	r3, #3
 11681 0304 0100000A 		beq	.L742
 11682              		.loc 1 4973 5 discriminator 18
 11683 0308 0130E0E3 		mvn	r3, #1
 11684              		.loc 1 4973 5
 11685 030c 300000EA 		b	.L731
 11686              	.L742:
4974:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4975:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4976:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11687              		.loc 1 4976 5 is_stmt 1
 11688 0310 08301BE5 		ldr	r3, [fp, #-8]
 11689 0314 083093E5 		ldr	r3, [r3, #8]
 11690 0318 043003E2 		and	r3, r3, #4
 11691 031c 000053E3 		cmp	r3, #0
 11692 0320 0100001A 		bne	.L748
 11693              		.loc 1 4976 5 is_stmt 0 discriminator 1
 11694 0324 0630E0E3 		mvn	r3, #6
 11695              		.loc 1 4976 5
 11696 0328 290000EA 		b	.L731
 11697              	.L748:
4977:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 294


 11698              		.loc 1 4977 5 is_stmt 1
 11699 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11700 0330 083093E5 		ldr	r3, [r3, #8]
 11701 0334 803003E2 		and	r3, r3, #128
 11702 0338 000053E3 		cmp	r3, #0
 11703 033c 0100001A 		bne	.L749
 11704              		.loc 1 4977 5 is_stmt 0 discriminator 1
 11705 0340 0630E0E3 		mvn	r3, #6
 11706              		.loc 1 4977 5
 11707 0344 220000EA 		b	.L731
 11708              	.L749:
4978:../../Source/Kernel/rme_kernel.c ****     
4979:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4980:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11709              		.loc 1 4980 13 is_stmt 1
 11710 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11711 034c 003093E5 		ldr	r3, [r3]
 11712 0350 7330FFE6 		uxth	r3, r3
 11713 0354 000053E3 		cmp	r3, #0
 11714 0358 0200000A 		beq	.L750
 11715              		.loc 1 4980 13 is_stmt 0 discriminator 1
 11716 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11717 0360 043093E5 		ldr	r3, [r3, #4]
 11718 0364 000000EA 		b	.L751
 11719              	.L750:
 11720              		.loc 1 4980 13 discriminator 2
 11721 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11722              	.L751:
 11723              		.loc 1 4980 12 is_stmt 1 discriminator 4
 11724 036c 0C300BE5 		str	r3, [fp, #-12]
4981:../../Source/Kernel/rme_kernel.c ****     
4982:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4983:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11725              		.loc 1 4983 12
 11726 0370 08301BE5 		ldr	r3, [fp, #-8]
 11727 0374 143093E5 		ldr	r3, [r3, #20]
 11728 0378 14300BE5 		str	r3, [fp, #-20]
4984:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11729              		.loc 1 4984 8
 11730 037c 08301BE5 		ldr	r3, [fp, #-8]
 11731 0380 143083E2 		add	r3, r3, #20
 11732 0384 14101BE5 		ldr	r1, [fp, #-20]
 11733 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11734 038c 0300A0E1 		mov	r0, r3
 11735 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11736 0394 0030A0E1 		mov	r3, r0
 11737              		.loc 1 4984 7 discriminator 1
 11738 0398 000053E3 		cmp	r3, #0
 11739 039c 0100001A 		bne	.L752
4985:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4986:../../Source/Kernel/rme_kernel.c ****     {
4987:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4988:../../Source/Kernel/rme_kernel.c ****         
4989:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11740              		.loc 1 4989 16
 11741 03a0 C930E0E3 		mvn	r3, #201
 11742 03a4 0A0000EA 		b	.L731
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 295


 11743              	.L752:
4990:../../Source/Kernel/rme_kernel.c ****     }
4991:../../Source/Kernel/rme_kernel.c ****     else
4992:../../Source/Kernel/rme_kernel.c ****     {
4993:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4994:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4995:../../Source/Kernel/rme_kernel.c ****     }
4996:../../Source/Kernel/rme_kernel.c ****     
4997:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4998:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11744              		.loc 1 4998 5
 11745 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11746 03ac 043083E2 		add	r3, r3, #4
 11747 03b0 0110A0E3 		mov	r1, #1
 11748 03b4 0300A0E1 		mov	r0, r3
 11749 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4999:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11750              		.loc 1 4999 5
 11751 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11752 03c0 043083E2 		add	r3, r3, #4
 11753 03c4 0010E0E3 		mvn	r1, #0
 11754 03c8 0300A0E1 		mov	r0, r3
 11755 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5000:../../Source/Kernel/rme_kernel.c **** 
5001:../../Source/Kernel/rme_kernel.c ****     return 0;
 11756              		.loc 1 5001 12
 11757 03d0 0030A0E3 		mov	r3, #0
 11758              	.L731:
5002:../../Source/Kernel/rme_kernel.c **** }
 11759              		.loc 1 5002 1
 11760 03d4 0300A0E1 		mov	r0, r3
 11761 03d8 04D04BE2 		sub	sp, fp, #4
 11762              		.cfi_def_cfa 13, 8
 11763              		@ sp needed
 11764 03dc 0088BDE8 		pop	{fp, pc}
 11765              		.cfi_endproc
 11766              	.LFE53:
 11768              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11769              		.align	2
 11770              		.syntax unified
 11771              		.arm
 11773              	_RME_Prc_Pgt:
 11774              	.LFB54:
5003:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
5004:../../Source/Kernel/rme_kernel.c **** 
5005:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
5006:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
5007:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5008:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
5009:../../Source/Kernel/rme_kernel.c ****                                   created already.
5010:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5011:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
5012:../../Source/Kernel/rme_kernel.c ****                                   this process.
5013:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5014:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
5015:../../Source/Kernel/rme_kernel.c ****                                   address.
5016:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 296


5017:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5018:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5019:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5020:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
5021:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5022:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
5023:../../Source/Kernel/rme_kernel.c **** #else
5024:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
5025:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5026:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
5027:../../Source/Kernel/rme_kernel.c **** #endif
5028:../../Source/Kernel/rme_kernel.c **** {
 11775              		.loc 1 5028 1
 11776              		.cfi_startproc
 11777              		@ args = 0, pretend = 0, frame = 32
 11778              		@ frame_needed = 1, uses_anonymous_args = 0
 11779 0000 00482DE9 		push	{fp, lr}
 11780              		.cfi_def_cfa_offset 8
 11781              		.cfi_offset 11, -8
 11782              		.cfi_offset 14, -4
 11783 0004 04B08DE2 		add	fp, sp, #4
 11784              		.cfi_def_cfa 11, 4
 11785 0008 20D04DE2 		sub	sp, sp, #32
 11786 000c 18000BE5 		str	r0, [fp, #-24]
 11787 0010 1C100BE5 		str	r1, [fp, #-28]
 11788 0014 20200BE5 		str	r2, [fp, #-32]
5029:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5030:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5031:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
5032:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
5033:../../Source/Kernel/rme_kernel.c **** #else
5034:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
5035:../../Source/Kernel/rme_kernel.c **** #endif
5036:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5037:../../Source/Kernel/rme_kernel.c ****     
5038:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5039:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11789              		.loc 1 5039 5
 11790 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11791 001c 803003E2 		and	r3, r3, #128
 11792 0020 000053E3 		cmp	r3, #0
 11793 0024 1C00001A 		bne	.L754
 11794              		.loc 1 5039 5 is_stmt 0 discriminator 1
 11795 0028 18301BE5 		ldr	r3, [fp, #-24]
 11796 002c 142093E5 		ldr	r2, [r3, #20]
 11797 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11798 0034 030052E1 		cmp	r2, r3
 11799 0038 0100008A 		bhi	.L755
 11800              		.loc 1 5039 5 discriminator 3
 11801 003c 0230E0E3 		mvn	r3, #2
 11802              		.loc 1 5039 5
 11803 0040 E30000EA 		b	.L756
 11804              	.L755:
 11805              		.loc 1 5039 5 discriminator 4
 11806 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11807 0048 8322A0E1 		lsl	r2, r3, #5
 11808 004c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 297


 11809 0050 0C3093E5 		ldr	r3, [r3, #12]
 11810 0054 033082E0 		add	r3, r2, r3
 11811 0058 08300BE5 		str	r3, [fp, #-8]
 11812 005c 08301BE5 		ldr	r3, [fp, #-8]
 11813 0060 0300A0E1 		mov	r0, r3
 11814 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11815 0068 10000BE5 		str	r0, [fp, #-16]
 11816              		.loc 1 5039 5 discriminator 1
 11817 006c 10301BE5 		ldr	r3, [fp, #-16]
 11818 0070 FF3803E2 		and	r3, r3, #16711680
 11819 0074 020853E3 		cmp	r3, #131072
 11820 0078 0100001A 		bne	.L757
 11821              		.loc 1 5039 5 discriminator 5
 11822 007c 0830E0E3 		mvn	r3, #8
 11823              		.loc 1 5039 5
 11824 0080 D30000EA 		b	.L756
 11825              	.L757:
 11826              		.loc 1 5039 5 discriminator 6
 11827 0084 10301BE5 		ldr	r3, [fp, #-16]
 11828 0088 233CA0E1 		lsr	r3, r3, #24
 11829 008c 050053E3 		cmp	r3, #5
 11830 0090 3F00000A 		beq	.L758
 11831              		.loc 1 5039 5 discriminator 7
 11832 0094 0130E0E3 		mvn	r3, #1
 11833              		.loc 1 5039 5
 11834 0098 CD0000EA 		b	.L756
 11835              	.L754:
 11836              		.loc 1 5039 5 discriminator 2
 11837 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11838 00a0 2324A0E1 		lsr	r2, r3, #8
 11839 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11840 00a8 143093E5 		ldr	r3, [r3, #20]
 11841 00ac 030052E1 		cmp	r2, r3
 11842 00b0 0100003A 		bcc	.L759
 11843              		.loc 1 5039 5 discriminator 8
 11844 00b4 0230E0E3 		mvn	r3, #2
 11845              		.loc 1 5039 5
 11846 00b8 C50000EA 		b	.L756
 11847              	.L759:
 11848              		.loc 1 5039 5 discriminator 9
 11849 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11850 00c0 2334A0E1 		lsr	r3, r3, #8
 11851 00c4 8322A0E1 		lsl	r2, r3, #5
 11852 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11853 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11854 00d0 033082E0 		add	r3, r2, r3
 11855 00d4 08300BE5 		str	r3, [fp, #-8]
 11856 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11857 00dc 0300A0E1 		mov	r0, r3
 11858 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11859 00e4 10000BE5 		str	r0, [fp, #-16]
 11860              		.loc 1 5039 5 discriminator 1
 11861 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11862 00ec FF3803E2 		and	r3, r3, #16711680
 11863 00f0 020853E3 		cmp	r3, #131072
 11864 00f4 0100001A 		bne	.L760
 11865              		.loc 1 5039 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 298


 11866 00f8 0830E0E3 		mvn	r3, #8
 11867              		.loc 1 5039 5
 11868 00fc B40000EA 		b	.L756
 11869              	.L760:
 11870              		.loc 1 5039 5 discriminator 11
 11871 0100 10301BE5 		ldr	r3, [fp, #-16]
 11872 0104 233CA0E1 		lsr	r3, r3, #24
 11873 0108 030053E3 		cmp	r3, #3
 11874 010c 0100000A 		beq	.L761
 11875              		.loc 1 5039 5 discriminator 12
 11876 0110 0130E0E3 		mvn	r3, #1
 11877              		.loc 1 5039 5
 11878 0114 AE0000EA 		b	.L756
 11879              	.L761:
 11880              		.loc 1 5039 5 discriminator 13
 11881 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11882 011c 7F2003E2 		and	r2, r3, #127
 11883 0120 08301BE5 		ldr	r3, [fp, #-8]
 11884 0124 143093E5 		ldr	r3, [r3, #20]
 11885 0128 030052E1 		cmp	r2, r3
 11886 012c 0100003A 		bcc	.L762
 11887              		.loc 1 5039 5 discriminator 14
 11888 0130 0230E0E3 		mvn	r3, #2
 11889              		.loc 1 5039 5
 11890 0134 A60000EA 		b	.L756
 11891              	.L762:
 11892              		.loc 1 5039 5 discriminator 15
 11893 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11894 013c 7F3003E2 		and	r3, r3, #127
 11895 0140 8322A0E1 		lsl	r2, r3, #5
 11896 0144 08301BE5 		ldr	r3, [fp, #-8]
 11897 0148 0C3093E5 		ldr	r3, [r3, #12]
 11898 014c 033082E0 		add	r3, r2, r3
 11899 0150 08300BE5 		str	r3, [fp, #-8]
 11900 0154 08301BE5 		ldr	r3, [fp, #-8]
 11901 0158 0300A0E1 		mov	r0, r3
 11902 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11903 0160 10000BE5 		str	r0, [fp, #-16]
 11904              		.loc 1 5039 5 discriminator 1
 11905 0164 10301BE5 		ldr	r3, [fp, #-16]
 11906 0168 FF3803E2 		and	r3, r3, #16711680
 11907 016c 020853E3 		cmp	r3, #131072
 11908 0170 0100001A 		bne	.L763
 11909              		.loc 1 5039 5 discriminator 16
 11910 0174 0830E0E3 		mvn	r3, #8
 11911              		.loc 1 5039 5
 11912 0178 950000EA 		b	.L756
 11913              	.L763:
 11914              		.loc 1 5039 5 discriminator 17
 11915 017c 10301BE5 		ldr	r3, [fp, #-16]
 11916 0180 233CA0E1 		lsr	r3, r3, #24
 11917 0184 050053E3 		cmp	r3, #5
 11918 0188 0100000A 		beq	.L758
 11919              		.loc 1 5039 5 discriminator 18
 11920 018c 0130E0E3 		mvn	r3, #1
 11921              		.loc 1 5039 5
 11922 0190 8F0000EA 		b	.L756
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 299


 11923              	.L758:
5040:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
5041:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5042:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11924              		.loc 1 5042 5 is_stmt 1
 11925 0194 20301BE5 		ldr	r3, [fp, #-32]
 11926 0198 803003E2 		and	r3, r3, #128
 11927 019c 000053E3 		cmp	r3, #0
 11928 01a0 1C00001A 		bne	.L764
 11929              		.loc 1 5042 5 is_stmt 0 discriminator 1
 11930 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11931 01a8 142093E5 		ldr	r2, [r3, #20]
 11932 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11933 01b0 030052E1 		cmp	r2, r3
 11934 01b4 0100008A 		bhi	.L765
 11935              		.loc 1 5042 5 discriminator 3
 11936 01b8 0230E0E3 		mvn	r3, #2
 11937              		.loc 1 5042 5
 11938 01bc 840000EA 		b	.L756
 11939              	.L765:
 11940              		.loc 1 5042 5 discriminator 4
 11941 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11942 01c4 8322A0E1 		lsl	r2, r3, #5
 11943 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11944 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11945 01d0 033082E0 		add	r3, r2, r3
 11946 01d4 0C300BE5 		str	r3, [fp, #-12]
 11947 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11948 01dc 0300A0E1 		mov	r0, r3
 11949 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11950 01e4 10000BE5 		str	r0, [fp, #-16]
 11951              		.loc 1 5042 5 discriminator 1
 11952 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11953 01ec FF3803E2 		and	r3, r3, #16711680
 11954 01f0 020853E3 		cmp	r3, #131072
 11955 01f4 0100001A 		bne	.L766
 11956              		.loc 1 5042 5 discriminator 5
 11957 01f8 0830E0E3 		mvn	r3, #8
 11958              		.loc 1 5042 5
 11959 01fc 740000EA 		b	.L756
 11960              	.L766:
 11961              		.loc 1 5042 5 discriminator 6
 11962 0200 10301BE5 		ldr	r3, [fp, #-16]
 11963 0204 233CA0E1 		lsr	r3, r3, #24
 11964 0208 040053E3 		cmp	r3, #4
 11965 020c 3F00000A 		beq	.L767
 11966              		.loc 1 5042 5 discriminator 7
 11967 0210 0130E0E3 		mvn	r3, #1
 11968              		.loc 1 5042 5
 11969 0214 6E0000EA 		b	.L756
 11970              	.L764:
 11971              		.loc 1 5042 5 discriminator 2
 11972 0218 20301BE5 		ldr	r3, [fp, #-32]
 11973 021c 2324A0E1 		lsr	r2, r3, #8
 11974 0220 18301BE5 		ldr	r3, [fp, #-24]
 11975 0224 143093E5 		ldr	r3, [r3, #20]
 11976 0228 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 300


 11977 022c 0100003A 		bcc	.L768
 11978              		.loc 1 5042 5 discriminator 8
 11979 0230 0230E0E3 		mvn	r3, #2
 11980              		.loc 1 5042 5
 11981 0234 660000EA 		b	.L756
 11982              	.L768:
 11983              		.loc 1 5042 5 discriminator 9
 11984 0238 20301BE5 		ldr	r3, [fp, #-32]
 11985 023c 2334A0E1 		lsr	r3, r3, #8
 11986 0240 8322A0E1 		lsl	r2, r3, #5
 11987 0244 18301BE5 		ldr	r3, [fp, #-24]
 11988 0248 0C3093E5 		ldr	r3, [r3, #12]
 11989 024c 033082E0 		add	r3, r2, r3
 11990 0250 0C300BE5 		str	r3, [fp, #-12]
 11991 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11992 0258 0300A0E1 		mov	r0, r3
 11993 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11994 0260 10000BE5 		str	r0, [fp, #-16]
 11995              		.loc 1 5042 5 discriminator 1
 11996 0264 10301BE5 		ldr	r3, [fp, #-16]
 11997 0268 FF3803E2 		and	r3, r3, #16711680
 11998 026c 020853E3 		cmp	r3, #131072
 11999 0270 0100001A 		bne	.L769
 12000              		.loc 1 5042 5 discriminator 10
 12001 0274 0830E0E3 		mvn	r3, #8
 12002              		.loc 1 5042 5
 12003 0278 550000EA 		b	.L756
 12004              	.L769:
 12005              		.loc 1 5042 5 discriminator 11
 12006 027c 10301BE5 		ldr	r3, [fp, #-16]
 12007 0280 233CA0E1 		lsr	r3, r3, #24
 12008 0284 030053E3 		cmp	r3, #3
 12009 0288 0100000A 		beq	.L770
 12010              		.loc 1 5042 5 discriminator 12
 12011 028c 0130E0E3 		mvn	r3, #1
 12012              		.loc 1 5042 5
 12013 0290 4F0000EA 		b	.L756
 12014              	.L770:
 12015              		.loc 1 5042 5 discriminator 13
 12016 0294 20301BE5 		ldr	r3, [fp, #-32]
 12017 0298 7F2003E2 		and	r2, r3, #127
 12018 029c 0C301BE5 		ldr	r3, [fp, #-12]
 12019 02a0 143093E5 		ldr	r3, [r3, #20]
 12020 02a4 030052E1 		cmp	r2, r3
 12021 02a8 0100003A 		bcc	.L771
 12022              		.loc 1 5042 5 discriminator 14
 12023 02ac 0230E0E3 		mvn	r3, #2
 12024              		.loc 1 5042 5
 12025 02b0 470000EA 		b	.L756
 12026              	.L771:
 12027              		.loc 1 5042 5 discriminator 15
 12028 02b4 20301BE5 		ldr	r3, [fp, #-32]
 12029 02b8 7F3003E2 		and	r3, r3, #127
 12030 02bc 8322A0E1 		lsl	r2, r3, #5
 12031 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 12032 02c4 0C3093E5 		ldr	r3, [r3, #12]
 12033 02c8 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 301


 12034 02cc 0C300BE5 		str	r3, [fp, #-12]
 12035 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 12036 02d4 0300A0E1 		mov	r0, r3
 12037 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12038 02dc 10000BE5 		str	r0, [fp, #-16]
 12039              		.loc 1 5042 5 discriminator 1
 12040 02e0 10301BE5 		ldr	r3, [fp, #-16]
 12041 02e4 FF3803E2 		and	r3, r3, #16711680
 12042 02e8 020853E3 		cmp	r3, #131072
 12043 02ec 0100001A 		bne	.L772
 12044              		.loc 1 5042 5 discriminator 16
 12045 02f0 0830E0E3 		mvn	r3, #8
 12046              		.loc 1 5042 5
 12047 02f4 360000EA 		b	.L756
 12048              	.L772:
 12049              		.loc 1 5042 5 discriminator 17
 12050 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12051 02fc 233CA0E1 		lsr	r3, r3, #24
 12052 0300 040053E3 		cmp	r3, #4
 12053 0304 0100000A 		beq	.L767
 12054              		.loc 1 5042 5 discriminator 18
 12055 0308 0130E0E3 		mvn	r3, #1
 12056              		.loc 1 5042 5
 12057 030c 300000EA 		b	.L756
 12058              	.L767:
5043:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
5044:../../Source/Kernel/rme_kernel.c **** #endif
5045:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5046:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 12059              		.loc 1 5046 5 is_stmt 1
 12060 0310 08301BE5 		ldr	r3, [fp, #-8]
 12061 0314 083093E5 		ldr	r3, [r3, #8]
 12062 0318 083003E2 		and	r3, r3, #8
 12063 031c 000053E3 		cmp	r3, #0
 12064 0320 0100001A 		bne	.L773
 12065              		.loc 1 5046 5 is_stmt 0 discriminator 1
 12066 0324 0630E0E3 		mvn	r3, #6
 12067              		.loc 1 5046 5
 12068 0328 290000EA 		b	.L756
 12069              	.L773:
5047:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5048:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 12070              		.loc 1 5048 5 is_stmt 1
 12071 032c 0C301BE5 		ldr	r3, [fp, #-12]
 12072 0330 083093E5 		ldr	r3, [r3, #8]
 12073 0334 803003E2 		and	r3, r3, #128
 12074 0338 000053E3 		cmp	r3, #0
 12075 033c 0100001A 		bne	.L774
 12076              		.loc 1 5048 5 is_stmt 0 discriminator 1
 12077 0340 0630E0E3 		mvn	r3, #6
 12078              		.loc 1 5048 5
 12079 0344 220000EA 		b	.L756
 12080              	.L774:
5049:../../Source/Kernel/rme_kernel.c **** #endif
5050:../../Source/Kernel/rme_kernel.c ****     
5051:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 12081              		.loc 1 5051 12 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 302


 12082 0348 08301BE5 		ldr	r3, [fp, #-8]
 12083 034c 183093E5 		ldr	r3, [r3, #24]
 12084 0350 14300BE5 		str	r3, [fp, #-20]
5052:../../Source/Kernel/rme_kernel.c ****     
5053:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5054:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5055:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 12085              		.loc 1 5055 13
 12086 0354 0C301BE5 		ldr	r3, [fp, #-12]
 12087 0358 003093E5 		ldr	r3, [r3]
 12088 035c 7330FFE6 		uxth	r3, r3
 12089 0360 000053E3 		cmp	r3, #0
 12090 0364 0200000A 		beq	.L775
 12091              		.loc 1 5055 13 is_stmt 0 discriminator 1
 12092 0368 0C301BE5 		ldr	r3, [fp, #-12]
 12093 036c 043093E5 		ldr	r3, [r3, #4]
 12094 0370 000000EA 		b	.L776
 12095              	.L775:
 12096              		.loc 1 5055 13 discriminator 2
 12097 0374 0C301BE5 		ldr	r3, [fp, #-12]
 12098              	.L776:
 12099              		.loc 1 5055 12 is_stmt 1 discriminator 4
 12100 0378 0C300BE5 		str	r3, [fp, #-12]
5056:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5057:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 12101              		.loc 1 5057 8
 12102 037c 08301BE5 		ldr	r3, [fp, #-8]
 12103 0380 183083E2 		add	r3, r3, #24
 12104 0384 14101BE5 		ldr	r1, [fp, #-20]
 12105 0388 0C201BE5 		ldr	r2, [fp, #-12]
 12106 038c 0300A0E1 		mov	r0, r3
 12107 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12108 0394 0030A0E1 		mov	r3, r0
 12109              		.loc 1 5057 7 discriminator 1
 12110 0398 000053E3 		cmp	r3, #0
 12111 039c 0100001A 		bne	.L777
5058:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5059:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5060:../../Source/Kernel/rme_kernel.c **** #else
5061:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5062:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5063:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5064:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5065:../../Source/Kernel/rme_kernel.c **** #endif
5066:../../Source/Kernel/rme_kernel.c ****     {
5067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5068:../../Source/Kernel/rme_kernel.c ****         
5069:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12112              		.loc 1 5069 16
 12113 03a0 C930E0E3 		mvn	r3, #201
 12114 03a4 0A0000EA 		b	.L756
 12115              	.L777:
5070:../../Source/Kernel/rme_kernel.c ****     }
5071:../../Source/Kernel/rme_kernel.c ****     else
5072:../../Source/Kernel/rme_kernel.c ****     {
5073:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5074:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 303


5075:../../Source/Kernel/rme_kernel.c ****     }
5076:../../Source/Kernel/rme_kernel.c ****     
5077:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5078:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5079:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 12116              		.loc 1 5079 5
 12117 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12118 03ac 043083E2 		add	r3, r3, #4
 12119 03b0 0110A0E3 		mov	r1, #1
 12120 03b4 0300A0E1 		mov	r0, r3
 12121 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5080:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12122              		.loc 1 5080 5
 12123 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12124 03c0 043083E2 		add	r3, r3, #4
 12125 03c4 0010E0E3 		mvn	r1, #0
 12126 03c8 0300A0E1 		mov	r0, r3
 12127 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5081:../../Source/Kernel/rme_kernel.c **** #endif
5082:../../Source/Kernel/rme_kernel.c ****     
5083:../../Source/Kernel/rme_kernel.c ****     return 0;
 12128              		.loc 1 5083 12
 12129 03d0 0030A0E3 		mov	r3, #0
 12130              	.L756:
5084:../../Source/Kernel/rme_kernel.c **** }
 12131              		.loc 1 5084 1
 12132 03d4 0300A0E1 		mov	r0, r3
 12133 03d8 04D04BE2 		sub	sp, fp, #4
 12134              		.cfi_def_cfa 13, 8
 12135              		@ sp needed
 12136 03dc 0088BDE8 		pop	{fp, pc}
 12137              		.cfi_endproc
 12138              	.LFE54:
 12140              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12141              		.align	2
 12142              		.global	_RME_Thd_Boot_Crt
 12143              		.syntax unified
 12144              		.arm
 12146              	_RME_Thd_Boot_Crt:
 12147              	.LFB55:
5085:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5086:../../Source/Kernel/rme_kernel.c **** 
5087:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5088:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5089:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5090:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5091:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5092:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5093:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5094:../../Source/Kernel/rme_kernel.c ****               local core.
5095:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5096:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5097:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5098:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5099:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5100:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5101:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 304


5102:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5103:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5104:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5105:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5106:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5107:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5108:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5109:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5110:../../Source/Kernel/rme_kernel.c **** Output      : None.
5111:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5112:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5113:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5114:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5115:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5116:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5117:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5118:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5119:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5120:../../Source/Kernel/rme_kernel.c **** {
 12148              		.loc 1 5120 1
 12149              		.cfi_startproc
 12150              		@ args = 12, pretend = 0, frame = 40
 12151              		@ frame_needed = 1, uses_anonymous_args = 0
 12152 0000 00482DE9 		push	{fp, lr}
 12153              		.cfi_def_cfa_offset 8
 12154              		.cfi_offset 11, -8
 12155              		.cfi_offset 14, -4
 12156 0004 04B08DE2 		add	fp, sp, #4
 12157              		.cfi_def_cfa 11, 4
 12158 0008 28D04DE2 		sub	sp, sp, #40
 12159 000c 20000BE5 		str	r0, [fp, #-32]
 12160 0010 24100BE5 		str	r1, [fp, #-36]
 12161 0014 28200BE5 		str	r2, [fp, #-40]
 12162 0018 2C300BE5 		str	r3, [fp, #-44]
5121:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5122:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5123:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5124:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5125:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5126:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5127:../../Source/Kernel/rme_kernel.c ****     
5128:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5129:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12163              		.loc 1 5129 7
 12164 001c 08309BE5 		ldr	r3, [fp, #8]
 12165 0020 1F0053E3 		cmp	r3, #31
 12166 0024 0100009A 		bls	.L779
5130:../../Source/Kernel/rme_kernel.c ****     {
5131:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5132:../../Source/Kernel/rme_kernel.c **** 
5133:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12167              		.loc 1 5133 16
 12168 0028 CC30E0E3 		mvn	r3, #204
 12169 002c 4C0100EA 		b	.L780
 12170              	.L779:
5134:../../Source/Kernel/rme_kernel.c ****     }
5135:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 305


5136:../../Source/Kernel/rme_kernel.c ****     {
5137:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5138:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5139:../../Source/Kernel/rme_kernel.c ****     }
5140:../../Source/Kernel/rme_kernel.c ****     
5141:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5142:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12171              		.loc 1 5142 5
 12172 0030 24301BE5 		ldr	r3, [fp, #-36]
 12173 0034 803003E2 		and	r3, r3, #128
 12174 0038 000053E3 		cmp	r3, #0
 12175 003c 1C00001A 		bne	.L781
 12176              		.loc 1 5142 5 is_stmt 0 discriminator 1
 12177 0040 20301BE5 		ldr	r3, [fp, #-32]
 12178 0044 142093E5 		ldr	r2, [r3, #20]
 12179 0048 24301BE5 		ldr	r3, [fp, #-36]
 12180 004c 030052E1 		cmp	r2, r3
 12181 0050 0100008A 		bhi	.L782
 12182              		.loc 1 5142 5 discriminator 3
 12183 0054 0230E0E3 		mvn	r3, #2
 12184              		.loc 1 5142 5
 12185 0058 410100EA 		b	.L780
 12186              	.L782:
 12187              		.loc 1 5142 5 discriminator 4
 12188 005c 24301BE5 		ldr	r3, [fp, #-36]
 12189 0060 8322A0E1 		lsl	r2, r3, #5
 12190 0064 20301BE5 		ldr	r3, [fp, #-32]
 12191 0068 0C3093E5 		ldr	r3, [r3, #12]
 12192 006c 033082E0 		add	r3, r2, r3
 12193 0070 08300BE5 		str	r3, [fp, #-8]
 12194 0074 08301BE5 		ldr	r3, [fp, #-8]
 12195 0078 0300A0E1 		mov	r0, r3
 12196 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12197 0080 10000BE5 		str	r0, [fp, #-16]
 12198              		.loc 1 5142 5 discriminator 1
 12199 0084 10301BE5 		ldr	r3, [fp, #-16]
 12200 0088 FF3803E2 		and	r3, r3, #16711680
 12201 008c 020853E3 		cmp	r3, #131072
 12202 0090 0100001A 		bne	.L783
 12203              		.loc 1 5142 5 discriminator 5
 12204 0094 0830E0E3 		mvn	r3, #8
 12205              		.loc 1 5142 5
 12206 0098 310100EA 		b	.L780
 12207              	.L783:
 12208              		.loc 1 5142 5 discriminator 6
 12209 009c 10301BE5 		ldr	r3, [fp, #-16]
 12210 00a0 233CA0E1 		lsr	r3, r3, #24
 12211 00a4 030053E3 		cmp	r3, #3
 12212 00a8 3F00000A 		beq	.L784
 12213              		.loc 1 5142 5 discriminator 7
 12214 00ac 0130E0E3 		mvn	r3, #1
 12215              		.loc 1 5142 5
 12216 00b0 2B0100EA 		b	.L780
 12217              	.L781:
 12218              		.loc 1 5142 5 discriminator 2
 12219 00b4 24301BE5 		ldr	r3, [fp, #-36]
 12220 00b8 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 306


 12221 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12222 00c0 143093E5 		ldr	r3, [r3, #20]
 12223 00c4 030052E1 		cmp	r2, r3
 12224 00c8 0100003A 		bcc	.L785
 12225              		.loc 1 5142 5 discriminator 8
 12226 00cc 0230E0E3 		mvn	r3, #2
 12227              		.loc 1 5142 5
 12228 00d0 230100EA 		b	.L780
 12229              	.L785:
 12230              		.loc 1 5142 5 discriminator 9
 12231 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12232 00d8 2334A0E1 		lsr	r3, r3, #8
 12233 00dc 8322A0E1 		lsl	r2, r3, #5
 12234 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12235 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12236 00e8 033082E0 		add	r3, r2, r3
 12237 00ec 08300BE5 		str	r3, [fp, #-8]
 12238 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12239 00f4 0300A0E1 		mov	r0, r3
 12240 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12241 00fc 10000BE5 		str	r0, [fp, #-16]
 12242              		.loc 1 5142 5 discriminator 1
 12243 0100 10301BE5 		ldr	r3, [fp, #-16]
 12244 0104 FF3803E2 		and	r3, r3, #16711680
 12245 0108 020853E3 		cmp	r3, #131072
 12246 010c 0100001A 		bne	.L786
 12247              		.loc 1 5142 5 discriminator 10
 12248 0110 0830E0E3 		mvn	r3, #8
 12249              		.loc 1 5142 5
 12250 0114 120100EA 		b	.L780
 12251              	.L786:
 12252              		.loc 1 5142 5 discriminator 11
 12253 0118 10301BE5 		ldr	r3, [fp, #-16]
 12254 011c 233CA0E1 		lsr	r3, r3, #24
 12255 0120 030053E3 		cmp	r3, #3
 12256 0124 0100000A 		beq	.L787
 12257              		.loc 1 5142 5 discriminator 12
 12258 0128 0130E0E3 		mvn	r3, #1
 12259              		.loc 1 5142 5
 12260 012c 0C0100EA 		b	.L780
 12261              	.L787:
 12262              		.loc 1 5142 5 discriminator 13
 12263 0130 24301BE5 		ldr	r3, [fp, #-36]
 12264 0134 7F2003E2 		and	r2, r3, #127
 12265 0138 08301BE5 		ldr	r3, [fp, #-8]
 12266 013c 143093E5 		ldr	r3, [r3, #20]
 12267 0140 030052E1 		cmp	r2, r3
 12268 0144 0100003A 		bcc	.L788
 12269              		.loc 1 5142 5 discriminator 14
 12270 0148 0230E0E3 		mvn	r3, #2
 12271              		.loc 1 5142 5
 12272 014c 040100EA 		b	.L780
 12273              	.L788:
 12274              		.loc 1 5142 5 discriminator 15
 12275 0150 24301BE5 		ldr	r3, [fp, #-36]
 12276 0154 7F3003E2 		and	r3, r3, #127
 12277 0158 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 307


 12278 015c 08301BE5 		ldr	r3, [fp, #-8]
 12279 0160 0C3093E5 		ldr	r3, [r3, #12]
 12280 0164 033082E0 		add	r3, r2, r3
 12281 0168 08300BE5 		str	r3, [fp, #-8]
 12282 016c 08301BE5 		ldr	r3, [fp, #-8]
 12283 0170 0300A0E1 		mov	r0, r3
 12284 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12285 0178 10000BE5 		str	r0, [fp, #-16]
 12286              		.loc 1 5142 5 discriminator 1
 12287 017c 10301BE5 		ldr	r3, [fp, #-16]
 12288 0180 FF3803E2 		and	r3, r3, #16711680
 12289 0184 020853E3 		cmp	r3, #131072
 12290 0188 0100001A 		bne	.L789
 12291              		.loc 1 5142 5 discriminator 16
 12292 018c 0830E0E3 		mvn	r3, #8
 12293              		.loc 1 5142 5
 12294 0190 F30000EA 		b	.L780
 12295              	.L789:
 12296              		.loc 1 5142 5 discriminator 17
 12297 0194 10301BE5 		ldr	r3, [fp, #-16]
 12298 0198 233CA0E1 		lsr	r3, r3, #24
 12299 019c 030053E3 		cmp	r3, #3
 12300 01a0 0100000A 		beq	.L784
 12301              		.loc 1 5142 5 discriminator 18
 12302 01a4 0130E0E3 		mvn	r3, #1
 12303              		.loc 1 5142 5
 12304 01a8 ED0000EA 		b	.L780
 12305              	.L784:
5143:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5144:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12306              		.loc 1 5144 5 is_stmt 1
 12307 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12308 01b0 803003E2 		and	r3, r3, #128
 12309 01b4 000053E3 		cmp	r3, #0
 12310 01b8 1C00001A 		bne	.L790
 12311              		.loc 1 5144 5 is_stmt 0 discriminator 1
 12312 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12313 01c0 142093E5 		ldr	r2, [r3, #20]
 12314 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 12315 01c8 030052E1 		cmp	r2, r3
 12316 01cc 0100008A 		bhi	.L791
 12317              		.loc 1 5144 5 discriminator 3
 12318 01d0 0230E0E3 		mvn	r3, #2
 12319              		.loc 1 5144 5
 12320 01d4 E20000EA 		b	.L780
 12321              	.L791:
 12322              		.loc 1 5144 5 discriminator 4
 12323 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12324 01dc 8322A0E1 		lsl	r2, r3, #5
 12325 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12326 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12327 01e8 033082E0 		add	r3, r2, r3
 12328 01ec 0C300BE5 		str	r3, [fp, #-12]
 12329 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 12330 01f4 0300A0E1 		mov	r0, r3
 12331 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12332 01fc 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 308


 12333              		.loc 1 5144 5 discriminator 1
 12334 0200 10301BE5 		ldr	r3, [fp, #-16]
 12335 0204 FF3803E2 		and	r3, r3, #16711680
 12336 0208 020853E3 		cmp	r3, #131072
 12337 020c 0100001A 		bne	.L792
 12338              		.loc 1 5144 5 discriminator 5
 12339 0210 0830E0E3 		mvn	r3, #8
 12340              		.loc 1 5144 5
 12341 0214 D20000EA 		b	.L780
 12342              	.L792:
 12343              		.loc 1 5144 5 discriminator 6
 12344 0218 10301BE5 		ldr	r3, [fp, #-16]
 12345 021c 233CA0E1 		lsr	r3, r3, #24
 12346 0220 050053E3 		cmp	r3, #5
 12347 0224 3F00000A 		beq	.L793
 12348              		.loc 1 5144 5 discriminator 7
 12349 0228 0130E0E3 		mvn	r3, #1
 12350              		.loc 1 5144 5
 12351 022c CC0000EA 		b	.L780
 12352              	.L790:
 12353              		.loc 1 5144 5 discriminator 2
 12354 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12355 0234 2324A0E1 		lsr	r2, r3, #8
 12356 0238 20301BE5 		ldr	r3, [fp, #-32]
 12357 023c 143093E5 		ldr	r3, [r3, #20]
 12358 0240 030052E1 		cmp	r2, r3
 12359 0244 0100003A 		bcc	.L794
 12360              		.loc 1 5144 5 discriminator 8
 12361 0248 0230E0E3 		mvn	r3, #2
 12362              		.loc 1 5144 5
 12363 024c C40000EA 		b	.L780
 12364              	.L794:
 12365              		.loc 1 5144 5 discriminator 9
 12366 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12367 0254 2334A0E1 		lsr	r3, r3, #8
 12368 0258 8322A0E1 		lsl	r2, r3, #5
 12369 025c 20301BE5 		ldr	r3, [fp, #-32]
 12370 0260 0C3093E5 		ldr	r3, [r3, #12]
 12371 0264 033082E0 		add	r3, r2, r3
 12372 0268 0C300BE5 		str	r3, [fp, #-12]
 12373 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12374 0270 0300A0E1 		mov	r0, r3
 12375 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12376 0278 10000BE5 		str	r0, [fp, #-16]
 12377              		.loc 1 5144 5 discriminator 1
 12378 027c 10301BE5 		ldr	r3, [fp, #-16]
 12379 0280 FF3803E2 		and	r3, r3, #16711680
 12380 0284 020853E3 		cmp	r3, #131072
 12381 0288 0100001A 		bne	.L795
 12382              		.loc 1 5144 5 discriminator 10
 12383 028c 0830E0E3 		mvn	r3, #8
 12384              		.loc 1 5144 5
 12385 0290 B30000EA 		b	.L780
 12386              	.L795:
 12387              		.loc 1 5144 5 discriminator 11
 12388 0294 10301BE5 		ldr	r3, [fp, #-16]
 12389 0298 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 309


 12390 029c 030053E3 		cmp	r3, #3
 12391 02a0 0100000A 		beq	.L796
 12392              		.loc 1 5144 5 discriminator 12
 12393 02a4 0130E0E3 		mvn	r3, #1
 12394              		.loc 1 5144 5
 12395 02a8 AD0000EA 		b	.L780
 12396              	.L796:
 12397              		.loc 1 5144 5 discriminator 13
 12398 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12399 02b0 7F2003E2 		and	r2, r3, #127
 12400 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12401 02b8 143093E5 		ldr	r3, [r3, #20]
 12402 02bc 030052E1 		cmp	r2, r3
 12403 02c0 0100003A 		bcc	.L797
 12404              		.loc 1 5144 5 discriminator 14
 12405 02c4 0230E0E3 		mvn	r3, #2
 12406              		.loc 1 5144 5
 12407 02c8 A50000EA 		b	.L780
 12408              	.L797:
 12409              		.loc 1 5144 5 discriminator 15
 12410 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12411 02d0 7F3003E2 		and	r3, r3, #127
 12412 02d4 8322A0E1 		lsl	r2, r3, #5
 12413 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12414 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12415 02e0 033082E0 		add	r3, r2, r3
 12416 02e4 0C300BE5 		str	r3, [fp, #-12]
 12417 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12418 02ec 0300A0E1 		mov	r0, r3
 12419 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12420 02f4 10000BE5 		str	r0, [fp, #-16]
 12421              		.loc 1 5144 5 discriminator 1
 12422 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12423 02fc FF3803E2 		and	r3, r3, #16711680
 12424 0300 020853E3 		cmp	r3, #131072
 12425 0304 0100001A 		bne	.L798
 12426              		.loc 1 5144 5 discriminator 16
 12427 0308 0830E0E3 		mvn	r3, #8
 12428              		.loc 1 5144 5
 12429 030c 940000EA 		b	.L780
 12430              	.L798:
 12431              		.loc 1 5144 5 discriminator 17
 12432 0310 10301BE5 		ldr	r3, [fp, #-16]
 12433 0314 233CA0E1 		lsr	r3, r3, #24
 12434 0318 050053E3 		cmp	r3, #5
 12435 031c 0100000A 		beq	.L793
 12436              		.loc 1 5144 5 discriminator 18
 12437 0320 0130E0E3 		mvn	r3, #1
 12438              		.loc 1 5144 5
 12439 0324 8E0000EA 		b	.L780
 12440              	.L793:
5145:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5146:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5147:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12441              		.loc 1 5147 5 is_stmt 1
 12442 0328 08301BE5 		ldr	r3, [fp, #-8]
 12443 032c 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 310


 12444 0330 013003E2 		and	r3, r3, #1
 12445 0334 000053E3 		cmp	r3, #0
 12446 0338 0100001A 		bne	.L799
 12447              		.loc 1 5147 5 is_stmt 0 discriminator 1
 12448 033c 0630E0E3 		mvn	r3, #6
 12449              		.loc 1 5147 5
 12450 0340 870000EA 		b	.L780
 12451              	.L799:
5148:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12452              		.loc 1 5148 5 is_stmt 1
 12453 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12454 0348 083093E5 		ldr	r3, [r3, #8]
 12455 034c 023003E2 		and	r3, r3, #2
 12456 0350 000053E3 		cmp	r3, #0
 12457 0354 0100001A 		bne	.L800
 12458              		.loc 1 5148 5 is_stmt 0 discriminator 1
 12459 0358 0630E0E3 		mvn	r3, #6
 12460              		.loc 1 5148 5
 12461 035c 800000EA 		b	.L780
 12462              	.L800:
5149:../../Source/Kernel/rme_kernel.c ****     
5150:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5151:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12463              		.loc 1 5151 5 is_stmt 1
 12464 0360 08301BE5 		ldr	r3, [fp, #-8]
 12465 0364 142093E5 		ldr	r2, [r3, #20]
 12466 0368 28301BE5 		ldr	r3, [fp, #-40]
 12467 036c 030052E1 		cmp	r2, r3
 12468 0370 0100008A 		bhi	.L801
 12469              		.loc 1 5151 5 is_stmt 0 discriminator 1
 12470 0374 0230E0E3 		mvn	r3, #2
 12471              		.loc 1 5151 5
 12472 0378 790000EA 		b	.L780
 12473              	.L801:
 12474              		.loc 1 5151 5 discriminator 2
 12475 037c 28301BE5 		ldr	r3, [fp, #-40]
 12476 0380 8322A0E1 		lsl	r2, r3, #5
 12477 0384 08301BE5 		ldr	r3, [fp, #-8]
 12478 0388 0C3093E5 		ldr	r3, [r3, #12]
 12479 038c 033082E0 		add	r3, r2, r3
 12480 0390 14300BE5 		str	r3, [fp, #-20]
5152:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5153:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12481              		.loc 1 5153 5 is_stmt 1
 12482 0394 14301BE5 		ldr	r3, [fp, #-20]
 12483 0398 0128A0E3 		mov	r2, #65536
 12484 039c 0010A0E3 		mov	r1, #0
 12485 03a0 0300A0E1 		mov	r0, r3
 12486 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12487 03a8 0030A0E1 		mov	r3, r0
 12488              		.loc 1 5153 5 is_stmt 0 discriminator 1
 12489 03ac 000053E3 		cmp	r3, #0
 12490 03b0 0100001A 		bne	.L802
 12491 03b4 0430E0E3 		mvn	r3, #4
 12492              		.loc 1 5153 5
 12493 03b8 690000EA 		b	.L780
 12494              	.L802:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 311


 12495              		.loc 1 5153 5 discriminator 2
 12496 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12497 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12498 03c4 002093E5 		ldr	r2, [r3]
 12499 03c8 14301BE5 		ldr	r3, [fp, #-20]
 12500 03cc 102083E5 		str	r2, [r3, #16]
5154:../../Source/Kernel/rme_kernel.c ****      
5155:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5156:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12501              		.loc 1 5156 8 is_stmt 1
 12502 03d0 A010A0E3 		mov	r1, #160
 12503 03d4 04009BE5 		ldr	r0, [fp, #4]
 12504 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12505 03dc 0030A0E1 		mov	r3, r0
 12506              		.loc 1 5156 7 discriminator 1
 12507 03e0 000053E3 		cmp	r3, #0
 12508 03e4 0500000A 		beq	.L803
5157:../../Source/Kernel/rme_kernel.c ****     {
5158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5159:../../Source/Kernel/rme_kernel.c **** 
5160:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12509              		.loc 1 5160 9
 12510 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12511 03ec 0010A0E3 		mov	r1, #0
 12512 03f0 0300A0E1 		mov	r0, r3
 12513 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5161:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12514              		.loc 1 5161 16
 12515 03f8 0330E0E3 		mvn	r3, #3
 12516 03fc 580000EA 		b	.L780
 12517              	.L803:
5162:../../Source/Kernel/rme_kernel.c ****     }
5163:../../Source/Kernel/rme_kernel.c ****     else
5164:../../Source/Kernel/rme_kernel.c ****     {
5165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5166:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5167:../../Source/Kernel/rme_kernel.c ****     }
5168:../../Source/Kernel/rme_kernel.c **** 
5169:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5170:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12518              		.loc 1 5170 11
 12519 0400 04309BE5 		ldr	r3, [fp, #4]
 12520 0404 18300BE5 		str	r3, [fp, #-24]
5171:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5172:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12521              		.loc 1 5172 22
 12522 0408 18301BE5 		ldr	r3, [fp, #-24]
 12523 040c 0020A0E3 		mov	r2, #0
 12524 0410 102083E5 		str	r2, [r3, #16]
5173:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12525              		.loc 1 5173 24
 12526 0414 18301BE5 		ldr	r3, [fp, #-24]
 12527 0418 0221E0E3 		mvn	r2, #-2147483648
 12528 041c 182083E5 		str	r2, [r3, #24]
5174:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12529              		.loc 1 5174 24
 12530 0420 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 312


 12531 0424 0020A0E3 		mov	r2, #0
 12532 0428 1C2083E5 		str	r2, [r3, #28]
5175:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12533              		.loc 1 5175 14
 12534 042c 0C301BE5 		ldr	r3, [fp, #-12]
 12535 0430 003093E5 		ldr	r3, [r3]
 12536 0434 7330FFE6 		uxth	r3, r3
 12537 0438 000053E3 		cmp	r3, #0
 12538 043c 0200000A 		beq	.L804
 12539              		.loc 1 5175 14 is_stmt 0 discriminator 1
 12540 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12541 0444 043093E5 		ldr	r3, [r3, #4]
 12542 0448 000000EA 		b	.L805
 12543              	.L804:
 12544              		.loc 1 5175 14 discriminator 2
 12545 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12546              	.L805:
 12547              		.loc 1 5175 13 is_stmt 1 discriminator 4
 12548 0450 1C300BE5 		str	r3, [fp, #-28]
5176:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12549              		.loc 1 5176 22
 12550 0454 18301BE5 		ldr	r3, [fp, #-24]
 12551 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12552 045c 2C2083E5 		str	r2, [r3, #44]
5177:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12553              		.loc 1 5177 25
 12554 0460 18301BE5 		ldr	r3, [fp, #-24]
 12555 0464 0020A0E3 		mov	r2, #0
 12556 0468 282083E5 		str	r2, [r3, #40]
5178:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12557              		.loc 1 5178 23
 12558 046c 18301BE5 		ldr	r3, [fp, #-24]
 12559 0470 08209BE5 		ldr	r2, [fp, #8]
 12560 0474 202083E5 		str	r2, [r3, #32]
5179:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12561              		.loc 1 5179 27
 12562 0478 18301BE5 		ldr	r3, [fp, #-24]
 12563 047c 1F20A0E3 		mov	r2, #31
 12564 0480 242083E5 		str	r2, [r3, #36]
5180:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5181:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12565              		.loc 1 5181 28
 12566 0484 18301BE5 		ldr	r3, [fp, #-24]
 12567 0488 0120A0E3 		mov	r2, #1
 12568 048c 302083E5 		str	r2, [r3, #48]
5182:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12569              		.loc 1 5182 28
 12570 0490 18301BE5 		ldr	r3, [fp, #-24]
 12571 0494 0020A0E3 		mov	r2, #0
 12572 0498 382083E5 		str	r2, [r3, #56]
5183:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5184:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12573              		.loc 1 5184 24
 12574 049c 18301BE5 		ldr	r3, [fp, #-24]
 12575 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12576 04a4 142083E5 		str	r2, [r3, #20]
5185:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 313


5186:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12577              		.loc 1 5186 5
 12578 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12579 04ac 083083E2 		add	r3, r3, #8
 12580 04b0 0300A0E1 		mov	r0, r3
 12581 04b4 FEFFFFEB 		bl	_RME_List_Crt
5187:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12582              		.loc 1 5187 5
 12583 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12584 04bc 3C3083E2 		add	r3, r3, #60
 12585 04c0 0300A0E1 		mov	r0, r3
 12586 04c4 FEFFFFEB 		bl	_RME_List_Crt
5188:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5189:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12587              		.loc 1 5189 25
 12588 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12589 04cc 0020A0E3 		mov	r2, #0
 12590 04d0 442083E5 		str	r2, [r3, #68]
5190:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12591              		.loc 1 5190 48
 12592 04d4 04309BE5 		ldr	r3, [fp, #4]
 12593 04d8 583083E2 		add	r3, r3, #88
 12594              		.loc 1 5190 21
 12595 04dc 0320A0E1 		mov	r2, r3
 12596              		.loc 1 5190 20
 12597 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12598 04e4 482083E5 		str	r2, [r3, #72]
5191:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5192:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12599              		.loc 1 5192 5
 12600 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12601 04ec 4C3083E2 		add	r3, r3, #76
 12602 04f0 0300A0E1 		mov	r0, r3
 12603 04f4 FEFFFFEB 		bl	_RME_List_Crt
5193:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12604              		.loc 1 5193 29
 12605 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12606 04fc 0020A0E3 		mov	r2, #0
 12607 0500 542083E5 		str	r2, [r3, #84]
5194:../../Source/Kernel/rme_kernel.c ****     
5195:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5196:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12608              		.loc 1 5196 27
 12609 0504 14301BE5 		ldr	r3, [fp, #-20]
 12610 0508 0120A0E3 		mov	r2, #1
 12611 050c 042083E5 		str	r2, [r3, #4]
5197:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12612              		.loc 1 5197 25
 12613 0510 14301BE5 		ldr	r3, [fp, #-20]
 12614 0514 04209BE5 		ldr	r2, [fp, #4]
 12615 0518 0C2083E5 		str	r2, [r3, #12]
5198:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5199:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5200:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5201:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12616              		.loc 1 5201 23
 12617 051c 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 314


 12618 0520 7B2FA0E3 		mov	r2, #492
 12619 0524 082083E5 		str	r2, [r3, #8]
5202:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5203:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5204:../../Source/Kernel/rme_kernel.c **** 
5205:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5206:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12620              		.loc 1 5206 5
 12621 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12622 052c 043083E2 		add	r3, r3, #4
 12623 0530 0110A0E3 		mov	r1, #1
 12624 0534 0300A0E1 		mov	r0, r3
 12625 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5207:../../Source/Kernel/rme_kernel.c ****     
5208:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5209:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12626              		.loc 1 5209 5
 12627 053c 18001BE5 		ldr	r0, [fp, #-24]
 12628 0540 FEFFFFEB 		bl	_RME_Run_Ins
5210:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12629              		.loc 1 5210 19
 12630 0544 0C309BE5 		ldr	r3, [fp, #12]
 12631 0548 18201BE5 		ldr	r2, [fp, #-24]
 12632 054c 042083E5 		str	r2, [r3, #4]
5211:../../Source/Kernel/rme_kernel.c **** 
5212:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5213:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12633              		.loc 1 5213 5
 12634 0550 14301BE5 		ldr	r3, [fp, #-20]
 12635 0554 0614A0E3 		mov	r1, #100663296
 12636 0558 0300A0E1 		mov	r0, r3
 12637 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5214:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5215:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5216:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5217:../../Source/Kernel/rme_kernel.c **** 
5218:../../Source/Kernel/rme_kernel.c ****     return 0;
 12638              		.loc 1 5218 12
 12639 0560 0030A0E3 		mov	r3, #0
 12640              	.L780:
5219:../../Source/Kernel/rme_kernel.c **** }
 12641              		.loc 1 5219 1
 12642 0564 0300A0E1 		mov	r0, r3
 12643 0568 04D04BE2 		sub	sp, fp, #4
 12644              		.cfi_def_cfa 13, 8
 12645              		@ sp needed
 12646 056c 0088BDE8 		pop	{fp, pc}
 12647              		.cfi_endproc
 12648              	.LFE55:
 12650              		.section	.rodata
 12651 0097 00       		.align	2
 12652              	.LC11:
 12653 0098 0D0A6D61 		.ascii	"\015\012maximum priority relationship is not correc"
 12653      78696D75 
 12653      6D207072 
 12653      696F7269 
 12653      74792072 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 315


 12654 00c5 7400     		.ascii	"t\000"
 12655 00c7 00       		.align	2
 12656              	.LC12:
 12657 00c8 0D0A5F52 		.ascii	"\015\012_RME_Kot_Mark(Vaddr,Size)\000"
 12657      4D455F4B 
 12657      6F745F4D 
 12657      61726B28 
 12657      56616464 
 12658              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12659              		.align	2
 12660              		.syntax unified
 12661              		.arm
 12663              	_RME_Thd_Crt:
 12664              	.LFB56:
5220:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5221:../../Source/Kernel/rme_kernel.c **** 
5222:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5223:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5224:../../Source/Kernel/rme_kernel.c ****               unit.
5225:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5226:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5227:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5228:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5229:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5230:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5231:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5232:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5233:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5234:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5235:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5236:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5237:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5238:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5239:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5240:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5241:../../Source/Kernel/rme_kernel.c **** Output      : None.
5242:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5243:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5244:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5245:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5246:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5247:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5248:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5249:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5250:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5251:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5252:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5253:../../Source/Kernel/rme_kernel.c **** {
 12665              		.loc 1 5253 1
 12666              		.cfi_startproc
 12667              		@ args = 20, pretend = 0, frame = 56
 12668              		@ frame_needed = 1, uses_anonymous_args = 0
 12669 0000 00482DE9 		push	{fp, lr}
 12670              		.cfi_def_cfa_offset 8
 12671              		.cfi_offset 11, -8
 12672              		.cfi_offset 14, -4
 12673 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 316


 12674              		.cfi_def_cfa 11, 4
 12675 0008 38D04DE2 		sub	sp, sp, #56
 12676 000c 30000BE5 		str	r0, [fp, #-48]
 12677 0010 34100BE5 		str	r1, [fp, #-52]
 12678 0014 38200BE5 		str	r2, [fp, #-56]
 12679 0018 3C300BE5 		str	r3, [fp, #-60]
5254:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5255:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5256:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5257:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5258:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5259:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5260:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5261:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5262:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5263:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCpt addr ");
5264:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
5265:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Cpt ");
5266:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
5267:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Kom ");
5268:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
5269:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
5270:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5271:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Prc ");
5272:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Prc);
5273:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio_Max ");
5274:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio_Max);
5275:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nRaddr ");
5276:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
5277:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nAttr ");
5278:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Attr);
5279:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Hyp ");
5280:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Hyp);*/
5281:../../Source/Kernel/rme_kernel.c ****      
5282:../../Source/Kernel/rme_kernel.c ****     
5283:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5284:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5285:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12680              		.loc 1 5285 24
 12681 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12682 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12683 0024 043093E5 		ldr	r3, [r3, #4]
 12684              		.loc 1 5285 41
 12685 0028 243093E5 		ldr	r3, [r3, #36]
 12686              		.loc 1 5285 7
 12687 002c 08209BE5 		ldr	r2, [fp, #8]
 12688 0030 030052E1 		cmp	r2, r3
 12689 0034 0400009A 		bls	.L807
5286:../../Source/Kernel/rme_kernel.c ****     {
5287:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5288:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmaximum priority relationship is not correct");
 12690              		.loc 1 5288 9
 12691 0038 000000E3 		movw	r0, #:lower16:.LC11
 12692 003c 000040E3 		movt	r0, #:upper16:.LC11
 12693 0040 FEFFFFEB 		bl	RME_Str_Print
5289:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12694              		.loc 1 5289 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 317


 12695 0044 CC30E0E3 		mvn	r3, #204
 12696 0048 EA0100EA 		b	.L808
 12697              	.L807:
5290:../../Source/Kernel/rme_kernel.c ****     }
5291:../../Source/Kernel/rme_kernel.c ****     else
5292:../../Source/Kernel/rme_kernel.c ****     {
5293:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5294:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5295:../../Source/Kernel/rme_kernel.c ****     }
5296:../../Source/Kernel/rme_kernel.c **** 
5297:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5298:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12698              		.loc 1 5298 5
 12699 004c 34301BE5 		ldr	r3, [fp, #-52]
 12700 0050 803003E2 		and	r3, r3, #128
 12701 0054 000053E3 		cmp	r3, #0
 12702 0058 1C00001A 		bne	.L809
 12703              		.loc 1 5298 5 is_stmt 0 discriminator 1
 12704 005c 30301BE5 		ldr	r3, [fp, #-48]
 12705 0060 142093E5 		ldr	r2, [r3, #20]
 12706 0064 34301BE5 		ldr	r3, [fp, #-52]
 12707 0068 030052E1 		cmp	r2, r3
 12708 006c 0100008A 		bhi	.L810
 12709              		.loc 1 5298 5 discriminator 3
 12710 0070 0230E0E3 		mvn	r3, #2
 12711              		.loc 1 5298 5
 12712 0074 DF0100EA 		b	.L808
 12713              	.L810:
 12714              		.loc 1 5298 5 discriminator 4
 12715 0078 34301BE5 		ldr	r3, [fp, #-52]
 12716 007c 8322A0E1 		lsl	r2, r3, #5
 12717 0080 30301BE5 		ldr	r3, [fp, #-48]
 12718 0084 0C3093E5 		ldr	r3, [r3, #12]
 12719 0088 033082E0 		add	r3, r2, r3
 12720 008c 08300BE5 		str	r3, [fp, #-8]
 12721 0090 08301BE5 		ldr	r3, [fp, #-8]
 12722 0094 0300A0E1 		mov	r0, r3
 12723 0098 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12724 009c 18000BE5 		str	r0, [fp, #-24]
 12725              		.loc 1 5298 5 discriminator 1
 12726 00a0 18301BE5 		ldr	r3, [fp, #-24]
 12727 00a4 FF3803E2 		and	r3, r3, #16711680
 12728 00a8 020853E3 		cmp	r3, #131072
 12729 00ac 0100001A 		bne	.L811
 12730              		.loc 1 5298 5 discriminator 5
 12731 00b0 0830E0E3 		mvn	r3, #8
 12732              		.loc 1 5298 5
 12733 00b4 CF0100EA 		b	.L808
 12734              	.L811:
 12735              		.loc 1 5298 5 discriminator 6
 12736 00b8 18301BE5 		ldr	r3, [fp, #-24]
 12737 00bc 233CA0E1 		lsr	r3, r3, #24
 12738 00c0 030053E3 		cmp	r3, #3
 12739 00c4 3F00000A 		beq	.L812
 12740              		.loc 1 5298 5 discriminator 7
 12741 00c8 0130E0E3 		mvn	r3, #1
 12742              		.loc 1 5298 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 318


 12743 00cc C90100EA 		b	.L808
 12744              	.L809:
 12745              		.loc 1 5298 5 discriminator 2
 12746 00d0 34301BE5 		ldr	r3, [fp, #-52]
 12747 00d4 2324A0E1 		lsr	r2, r3, #8
 12748 00d8 30301BE5 		ldr	r3, [fp, #-48]
 12749 00dc 143093E5 		ldr	r3, [r3, #20]
 12750 00e0 030052E1 		cmp	r2, r3
 12751 00e4 0100003A 		bcc	.L813
 12752              		.loc 1 5298 5 discriminator 8
 12753 00e8 0230E0E3 		mvn	r3, #2
 12754              		.loc 1 5298 5
 12755 00ec C10100EA 		b	.L808
 12756              	.L813:
 12757              		.loc 1 5298 5 discriminator 9
 12758 00f0 34301BE5 		ldr	r3, [fp, #-52]
 12759 00f4 2334A0E1 		lsr	r3, r3, #8
 12760 00f8 8322A0E1 		lsl	r2, r3, #5
 12761 00fc 30301BE5 		ldr	r3, [fp, #-48]
 12762 0100 0C3093E5 		ldr	r3, [r3, #12]
 12763 0104 033082E0 		add	r3, r2, r3
 12764 0108 08300BE5 		str	r3, [fp, #-8]
 12765 010c 08301BE5 		ldr	r3, [fp, #-8]
 12766 0110 0300A0E1 		mov	r0, r3
 12767 0114 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12768 0118 18000BE5 		str	r0, [fp, #-24]
 12769              		.loc 1 5298 5 discriminator 1
 12770 011c 18301BE5 		ldr	r3, [fp, #-24]
 12771 0120 FF3803E2 		and	r3, r3, #16711680
 12772 0124 020853E3 		cmp	r3, #131072
 12773 0128 0100001A 		bne	.L814
 12774              		.loc 1 5298 5 discriminator 10
 12775 012c 0830E0E3 		mvn	r3, #8
 12776              		.loc 1 5298 5
 12777 0130 B00100EA 		b	.L808
 12778              	.L814:
 12779              		.loc 1 5298 5 discriminator 11
 12780 0134 18301BE5 		ldr	r3, [fp, #-24]
 12781 0138 233CA0E1 		lsr	r3, r3, #24
 12782 013c 030053E3 		cmp	r3, #3
 12783 0140 0100000A 		beq	.L815
 12784              		.loc 1 5298 5 discriminator 12
 12785 0144 0130E0E3 		mvn	r3, #1
 12786              		.loc 1 5298 5
 12787 0148 AA0100EA 		b	.L808
 12788              	.L815:
 12789              		.loc 1 5298 5 discriminator 13
 12790 014c 34301BE5 		ldr	r3, [fp, #-52]
 12791 0150 7F2003E2 		and	r2, r3, #127
 12792 0154 08301BE5 		ldr	r3, [fp, #-8]
 12793 0158 143093E5 		ldr	r3, [r3, #20]
 12794 015c 030052E1 		cmp	r2, r3
 12795 0160 0100003A 		bcc	.L816
 12796              		.loc 1 5298 5 discriminator 14
 12797 0164 0230E0E3 		mvn	r3, #2
 12798              		.loc 1 5298 5
 12799 0168 A20100EA 		b	.L808
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 319


 12800              	.L816:
 12801              		.loc 1 5298 5 discriminator 15
 12802 016c 34301BE5 		ldr	r3, [fp, #-52]
 12803 0170 7F3003E2 		and	r3, r3, #127
 12804 0174 8322A0E1 		lsl	r2, r3, #5
 12805 0178 08301BE5 		ldr	r3, [fp, #-8]
 12806 017c 0C3093E5 		ldr	r3, [r3, #12]
 12807 0180 033082E0 		add	r3, r2, r3
 12808 0184 08300BE5 		str	r3, [fp, #-8]
 12809 0188 08301BE5 		ldr	r3, [fp, #-8]
 12810 018c 0300A0E1 		mov	r0, r3
 12811 0190 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12812 0194 18000BE5 		str	r0, [fp, #-24]
 12813              		.loc 1 5298 5 discriminator 1
 12814 0198 18301BE5 		ldr	r3, [fp, #-24]
 12815 019c FF3803E2 		and	r3, r3, #16711680
 12816 01a0 020853E3 		cmp	r3, #131072
 12817 01a4 0100001A 		bne	.L817
 12818              		.loc 1 5298 5 discriminator 16
 12819 01a8 0830E0E3 		mvn	r3, #8
 12820              		.loc 1 5298 5
 12821 01ac 910100EA 		b	.L808
 12822              	.L817:
 12823              		.loc 1 5298 5 discriminator 17
 12824 01b0 18301BE5 		ldr	r3, [fp, #-24]
 12825 01b4 233CA0E1 		lsr	r3, r3, #24
 12826 01b8 030053E3 		cmp	r3, #3
 12827 01bc 0100000A 		beq	.L812
 12828              		.loc 1 5298 5 discriminator 18
 12829 01c0 0130E0E3 		mvn	r3, #1
 12830              		.loc 1 5298 5
 12831 01c4 8B0100EA 		b	.L808
 12832              	.L812:
5299:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5300:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5301:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 12833              		.loc 1 5301 5 is_stmt 1
 12834 01c8 38301BE5 		ldr	r3, [fp, #-56]
 12835 01cc 803003E2 		and	r3, r3, #128
 12836 01d0 000053E3 		cmp	r3, #0
 12837 01d4 1C00001A 		bne	.L818
 12838              		.loc 1 5301 5 is_stmt 0 discriminator 1
 12839 01d8 30301BE5 		ldr	r3, [fp, #-48]
 12840 01dc 142093E5 		ldr	r2, [r3, #20]
 12841 01e0 38301BE5 		ldr	r3, [fp, #-56]
 12842 01e4 030052E1 		cmp	r2, r3
 12843 01e8 0100008A 		bhi	.L819
 12844              		.loc 1 5301 5 discriminator 3
 12845 01ec 0230E0E3 		mvn	r3, #2
 12846              		.loc 1 5301 5
 12847 01f0 800100EA 		b	.L808
 12848              	.L819:
 12849              		.loc 1 5301 5 discriminator 4
 12850 01f4 38301BE5 		ldr	r3, [fp, #-56]
 12851 01f8 8322A0E1 		lsl	r2, r3, #5
 12852 01fc 30301BE5 		ldr	r3, [fp, #-48]
 12853 0200 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 320


 12854 0204 033082E0 		add	r3, r2, r3
 12855 0208 10300BE5 		str	r3, [fp, #-16]
 12856 020c 10301BE5 		ldr	r3, [fp, #-16]
 12857 0210 0300A0E1 		mov	r0, r3
 12858 0214 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12859 0218 18000BE5 		str	r0, [fp, #-24]
 12860              		.loc 1 5301 5 discriminator 1
 12861 021c 18301BE5 		ldr	r3, [fp, #-24]
 12862 0220 FF3803E2 		and	r3, r3, #16711680
 12863 0224 020853E3 		cmp	r3, #131072
 12864 0228 0100001A 		bne	.L820
 12865              		.loc 1 5301 5 discriminator 5
 12866 022c 0830E0E3 		mvn	r3, #8
 12867              		.loc 1 5301 5
 12868 0230 700100EA 		b	.L808
 12869              	.L820:
 12870              		.loc 1 5301 5 discriminator 6
 12871 0234 18301BE5 		ldr	r3, [fp, #-24]
 12872 0238 233CA0E1 		lsr	r3, r3, #24
 12873 023c 020053E3 		cmp	r3, #2
 12874 0240 3F00000A 		beq	.L821
 12875              		.loc 1 5301 5 discriminator 7
 12876 0244 0130E0E3 		mvn	r3, #1
 12877              		.loc 1 5301 5
 12878 0248 6A0100EA 		b	.L808
 12879              	.L818:
 12880              		.loc 1 5301 5 discriminator 2
 12881 024c 38301BE5 		ldr	r3, [fp, #-56]
 12882 0250 2324A0E1 		lsr	r2, r3, #8
 12883 0254 30301BE5 		ldr	r3, [fp, #-48]
 12884 0258 143093E5 		ldr	r3, [r3, #20]
 12885 025c 030052E1 		cmp	r2, r3
 12886 0260 0100003A 		bcc	.L822
 12887              		.loc 1 5301 5 discriminator 8
 12888 0264 0230E0E3 		mvn	r3, #2
 12889              		.loc 1 5301 5
 12890 0268 620100EA 		b	.L808
 12891              	.L822:
 12892              		.loc 1 5301 5 discriminator 9
 12893 026c 38301BE5 		ldr	r3, [fp, #-56]
 12894 0270 2334A0E1 		lsr	r3, r3, #8
 12895 0274 8322A0E1 		lsl	r2, r3, #5
 12896 0278 30301BE5 		ldr	r3, [fp, #-48]
 12897 027c 0C3093E5 		ldr	r3, [r3, #12]
 12898 0280 033082E0 		add	r3, r2, r3
 12899 0284 10300BE5 		str	r3, [fp, #-16]
 12900 0288 10301BE5 		ldr	r3, [fp, #-16]
 12901 028c 0300A0E1 		mov	r0, r3
 12902 0290 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12903 0294 18000BE5 		str	r0, [fp, #-24]
 12904              		.loc 1 5301 5 discriminator 1
 12905 0298 18301BE5 		ldr	r3, [fp, #-24]
 12906 029c FF3803E2 		and	r3, r3, #16711680
 12907 02a0 020853E3 		cmp	r3, #131072
 12908 02a4 0100001A 		bne	.L823
 12909              		.loc 1 5301 5 discriminator 10
 12910 02a8 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 321


 12911              		.loc 1 5301 5
 12912 02ac 510100EA 		b	.L808
 12913              	.L823:
 12914              		.loc 1 5301 5 discriminator 11
 12915 02b0 18301BE5 		ldr	r3, [fp, #-24]
 12916 02b4 233CA0E1 		lsr	r3, r3, #24
 12917 02b8 030053E3 		cmp	r3, #3
 12918 02bc 0100000A 		beq	.L824
 12919              		.loc 1 5301 5 discriminator 12
 12920 02c0 0130E0E3 		mvn	r3, #1
 12921              		.loc 1 5301 5
 12922 02c4 4B0100EA 		b	.L808
 12923              	.L824:
 12924              		.loc 1 5301 5 discriminator 13
 12925 02c8 38301BE5 		ldr	r3, [fp, #-56]
 12926 02cc 7F2003E2 		and	r2, r3, #127
 12927 02d0 10301BE5 		ldr	r3, [fp, #-16]
 12928 02d4 143093E5 		ldr	r3, [r3, #20]
 12929 02d8 030052E1 		cmp	r2, r3
 12930 02dc 0100003A 		bcc	.L825
 12931              		.loc 1 5301 5 discriminator 14
 12932 02e0 0230E0E3 		mvn	r3, #2
 12933              		.loc 1 5301 5
 12934 02e4 430100EA 		b	.L808
 12935              	.L825:
 12936              		.loc 1 5301 5 discriminator 15
 12937 02e8 38301BE5 		ldr	r3, [fp, #-56]
 12938 02ec 7F3003E2 		and	r3, r3, #127
 12939 02f0 8322A0E1 		lsl	r2, r3, #5
 12940 02f4 10301BE5 		ldr	r3, [fp, #-16]
 12941 02f8 0C3093E5 		ldr	r3, [r3, #12]
 12942 02fc 033082E0 		add	r3, r2, r3
 12943 0300 10300BE5 		str	r3, [fp, #-16]
 12944 0304 10301BE5 		ldr	r3, [fp, #-16]
 12945 0308 0300A0E1 		mov	r0, r3
 12946 030c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12947 0310 18000BE5 		str	r0, [fp, #-24]
 12948              		.loc 1 5301 5 discriminator 1
 12949 0314 18301BE5 		ldr	r3, [fp, #-24]
 12950 0318 FF3803E2 		and	r3, r3, #16711680
 12951 031c 020853E3 		cmp	r3, #131072
 12952 0320 0100001A 		bne	.L826
 12953              		.loc 1 5301 5 discriminator 16
 12954 0324 0830E0E3 		mvn	r3, #8
 12955              		.loc 1 5301 5
 12956 0328 320100EA 		b	.L808
 12957              	.L826:
 12958              		.loc 1 5301 5 discriminator 17
 12959 032c 18301BE5 		ldr	r3, [fp, #-24]
 12960 0330 233CA0E1 		lsr	r3, r3, #24
 12961 0334 020053E3 		cmp	r3, #2
 12962 0338 0100000A 		beq	.L821
 12963              		.loc 1 5301 5 discriminator 18
 12964 033c 0130E0E3 		mvn	r3, #1
 12965              		.loc 1 5301 5
 12966 0340 2C0100EA 		b	.L808
 12967              	.L821:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 322


5302:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5303:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5304:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12968              		.loc 1 5304 5 is_stmt 1
 12969 0344 04309BE5 		ldr	r3, [fp, #4]
 12970 0348 803003E2 		and	r3, r3, #128
 12971 034c 000053E3 		cmp	r3, #0
 12972 0350 1C00001A 		bne	.L827
 12973              		.loc 1 5304 5 is_stmt 0 discriminator 1
 12974 0354 30301BE5 		ldr	r3, [fp, #-48]
 12975 0358 142093E5 		ldr	r2, [r3, #20]
 12976 035c 04309BE5 		ldr	r3, [fp, #4]
 12977 0360 030052E1 		cmp	r2, r3
 12978 0364 0100008A 		bhi	.L828
 12979              		.loc 1 5304 5 discriminator 3
 12980 0368 0230E0E3 		mvn	r3, #2
 12981              		.loc 1 5304 5
 12982 036c 210100EA 		b	.L808
 12983              	.L828:
 12984              		.loc 1 5304 5 discriminator 4
 12985 0370 04309BE5 		ldr	r3, [fp, #4]
 12986 0374 8322A0E1 		lsl	r2, r3, #5
 12987 0378 30301BE5 		ldr	r3, [fp, #-48]
 12988 037c 0C3093E5 		ldr	r3, [r3, #12]
 12989 0380 033082E0 		add	r3, r2, r3
 12990 0384 0C300BE5 		str	r3, [fp, #-12]
 12991 0388 0C301BE5 		ldr	r3, [fp, #-12]
 12992 038c 0300A0E1 		mov	r0, r3
 12993 0390 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12994 0394 18000BE5 		str	r0, [fp, #-24]
 12995              		.loc 1 5304 5 discriminator 1
 12996 0398 18301BE5 		ldr	r3, [fp, #-24]
 12997 039c FF3803E2 		and	r3, r3, #16711680
 12998 03a0 020853E3 		cmp	r3, #131072
 12999 03a4 0100001A 		bne	.L829
 13000              		.loc 1 5304 5 discriminator 5
 13001 03a8 0830E0E3 		mvn	r3, #8
 13002              		.loc 1 5304 5
 13003 03ac 110100EA 		b	.L808
 13004              	.L829:
 13005              		.loc 1 5304 5 discriminator 6
 13006 03b0 18301BE5 		ldr	r3, [fp, #-24]
 13007 03b4 233CA0E1 		lsr	r3, r3, #24
 13008 03b8 050053E3 		cmp	r3, #5
 13009 03bc 3F00000A 		beq	.L830
 13010              		.loc 1 5304 5 discriminator 7
 13011 03c0 0130E0E3 		mvn	r3, #1
 13012              		.loc 1 5304 5
 13013 03c4 0B0100EA 		b	.L808
 13014              	.L827:
 13015              		.loc 1 5304 5 discriminator 2
 13016 03c8 04309BE5 		ldr	r3, [fp, #4]
 13017 03cc 2324A0E1 		lsr	r2, r3, #8
 13018 03d0 30301BE5 		ldr	r3, [fp, #-48]
 13019 03d4 143093E5 		ldr	r3, [r3, #20]
 13020 03d8 030052E1 		cmp	r2, r3
 13021 03dc 0100003A 		bcc	.L831
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 323


 13022              		.loc 1 5304 5 discriminator 8
 13023 03e0 0230E0E3 		mvn	r3, #2
 13024              		.loc 1 5304 5
 13025 03e4 030100EA 		b	.L808
 13026              	.L831:
 13027              		.loc 1 5304 5 discriminator 9
 13028 03e8 04309BE5 		ldr	r3, [fp, #4]
 13029 03ec 2334A0E1 		lsr	r3, r3, #8
 13030 03f0 8322A0E1 		lsl	r2, r3, #5
 13031 03f4 30301BE5 		ldr	r3, [fp, #-48]
 13032 03f8 0C3093E5 		ldr	r3, [r3, #12]
 13033 03fc 033082E0 		add	r3, r2, r3
 13034 0400 0C300BE5 		str	r3, [fp, #-12]
 13035 0404 0C301BE5 		ldr	r3, [fp, #-12]
 13036 0408 0300A0E1 		mov	r0, r3
 13037 040c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13038 0410 18000BE5 		str	r0, [fp, #-24]
 13039              		.loc 1 5304 5 discriminator 1
 13040 0414 18301BE5 		ldr	r3, [fp, #-24]
 13041 0418 FF3803E2 		and	r3, r3, #16711680
 13042 041c 020853E3 		cmp	r3, #131072
 13043 0420 0100001A 		bne	.L832
 13044              		.loc 1 5304 5 discriminator 10
 13045 0424 0830E0E3 		mvn	r3, #8
 13046              		.loc 1 5304 5
 13047 0428 F20000EA 		b	.L808
 13048              	.L832:
 13049              		.loc 1 5304 5 discriminator 11
 13050 042c 18301BE5 		ldr	r3, [fp, #-24]
 13051 0430 233CA0E1 		lsr	r3, r3, #24
 13052 0434 030053E3 		cmp	r3, #3
 13053 0438 0100000A 		beq	.L833
 13054              		.loc 1 5304 5 discriminator 12
 13055 043c 0130E0E3 		mvn	r3, #1
 13056              		.loc 1 5304 5
 13057 0440 EC0000EA 		b	.L808
 13058              	.L833:
 13059              		.loc 1 5304 5 discriminator 13
 13060 0444 04309BE5 		ldr	r3, [fp, #4]
 13061 0448 7F2003E2 		and	r2, r3, #127
 13062 044c 0C301BE5 		ldr	r3, [fp, #-12]
 13063 0450 143093E5 		ldr	r3, [r3, #20]
 13064 0454 030052E1 		cmp	r2, r3
 13065 0458 0100003A 		bcc	.L834
 13066              		.loc 1 5304 5 discriminator 14
 13067 045c 0230E0E3 		mvn	r3, #2
 13068              		.loc 1 5304 5
 13069 0460 E40000EA 		b	.L808
 13070              	.L834:
 13071              		.loc 1 5304 5 discriminator 15
 13072 0464 04309BE5 		ldr	r3, [fp, #4]
 13073 0468 7F3003E2 		and	r3, r3, #127
 13074 046c 8322A0E1 		lsl	r2, r3, #5
 13075 0470 0C301BE5 		ldr	r3, [fp, #-12]
 13076 0474 0C3093E5 		ldr	r3, [r3, #12]
 13077 0478 033082E0 		add	r3, r2, r3
 13078 047c 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 324


 13079 0480 0C301BE5 		ldr	r3, [fp, #-12]
 13080 0484 0300A0E1 		mov	r0, r3
 13081 0488 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13082 048c 18000BE5 		str	r0, [fp, #-24]
 13083              		.loc 1 5304 5 discriminator 1
 13084 0490 18301BE5 		ldr	r3, [fp, #-24]
 13085 0494 FF3803E2 		and	r3, r3, #16711680
 13086 0498 020853E3 		cmp	r3, #131072
 13087 049c 0100001A 		bne	.L835
 13088              		.loc 1 5304 5 discriminator 16
 13089 04a0 0830E0E3 		mvn	r3, #8
 13090              		.loc 1 5304 5
 13091 04a4 D30000EA 		b	.L808
 13092              	.L835:
 13093              		.loc 1 5304 5 discriminator 17
 13094 04a8 18301BE5 		ldr	r3, [fp, #-24]
 13095 04ac 233CA0E1 		lsr	r3, r3, #24
 13096 04b0 050053E3 		cmp	r3, #5
 13097 04b4 0100000A 		beq	.L830
 13098              		.loc 1 5304 5 discriminator 18
 13099 04b8 0130E0E3 		mvn	r3, #1
 13100              		.loc 1 5304 5
 13101 04bc CD0000EA 		b	.L808
 13102              	.L830:
5305:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5306:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 3");
5307:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5308:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 13103              		.loc 1 5308 5 is_stmt 1
 13104 04c0 08301BE5 		ldr	r3, [fp, #-8]
 13105 04c4 083093E5 		ldr	r3, [r3, #8]
 13106 04c8 013003E2 		and	r3, r3, #1
 13107 04cc 000053E3 		cmp	r3, #0
 13108 04d0 0100001A 		bne	.L836
 13109              		.loc 1 5308 5 is_stmt 0 discriminator 1
 13110 04d4 0630E0E3 		mvn	r3, #6
 13111              		.loc 1 5308 5
 13112 04d8 C60000EA 		b	.L808
 13113              	.L836:
5309:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5310:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 13114              		.loc 1 5310 5 is_stmt 1
 13115 04dc 0C301BE5 		ldr	r3, [fp, #-12]
 13116 04e0 083093E5 		ldr	r3, [r3, #8]
 13117 04e4 023003E2 		and	r3, r3, #2
 13118 04e8 000053E3 		cmp	r3, #0
 13119 04ec 0100001A 		bne	.L837
 13120              		.loc 1 5310 5 is_stmt 0 discriminator 1
 13121 04f0 0630E0E3 		mvn	r3, #6
 13122              		.loc 1 5310 5
 13123 04f4 BF0000EA 		b	.L808
 13124              	.L837:
5311:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 5");
5312:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5313:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13125              		.loc 1 5313 7 is_stmt 1
 13126 04f8 14309BE5 		ldr	r3, [fp, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 325


 13127 04fc 000053E3 		cmp	r3, #0
 13128 0500 0200001A 		bne	.L838
5314:../../Source/Kernel/rme_kernel.c ****     {
5315:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5316:../../Source/Kernel/rme_kernel.c ****         
5317:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13129              		.loc 1 5317 13
 13130 0504 A030A0E3 		mov	r3, #160
 13131 0508 14300BE5 		str	r3, [fp, #-20]
 13132 050c 010000EA 		b	.L839
 13133              	.L838:
5318:../../Source/Kernel/rme_kernel.c ****     }
5319:../../Source/Kernel/rme_kernel.c ****     else
5320:../../Source/Kernel/rme_kernel.c ****     {
5321:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5322:../../Source/Kernel/rme_kernel.c ****         
5323:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5324:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5325:../../Source/Kernel/rme_kernel.c **** #else
5326:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13134              		.loc 1 5326 13
 13135 0510 5830A0E3 		mov	r3, #88
 13136 0514 14300BE5 		str	r3, [fp, #-20]
 13137              	.L839:
5327:../../Source/Kernel/rme_kernel.c **** #endif
5328:../../Source/Kernel/rme_kernel.c ****     }
5329:../../Source/Kernel/rme_kernel.c ****     
5330:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13138              		.loc 1 5330 5
 13139 0518 10301BE5 		ldr	r3, [fp, #-16]
 13140 051c 083093E5 		ldr	r3, [r3, #8]
 13141 0520 043003E2 		and	r3, r3, #4
 13142 0524 000053E3 		cmp	r3, #0
 13143 0528 0100001A 		bne	.L840
 13144              		.loc 1 5330 5 is_stmt 0 discriminator 1
 13145 052c 0630E0E3 		mvn	r3, #6
 13146              		.loc 1 5330 5
 13147 0530 B00000EA 		b	.L808
 13148              	.L840:
 13149              		.loc 1 5330 5 discriminator 2
 13150 0534 10301BE5 		ldr	r3, [fp, #-16]
 13151 0538 143093E5 		ldr	r3, [r3, #20]
 13152 053c 0C209BE5 		ldr	r2, [fp, #12]
 13153 0540 033082E0 		add	r3, r2, r3
 13154 0544 1C300BE5 		str	r3, [fp, #-28]
 13155 0548 1C201BE5 		ldr	r2, [fp, #-28]
 13156 054c 0C309BE5 		ldr	r3, [fp, #12]
 13157 0550 030052E1 		cmp	r2, r3
 13158 0554 0100002A 		bcs	.L841
 13159              		.loc 1 5330 5 discriminator 3
 13160 0558 0630E0E3 		mvn	r3, #6
 13161              		.loc 1 5330 5
 13162 055c A50000EA 		b	.L808
 13163              	.L841:
 13164              		.loc 1 5330 5 discriminator 4
 13165 0560 10301BE5 		ldr	r3, [fp, #-16]
 13166 0564 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 326


 13167 0568 1C201BE5 		ldr	r2, [fp, #-28]
 13168 056c 030052E1 		cmp	r2, r3
 13169 0570 0100002A 		bcs	.L842
 13170              		.loc 1 5330 5 discriminator 5
 13171 0574 0630E0E3 		mvn	r3, #6
 13172              		.loc 1 5330 5
 13173 0578 9E0000EA 		b	.L808
 13174              	.L842:
 13175              		.loc 1 5330 5 discriminator 6
 13176 057c 1C201BE5 		ldr	r2, [fp, #-28]
 13177 0580 14301BE5 		ldr	r3, [fp, #-20]
 13178 0584 033082E0 		add	r3, r2, r3
 13179 0588 1C201BE5 		ldr	r2, [fp, #-28]
 13180 058c 030052E1 		cmp	r2, r3
 13181 0590 0100009A 		bls	.L843
 13182              		.loc 1 5330 5 discriminator 7
 13183 0594 0630E0E3 		mvn	r3, #6
 13184              		.loc 1 5330 5
 13185 0598 960000EA 		b	.L808
 13186              	.L843:
 13187              		.loc 1 5330 5 discriminator 8
 13188 059c 10301BE5 		ldr	r3, [fp, #-16]
 13189 05a0 182093E5 		ldr	r2, [r3, #24]
 13190 05a4 1C101BE5 		ldr	r1, [fp, #-28]
 13191 05a8 14301BE5 		ldr	r3, [fp, #-20]
 13192 05ac 033081E0 		add	r3, r1, r3
 13193 05b0 013043E2 		sub	r3, r3, #1
 13194 05b4 030052E1 		cmp	r2, r3
 13195 05b8 0100002A 		bcs	.L844
 13196              		.loc 1 5330 5 discriminator 9
 13197 05bc 0630E0E3 		mvn	r3, #6
 13198              		.loc 1 5330 5
 13199 05c0 8C0000EA 		b	.L808
 13200              	.L844:
5331:../../Source/Kernel/rme_kernel.c ****     
5332:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5333:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13201              		.loc 1 5333 5 is_stmt 1
 13202 05c4 08301BE5 		ldr	r3, [fp, #-8]
 13203 05c8 142093E5 		ldr	r2, [r3, #20]
 13204 05cc 3C301BE5 		ldr	r3, [fp, #-60]
 13205 05d0 030052E1 		cmp	r2, r3
 13206 05d4 0100008A 		bhi	.L845
 13207              		.loc 1 5333 5 is_stmt 0 discriminator 1
 13208 05d8 0230E0E3 		mvn	r3, #2
 13209              		.loc 1 5333 5
 13210 05dc 850000EA 		b	.L808
 13211              	.L845:
 13212              		.loc 1 5333 5 discriminator 2
 13213 05e0 3C301BE5 		ldr	r3, [fp, #-60]
 13214 05e4 8322A0E1 		lsl	r2, r3, #5
 13215 05e8 08301BE5 		ldr	r3, [fp, #-8]
 13216 05ec 0C3093E5 		ldr	r3, [r3, #12]
 13217 05f0 033082E0 		add	r3, r2, r3
 13218 05f4 20300BE5 		str	r3, [fp, #-32]
5334:../../Source/Kernel/rme_kernel.c **** 
5335:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 327


5336:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13219              		.loc 1 5336 5 is_stmt 1
 13220 05f8 20301BE5 		ldr	r3, [fp, #-32]
 13221 05fc 0128A0E3 		mov	r2, #65536
 13222 0600 0010A0E3 		mov	r1, #0
 13223 0604 0300A0E1 		mov	r0, r3
 13224 0608 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13225 060c 0030A0E1 		mov	r3, r0
 13226              		.loc 1 5336 5 is_stmt 0 discriminator 1
 13227 0610 000053E3 		cmp	r3, #0
 13228 0614 0100001A 		bne	.L846
 13229 0618 0430E0E3 		mvn	r3, #4
 13230              		.loc 1 5336 5
 13231 061c 750000EA 		b	.L808
 13232              	.L846:
 13233              		.loc 1 5336 5 discriminator 2
 13234 0620 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13235 0624 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13236 0628 002093E5 		ldr	r2, [r3]
 13237 062c 20301BE5 		ldr	r3, [fp, #-32]
 13238 0630 102083E5 		str	r2, [r3, #16]
5337:../../Source/Kernel/rme_kernel.c ****      
5338:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5339:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13239              		.loc 1 5339 8 is_stmt 1
 13240 0634 14101BE5 		ldr	r1, [fp, #-20]
 13241 0638 1C001BE5 		ldr	r0, [fp, #-28]
 13242 063c FEFFFFEB 		bl	_RME_Kot_Mark
 13243 0640 0030A0E1 		mov	r3, r0
 13244              		.loc 1 5339 7 discriminator 1
 13245 0644 000053E3 		cmp	r3, #0
 13246 0648 0E0000AA 		bge	.L847
5340:../../Source/Kernel/rme_kernel.c ****     {
5341:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5342:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n_RME_Kot_Mark(Vaddr,Size)");
 13247              		.loc 1 5342 9
 13248 064c 000000E3 		movw	r0, #:lower16:.LC12
 13249 0650 000040E3 		movt	r0, #:upper16:.LC12
 13250 0654 FEFFFFEB 		bl	RME_Str_Print
5343:../../Source/Kernel/rme_kernel.c ****         RME_DBG_I(_RME_Kot_Mark(Vaddr,Size));
 13251              		.loc 1 5343 9
 13252 0658 14101BE5 		ldr	r1, [fp, #-20]
 13253 065c 1C001BE5 		ldr	r0, [fp, #-28]
 13254 0660 FEFFFFEB 		bl	_RME_Kot_Mark
 13255 0664 0030A0E1 		mov	r3, r0
 13256              		.loc 1 5343 9 is_stmt 0 discriminator 1
 13257 0668 0300A0E1 		mov	r0, r3
 13258 066c FEFFFFEB 		bl	RME_Int_Print
5344:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13259              		.loc 1 5344 9 is_stmt 1
 13260 0670 20301BE5 		ldr	r3, [fp, #-32]
 13261 0674 0010A0E3 		mov	r1, #0
 13262 0678 0300A0E1 		mov	r0, r3
 13263 067c FEFFFFEB 		bl	__RME_A7A_Write_Release
5345:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13264              		.loc 1 5345 16
 13265 0680 0330E0E3 		mvn	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 328


 13266 0684 5B0000EA 		b	.L808
 13267              	.L847:
5346:../../Source/Kernel/rme_kernel.c ****     }
5347:../../Source/Kernel/rme_kernel.c ****     else
5348:../../Source/Kernel/rme_kernel.c ****     {
5349:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5350:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5351:../../Source/Kernel/rme_kernel.c ****     }
5352:../../Source/Kernel/rme_kernel.c ****     
5353:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5354:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13268              		.loc 1 5354 11
 13269 0688 1C301BE5 		ldr	r3, [fp, #-28]
 13270 068c 24300BE5 		str	r3, [fp, #-36]
5355:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5356:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13271              		.loc 1 5356 22
 13272 0690 24301BE5 		ldr	r3, [fp, #-36]
 13273 0694 0020A0E3 		mov	r2, #0
 13274 0698 102083E5 		str	r2, [r3, #16]
5357:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 13275              		.loc 1 5357 24
 13276 069c 24301BE5 		ldr	r3, [fp, #-36]
 13277 06a0 0020A0E3 		mov	r2, #0
 13278 06a4 182083E5 		str	r2, [r3, #24]
5358:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13279              		.loc 1 5358 24
 13280 06a8 24301BE5 		ldr	r3, [fp, #-36]
 13281 06ac 0220A0E3 		mov	r2, #2
 13282 06b0 1C2083E5 		str	r2, [r3, #28]
5359:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13283              		.loc 1 5359 14
 13284 06b4 0C301BE5 		ldr	r3, [fp, #-12]
 13285 06b8 003093E5 		ldr	r3, [r3]
 13286 06bc 7330FFE6 		uxth	r3, r3
 13287 06c0 000053E3 		cmp	r3, #0
 13288 06c4 0200000A 		beq	.L848
 13289              		.loc 1 5359 14 is_stmt 0 discriminator 1
 13290 06c8 0C301BE5 		ldr	r3, [fp, #-12]
 13291 06cc 043093E5 		ldr	r3, [r3, #4]
 13292 06d0 000000EA 		b	.L849
 13293              	.L848:
 13294              		.loc 1 5359 14 discriminator 2
 13295 06d4 0C301BE5 		ldr	r3, [fp, #-12]
 13296              	.L849:
 13297              		.loc 1 5359 13 is_stmt 1 discriminator 4
 13298 06d8 28300BE5 		str	r3, [fp, #-40]
5360:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 13299              		.loc 1 5360 22
 13300 06dc 24301BE5 		ldr	r3, [fp, #-36]
 13301 06e0 28201BE5 		ldr	r2, [fp, #-40]
 13302 06e4 2C2083E5 		str	r2, [r3, #44]
5361:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13303              		.loc 1 5361 25
 13304 06e8 24301BE5 		ldr	r3, [fp, #-36]
 13305 06ec 0020A0E3 		mov	r2, #0
 13306 06f0 282083E5 		str	r2, [r3, #40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 329


5362:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13307              		.loc 1 5362 27
 13308 06f4 24301BE5 		ldr	r3, [fp, #-36]
 13309 06f8 08209BE5 		ldr	r2, [fp, #8]
 13310 06fc 242083E5 		str	r2, [r3, #36]
5363:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13311              		.loc 1 5363 28
 13312 0700 24301BE5 		ldr	r3, [fp, #-36]
 13313 0704 0020A0E3 		mov	r2, #0
 13314 0708 302083E5 		str	r2, [r3, #48]
5364:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13315              		.loc 1 5364 28
 13316 070c 24301BE5 		ldr	r3, [fp, #-36]
 13317 0710 0020A0E3 		mov	r2, #0
 13318 0714 382083E5 		str	r2, [r3, #56]
5365:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5366:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13319              		.loc 1 5366 24
 13320 0718 24301BE5 		ldr	r3, [fp, #-36]
 13321 071c 0020E0E3 		mvn	r2, #0
 13322 0720 142083E5 		str	r2, [r3, #20]
5367:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5368:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13323              		.loc 1 5368 5
 13324 0724 24301BE5 		ldr	r3, [fp, #-36]
 13325 0728 083083E2 		add	r3, r3, #8
 13326 072c 0300A0E1 		mov	r0, r3
 13327 0730 FEFFFFEB 		bl	_RME_List_Crt
5369:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13328              		.loc 1 5369 5
 13329 0734 24301BE5 		ldr	r3, [fp, #-36]
 13330 0738 3C3083E2 		add	r3, r3, #60
 13331 073c 0300A0E1 		mov	r0, r3
 13332 0740 FEFFFFEB 		bl	_RME_List_Crt
5370:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5371:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13333              		.loc 1 5371 7
 13334 0744 14309BE5 		ldr	r3, [fp, #20]
 13335 0748 000053E3 		cmp	r3, #0
 13336 074c 0800001A 		bne	.L850
5372:../../Source/Kernel/rme_kernel.c ****     {
5373:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5374:../../Source/Kernel/rme_kernel.c ****         
5375:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13337              		.loc 1 5375 29
 13338 0750 24301BE5 		ldr	r3, [fp, #-36]
 13339 0754 10209BE5 		ldr	r2, [fp, #16]
 13340 0758 442083E5 		str	r2, [r3, #68]
5376:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13341              		.loc 1 5376 52
 13342 075c 1C301BE5 		ldr	r3, [fp, #-28]
 13343 0760 583083E2 		add	r3, r3, #88
 13344              		.loc 1 5376 25
 13345 0764 0320A0E1 		mov	r2, r3
 13346              		.loc 1 5376 24
 13347 0768 24301BE5 		ldr	r3, [fp, #-36]
 13348 076c 482083E5 		str	r2, [r3, #72]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 330


 13349 0770 060000EA 		b	.L851
 13350              	.L850:
5377:../../Source/Kernel/rme_kernel.c ****     }
5378:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5379:../../Source/Kernel/rme_kernel.c ****     else
5380:../../Source/Kernel/rme_kernel.c ****     {
5381:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5382:../../Source/Kernel/rme_kernel.c ****         
5383:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13351              		.loc 1 5383 34
 13352 0774 10309BE5 		ldr	r3, [fp, #16]
 13353 0778 022183E3 		orr	r2, r3, #-2147483648
 13354              		.loc 1 5383 29
 13355 077c 24301BE5 		ldr	r3, [fp, #-36]
 13356 0780 442083E5 		str	r2, [r3, #68]
5384:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13357              		.loc 1 5384 24
 13358 0784 24301BE5 		ldr	r3, [fp, #-36]
 13359 0788 0222A0E3 		mov	r2, #536870912
 13360 078c 482083E5 		str	r2, [r3, #72]
 13361              	.L851:
5385:../../Source/Kernel/rme_kernel.c ****     }
5386:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5387:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13362              		.loc 1 5387 5
 13363 0790 24301BE5 		ldr	r3, [fp, #-36]
 13364 0794 4C3083E2 		add	r3, r3, #76
 13365 0798 0300A0E1 		mov	r0, r3
 13366 079c FEFFFFEB 		bl	_RME_List_Crt
5388:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13367              		.loc 1 5388 29
 13368 07a0 24301BE5 		ldr	r3, [fp, #-36]
 13369 07a4 0020A0E3 		mov	r2, #0
 13370 07a8 542083E5 		str	r2, [r3, #84]
5389:../../Source/Kernel/rme_kernel.c **** 
5390:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5391:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13371              		.loc 1 5391 27
 13372 07ac 20301BE5 		ldr	r3, [fp, #-32]
 13373 07b0 0020A0E3 		mov	r2, #0
 13374 07b4 042083E5 		str	r2, [r3, #4]
5392:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13375              		.loc 1 5392 25
 13376 07b8 20301BE5 		ldr	r3, [fp, #-32]
 13377 07bc 1C201BE5 		ldr	r2, [fp, #-28]
 13378 07c0 0C2083E5 		str	r2, [r3, #12]
5393:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13379              		.loc 1 5393 23
 13380 07c4 20301BE5 		ldr	r3, [fp, #-32]
 13381 07c8 FF2100E3 		movw	r2, #511
 13382 07cc 082083E5 		str	r2, [r3, #8]
5394:../../Source/Kernel/rme_kernel.c **** 
5395:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5396:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13383              		.loc 1 5396 5
 13384 07d0 28301BE5 		ldr	r3, [fp, #-40]
 13385 07d4 043083E2 		add	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 331


 13386 07d8 0110A0E3 		mov	r1, #1
 13387 07dc 0300A0E1 		mov	r0, r3
 13388 07e0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5397:../../Source/Kernel/rme_kernel.c ****     
5398:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5399:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13389              		.loc 1 5399 5
 13390 07e4 20301BE5 		ldr	r3, [fp, #-32]
 13391 07e8 0614A0E3 		mov	r1, #100663296
 13392 07ec 0300A0E1 		mov	r0, r3
 13393 07f0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5400:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5401:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5402:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5403:../../Source/Kernel/rme_kernel.c **** 
5404:../../Source/Kernel/rme_kernel.c ****     return 0;
 13394              		.loc 1 5404 12
 13395 07f4 0030A0E3 		mov	r3, #0
 13396              	.L808:
5405:../../Source/Kernel/rme_kernel.c **** }
 13397              		.loc 1 5405 1
 13398 07f8 0300A0E1 		mov	r0, r3
 13399 07fc 04D04BE2 		sub	sp, fp, #4
 13400              		.cfi_def_cfa 13, 8
 13401              		@ sp needed
 13402 0800 0088BDE8 		pop	{fp, pc}
 13403              		.cfi_endproc
 13404              	.LFE56:
 13406              		.section	.text._RME_Thd_Del,"ax",%progbits
 13407              		.align	2
 13408              		.syntax unified
 13409              		.arm
 13411              	_RME_Thd_Del:
 13412              	.LFB57:
5406:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5407:../../Source/Kernel/rme_kernel.c **** 
5408:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5409:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5410:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5411:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5412:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5413:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5414:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5415:../../Source/Kernel/rme_kernel.c **** Output      : None.
5416:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5417:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5418:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5419:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5420:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5421:../../Source/Kernel/rme_kernel.c **** {
 13413              		.loc 1 5421 1
 13414              		.cfi_startproc
 13415              		@ args = 0, pretend = 0, frame = 40
 13416              		@ frame_needed = 1, uses_anonymous_args = 0
 13417 0000 00482DE9 		push	{fp, lr}
 13418              		.cfi_def_cfa_offset 8
 13419              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 332


 13420              		.cfi_offset 14, -4
 13421 0004 04B08DE2 		add	fp, sp, #4
 13422              		.cfi_def_cfa 11, 4
 13423 0008 28D04DE2 		sub	sp, sp, #40
 13424 000c 20000BE5 		str	r0, [fp, #-32]
 13425 0010 24100BE5 		str	r1, [fp, #-36]
 13426 0014 28200BE5 		str	r2, [fp, #-40]
5422:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5423:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5424:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5425:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5426:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5427:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5428:../../Source/Kernel/rme_kernel.c ****     
5429:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5430:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13427              		.loc 1 5430 5
 13428 0018 24301BE5 		ldr	r3, [fp, #-36]
 13429 001c 803003E2 		and	r3, r3, #128
 13430 0020 000053E3 		cmp	r3, #0
 13431 0024 1C00001A 		bne	.L853
 13432              		.loc 1 5430 5 is_stmt 0 discriminator 1
 13433 0028 20301BE5 		ldr	r3, [fp, #-32]
 13434 002c 142093E5 		ldr	r2, [r3, #20]
 13435 0030 24301BE5 		ldr	r3, [fp, #-36]
 13436 0034 030052E1 		cmp	r2, r3
 13437 0038 0100008A 		bhi	.L854
 13438              		.loc 1 5430 5 discriminator 3
 13439 003c 0230E0E3 		mvn	r3, #2
 13440              		.loc 1 5430 5
 13441 0040 0A0100EA 		b	.L855
 13442              	.L854:
 13443              		.loc 1 5430 5 discriminator 4
 13444 0044 24301BE5 		ldr	r3, [fp, #-36]
 13445 0048 8322A0E1 		lsl	r2, r3, #5
 13446 004c 20301BE5 		ldr	r3, [fp, #-32]
 13447 0050 0C3093E5 		ldr	r3, [r3, #12]
 13448 0054 033082E0 		add	r3, r2, r3
 13449 0058 08300BE5 		str	r3, [fp, #-8]
 13450 005c 08301BE5 		ldr	r3, [fp, #-8]
 13451 0060 0300A0E1 		mov	r0, r3
 13452 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13453 0068 0C000BE5 		str	r0, [fp, #-12]
 13454              		.loc 1 5430 5 discriminator 1
 13455 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13456 0070 FF3803E2 		and	r3, r3, #16711680
 13457 0074 020853E3 		cmp	r3, #131072
 13458 0078 0100001A 		bne	.L856
 13459              		.loc 1 5430 5 discriminator 5
 13460 007c 0830E0E3 		mvn	r3, #8
 13461              		.loc 1 5430 5
 13462 0080 FA0000EA 		b	.L855
 13463              	.L856:
 13464              		.loc 1 5430 5 discriminator 6
 13465 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13466 0088 233CA0E1 		lsr	r3, r3, #24
 13467 008c 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 333


 13468 0090 3F00000A 		beq	.L857
 13469              		.loc 1 5430 5 discriminator 7
 13470 0094 0130E0E3 		mvn	r3, #1
 13471              		.loc 1 5430 5
 13472 0098 F40000EA 		b	.L855
 13473              	.L853:
 13474              		.loc 1 5430 5 discriminator 2
 13475 009c 24301BE5 		ldr	r3, [fp, #-36]
 13476 00a0 2324A0E1 		lsr	r2, r3, #8
 13477 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13478 00a8 143093E5 		ldr	r3, [r3, #20]
 13479 00ac 030052E1 		cmp	r2, r3
 13480 00b0 0100003A 		bcc	.L858
 13481              		.loc 1 5430 5 discriminator 8
 13482 00b4 0230E0E3 		mvn	r3, #2
 13483              		.loc 1 5430 5
 13484 00b8 EC0000EA 		b	.L855
 13485              	.L858:
 13486              		.loc 1 5430 5 discriminator 9
 13487 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13488 00c0 2334A0E1 		lsr	r3, r3, #8
 13489 00c4 8322A0E1 		lsl	r2, r3, #5
 13490 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13491 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13492 00d0 033082E0 		add	r3, r2, r3
 13493 00d4 08300BE5 		str	r3, [fp, #-8]
 13494 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13495 00dc 0300A0E1 		mov	r0, r3
 13496 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13497 00e4 0C000BE5 		str	r0, [fp, #-12]
 13498              		.loc 1 5430 5 discriminator 1
 13499 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13500 00ec FF3803E2 		and	r3, r3, #16711680
 13501 00f0 020853E3 		cmp	r3, #131072
 13502 00f4 0100001A 		bne	.L859
 13503              		.loc 1 5430 5 discriminator 10
 13504 00f8 0830E0E3 		mvn	r3, #8
 13505              		.loc 1 5430 5
 13506 00fc DB0000EA 		b	.L855
 13507              	.L859:
 13508              		.loc 1 5430 5 discriminator 11
 13509 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13510 0104 233CA0E1 		lsr	r3, r3, #24
 13511 0108 030053E3 		cmp	r3, #3
 13512 010c 0100000A 		beq	.L860
 13513              		.loc 1 5430 5 discriminator 12
 13514 0110 0130E0E3 		mvn	r3, #1
 13515              		.loc 1 5430 5
 13516 0114 D50000EA 		b	.L855
 13517              	.L860:
 13518              		.loc 1 5430 5 discriminator 13
 13519 0118 24301BE5 		ldr	r3, [fp, #-36]
 13520 011c 7F2003E2 		and	r2, r3, #127
 13521 0120 08301BE5 		ldr	r3, [fp, #-8]
 13522 0124 143093E5 		ldr	r3, [r3, #20]
 13523 0128 030052E1 		cmp	r2, r3
 13524 012c 0100003A 		bcc	.L861
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 334


 13525              		.loc 1 5430 5 discriminator 14
 13526 0130 0230E0E3 		mvn	r3, #2
 13527              		.loc 1 5430 5
 13528 0134 CD0000EA 		b	.L855
 13529              	.L861:
 13530              		.loc 1 5430 5 discriminator 15
 13531 0138 24301BE5 		ldr	r3, [fp, #-36]
 13532 013c 7F3003E2 		and	r3, r3, #127
 13533 0140 8322A0E1 		lsl	r2, r3, #5
 13534 0144 08301BE5 		ldr	r3, [fp, #-8]
 13535 0148 0C3093E5 		ldr	r3, [r3, #12]
 13536 014c 033082E0 		add	r3, r2, r3
 13537 0150 08300BE5 		str	r3, [fp, #-8]
 13538 0154 08301BE5 		ldr	r3, [fp, #-8]
 13539 0158 0300A0E1 		mov	r0, r3
 13540 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13541 0160 0C000BE5 		str	r0, [fp, #-12]
 13542              		.loc 1 5430 5 discriminator 1
 13543 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13544 0168 FF3803E2 		and	r3, r3, #16711680
 13545 016c 020853E3 		cmp	r3, #131072
 13546 0170 0100001A 		bne	.L862
 13547              		.loc 1 5430 5 discriminator 16
 13548 0174 0830E0E3 		mvn	r3, #8
 13549              		.loc 1 5430 5
 13550 0178 BC0000EA 		b	.L855
 13551              	.L862:
 13552              		.loc 1 5430 5 discriminator 17
 13553 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13554 0180 233CA0E1 		lsr	r3, r3, #24
 13555 0184 030053E3 		cmp	r3, #3
 13556 0188 0100000A 		beq	.L857
 13557              		.loc 1 5430 5 discriminator 18
 13558 018c 0130E0E3 		mvn	r3, #1
 13559              		.loc 1 5430 5
 13560 0190 B60000EA 		b	.L855
 13561              	.L857:
5431:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5432:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5433:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 13562              		.loc 1 5433 5 is_stmt 1
 13563 0194 08301BE5 		ldr	r3, [fp, #-8]
 13564 0198 083093E5 		ldr	r3, [r3, #8]
 13565 019c 023003E2 		and	r3, r3, #2
 13566 01a0 000053E3 		cmp	r3, #0
 13567 01a4 0100001A 		bne	.L863
 13568              		.loc 1 5433 5 is_stmt 0 discriminator 1
 13569 01a8 0630E0E3 		mvn	r3, #6
 13570              		.loc 1 5433 5
 13571 01ac AF0000EA 		b	.L855
 13572              	.L863:
5434:../../Source/Kernel/rme_kernel.c ****     
5435:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5436:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13573              		.loc 1 5436 5 is_stmt 1
 13574 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13575 01b4 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 335


 13576 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13577 01bc 030052E1 		cmp	r2, r3
 13578 01c0 0100008A 		bhi	.L864
 13579              		.loc 1 5436 5 is_stmt 0 discriminator 1
 13580 01c4 0230E0E3 		mvn	r3, #2
 13581              		.loc 1 5436 5
 13582 01c8 A80000EA 		b	.L855
 13583              	.L864:
 13584              		.loc 1 5436 5 discriminator 2
 13585 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13586 01d0 8322A0E1 		lsl	r2, r3, #5
 13587 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13588 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13589 01dc 033082E0 		add	r3, r2, r3
 13590 01e0 10300BE5 		str	r3, [fp, #-16]
5437:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5438:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13591              		.loc 1 5438 5 is_stmt 1
 13592 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13593 01e8 0300A0E1 		mov	r0, r3
 13594 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13595 01f0 0C000BE5 		str	r0, [fp, #-12]
 13596              		.loc 1 5438 5 is_stmt 0 discriminator 1
 13597 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13598 01f8 FF3803E2 		and	r3, r3, #16711680
 13599 01fc 020853E3 		cmp	r3, #131072
 13600 0200 0100000A 		beq	.L865
 13601 0204 0830E0E3 		mvn	r3, #8
 13602              		.loc 1 5438 5
 13603 0208 980000EA 		b	.L855
 13604              	.L865:
 13605              		.loc 1 5438 5 discriminator 2
 13606 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13607 0210 233CA0E1 		lsr	r3, r3, #24
 13608 0214 060053E3 		cmp	r3, #6
 13609 0218 0100000A 		beq	.L866
 13610              		.loc 1 5438 5 discriminator 3
 13611 021c 0130E0E3 		mvn	r3, #1
 13612              		.loc 1 5438 5
 13613 0220 920000EA 		b	.L855
 13614              	.L866:
 13615              		.loc 1 5438 5 discriminator 4
 13616 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13617 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13618 022c 002093E5 		ldr	r2, [r3]
 13619 0230 10301BE5 		ldr	r3, [fp, #-16]
 13620 0234 103093E5 		ldr	r3, [r3, #16]
 13621 0238 0310A0E1 		mov	r1, r3
 13622 023c 0200A0E1 		mov	r0, r2
 13623 0240 FEFFFFEB 		bl	_RME_Diff
 13624 0244 0030A0E1 		mov	r3, r0
 13625              		.loc 1 5438 5 discriminator 1
 13626 0248 0A0053E3 		cmp	r3, #10
 13627 024c 0100008A 		bhi	.L867
 13628              		.loc 1 5438 5 discriminator 5
 13629 0250 0730E0E3 		mvn	r3, #7
 13630              		.loc 1 5438 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 336


 13631 0254 850000EA 		b	.L855
 13632              	.L867:
 13633              		.loc 1 5438 5 discriminator 6
 13634 0258 10301BE5 		ldr	r3, [fp, #-16]
 13635 025c 043093E5 		ldr	r3, [r3, #4]
 13636 0260 000053E3 		cmp	r3, #0
 13637 0264 0B00000A 		beq	.L868
 13638              		.loc 1 5438 5 discriminator 7
 13639 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13640 026c 7330FFE6 		uxth	r3, r3
 13641 0270 000053E3 		cmp	r3, #0
 13642 0274 0500001A 		bne	.L869
 13643              		.loc 1 5438 5 discriminator 9
 13644 0278 10001BE5 		ldr	r0, [fp, #-16]
 13645 027c 0C301BE5 		ldr	r3, [fp, #-12]
 13646 0280 FF38C3E3 		bic	r3, r3, #16711680
 13647 0284 0320A0E1 		mov	r2, r3
 13648 0288 0C101BE5 		ldr	r1, [fp, #-12]
 13649 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13650              	.L869:
 13651              		.loc 1 5438 5 discriminator 11
 13652 0290 0530E0E3 		mvn	r3, #5
 13653              		.loc 1 5438 5
 13654 0294 750000EA 		b	.L855
 13655              	.L868:
 13656              		.loc 1 5438 5 discriminator 8
 13657 0298 0C301BE5 		ldr	r3, [fp, #-12]
 13658 029c 7330FFE6 		uxth	r3, r3
 13659 02a0 000053E3 		cmp	r3, #0
 13660 02a4 0800000A 		beq	.L870
 13661              		.loc 1 5438 5 discriminator 12
 13662 02a8 003000E3 		movw	r3, #:lower16:.LC6
 13663 02ac 003040E3 		movt	r3, #:upper16:.LC6
 13664 02b0 002000E3 		movw	r2, #:lower16:.LC7
 13665 02b4 002040E3 		movt	r2, #:upper16:.LC7
 13666 02b8 3E1501E3 		movw	r1, #5438
 13667 02bc 000000E3 		movw	r0, #:lower16:.LC8
 13668 02c0 000040E3 		movt	r0, #:upper16:.LC8
 13669 02c4 FEFFFFEB 		bl	RME_Log
 13670              	.L871:
 13671              		.loc 1 5438 5
 13672 02c8 FEFFFFEA 		b	.L871
 13673              	.L870:
5439:../../Source/Kernel/rme_kernel.c ****     
5440:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5441:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13674              		.loc 1 5441 12 is_stmt 1
 13675 02cc 10301BE5 		ldr	r3, [fp, #-16]
 13676 02d0 0C3093E5 		ldr	r3, [r3, #12]
 13677              		.loc 1 5441 11
 13678 02d4 14300BE5 		str	r3, [fp, #-20]
5442:../../Source/Kernel/rme_kernel.c ****     
5443:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5444:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13679              		.loc 1 5444 21
 13680 02d8 14301BE5 		ldr	r3, [fp, #-20]
 13681 02dc 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 337


 13682              		.loc 1 5444 7
 13683 02e0 010073E3 		cmn	r3, #1
 13684 02e4 0700000A 		beq	.L872
5445:../../Source/Kernel/rme_kernel.c ****     {
5446:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5447:../../Source/Kernel/rme_kernel.c **** 
5448:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13685              		.loc 1 5448 9
 13686 02e8 10001BE5 		ldr	r0, [fp, #-16]
 13687 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 13688 02f0 FF38C3E3 		bic	r3, r3, #16711680
 13689 02f4 0320A0E1 		mov	r2, r3
 13690 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 13691 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
5449:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13692              		.loc 1 5449 16
 13693 0300 CB30E0E3 		mvn	r3, #203
 13694 0304 590000EA 		b	.L855
 13695              	.L872:
5450:../../Source/Kernel/rme_kernel.c ****     }
5451:../../Source/Kernel/rme_kernel.c ****     else
5452:../../Source/Kernel/rme_kernel.c ****     {
5453:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5454:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5455:../../Source/Kernel/rme_kernel.c ****     }
5456:../../Source/Kernel/rme_kernel.c ****     
5457:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5458:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13696              		.loc 1 5458 5
 13697 0308 10301BE5 		ldr	r3, [fp, #-16]
 13698 030c 0020A0E3 		mov	r2, #0
 13699 0310 0C101BE5 		ldr	r1, [fp, #-12]
 13700 0314 0300A0E1 		mov	r0, r3
 13701 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13702 031c 0030A0E1 		mov	r3, r0
 13703              		.loc 1 5458 5 is_stmt 0 discriminator 1
 13704 0320 000053E3 		cmp	r3, #0
 13705 0324 1300001A 		bne	.L874
 13706 0328 0030E0E3 		mvn	r3, #0
 13707              		.loc 1 5458 5
 13708 032c 4F0000EA 		b	.L855
 13709              	.L875:
5459:../../Source/Kernel/rme_kernel.c ****     
5460:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5461:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5462:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5463:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5464:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5465:../../Source/Kernel/rme_kernel.c ****     {
5466:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13710              		.loc 1 5466 19 is_stmt 1
 13711 0330 14301BE5 		ldr	r3, [fp, #-20]
 13712 0334 4C3093E5 		ldr	r3, [r3, #76]
 13713 0338 18300BE5 		str	r3, [fp, #-24]
5467:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13714              		.loc 1 5467 9
 13715 033c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 338


 13716 0340 042093E5 		ldr	r2, [r3, #4]
 13717 0344 18301BE5 		ldr	r3, [fp, #-24]
 13718 0348 003093E5 		ldr	r3, [r3]
 13719 034c 0310A0E1 		mov	r1, r3
 13720 0350 0200A0E1 		mov	r0, r2
 13721 0354 FEFFFFEB 		bl	_RME_List_Del
5468:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13722              		.loc 1 5468 28
 13723 0358 18301BE5 		ldr	r3, [fp, #-24]
 13724 035c 0020A0E3 		mov	r2, #0
 13725 0360 0C2083E5 		str	r2, [r3, #12]
5469:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13726              		.loc 1 5469 20
 13727 0364 14301BE5 		ldr	r3, [fp, #-20]
 13728 0368 543093E5 		ldr	r3, [r3, #84]
 13729              		.loc 1 5469 33
 13730 036c 012043E2 		sub	r2, r3, #1
 13731 0370 14301BE5 		ldr	r3, [fp, #-20]
 13732 0374 542083E5 		str	r2, [r3, #84]
 13733              	.L874:
5464:../../Source/Kernel/rme_kernel.c ****     {
 13734              		.loc 1 5464 29
 13735 0378 14301BE5 		ldr	r3, [fp, #-20]
 13736 037c 4C2093E5 		ldr	r2, [r3, #76]
5464:../../Source/Kernel/rme_kernel.c ****     {
 13737              		.loc 1 5464 36
 13738 0380 14301BE5 		ldr	r3, [fp, #-20]
 13739 0384 4C3083E2 		add	r3, r3, #76
5464:../../Source/Kernel/rme_kernel.c ****     {
 13740              		.loc 1 5464 34
 13741 0388 030052E1 		cmp	r2, r3
 13742 038c E7FFFF1A 		bne	.L875
5470:../../Source/Kernel/rme_kernel.c ****     }
5471:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13743              		.loc 1 5471 5
 13744 0390 14301BE5 		ldr	r3, [fp, #-20]
 13745 0394 543093E5 		ldr	r3, [r3, #84]
 13746 0398 000053E3 		cmp	r3, #0
 13747 039c 0800000A 		beq	.L876
 13748              		.loc 1 5471 5 is_stmt 0 discriminator 1
 13749 03a0 003000E3 		movw	r3, #:lower16:.LC6
 13750 03a4 003040E3 		movt	r3, #:upper16:.LC6
 13751 03a8 002000E3 		movw	r2, #:lower16:.LC7
 13752 03ac 002040E3 		movt	r2, #:upper16:.LC7
 13753 03b0 5F1501E3 		movw	r1, #5471
 13754 03b4 000000E3 		movw	r0, #:lower16:.LC8
 13755 03b8 000040E3 		movt	r0, #:upper16:.LC8
 13756 03bc FEFFFFEB 		bl	RME_Log
 13757              	.L877:
 13758              		.loc 1 5471 5
 13759 03c0 FEFFFFEA 		b	.L877
 13760              	.L876:
5472:../../Source/Kernel/rme_kernel.c ****     
5473:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5474:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13761              		.loc 1 5474 5 is_stmt 1
 13762 03c4 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 339


 13763 03c8 2C3093E5 		ldr	r3, [r3, #44]
 13764 03cc 043083E2 		add	r3, r3, #4
 13765 03d0 0010E0E3 		mvn	r1, #0
 13766 03d4 0300A0E1 		mov	r0, r3
 13767 03d8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5475:../../Source/Kernel/rme_kernel.c ****     
5476:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5477:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13768              		.loc 1 5477 20
 13769 03dc 14301BE5 		ldr	r3, [fp, #-20]
 13770 03e0 443093E5 		ldr	r3, [r3, #68]
 13771              		.loc 1 5477 7
 13772 03e4 000053E3 		cmp	r3, #0
 13773 03e8 0F0000BA 		blt	.L878
5478:../../Source/Kernel/rme_kernel.c ****     {
5479:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5480:../../Source/Kernel/rme_kernel.c **** 
5481:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13774              		.loc 1 5481 9
 13775 03ec 14301BE5 		ldr	r3, [fp, #-20]
 13776 03f0 A010A0E3 		mov	r1, #160
 13777 03f4 0300A0E1 		mov	r0, r3
 13778 03f8 FEFFFFEB 		bl	_RME_Kot_Erase
 13779 03fc 0030A0E1 		mov	r3, r0
 13780              		.loc 1 5481 9 is_stmt 0 discriminator 1
 13781 0400 000053E3 		cmp	r3, #0
 13782 0404 1800000A 		beq	.L879
 13783 0408 003000E3 		movw	r3, #:lower16:.LC6
 13784 040c 003040E3 		movt	r3, #:upper16:.LC6
 13785 0410 002000E3 		movw	r2, #:lower16:.LC7
 13786 0414 002040E3 		movt	r2, #:upper16:.LC7
 13787 0418 691501E3 		movw	r1, #5481
 13788 041c 000000E3 		movw	r0, #:lower16:.LC8
 13789 0420 000040E3 		movt	r0, #:upper16:.LC8
 13790 0424 FEFFFFEB 		bl	RME_Log
 13791              	.L880:
 13792              		.loc 1 5481 9
 13793 0428 FEFFFFEA 		b	.L880
 13794              	.L878:
5482:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5483:../../Source/Kernel/rme_kernel.c ****     }
5484:../../Source/Kernel/rme_kernel.c ****     else
5485:../../Source/Kernel/rme_kernel.c ****     {
5486:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5487:../../Source/Kernel/rme_kernel.c **** 
5488:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13795              		.loc 1 5488 9 is_stmt 1
 13796 042c 14301BE5 		ldr	r3, [fp, #-20]
 13797 0430 5810A0E3 		mov	r1, #88
 13798 0434 0300A0E1 		mov	r0, r3
 13799 0438 FEFFFFEB 		bl	_RME_Kot_Erase
 13800 043c 0030A0E1 		mov	r3, r0
 13801              		.loc 1 5488 9 is_stmt 0 discriminator 1
 13802 0440 000053E3 		cmp	r3, #0
 13803 0444 0800000A 		beq	.L879
 13804 0448 003000E3 		movw	r3, #:lower16:.LC6
 13805 044c 003040E3 		movt	r3, #:upper16:.LC6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 340


 13806 0450 002000E3 		movw	r2, #:lower16:.LC7
 13807 0454 002040E3 		movt	r2, #:upper16:.LC7
 13808 0458 701501E3 		movw	r1, #5488
 13809 045c 000000E3 		movw	r0, #:lower16:.LC8
 13810 0460 000040E3 		movt	r0, #:upper16:.LC8
 13811 0464 FEFFFFEB 		bl	RME_Log
 13812              	.L881:
 13813              		.loc 1 5488 9
 13814 0468 FEFFFFEA 		b	.L881
 13815              	.L879:
5489:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5490:../../Source/Kernel/rme_kernel.c ****     }
5491:../../Source/Kernel/rme_kernel.c ****     
5492:../../Source/Kernel/rme_kernel.c ****     return 0;
 13816              		.loc 1 5492 12 is_stmt 1
 13817 046c 0030A0E3 		mov	r3, #0
 13818              	.L855:
5493:../../Source/Kernel/rme_kernel.c **** }
 13819              		.loc 1 5493 1
 13820 0470 0300A0E1 		mov	r0, r3
 13821 0474 04D04BE2 		sub	sp, fp, #4
 13822              		.cfi_def_cfa 13, 8
 13823              		@ sp needed
 13824 0478 0088BDE8 		pop	{fp, pc}
 13825              		.cfi_endproc
 13826              	.LFE57:
 13828              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 13829              		.align	2
 13830              		.syntax unified
 13831              		.arm
 13833              	_RME_Thd_Sched_Bind:
 13834              	.LFB58:
5494:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5495:../../Source/Kernel/rme_kernel.c **** 
5496:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5497:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5498:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5499:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5500:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5501:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5502:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5503:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5504:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5505:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5506:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5507:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5508:../../Source/Kernel/rme_kernel.c ****               priority.
5509:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5510:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5511:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5512:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5513:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5514:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5515:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5516:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5517:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5518:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 341


5519:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5520:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5521:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5522:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5523:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5524:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5525:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5526:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5527:../../Source/Kernel/rme_kernel.c **** Output      : None.
5528:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5529:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5530:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5531:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5532:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5533:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5534:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5535:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5536:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5537:../../Source/Kernel/rme_kernel.c **** {
 13835              		.loc 1 5537 1
 13836              		.cfi_startproc
 13837              		@ args = 12, pretend = 0, frame = 56
 13838              		@ frame_needed = 1, uses_anonymous_args = 0
 13839 0000 00482DE9 		push	{fp, lr}
 13840              		.cfi_def_cfa_offset 8
 13841              		.cfi_offset 11, -8
 13842              		.cfi_offset 14, -4
 13843 0004 04B08DE2 		add	fp, sp, #4
 13844              		.cfi_def_cfa 11, 4
 13845 0008 38D04DE2 		sub	sp, sp, #56
 13846 000c 30000BE5 		str	r0, [fp, #-48]
 13847 0010 34100BE5 		str	r1, [fp, #-52]
 13848 0014 38200BE5 		str	r2, [fp, #-56]
 13849 0018 3C300BE5 		str	r3, [fp, #-60]
5538:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5539:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5540:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5541:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5542:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5543:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5544:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5545:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5546:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5547:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5548:../../Source/Kernel/rme_kernel.c **** 
5549:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCpt addr ");
5550:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
5551:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
5552:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5553:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Sched ");
5554:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd_Sched);
5555:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Sig ");
5556:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Sig);
5557:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTID ");
5558:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(TID);
5559:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio ");
5560:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 342


5561:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nHaddr ");
5562:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Haddr);
5563:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nRME_CID_NULL ");
5564:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_I(RME_CID_NULL);*/
5565:../../Source/Kernel/rme_kernel.c **** 
5566:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5567:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13850              		.loc 1 5567 5
 13851 001c 34301BE5 		ldr	r3, [fp, #-52]
 13852 0020 803003E2 		and	r3, r3, #128
 13853 0024 000053E3 		cmp	r3, #0
 13854 0028 1C00001A 		bne	.L883
 13855              		.loc 1 5567 5 is_stmt 0 discriminator 1
 13856 002c 30301BE5 		ldr	r3, [fp, #-48]
 13857 0030 142093E5 		ldr	r2, [r3, #20]
 13858 0034 34301BE5 		ldr	r3, [fp, #-52]
 13859 0038 030052E1 		cmp	r2, r3
 13860 003c 0100008A 		bhi	.L884
 13861              		.loc 1 5567 5 discriminator 3
 13862 0040 0230E0E3 		mvn	r3, #2
 13863              		.loc 1 5567 5
 13864 0044 D60100EA 		b	.L885
 13865              	.L884:
 13866              		.loc 1 5567 5 discriminator 4
 13867 0048 34301BE5 		ldr	r3, [fp, #-52]
 13868 004c 8322A0E1 		lsl	r2, r3, #5
 13869 0050 30301BE5 		ldr	r3, [fp, #-48]
 13870 0054 0C3093E5 		ldr	r3, [r3, #12]
 13871 0058 033082E0 		add	r3, r2, r3
 13872 005c 08300BE5 		str	r3, [fp, #-8]
 13873 0060 08301BE5 		ldr	r3, [fp, #-8]
 13874 0064 0300A0E1 		mov	r0, r3
 13875 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13876 006c 14000BE5 		str	r0, [fp, #-20]
 13877              		.loc 1 5567 5 discriminator 1
 13878 0070 14301BE5 		ldr	r3, [fp, #-20]
 13879 0074 FF3803E2 		and	r3, r3, #16711680
 13880 0078 020853E3 		cmp	r3, #131072
 13881 007c 0100001A 		bne	.L886
 13882              		.loc 1 5567 5 discriminator 5
 13883 0080 0830E0E3 		mvn	r3, #8
 13884              		.loc 1 5567 5
 13885 0084 C60100EA 		b	.L885
 13886              	.L886:
 13887              		.loc 1 5567 5 discriminator 6
 13888 0088 14301BE5 		ldr	r3, [fp, #-20]
 13889 008c 233CA0E1 		lsr	r3, r3, #24
 13890 0090 060053E3 		cmp	r3, #6
 13891 0094 3F00000A 		beq	.L887
 13892              		.loc 1 5567 5 discriminator 7
 13893 0098 0130E0E3 		mvn	r3, #1
 13894              		.loc 1 5567 5
 13895 009c C00100EA 		b	.L885
 13896              	.L883:
 13897              		.loc 1 5567 5 discriminator 2
 13898 00a0 34301BE5 		ldr	r3, [fp, #-52]
 13899 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 343


 13900 00a8 30301BE5 		ldr	r3, [fp, #-48]
 13901 00ac 143093E5 		ldr	r3, [r3, #20]
 13902 00b0 030052E1 		cmp	r2, r3
 13903 00b4 0100003A 		bcc	.L888
 13904              		.loc 1 5567 5 discriminator 8
 13905 00b8 0230E0E3 		mvn	r3, #2
 13906              		.loc 1 5567 5
 13907 00bc B80100EA 		b	.L885
 13908              	.L888:
 13909              		.loc 1 5567 5 discriminator 9
 13910 00c0 34301BE5 		ldr	r3, [fp, #-52]
 13911 00c4 2334A0E1 		lsr	r3, r3, #8
 13912 00c8 8322A0E1 		lsl	r2, r3, #5
 13913 00cc 30301BE5 		ldr	r3, [fp, #-48]
 13914 00d0 0C3093E5 		ldr	r3, [r3, #12]
 13915 00d4 033082E0 		add	r3, r2, r3
 13916 00d8 08300BE5 		str	r3, [fp, #-8]
 13917 00dc 08301BE5 		ldr	r3, [fp, #-8]
 13918 00e0 0300A0E1 		mov	r0, r3
 13919 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13920 00e8 14000BE5 		str	r0, [fp, #-20]
 13921              		.loc 1 5567 5 discriminator 1
 13922 00ec 14301BE5 		ldr	r3, [fp, #-20]
 13923 00f0 FF3803E2 		and	r3, r3, #16711680
 13924 00f4 020853E3 		cmp	r3, #131072
 13925 00f8 0100001A 		bne	.L889
 13926              		.loc 1 5567 5 discriminator 10
 13927 00fc 0830E0E3 		mvn	r3, #8
 13928              		.loc 1 5567 5
 13929 0100 A70100EA 		b	.L885
 13930              	.L889:
 13931              		.loc 1 5567 5 discriminator 11
 13932 0104 14301BE5 		ldr	r3, [fp, #-20]
 13933 0108 233CA0E1 		lsr	r3, r3, #24
 13934 010c 030053E3 		cmp	r3, #3
 13935 0110 0100000A 		beq	.L890
 13936              		.loc 1 5567 5 discriminator 12
 13937 0114 0130E0E3 		mvn	r3, #1
 13938              		.loc 1 5567 5
 13939 0118 A10100EA 		b	.L885
 13940              	.L890:
 13941              		.loc 1 5567 5 discriminator 13
 13942 011c 34301BE5 		ldr	r3, [fp, #-52]
 13943 0120 7F2003E2 		and	r2, r3, #127
 13944 0124 08301BE5 		ldr	r3, [fp, #-8]
 13945 0128 143093E5 		ldr	r3, [r3, #20]
 13946 012c 030052E1 		cmp	r2, r3
 13947 0130 0100003A 		bcc	.L891
 13948              		.loc 1 5567 5 discriminator 14
 13949 0134 0230E0E3 		mvn	r3, #2
 13950              		.loc 1 5567 5
 13951 0138 990100EA 		b	.L885
 13952              	.L891:
 13953              		.loc 1 5567 5 discriminator 15
 13954 013c 34301BE5 		ldr	r3, [fp, #-52]
 13955 0140 7F3003E2 		and	r3, r3, #127
 13956 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 344


 13957 0148 08301BE5 		ldr	r3, [fp, #-8]
 13958 014c 0C3093E5 		ldr	r3, [r3, #12]
 13959 0150 033082E0 		add	r3, r2, r3
 13960 0154 08300BE5 		str	r3, [fp, #-8]
 13961 0158 08301BE5 		ldr	r3, [fp, #-8]
 13962 015c 0300A0E1 		mov	r0, r3
 13963 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13964 0164 14000BE5 		str	r0, [fp, #-20]
 13965              		.loc 1 5567 5 discriminator 1
 13966 0168 14301BE5 		ldr	r3, [fp, #-20]
 13967 016c FF3803E2 		and	r3, r3, #16711680
 13968 0170 020853E3 		cmp	r3, #131072
 13969 0174 0100001A 		bne	.L892
 13970              		.loc 1 5567 5 discriminator 16
 13971 0178 0830E0E3 		mvn	r3, #8
 13972              		.loc 1 5567 5
 13973 017c 880100EA 		b	.L885
 13974              	.L892:
 13975              		.loc 1 5567 5 discriminator 17
 13976 0180 14301BE5 		ldr	r3, [fp, #-20]
 13977 0184 233CA0E1 		lsr	r3, r3, #24
 13978 0188 060053E3 		cmp	r3, #6
 13979 018c 0100000A 		beq	.L887
 13980              		.loc 1 5567 5 discriminator 18
 13981 0190 0130E0E3 		mvn	r3, #1
 13982              		.loc 1 5567 5
 13983 0194 820100EA 		b	.L885
 13984              	.L887:
5568:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5569:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5570:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 13985              		.loc 1 5570 5 is_stmt 1
 13986 0198 38301BE5 		ldr	r3, [fp, #-56]
 13987 019c 803003E2 		and	r3, r3, #128
 13988 01a0 000053E3 		cmp	r3, #0
 13989 01a4 1C00001A 		bne	.L893
 13990              		.loc 1 5570 5 is_stmt 0 discriminator 1
 13991 01a8 30301BE5 		ldr	r3, [fp, #-48]
 13992 01ac 142093E5 		ldr	r2, [r3, #20]
 13993 01b0 38301BE5 		ldr	r3, [fp, #-56]
 13994 01b4 030052E1 		cmp	r2, r3
 13995 01b8 0100008A 		bhi	.L894
 13996              		.loc 1 5570 5 discriminator 3
 13997 01bc 0230E0E3 		mvn	r3, #2
 13998              		.loc 1 5570 5
 13999 01c0 770100EA 		b	.L885
 14000              	.L894:
 14001              		.loc 1 5570 5 discriminator 4
 14002 01c4 38301BE5 		ldr	r3, [fp, #-56]
 14003 01c8 8322A0E1 		lsl	r2, r3, #5
 14004 01cc 30301BE5 		ldr	r3, [fp, #-48]
 14005 01d0 0C3093E5 		ldr	r3, [r3, #12]
 14006 01d4 033082E0 		add	r3, r2, r3
 14007 01d8 0C300BE5 		str	r3, [fp, #-12]
 14008 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 14009 01e0 0300A0E1 		mov	r0, r3
 14010 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 345


 14011 01e8 14000BE5 		str	r0, [fp, #-20]
 14012              		.loc 1 5570 5 discriminator 1
 14013 01ec 14301BE5 		ldr	r3, [fp, #-20]
 14014 01f0 FF3803E2 		and	r3, r3, #16711680
 14015 01f4 020853E3 		cmp	r3, #131072
 14016 01f8 0100001A 		bne	.L895
 14017              		.loc 1 5570 5 discriminator 5
 14018 01fc 0830E0E3 		mvn	r3, #8
 14019              		.loc 1 5570 5
 14020 0200 670100EA 		b	.L885
 14021              	.L895:
 14022              		.loc 1 5570 5 discriminator 6
 14023 0204 14301BE5 		ldr	r3, [fp, #-20]
 14024 0208 233CA0E1 		lsr	r3, r3, #24
 14025 020c 060053E3 		cmp	r3, #6
 14026 0210 3F00000A 		beq	.L896
 14027              		.loc 1 5570 5 discriminator 7
 14028 0214 0130E0E3 		mvn	r3, #1
 14029              		.loc 1 5570 5
 14030 0218 610100EA 		b	.L885
 14031              	.L893:
 14032              		.loc 1 5570 5 discriminator 2
 14033 021c 38301BE5 		ldr	r3, [fp, #-56]
 14034 0220 2324A0E1 		lsr	r2, r3, #8
 14035 0224 30301BE5 		ldr	r3, [fp, #-48]
 14036 0228 143093E5 		ldr	r3, [r3, #20]
 14037 022c 030052E1 		cmp	r2, r3
 14038 0230 0100003A 		bcc	.L897
 14039              		.loc 1 5570 5 discriminator 8
 14040 0234 0230E0E3 		mvn	r3, #2
 14041              		.loc 1 5570 5
 14042 0238 590100EA 		b	.L885
 14043              	.L897:
 14044              		.loc 1 5570 5 discriminator 9
 14045 023c 38301BE5 		ldr	r3, [fp, #-56]
 14046 0240 2334A0E1 		lsr	r3, r3, #8
 14047 0244 8322A0E1 		lsl	r2, r3, #5
 14048 0248 30301BE5 		ldr	r3, [fp, #-48]
 14049 024c 0C3093E5 		ldr	r3, [r3, #12]
 14050 0250 033082E0 		add	r3, r2, r3
 14051 0254 0C300BE5 		str	r3, [fp, #-12]
 14052 0258 0C301BE5 		ldr	r3, [fp, #-12]
 14053 025c 0300A0E1 		mov	r0, r3
 14054 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14055 0264 14000BE5 		str	r0, [fp, #-20]
 14056              		.loc 1 5570 5 discriminator 1
 14057 0268 14301BE5 		ldr	r3, [fp, #-20]
 14058 026c FF3803E2 		and	r3, r3, #16711680
 14059 0270 020853E3 		cmp	r3, #131072
 14060 0274 0100001A 		bne	.L898
 14061              		.loc 1 5570 5 discriminator 10
 14062 0278 0830E0E3 		mvn	r3, #8
 14063              		.loc 1 5570 5
 14064 027c 480100EA 		b	.L885
 14065              	.L898:
 14066              		.loc 1 5570 5 discriminator 11
 14067 0280 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 346


 14068 0284 233CA0E1 		lsr	r3, r3, #24
 14069 0288 030053E3 		cmp	r3, #3
 14070 028c 0100000A 		beq	.L899
 14071              		.loc 1 5570 5 discriminator 12
 14072 0290 0130E0E3 		mvn	r3, #1
 14073              		.loc 1 5570 5
 14074 0294 420100EA 		b	.L885
 14075              	.L899:
 14076              		.loc 1 5570 5 discriminator 13
 14077 0298 38301BE5 		ldr	r3, [fp, #-56]
 14078 029c 7F2003E2 		and	r2, r3, #127
 14079 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 14080 02a4 143093E5 		ldr	r3, [r3, #20]
 14081 02a8 030052E1 		cmp	r2, r3
 14082 02ac 0100003A 		bcc	.L900
 14083              		.loc 1 5570 5 discriminator 14
 14084 02b0 0230E0E3 		mvn	r3, #2
 14085              		.loc 1 5570 5
 14086 02b4 3A0100EA 		b	.L885
 14087              	.L900:
 14088              		.loc 1 5570 5 discriminator 15
 14089 02b8 38301BE5 		ldr	r3, [fp, #-56]
 14090 02bc 7F3003E2 		and	r3, r3, #127
 14091 02c0 8322A0E1 		lsl	r2, r3, #5
 14092 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 14093 02c8 0C3093E5 		ldr	r3, [r3, #12]
 14094 02cc 033082E0 		add	r3, r2, r3
 14095 02d0 0C300BE5 		str	r3, [fp, #-12]
 14096 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 14097 02d8 0300A0E1 		mov	r0, r3
 14098 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14099 02e0 14000BE5 		str	r0, [fp, #-20]
 14100              		.loc 1 5570 5 discriminator 1
 14101 02e4 14301BE5 		ldr	r3, [fp, #-20]
 14102 02e8 FF3803E2 		and	r3, r3, #16711680
 14103 02ec 020853E3 		cmp	r3, #131072
 14104 02f0 0100001A 		bne	.L901
 14105              		.loc 1 5570 5 discriminator 16
 14106 02f4 0830E0E3 		mvn	r3, #8
 14107              		.loc 1 5570 5
 14108 02f8 290100EA 		b	.L885
 14109              	.L901:
 14110              		.loc 1 5570 5 discriminator 17
 14111 02fc 14301BE5 		ldr	r3, [fp, #-20]
 14112 0300 233CA0E1 		lsr	r3, r3, #24
 14113 0304 060053E3 		cmp	r3, #6
 14114 0308 0100000A 		beq	.L896
 14115              		.loc 1 5570 5 discriminator 18
 14116 030c 0130E0E3 		mvn	r3, #1
 14117              		.loc 1 5570 5
 14118 0310 230100EA 		b	.L885
 14119              	.L896:
5571:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5572:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5573:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5574:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 14120              		.loc 1 5574 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 347


 14121 0314 08301BE5 		ldr	r3, [fp, #-8]
 14122 0318 083093E5 		ldr	r3, [r3, #8]
 14123 031c 023003E2 		and	r3, r3, #2
 14124 0320 000053E3 		cmp	r3, #0
 14125 0324 0100001A 		bne	.L902
 14126              		.loc 1 5574 5 is_stmt 0 discriminator 1
 14127 0328 0630E0E3 		mvn	r3, #6
 14128              		.loc 1 5574 5
 14129 032c 1C0100EA 		b	.L885
 14130              	.L902:
5575:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 3");
5576:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 14131              		.loc 1 5576 5 is_stmt 1
 14132 0330 0C301BE5 		ldr	r3, [fp, #-12]
 14133 0334 083093E5 		ldr	r3, [r3, #8]
 14134 0338 043003E2 		and	r3, r3, #4
 14135 033c 000053E3 		cmp	r3, #0
 14136 0340 0100001A 		bne	.L903
 14137              		.loc 1 5576 5 is_stmt 0 discriminator 1
 14138 0344 0630E0E3 		mvn	r3, #6
 14139              		.loc 1 5576 5
 14140 0348 150100EA 		b	.L885
 14141              	.L903:
5577:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5578:../../Source/Kernel/rme_kernel.c ****     
5579:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5580:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 14142              		.loc 1 5580 7 is_stmt 1
 14143 034c 3C301BE5 		ldr	r3, [fp, #-60]
 14144 0350 020953E3 		cmp	r3, #32768
 14145 0354 6500000A 		beq	.L904
5581:../../Source/Kernel/rme_kernel.c ****     {
5582:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5583:../../Source/Kernel/rme_kernel.c **** 
5584:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 14146              		.loc 1 5584 9
 14147 0358 3C301BE5 		ldr	r3, [fp, #-60]
 14148 035c 803003E2 		and	r3, r3, #128
 14149 0360 000053E3 		cmp	r3, #0
 14150 0364 1C00001A 		bne	.L905
 14151              		.loc 1 5584 9 is_stmt 0 discriminator 1
 14152 0368 30301BE5 		ldr	r3, [fp, #-48]
 14153 036c 142093E5 		ldr	r2, [r3, #20]
 14154 0370 3C301BE5 		ldr	r3, [fp, #-60]
 14155 0374 030052E1 		cmp	r2, r3
 14156 0378 0100008A 		bhi	.L906
 14157              		.loc 1 5584 9 discriminator 3
 14158 037c 0230E0E3 		mvn	r3, #2
 14159              		.loc 1 5584 9
 14160 0380 070100EA 		b	.L885
 14161              	.L906:
 14162              		.loc 1 5584 9 discriminator 4
 14163 0384 3C301BE5 		ldr	r3, [fp, #-60]
 14164 0388 8322A0E1 		lsl	r2, r3, #5
 14165 038c 30301BE5 		ldr	r3, [fp, #-48]
 14166 0390 0C3093E5 		ldr	r3, [r3, #12]
 14167 0394 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 348


 14168 0398 10300BE5 		str	r3, [fp, #-16]
 14169 039c 10301BE5 		ldr	r3, [fp, #-16]
 14170 03a0 0300A0E1 		mov	r0, r3
 14171 03a4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14172 03a8 14000BE5 		str	r0, [fp, #-20]
 14173              		.loc 1 5584 9 discriminator 1
 14174 03ac 14301BE5 		ldr	r3, [fp, #-20]
 14175 03b0 FF3803E2 		and	r3, r3, #16711680
 14176 03b4 020853E3 		cmp	r3, #131072
 14177 03b8 0100001A 		bne	.L907
 14178              		.loc 1 5584 9 discriminator 5
 14179 03bc 0830E0E3 		mvn	r3, #8
 14180              		.loc 1 5584 9
 14181 03c0 F70000EA 		b	.L885
 14182              	.L907:
 14183              		.loc 1 5584 9 discriminator 6
 14184 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14185 03c8 233CA0E1 		lsr	r3, r3, #24
 14186 03cc 080053E3 		cmp	r3, #8
 14187 03d0 3F00000A 		beq	.L908
 14188              		.loc 1 5584 9 discriminator 7
 14189 03d4 0130E0E3 		mvn	r3, #1
 14190              		.loc 1 5584 9
 14191 03d8 F10000EA 		b	.L885
 14192              	.L905:
 14193              		.loc 1 5584 9 discriminator 2
 14194 03dc 3C301BE5 		ldr	r3, [fp, #-60]
 14195 03e0 2324A0E1 		lsr	r2, r3, #8
 14196 03e4 30301BE5 		ldr	r3, [fp, #-48]
 14197 03e8 143093E5 		ldr	r3, [r3, #20]
 14198 03ec 030052E1 		cmp	r2, r3
 14199 03f0 0100003A 		bcc	.L909
 14200              		.loc 1 5584 9 discriminator 8
 14201 03f4 0230E0E3 		mvn	r3, #2
 14202              		.loc 1 5584 9
 14203 03f8 E90000EA 		b	.L885
 14204              	.L909:
 14205              		.loc 1 5584 9 discriminator 9
 14206 03fc 3C301BE5 		ldr	r3, [fp, #-60]
 14207 0400 2334A0E1 		lsr	r3, r3, #8
 14208 0404 8322A0E1 		lsl	r2, r3, #5
 14209 0408 30301BE5 		ldr	r3, [fp, #-48]
 14210 040c 0C3093E5 		ldr	r3, [r3, #12]
 14211 0410 033082E0 		add	r3, r2, r3
 14212 0414 10300BE5 		str	r3, [fp, #-16]
 14213 0418 10301BE5 		ldr	r3, [fp, #-16]
 14214 041c 0300A0E1 		mov	r0, r3
 14215 0420 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14216 0424 14000BE5 		str	r0, [fp, #-20]
 14217              		.loc 1 5584 9 discriminator 1
 14218 0428 14301BE5 		ldr	r3, [fp, #-20]
 14219 042c FF3803E2 		and	r3, r3, #16711680
 14220 0430 020853E3 		cmp	r3, #131072
 14221 0434 0100001A 		bne	.L910
 14222              		.loc 1 5584 9 discriminator 10
 14223 0438 0830E0E3 		mvn	r3, #8
 14224              		.loc 1 5584 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 349


 14225 043c D80000EA 		b	.L885
 14226              	.L910:
 14227              		.loc 1 5584 9 discriminator 11
 14228 0440 14301BE5 		ldr	r3, [fp, #-20]
 14229 0444 233CA0E1 		lsr	r3, r3, #24
 14230 0448 030053E3 		cmp	r3, #3
 14231 044c 0100000A 		beq	.L911
 14232              		.loc 1 5584 9 discriminator 12
 14233 0450 0130E0E3 		mvn	r3, #1
 14234              		.loc 1 5584 9
 14235 0454 D20000EA 		b	.L885
 14236              	.L911:
 14237              		.loc 1 5584 9 discriminator 13
 14238 0458 3C301BE5 		ldr	r3, [fp, #-60]
 14239 045c 7F2003E2 		and	r2, r3, #127
 14240 0460 10301BE5 		ldr	r3, [fp, #-16]
 14241 0464 143093E5 		ldr	r3, [r3, #20]
 14242 0468 030052E1 		cmp	r2, r3
 14243 046c 0100003A 		bcc	.L912
 14244              		.loc 1 5584 9 discriminator 14
 14245 0470 0230E0E3 		mvn	r3, #2
 14246              		.loc 1 5584 9
 14247 0474 CA0000EA 		b	.L885
 14248              	.L912:
 14249              		.loc 1 5584 9 discriminator 15
 14250 0478 3C301BE5 		ldr	r3, [fp, #-60]
 14251 047c 7F3003E2 		and	r3, r3, #127
 14252 0480 8322A0E1 		lsl	r2, r3, #5
 14253 0484 10301BE5 		ldr	r3, [fp, #-16]
 14254 0488 0C3093E5 		ldr	r3, [r3, #12]
 14255 048c 033082E0 		add	r3, r2, r3
 14256 0490 10300BE5 		str	r3, [fp, #-16]
 14257 0494 10301BE5 		ldr	r3, [fp, #-16]
 14258 0498 0300A0E1 		mov	r0, r3
 14259 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14260 04a0 14000BE5 		str	r0, [fp, #-20]
 14261              		.loc 1 5584 9 discriminator 1
 14262 04a4 14301BE5 		ldr	r3, [fp, #-20]
 14263 04a8 FF3803E2 		and	r3, r3, #16711680
 14264 04ac 020853E3 		cmp	r3, #131072
 14265 04b0 0100001A 		bne	.L913
 14266              		.loc 1 5584 9 discriminator 16
 14267 04b4 0830E0E3 		mvn	r3, #8
 14268              		.loc 1 5584 9
 14269 04b8 B90000EA 		b	.L885
 14270              	.L913:
 14271              		.loc 1 5584 9 discriminator 17
 14272 04bc 14301BE5 		ldr	r3, [fp, #-20]
 14273 04c0 233CA0E1 		lsr	r3, r3, #24
 14274 04c4 080053E3 		cmp	r3, #8
 14275 04c8 0100000A 		beq	.L908
 14276              		.loc 1 5584 9 discriminator 18
 14277 04cc 0130E0E3 		mvn	r3, #1
 14278              		.loc 1 5584 9
 14279 04d0 B30000EA 		b	.L885
 14280              	.L908:
5585:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 350


5586:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14281              		.loc 1 5586 9 is_stmt 1
 14282 04d4 10301BE5 		ldr	r3, [fp, #-16]
 14283 04d8 083093E5 		ldr	r3, [r3, #8]
 14284 04dc 203003E2 		and	r3, r3, #32
 14285 04e0 000053E3 		cmp	r3, #0
 14286 04e4 0300001A 		bne	.L914
 14287              		.loc 1 5586 9 is_stmt 0 discriminator 1
 14288 04e8 0630E0E3 		mvn	r3, #6
 14289              		.loc 1 5586 9
 14290 04ec AC0000EA 		b	.L885
 14291              	.L904:
5587:../../Source/Kernel/rme_kernel.c ****     }
5588:../../Source/Kernel/rme_kernel.c ****     else
5589:../../Source/Kernel/rme_kernel.c ****     {
5590:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5591:../../Source/Kernel/rme_kernel.c **** 
5592:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14292              		.loc 1 5592 15 is_stmt 1
 14293 04f0 0030A0E3 		mov	r3, #0
 14294 04f4 10300BE5 		str	r3, [fp, #-16]
 14295              	.L914:
5593:../../Source/Kernel/rme_kernel.c ****     }
5594:../../Source/Kernel/rme_kernel.c **** 
5595:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5596:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14296              		.loc 1 5596 12
 14297 04f8 08301BE5 		ldr	r3, [fp, #-8]
 14298 04fc 0C3093E5 		ldr	r3, [r3, #12]
 14299              		.loc 1 5596 11
 14300 0500 18300BE5 		str	r3, [fp, #-24]
5597:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 5");
5598:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14301              		.loc 1 5598 14
 14302 0504 18301BE5 		ldr	r3, [fp, #-24]
 14303 0508 143093E5 		ldr	r3, [r3, #20]
 14304 050c 1C300BE5 		str	r3, [fp, #-28]
5599:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14305              		.loc 1 5599 7
 14306 0510 1C301BE5 		ldr	r3, [fp, #-28]
 14307 0514 010073E3 		cmn	r3, #1
 14308 0518 0100000A 		beq	.L915
5600:../../Source/Kernel/rme_kernel.c ****     {
5601:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5602:../../Source/Kernel/rme_kernel.c **** 
5603:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14309              		.loc 1 5603 16
 14310 051c CB30E0E3 		mvn	r3, #203
 14311 0520 9F0000EA 		b	.L885
 14312              	.L915:
5604:../../Source/Kernel/rme_kernel.c ****     }
5605:../../Source/Kernel/rme_kernel.c ****     else
5606:../../Source/Kernel/rme_kernel.c ****     {
5607:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5608:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5609:../../Source/Kernel/rme_kernel.c ****     }
5610:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 351


5611:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5612:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14313              		.loc 1 5612 14
 14314 0524 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14315 0528 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14316 052c 20300BE5 		str	r3, [fp, #-32]
5613:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14317              		.loc 1 5613 15
 14318 0530 0C301BE5 		ldr	r3, [fp, #-12]
 14319 0534 0C3093E5 		ldr	r3, [r3, #12]
 14320              		.loc 1 5613 14
 14321 0538 24300BE5 		str	r3, [fp, #-36]
5614:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14322              		.loc 1 5614 24
 14323 053c 24301BE5 		ldr	r3, [fp, #-36]
 14324 0540 143093E5 		ldr	r3, [r3, #20]
 14325              		.loc 1 5614 7
 14326 0544 20201BE5 		ldr	r2, [fp, #-32]
 14327 0548 030052E1 		cmp	r2, r3
 14328 054c 0100000A 		beq	.L916
5615:../../Source/Kernel/rme_kernel.c ****     {
5616:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5617:../../Source/Kernel/rme_kernel.c **** 
5618:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14329              		.loc 1 5618 16
 14330 0550 CB30E0E3 		mvn	r3, #203
 14331 0554 920000EA 		b	.L885
 14332              	.L916:
5619:../../Source/Kernel/rme_kernel.c ****     }
5620:../../Source/Kernel/rme_kernel.c ****     else
5621:../../Source/Kernel/rme_kernel.c ****     {
5622:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5623:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5624:../../Source/Kernel/rme_kernel.c ****     }
5625:../../Source/Kernel/rme_kernel.c **** 
5626:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5627:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14333              		.loc 1 5627 7
 14334 0558 18201BE5 		ldr	r2, [fp, #-24]
 14335 055c 24301BE5 		ldr	r3, [fp, #-36]
 14336 0560 030052E1 		cmp	r2, r3
 14337 0564 0100001A 		bne	.L917
5628:../../Source/Kernel/rme_kernel.c ****     {
5629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5630:../../Source/Kernel/rme_kernel.c **** 
5631:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 14338              		.loc 1 5631 16
 14339 0568 CE30E0E3 		mvn	r3, #206
 14340 056c 8C0000EA 		b	.L885
 14341              	.L917:
5632:../../Source/Kernel/rme_kernel.c ****     }
5633:../../Source/Kernel/rme_kernel.c ****     else
5634:../../Source/Kernel/rme_kernel.c ****     {
5635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5636:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5637:../../Source/Kernel/rme_kernel.c ****     }
5638:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 352


5639:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5640:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14342              		.loc 1 5640 24
 14343 0570 24301BE5 		ldr	r3, [fp, #-36]
 14344 0574 243093E5 		ldr	r3, [r3, #36]
 14345              		.loc 1 5640 7
 14346 0578 08209BE5 		ldr	r2, [fp, #8]
 14347 057c 030052E1 		cmp	r2, r3
 14348 0580 0100009A 		bls	.L918
5641:../../Source/Kernel/rme_kernel.c ****     {
5642:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5643:../../Source/Kernel/rme_kernel.c **** 
5644:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14349              		.loc 1 5644 16
 14350 0584 CC30E0E3 		mvn	r3, #204
 14351 0588 850000EA 		b	.L885
 14352              	.L918:
5645:../../Source/Kernel/rme_kernel.c ****     }
5646:../../Source/Kernel/rme_kernel.c ****     else
5647:../../Source/Kernel/rme_kernel.c ****     {
5648:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5649:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5650:../../Source/Kernel/rme_kernel.c ****     }
5651:../../Source/Kernel/rme_kernel.c ****     
5652:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5653:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14353              		.loc 1 5653 13
 14354 058c 18301BE5 		ldr	r3, [fp, #-24]
 14355 0590 443093E5 		ldr	r3, [r3, #68]
 14356 0594 28300BE5 		str	r3, [fp, #-40]
5654:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5655:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5656:../../Source/Kernel/rme_kernel.c ****     {
5657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5658:../../Source/Kernel/rme_kernel.c **** 
5659:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5660:../../Source/Kernel/rme_kernel.c ****     }
5661:../../Source/Kernel/rme_kernel.c **** #else
5662:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14357              		.loc 1 5662 8
 14358 0598 28301BE5 		ldr	r3, [fp, #-40]
 14359 059c 0231C3E3 		bic	r3, r3, #-2147483648
 14360              		.loc 1 5662 7
 14361 05a0 000053E3 		cmp	r3, #0
 14362 05a4 0100000A 		beq	.L919
5663:../../Source/Kernel/rme_kernel.c ****     {
5664:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5665:../../Source/Kernel/rme_kernel.c **** 
5666:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14363              		.loc 1 5666 16
 14364 05a8 0630E0E3 		mvn	r3, #6
 14365 05ac 7C0000EA 		b	.L885
 14366              	.L919:
5667:../../Source/Kernel/rme_kernel.c ****     }
5668:../../Source/Kernel/rme_kernel.c **** #endif
5669:../../Source/Kernel/rme_kernel.c ****     else
5670:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 353


5671:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5672:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5673:../../Source/Kernel/rme_kernel.c ****     }
5674:../../Source/Kernel/rme_kernel.c **** 
5675:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
5676:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14367              		.loc 1 5676 7
 14368 05b0 0C309BE5 		ldr	r3, [fp, #12]
 14369 05b4 000053E3 		cmp	r3, #0
 14370 05b8 2000000A 		beq	.L920
 14371              		.loc 1 5676 55 discriminator 1
 14372 05bc 28301BE5 		ldr	r3, [fp, #-40]
 14373              		.loc 1 5676 25 discriminator 1
 14374 05c0 000053E3 		cmp	r3, #0
 14375 05c4 1D0000AA 		bge	.L920
5677:../../Source/Kernel/rme_kernel.c ****     {
5678:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5679:../../Source/Kernel/rme_kernel.c ****         
5680:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5681:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14376              		.loc 1 5681 12
 14377 05c8 0C309BE5 		ldr	r3, [fp, #12]
 14378 05cc 033003E2 		and	r3, r3, #3
 14379              		.loc 1 5681 33
 14380 05d0 000053E3 		cmp	r3, #0
 14381 05d4 0100001A 		bne	.L921
 14382              		.loc 1 5681 33 is_stmt 0 discriminator 1
 14383 05d8 0130A0E3 		mov	r3, #1
 14384 05dc 000000EA 		b	.L922
 14385              	.L921:
 14386              		.loc 1 5681 33 discriminator 2
 14387 05e0 0030A0E3 		mov	r3, #0
 14388              	.L922:
 14389              		.loc 1 5681 11 is_stmt 1 discriminator 4
 14390 05e4 000053E3 		cmp	r3, #0
 14391 05e8 1200000A 		beq	.L923
5682:../../Source/Kernel/rme_kernel.c ****         {
5683:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5684:../../Source/Kernel/rme_kernel.c ****             
5685:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5686:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5687:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14392              		.loc 1 5687 15
 14393 05ec 0C309BE5 		ldr	r3, [fp, #12]
 14394 05f0 1E0273E3 		cmn	r3, #-536870911
 14395 05f4 0100008A 		bhi	.L924
5688:../../Source/Kernel/rme_kernel.c ****             {
5689:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5690:../../Source/Kernel/rme_kernel.c **** 
5691:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14396              		.loc 1 5691 24
 14397 05f8 CA30E0E3 		mvn	r3, #202
 14398 05fc 680000EA 		b	.L885
 14399              	.L924:
5692:../../Source/Kernel/rme_kernel.c ****             }
5693:../../Source/Kernel/rme_kernel.c ****             else
5694:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 354


5695:../../Source/Kernel/rme_kernel.c **** #endif
5696:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14400              		.loc 1 5696 20
 14401 0600 0C309BE5 		ldr	r3, [fp, #12]
 14402 0604 483083E2 		add	r3, r3, #72
 14403 0608 2C300BE5 		str	r3, [fp, #-44]
5697:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14404              		.loc 1 5697 19
 14405 060c 2C201BE5 		ldr	r2, [fp, #-44]
 14406 0610 0C309BE5 		ldr	r3, [fp, #12]
 14407 0614 030052E1 		cmp	r2, r3
 14408 0618 0400009A 		bls	.L925
 14409              		.loc 1 5697 32 discriminator 1
 14410 061c 2C201BE5 		ldr	r2, [fp, #-44]
 14411 0620 0030A0E3 		mov	r3, #0
 14412 0624 023042E3 		movt	r3, 8194
 14413 0628 030052E1 		cmp	r2, r3
 14414 062c 1100009A 		bls	.L938
 14415              	.L925:
5698:../../Source/Kernel/rme_kernel.c ****                 {
5699:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5700:../../Source/Kernel/rme_kernel.c **** 
5701:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14416              		.loc 1 5701 28
 14417 0630 CA30E0E3 		mvn	r3, #202
 14418 0634 5A0000EA 		b	.L885
 14419              	.L923:
5702:../../Source/Kernel/rme_kernel.c ****                 }
5703:../../Source/Kernel/rme_kernel.c ****                 else
5704:../../Source/Kernel/rme_kernel.c ****                 {
5705:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5706:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5707:../../Source/Kernel/rme_kernel.c ****                 }
5708:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5709:../../Source/Kernel/rme_kernel.c ****             }
5710:../../Source/Kernel/rme_kernel.c **** #endif
5711:../../Source/Kernel/rme_kernel.c ****         }
5712:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5713:../../Source/Kernel/rme_kernel.c ****         else
5714:../../Source/Kernel/rme_kernel.c ****         {
5715:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5716:../../Source/Kernel/rme_kernel.c **** 
5717:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14420              		.loc 1 5717 20
 14421 0638 CA30E0E3 		mvn	r3, #202
 14422 063c 580000EA 		b	.L885
 14423              	.L920:
5718:../../Source/Kernel/rme_kernel.c ****         }
5719:../../Source/Kernel/rme_kernel.c ****     }
5720:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5721:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5722:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14424              		.loc 1 5722 12
 14425 0640 0C309BE5 		ldr	r3, [fp, #12]
 14426 0644 000053E3 		cmp	r3, #0
 14427 0648 0200000A 		beq	.L928
 14428              		.loc 1 5722 61 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 355


 14429 064c 28301BE5 		ldr	r3, [fp, #-40]
 14430              		.loc 1 5722 31 discriminator 1
 14431 0650 000053E3 		cmp	r3, #0
 14432 0654 050000AA 		bge	.L929
 14433              	.L928:
 14434              		.loc 1 5722 67 discriminator 3
 14435 0658 0C309BE5 		ldr	r3, [fp, #12]
 14436 065c 000053E3 		cmp	r3, #0
 14437 0660 0500001A 		bne	.L927
5723:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14438              		.loc 1 5723 61
 14439 0664 28301BE5 		ldr	r3, [fp, #-40]
 14440              		.loc 1 5723 31
 14441 0668 000053E3 		cmp	r3, #0
 14442 066c 020000AA 		bge	.L927
 14443              	.L929:
5724:../../Source/Kernel/rme_kernel.c ****     {
5725:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5726:../../Source/Kernel/rme_kernel.c **** 
5727:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14444              		.loc 1 5727 16
 14445 0670 CA30E0E3 		mvn	r3, #202
 14446 0674 4A0000EA 		b	.L885
 14447              	.L938:
5681:../../Source/Kernel/rme_kernel.c ****         {
 14448              		.loc 1 5681 11
 14449 0678 00F020E3 		nop
 14450              	.L927:
5728:../../Source/Kernel/rme_kernel.c ****     }
5729:../../Source/Kernel/rme_kernel.c ****     else
5730:../../Source/Kernel/rme_kernel.c ****     {
5731:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5732:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5733:../../Source/Kernel/rme_kernel.c ****     }
5734:../../Source/Kernel/rme_kernel.c **** 
5735:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5736:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14451              		.loc 1 5736 8
 14452 067c 18301BE5 		ldr	r3, [fp, #-24]
 14453 0680 143083E2 		add	r3, r3, #20
 14454 0684 1C101BE5 		ldr	r1, [fp, #-28]
 14455 0688 20201BE5 		ldr	r2, [fp, #-32]
 14456 068c 0300A0E1 		mov	r0, r3
 14457 0690 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14458 0694 0030A0E1 		mov	r3, r0
 14459              		.loc 1 5736 7 discriminator 1
 14460 0698 000053E3 		cmp	r3, #0
 14461 069c 0100001A 		bne	.L930
5737:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5738:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5739:../../Source/Kernel/rme_kernel.c ****     {
5740:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5741:../../Source/Kernel/rme_kernel.c **** 
5742:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14462              		.loc 1 5742 16
 14463 06a0 C930E0E3 		mvn	r3, #201
 14464 06a4 3E0000EA 		b	.L885
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 356


 14465              	.L930:
5743:../../Source/Kernel/rme_kernel.c ****     }
5744:../../Source/Kernel/rme_kernel.c ****     else
5745:../../Source/Kernel/rme_kernel.c ****     {
5746:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5747:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5748:../../Source/Kernel/rme_kernel.c ****     }
5749:../../Source/Kernel/rme_kernel.c ****     
5750:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5751:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14466              		.loc 1 5751 21
 14467 06a8 24301BE5 		ldr	r3, [fp, #-36]
 14468 06ac 303093E5 		ldr	r3, [r3, #48]
 14469              		.loc 1 5751 31
 14470 06b0 012083E2 		add	r2, r3, #1
 14471 06b4 24301BE5 		ldr	r3, [fp, #-36]
 14472 06b8 302083E5 		str	r2, [r3, #48]
5752:../../Source/Kernel/rme_kernel.c ****     
5753:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5754:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5755:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5756:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14473              		.loc 1 5756 28
 14474 06bc 18301BE5 		ldr	r3, [fp, #-24]
 14475 06c0 24201BE5 		ldr	r2, [fp, #-36]
 14476 06c4 342083E5 		str	r2, [r3, #52]
5757:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14477              		.loc 1 5757 23
 14478 06c8 18301BE5 		ldr	r3, [fp, #-24]
 14479 06cc 08209BE5 		ldr	r2, [fp, #8]
 14480 06d0 202083E5 		str	r2, [r3, #32]
5758:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14481              		.loc 1 5758 23
 14482 06d4 04209BE5 		ldr	r2, [fp, #4]
 14483              		.loc 1 5758 22
 14484 06d8 18301BE5 		ldr	r3, [fp, #-24]
 14485 06dc 102083E5 		str	r2, [r3, #16]
5759:../../Source/Kernel/rme_kernel.c ****     
5760:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5761:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14486              		.loc 1 5761 5
 14487 06e0 18301BE5 		ldr	r3, [fp, #-24]
 14488 06e4 1C3093E5 		ldr	r3, [r3, #28]
 14489 06e8 020053E3 		cmp	r3, #2
 14490 06ec 0C00000A 		beq	.L931
 14491              		.loc 1 5761 5 is_stmt 0 discriminator 1
 14492 06f0 18301BE5 		ldr	r3, [fp, #-24]
 14493 06f4 1C3093E5 		ldr	r3, [r3, #28]
 14494 06f8 030053E3 		cmp	r3, #3
 14495 06fc 0800000A 		beq	.L931
 14496              		.loc 1 5761 5 discriminator 2
 14497 0700 003000E3 		movw	r3, #:lower16:.LC6
 14498 0704 003040E3 		movt	r3, #:upper16:.LC6
 14499 0708 002000E3 		movw	r2, #:lower16:.LC7
 14500 070c 002040E3 		movt	r2, #:upper16:.LC7
 14501 0710 811601E3 		movw	r1, #5761
 14502 0714 000000E3 		movw	r0, #:lower16:.LC8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 357


 14503 0718 000040E3 		movt	r0, #:upper16:.LC8
 14504 071c FEFFFFEB 		bl	RME_Log
 14505              	.L932:
 14506              		.loc 1 5761 5
 14507 0720 FEFFFFEA 		b	.L932
 14508              	.L931:
5762:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5763:../../Source/Kernel/rme_kernel.c **** 
5764:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5765:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14509              		.loc 1 5765 7 is_stmt 1
 14510 0724 10301BE5 		ldr	r3, [fp, #-16]
 14511 0728 000053E3 		cmp	r3, #0
 14512 072c 0300001A 		bne	.L933
5766:../../Source/Kernel/rme_kernel.c ****     {
5767:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5768:../../Source/Kernel/rme_kernel.c **** 
5769:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14513              		.loc 1 5769 32
 14514 0730 18301BE5 		ldr	r3, [fp, #-24]
 14515 0734 0020A0E3 		mov	r2, #0
 14516 0738 382083E5 		str	r2, [r3, #56]
 14517 073c 100000EA 		b	.L934
 14518              	.L933:
5770:../../Source/Kernel/rme_kernel.c ****     }
5771:../../Source/Kernel/rme_kernel.c ****     else
5772:../../Source/Kernel/rme_kernel.c ****     {
5773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5774:../../Source/Kernel/rme_kernel.c **** 
5775:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5776:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 14519              		.loc 1 5776 33
 14520 0740 10301BE5 		ldr	r3, [fp, #-16]
 14521 0744 003093E5 		ldr	r3, [r3]
 14522 0748 7330FFE6 		uxth	r3, r3
 14523 074c 000053E3 		cmp	r3, #0
 14524 0750 0200000A 		beq	.L935
 14525              		.loc 1 5776 33 is_stmt 0 discriminator 1
 14526 0754 10301BE5 		ldr	r3, [fp, #-16]
 14527 0758 043093E5 		ldr	r3, [r3, #4]
 14528 075c 000000EA 		b	.L936
 14529              	.L935:
 14530              		.loc 1 5776 33 discriminator 2
 14531 0760 10301BE5 		ldr	r3, [fp, #-16]
 14532              	.L936:
 14533              		.loc 1 5776 32 is_stmt 1 discriminator 4
 14534 0764 18201BE5 		ldr	r2, [fp, #-24]
 14535 0768 383082E5 		str	r3, [r2, #56]
5777:../../Source/Kernel/rme_kernel.c ****         
5778:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5779:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14536              		.loc 1 5779 9
 14537 076c 18301BE5 		ldr	r3, [fp, #-24]
 14538 0770 383093E5 		ldr	r3, [r3, #56]
 14539 0774 043083E2 		add	r3, r3, #4
 14540 0778 0110A0E3 		mov	r1, #1
 14541 077c 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 358


 14542 0780 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14543              	.L934:
5780:../../Source/Kernel/rme_kernel.c ****     }
5781:../../Source/Kernel/rme_kernel.c ****     
5782:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
5783:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14544              		.loc 1 5783 20
 14545 0784 18301BE5 		ldr	r3, [fp, #-24]
 14546 0788 443093E5 		ldr	r3, [r3, #68]
 14547              		.loc 1 5783 7
 14548 078c 000053E3 		cmp	r3, #0
 14549 0790 020000AA 		bge	.L937
5784:../../Source/Kernel/rme_kernel.c ****     {
5785:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5786:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14550              		.loc 1 5786 25
 14551 0794 0C209BE5 		ldr	r2, [fp, #12]
 14552              		.loc 1 5786 24
 14553 0798 18301BE5 		ldr	r3, [fp, #-24]
 14554 079c 482083E5 		str	r2, [r3, #72]
 14555              	.L937:
5787:../../Source/Kernel/rme_kernel.c ****     }
5788:../../Source/Kernel/rme_kernel.c ****     else
5789:../../Source/Kernel/rme_kernel.c ****     {
5790:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5791:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5792:../../Source/Kernel/rme_kernel.c ****     }
5793:../../Source/Kernel/rme_kernel.c ****     
5794:../../Source/Kernel/rme_kernel.c ****     return 0;
 14556              		.loc 1 5794 12
 14557 07a0 0030A0E3 		mov	r3, #0
 14558              	.L885:
5795:../../Source/Kernel/rme_kernel.c **** }
 14559              		.loc 1 5795 1
 14560 07a4 0300A0E1 		mov	r0, r3
 14561 07a8 04D04BE2 		sub	sp, fp, #4
 14562              		.cfi_def_cfa 13, 8
 14563              		@ sp needed
 14564 07ac 0088BDE8 		pop	{fp, pc}
 14565              		.cfi_endproc
 14566              	.LFE58:
 14568              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14569              		.align	2
 14570              		.syntax unified
 14571              		.arm
 14573              	_RME_Thd_Sched_Free:
 14574              	.LFB59:
5796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5797:../../Source/Kernel/rme_kernel.c **** 
5798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5799:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5800:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5801:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5802:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5803:../../Source/Kernel/rme_kernel.c ****               its parent though.
5804:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5805:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 359


5806:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5807:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5808:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5809:../../Source/Kernel/rme_kernel.c **** Output      : None.
5810:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5811:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5812:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5813:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5814:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5815:../../Source/Kernel/rme_kernel.c **** {
 14575              		.loc 1 5815 1
 14576              		.cfi_startproc
 14577              		@ args = 0, pretend = 0, frame = 32
 14578              		@ frame_needed = 1, uses_anonymous_args = 0
 14579 0000 00482DE9 		push	{fp, lr}
 14580              		.cfi_def_cfa_offset 8
 14581              		.cfi_offset 11, -8
 14582              		.cfi_offset 14, -4
 14583 0004 04B08DE2 		add	fp, sp, #4
 14584              		.cfi_def_cfa 11, 4
 14585 0008 20D04DE2 		sub	sp, sp, #32
 14586 000c 18000BE5 		str	r0, [fp, #-24]
 14587 0010 1C100BE5 		str	r1, [fp, #-28]
 14588 0014 20200BE5 		str	r2, [fp, #-32]
5816:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5817:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5818:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5819:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5820:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5821:../../Source/Kernel/rme_kernel.c ****     
5822:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5823:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14589              		.loc 1 5823 5
 14590 0018 20301BE5 		ldr	r3, [fp, #-32]
 14591 001c 803003E2 		and	r3, r3, #128
 14592 0020 000053E3 		cmp	r3, #0
 14593 0024 1C00001A 		bne	.L940
 14594              		.loc 1 5823 5 is_stmt 0 discriminator 1
 14595 0028 18301BE5 		ldr	r3, [fp, #-24]
 14596 002c 142093E5 		ldr	r2, [r3, #20]
 14597 0030 20301BE5 		ldr	r3, [fp, #-32]
 14598 0034 030052E1 		cmp	r2, r3
 14599 0038 0100008A 		bhi	.L941
 14600              		.loc 1 5823 5 discriminator 3
 14601 003c 0230E0E3 		mvn	r3, #2
 14602              		.loc 1 5823 5
 14603 0040 D90000EA 		b	.L942
 14604              	.L941:
 14605              		.loc 1 5823 5 discriminator 4
 14606 0044 20301BE5 		ldr	r3, [fp, #-32]
 14607 0048 8322A0E1 		lsl	r2, r3, #5
 14608 004c 18301BE5 		ldr	r3, [fp, #-24]
 14609 0050 0C3093E5 		ldr	r3, [r3, #12]
 14610 0054 033082E0 		add	r3, r2, r3
 14611 0058 08300BE5 		str	r3, [fp, #-8]
 14612 005c 08301BE5 		ldr	r3, [fp, #-8]
 14613 0060 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 360


 14614 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14615 0068 0C000BE5 		str	r0, [fp, #-12]
 14616              		.loc 1 5823 5 discriminator 1
 14617 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14618 0070 FF3803E2 		and	r3, r3, #16711680
 14619 0074 020853E3 		cmp	r3, #131072
 14620 0078 0100001A 		bne	.L943
 14621              		.loc 1 5823 5 discriminator 5
 14622 007c 0830E0E3 		mvn	r3, #8
 14623              		.loc 1 5823 5
 14624 0080 C90000EA 		b	.L942
 14625              	.L943:
 14626              		.loc 1 5823 5 discriminator 6
 14627 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14628 0088 233CA0E1 		lsr	r3, r3, #24
 14629 008c 060053E3 		cmp	r3, #6
 14630 0090 3F00000A 		beq	.L944
 14631              		.loc 1 5823 5 discriminator 7
 14632 0094 0130E0E3 		mvn	r3, #1
 14633              		.loc 1 5823 5
 14634 0098 C30000EA 		b	.L942
 14635              	.L940:
 14636              		.loc 1 5823 5 discriminator 2
 14637 009c 20301BE5 		ldr	r3, [fp, #-32]
 14638 00a0 2324A0E1 		lsr	r2, r3, #8
 14639 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14640 00a8 143093E5 		ldr	r3, [r3, #20]
 14641 00ac 030052E1 		cmp	r2, r3
 14642 00b0 0100003A 		bcc	.L945
 14643              		.loc 1 5823 5 discriminator 8
 14644 00b4 0230E0E3 		mvn	r3, #2
 14645              		.loc 1 5823 5
 14646 00b8 BB0000EA 		b	.L942
 14647              	.L945:
 14648              		.loc 1 5823 5 discriminator 9
 14649 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14650 00c0 2334A0E1 		lsr	r3, r3, #8
 14651 00c4 8322A0E1 		lsl	r2, r3, #5
 14652 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14653 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14654 00d0 033082E0 		add	r3, r2, r3
 14655 00d4 08300BE5 		str	r3, [fp, #-8]
 14656 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14657 00dc 0300A0E1 		mov	r0, r3
 14658 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14659 00e4 0C000BE5 		str	r0, [fp, #-12]
 14660              		.loc 1 5823 5 discriminator 1
 14661 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14662 00ec FF3803E2 		and	r3, r3, #16711680
 14663 00f0 020853E3 		cmp	r3, #131072
 14664 00f4 0100001A 		bne	.L946
 14665              		.loc 1 5823 5 discriminator 10
 14666 00f8 0830E0E3 		mvn	r3, #8
 14667              		.loc 1 5823 5
 14668 00fc AA0000EA 		b	.L942
 14669              	.L946:
 14670              		.loc 1 5823 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 361


 14671 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14672 0104 233CA0E1 		lsr	r3, r3, #24
 14673 0108 030053E3 		cmp	r3, #3
 14674 010c 0100000A 		beq	.L947
 14675              		.loc 1 5823 5 discriminator 12
 14676 0110 0130E0E3 		mvn	r3, #1
 14677              		.loc 1 5823 5
 14678 0114 A40000EA 		b	.L942
 14679              	.L947:
 14680              		.loc 1 5823 5 discriminator 13
 14681 0118 20301BE5 		ldr	r3, [fp, #-32]
 14682 011c 7F2003E2 		and	r2, r3, #127
 14683 0120 08301BE5 		ldr	r3, [fp, #-8]
 14684 0124 143093E5 		ldr	r3, [r3, #20]
 14685 0128 030052E1 		cmp	r2, r3
 14686 012c 0100003A 		bcc	.L948
 14687              		.loc 1 5823 5 discriminator 14
 14688 0130 0230E0E3 		mvn	r3, #2
 14689              		.loc 1 5823 5
 14690 0134 9C0000EA 		b	.L942
 14691              	.L948:
 14692              		.loc 1 5823 5 discriminator 15
 14693 0138 20301BE5 		ldr	r3, [fp, #-32]
 14694 013c 7F3003E2 		and	r3, r3, #127
 14695 0140 8322A0E1 		lsl	r2, r3, #5
 14696 0144 08301BE5 		ldr	r3, [fp, #-8]
 14697 0148 0C3093E5 		ldr	r3, [r3, #12]
 14698 014c 033082E0 		add	r3, r2, r3
 14699 0150 08300BE5 		str	r3, [fp, #-8]
 14700 0154 08301BE5 		ldr	r3, [fp, #-8]
 14701 0158 0300A0E1 		mov	r0, r3
 14702 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14703 0160 0C000BE5 		str	r0, [fp, #-12]
 14704              		.loc 1 5823 5 discriminator 1
 14705 0164 0C301BE5 		ldr	r3, [fp, #-12]
 14706 0168 FF3803E2 		and	r3, r3, #16711680
 14707 016c 020853E3 		cmp	r3, #131072
 14708 0170 0100001A 		bne	.L949
 14709              		.loc 1 5823 5 discriminator 16
 14710 0174 0830E0E3 		mvn	r3, #8
 14711              		.loc 1 5823 5
 14712 0178 8B0000EA 		b	.L942
 14713              	.L949:
 14714              		.loc 1 5823 5 discriminator 17
 14715 017c 0C301BE5 		ldr	r3, [fp, #-12]
 14716 0180 233CA0E1 		lsr	r3, r3, #24
 14717 0184 060053E3 		cmp	r3, #6
 14718 0188 0100000A 		beq	.L944
 14719              		.loc 1 5823 5 discriminator 18
 14720 018c 0130E0E3 		mvn	r3, #1
 14721              		.loc 1 5823 5
 14722 0190 850000EA 		b	.L942
 14723              	.L944:
5824:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5825:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5826:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14724              		.loc 1 5826 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 362


 14725 0194 08301BE5 		ldr	r3, [fp, #-8]
 14726 0198 083093E5 		ldr	r3, [r3, #8]
 14727 019c 103003E2 		and	r3, r3, #16
 14728 01a0 000053E3 		cmp	r3, #0
 14729 01a4 0100001A 		bne	.L950
 14730              		.loc 1 5826 5 is_stmt 0 discriminator 1
 14731 01a8 0630E0E3 		mvn	r3, #6
 14732              		.loc 1 5826 5
 14733 01ac 7E0000EA 		b	.L942
 14734              	.L950:
5827:../../Source/Kernel/rme_kernel.c ****     
5828:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5829:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14735              		.loc 1 5829 10 is_stmt 1
 14736 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14737 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14738 01b8 10300BE5 		str	r3, [fp, #-16]
5830:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14739              		.loc 1 5830 48
 14740 01bc 08301BE5 		ldr	r3, [fp, #-8]
 14741 01c0 0C3093E5 		ldr	r3, [r3, #12]
 14742              		.loc 1 5830 11
 14743 01c4 14300BE5 		str	r3, [fp, #-20]
5831:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14744              		.loc 1 5831 21
 14745 01c8 14301BE5 		ldr	r3, [fp, #-20]
 14746 01cc 143093E5 		ldr	r3, [r3, #20]
 14747              		.loc 1 5831 7
 14748 01d0 10201BE5 		ldr	r2, [fp, #-16]
 14749 01d4 030052E1 		cmp	r2, r3
 14750 01d8 0100000A 		beq	.L951
5832:../../Source/Kernel/rme_kernel.c ****     {
5833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5834:../../Source/Kernel/rme_kernel.c **** 
5835:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14751              		.loc 1 5835 16
 14752 01dc CB30E0E3 		mvn	r3, #203
 14753 01e0 710000EA 		b	.L942
 14754              	.L951:
5836:../../Source/Kernel/rme_kernel.c ****     }
5837:../../Source/Kernel/rme_kernel.c ****     else
5838:../../Source/Kernel/rme_kernel.c ****     {
5839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5840:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5841:../../Source/Kernel/rme_kernel.c ****     }
5842:../../Source/Kernel/rme_kernel.c ****     
5843:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5844:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5845:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 14755              		.loc 1 5845 21
 14756 01e4 14301BE5 		ldr	r3, [fp, #-20]
 14757 01e8 303093E5 		ldr	r3, [r3, #48]
 14758              		.loc 1 5845 7
 14759 01ec 000053E3 		cmp	r3, #0
 14760 01f0 0100000A 		beq	.L952
5846:../../Source/Kernel/rme_kernel.c ****     {
5847:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 363


5848:../../Source/Kernel/rme_kernel.c **** 
5849:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 14761              		.loc 1 5849 16
 14762 01f4 CD30E0E3 		mvn	r3, #205
 14763 01f8 6B0000EA 		b	.L942
 14764              	.L952:
5850:../../Source/Kernel/rme_kernel.c ****     }
5851:../../Source/Kernel/rme_kernel.c ****     else
5852:../../Source/Kernel/rme_kernel.c ****     {
5853:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5854:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5855:../../Source/Kernel/rme_kernel.c ****     }
5856:../../Source/Kernel/rme_kernel.c **** 
5857:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5858:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 14765              		.loc 1 5858 18
 14766 01fc 14301BE5 		ldr	r3, [fp, #-20]
 14767 0200 343093E5 		ldr	r3, [r3, #52]
 14768              		.loc 1 5858 35
 14769 0204 302093E5 		ldr	r2, [r3, #48]
 14770              		.loc 1 5858 45
 14771 0208 012042E2 		sub	r2, r2, #1
 14772 020c 302083E5 		str	r2, [r3, #48]
5859:../../Source/Kernel/rme_kernel.c **** 
5860:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5861:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 14773              		.loc 1 5861 27
 14774 0210 14301BE5 		ldr	r3, [fp, #-20]
 14775 0214 082093E5 		ldr	r2, [r3, #8]
 14776              		.loc 1 5861 34
 14777 0218 14301BE5 		ldr	r3, [fp, #-20]
 14778 021c 083083E2 		add	r3, r3, #8
 14779              		.loc 1 5861 7
 14780 0220 030052E1 		cmp	r2, r3
 14781 0224 0A00000A 		beq	.L953
5862:../../Source/Kernel/rme_kernel.c ****     {
5863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5864:../../Source/Kernel/rme_kernel.c **** 
5865:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 14782              		.loc 1 5865 9
 14783 0228 14301BE5 		ldr	r3, [fp, #-20]
 14784 022c 0C2093E5 		ldr	r2, [r3, #12]
 14785 0230 14301BE5 		ldr	r3, [fp, #-20]
 14786 0234 083093E5 		ldr	r3, [r3, #8]
 14787 0238 0310A0E1 		mov	r1, r3
 14788 023c 0200A0E1 		mov	r0, r2
 14789 0240 FEFFFFEB 		bl	_RME_List_Del
5866:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 14790              		.loc 1 5866 9
 14791 0244 14301BE5 		ldr	r3, [fp, #-20]
 14792 0248 083083E2 		add	r3, r3, #8
 14793 024c 0300A0E1 		mov	r0, r3
 14794 0250 FEFFFFEB 		bl	_RME_List_Crt
 14795              	.L953:
5867:../../Source/Kernel/rme_kernel.c ****     }
5868:../../Source/Kernel/rme_kernel.c ****     else
5869:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 364


5870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5871:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5872:../../Source/Kernel/rme_kernel.c ****     }
5873:../../Source/Kernel/rme_kernel.c **** 
5874:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
5875:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 14796              		.loc 1 5875 21
 14797 0254 14301BE5 		ldr	r3, [fp, #-20]
 14798 0258 383093E5 		ldr	r3, [r3, #56]
 14799              		.loc 1 5875 7
 14800 025c 000053E3 		cmp	r3, #0
 14801 0260 0500000A 		beq	.L954
5876:../../Source/Kernel/rme_kernel.c ****     {
5877:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5878:../../Source/Kernel/rme_kernel.c **** 
5879:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 14802              		.loc 1 5879 9
 14803 0264 14301BE5 		ldr	r3, [fp, #-20]
 14804 0268 383093E5 		ldr	r3, [r3, #56]
 14805 026c 043083E2 		add	r3, r3, #4
 14806 0270 0010E0E3 		mvn	r1, #0
 14807 0274 0300A0E1 		mov	r0, r3
 14808 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14809              	.L954:
5880:../../Source/Kernel/rme_kernel.c ****     }
5881:../../Source/Kernel/rme_kernel.c ****     else
5882:../../Source/Kernel/rme_kernel.c ****     {
5883:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5884:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5885:../../Source/Kernel/rme_kernel.c ****     }
5886:../../Source/Kernel/rme_kernel.c **** 
5887:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5888:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14810              		.loc 1 5888 5
 14811 027c 0010A0E3 		mov	r1, #0
 14812 0280 1C001BE5 		ldr	r0, [fp, #-28]
 14813 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5889:../../Source/Kernel/rme_kernel.c ****     
5890:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5891:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5892:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5893:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5894:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5895:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 14814              		.loc 1 5895 21
 14815 0288 14301BE5 		ldr	r3, [fp, #-20]
 14816 028c 1C3093E5 		ldr	r3, [r3, #28]
 14817              		.loc 1 5895 7
 14818 0290 000053E3 		cmp	r3, #0
 14819 0294 0500001A 		bne	.L955
5896:../../Source/Kernel/rme_kernel.c ****     {
5897:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5898:../../Source/Kernel/rme_kernel.c **** 
5899:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5900:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 14820              		.loc 1 5900 9
 14821 0298 14001BE5 		ldr	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 365


 14822 029c FEFFFFEB 		bl	_RME_Run_Del
5901:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14823              		.loc 1 5901 28
 14824 02a0 14301BE5 		ldr	r3, [fp, #-20]
 14825 02a4 0220A0E3 		mov	r2, #2
 14826 02a8 1C2083E5 		str	r2, [r3, #28]
 14827 02ac 130000EA 		b	.L956
 14828              	.L955:
5902:../../Source/Kernel/rme_kernel.c ****     }
5903:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5904:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 14829              		.loc 1 5904 26
 14830 02b0 14301BE5 		ldr	r3, [fp, #-20]
 14831 02b4 1C3093E5 		ldr	r3, [r3, #28]
 14832              		.loc 1 5904 12
 14833 02b8 010053E3 		cmp	r3, #1
 14834 02bc 0F00001A 		bne	.L956
5905:../../Source/Kernel/rme_kernel.c ****     {
5906:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5907:../../Source/Kernel/rme_kernel.c ****         
5908:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5909:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5910:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 14835              		.loc 1 5910 43
 14836 02c0 14301BE5 		ldr	r3, [fp, #-20]
 14837 02c4 483093E5 		ldr	r3, [r3, #72]
 14838              		.loc 1 5910 9
 14839 02c8 CE1E0FE3 		movw	r1, #65230
 14840 02cc FF1F4FE3 		movt	r1, 65535
 14841 02d0 0300A0E1 		mov	r0, r3
 14842 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5911:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5912:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 14843              		.loc 1 5912 22
 14844 02d8 14301BE5 		ldr	r3, [fp, #-20]
 14845 02dc 283093E5 		ldr	r3, [r3, #40]
 14846              		.loc 1 5912 34
 14847 02e0 0020A0E3 		mov	r2, #0
 14848 02e4 182083E5 		str	r2, [r3, #24]
5913:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 14849              		.loc 1 5913 29
 14850 02e8 14301BE5 		ldr	r3, [fp, #-20]
 14851 02ec 0020A0E3 		mov	r2, #0
 14852 02f0 282083E5 		str	r2, [r3, #40]
5914:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5915:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14853              		.loc 1 5915 28
 14854 02f4 14301BE5 		ldr	r3, [fp, #-20]
 14855 02f8 0220A0E3 		mov	r2, #2
 14856 02fc 1C2083E5 		str	r2, [r3, #28]
 14857              	.L956:
5916:../../Source/Kernel/rme_kernel.c ****     }
5917:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5918:../../Source/Kernel/rme_kernel.c ****     else
5919:../../Source/Kernel/rme_kernel.c ****     {
5920:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5921:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 366


5922:../../Source/Kernel/rme_kernel.c ****     }
5923:../../Source/Kernel/rme_kernel.c **** 
5924:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5925:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 14858              		.loc 1 5925 24
 14859 0300 14301BE5 		ldr	r3, [fp, #-20]
 14860 0304 0020A0E3 		mov	r2, #0
 14861 0308 182083E5 		str	r2, [r3, #24]
5926:../../Source/Kernel/rme_kernel.c ****     
5927:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5928:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 14862              		.loc 1 5928 13
 14863 030c 10301BE5 		ldr	r3, [fp, #-16]
 14864 0310 043093E5 		ldr	r3, [r3, #4]
 14865              		.loc 1 5928 7
 14866 0314 14201BE5 		ldr	r2, [fp, #-20]
 14867 0318 030052E1 		cmp	r2, r3
 14868 031c 1C00001A 		bne	.L957
5929:../../Source/Kernel/rme_kernel.c ****     {
5930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5931:../../Source/Kernel/rme_kernel.c **** 
5932:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 14869              		.loc 1 5932 24
 14870 0320 10001BE5 		ldr	r0, [fp, #-16]
 14871 0324 FEFFFFEB 		bl	_RME_Run_High
 14872 0328 0020A0E1 		mov	r2, r0
 14873              		.loc 1 5932 23 discriminator 1
 14874 032c 10301BE5 		ldr	r3, [fp, #-16]
 14875 0330 042083E5 		str	r2, [r3, #4]
5933:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 14876              		.loc 1 5933 9
 14877 0334 10301BE5 		ldr	r3, [fp, #-16]
 14878 0338 043093E5 		ldr	r3, [r3, #4]
 14879 033c 0300A0E1 		mov	r0, r3
 14880 0340 FEFFFFEB 		bl	_RME_Run_Ins
5934:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 14881              		.loc 1 5934 9
 14882 0344 10301BE5 		ldr	r3, [fp, #-16]
 14883 0348 043093E5 		ldr	r3, [r3, #4]
 14884 034c 1C3093E5 		ldr	r3, [r3, #28]
 14885 0350 000053E3 		cmp	r3, #0
 14886 0354 0800000A 		beq	.L958
 14887              		.loc 1 5934 9 is_stmt 0 discriminator 1
 14888 0358 003000E3 		movw	r3, #:lower16:.LC6
 14889 035c 003040E3 		movt	r3, #:upper16:.LC6
 14890 0360 002000E3 		movw	r2, #:lower16:.LC7
 14891 0364 002040E3 		movt	r2, #:upper16:.LC7
 14892 0368 2E1701E3 		movw	r1, #5934
 14893 036c 000000E3 		movw	r0, #:lower16:.LC8
 14894 0370 000040E3 		movt	r0, #:upper16:.LC8
 14895 0374 FEFFFFEB 		bl	RME_Log
 14896              	.L959:
 14897              		.loc 1 5934 9
 14898 0378 FEFFFFEA 		b	.L959
 14899              	.L958:
5935:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 14900              		.loc 1 5935 9 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 367


 14901 037c 10301BE5 		ldr	r3, [fp, #-16]
 14902 0380 043093E5 		ldr	r3, [r3, #4]
 14903 0384 0320A0E1 		mov	r2, r3
 14904 0388 14101BE5 		ldr	r1, [fp, #-20]
 14905 038c 1C001BE5 		ldr	r0, [fp, #-28]
 14906 0390 FEFFFFEB 		bl	_RME_Run_Swt
 14907              	.L957:
5936:../../Source/Kernel/rme_kernel.c ****     }
5937:../../Source/Kernel/rme_kernel.c ****     else
5938:../../Source/Kernel/rme_kernel.c ****     {
5939:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5940:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5941:../../Source/Kernel/rme_kernel.c ****     }
5942:../../Source/Kernel/rme_kernel.c ****     
5943:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5944:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 14908              		.loc 1 5944 5
 14909 0394 14301BE5 		ldr	r3, [fp, #-20]
 14910 0398 143083E2 		add	r3, r3, #20
 14911 039c 0010E0E3 		mvn	r1, #0
 14912 03a0 0300A0E1 		mov	r0, r3
 14913 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5945:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5946:../../Source/Kernel/rme_kernel.c **** 
5947:../../Source/Kernel/rme_kernel.c ****     return 0;
 14914              		.loc 1 5947 12
 14915 03a8 0030A0E3 		mov	r3, #0
 14916              	.L942:
5948:../../Source/Kernel/rme_kernel.c **** }
 14917              		.loc 1 5948 1
 14918 03ac 0300A0E1 		mov	r0, r3
 14919 03b0 04D04BE2 		sub	sp, fp, #4
 14920              		.cfi_def_cfa 13, 8
 14921              		@ sp needed
 14922 03b4 0088BDE8 		pop	{fp, pc}
 14923              		.cfi_endproc
 14924              	.LFE59:
 14926              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 14927              		.align	2
 14928              		.syntax unified
 14929              		.arm
 14931              	_RME_Thd_Exec_Set:
 14932              	.LFB60:
5949:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5950:../../Source/Kernel/rme_kernel.c **** 
5951:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5952:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5953:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5954:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5955:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5956:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5957:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5958:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5959:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5960:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5961:../../Source/Kernel/rme_kernel.c **** Output      : None.
5962:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 368


5963:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5964:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5965:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5966:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5967:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
5968:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5969:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5970:../../Source/Kernel/rme_kernel.c **** {
 14933              		.loc 1 5970 1
 14934              		.cfi_startproc
 14935              		@ args = 8, pretend = 0, frame = 32
 14936              		@ frame_needed = 1, uses_anonymous_args = 0
 14937 0000 00482DE9 		push	{fp, lr}
 14938              		.cfi_def_cfa_offset 8
 14939              		.cfi_offset 11, -8
 14940              		.cfi_offset 14, -4
 14941 0004 04B08DE2 		add	fp, sp, #4
 14942              		.cfi_def_cfa 11, 4
 14943 0008 28D04DE2 		sub	sp, sp, #40
 14944 000c 18000BE5 		str	r0, [fp, #-24]
 14945 0010 1C100BE5 		str	r1, [fp, #-28]
 14946 0014 20200BE5 		str	r2, [fp, #-32]
 14947 0018 24300BE5 		str	r3, [fp, #-36]
5971:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5972:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5973:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5974:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5975:../../Source/Kernel/rme_kernel.c ****     
5976:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd ");
5977:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5978:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nEntry ");
5979:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Entry);
5980:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nStack ");
5981:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Stack);
5982:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nParam ");
5983:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Param);*/
5984:../../Source/Kernel/rme_kernel.c **** 
5985:../../Source/Kernel/rme_kernel.c **** 
5986:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5987:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14948              		.loc 1 5987 5
 14949 001c 20301BE5 		ldr	r3, [fp, #-32]
 14950 0020 803003E2 		and	r3, r3, #128
 14951 0024 000053E3 		cmp	r3, #0
 14952 0028 1C00001A 		bne	.L961
 14953              		.loc 1 5987 5 is_stmt 0 discriminator 1
 14954 002c 18301BE5 		ldr	r3, [fp, #-24]
 14955 0030 142093E5 		ldr	r2, [r3, #20]
 14956 0034 20301BE5 		ldr	r3, [fp, #-32]
 14957 0038 030052E1 		cmp	r2, r3
 14958 003c 0100008A 		bhi	.L962
 14959              		.loc 1 5987 5 discriminator 3
 14960 0040 0230E0E3 		mvn	r3, #2
 14961              		.loc 1 5987 5
 14962 0044 910000EA 		b	.L963
 14963              	.L962:
 14964              		.loc 1 5987 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 369


 14965 0048 20301BE5 		ldr	r3, [fp, #-32]
 14966 004c 8322A0E1 		lsl	r2, r3, #5
 14967 0050 18301BE5 		ldr	r3, [fp, #-24]
 14968 0054 0C3093E5 		ldr	r3, [r3, #12]
 14969 0058 033082E0 		add	r3, r2, r3
 14970 005c 08300BE5 		str	r3, [fp, #-8]
 14971 0060 08301BE5 		ldr	r3, [fp, #-8]
 14972 0064 0300A0E1 		mov	r0, r3
 14973 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14974 006c 0C000BE5 		str	r0, [fp, #-12]
 14975              		.loc 1 5987 5 discriminator 1
 14976 0070 0C301BE5 		ldr	r3, [fp, #-12]
 14977 0074 FF3803E2 		and	r3, r3, #16711680
 14978 0078 020853E3 		cmp	r3, #131072
 14979 007c 0100001A 		bne	.L964
 14980              		.loc 1 5987 5 discriminator 5
 14981 0080 0830E0E3 		mvn	r3, #8
 14982              		.loc 1 5987 5
 14983 0084 810000EA 		b	.L963
 14984              	.L964:
 14985              		.loc 1 5987 5 discriminator 6
 14986 0088 0C301BE5 		ldr	r3, [fp, #-12]
 14987 008c 233CA0E1 		lsr	r3, r3, #24
 14988 0090 060053E3 		cmp	r3, #6
 14989 0094 3F00000A 		beq	.L965
 14990              		.loc 1 5987 5 discriminator 7
 14991 0098 0130E0E3 		mvn	r3, #1
 14992              		.loc 1 5987 5
 14993 009c 7B0000EA 		b	.L963
 14994              	.L961:
 14995              		.loc 1 5987 5 discriminator 2
 14996 00a0 20301BE5 		ldr	r3, [fp, #-32]
 14997 00a4 2324A0E1 		lsr	r2, r3, #8
 14998 00a8 18301BE5 		ldr	r3, [fp, #-24]
 14999 00ac 143093E5 		ldr	r3, [r3, #20]
 15000 00b0 030052E1 		cmp	r2, r3
 15001 00b4 0100003A 		bcc	.L966
 15002              		.loc 1 5987 5 discriminator 8
 15003 00b8 0230E0E3 		mvn	r3, #2
 15004              		.loc 1 5987 5
 15005 00bc 730000EA 		b	.L963
 15006              	.L966:
 15007              		.loc 1 5987 5 discriminator 9
 15008 00c0 20301BE5 		ldr	r3, [fp, #-32]
 15009 00c4 2334A0E1 		lsr	r3, r3, #8
 15010 00c8 8322A0E1 		lsl	r2, r3, #5
 15011 00cc 18301BE5 		ldr	r3, [fp, #-24]
 15012 00d0 0C3093E5 		ldr	r3, [r3, #12]
 15013 00d4 033082E0 		add	r3, r2, r3
 15014 00d8 08300BE5 		str	r3, [fp, #-8]
 15015 00dc 08301BE5 		ldr	r3, [fp, #-8]
 15016 00e0 0300A0E1 		mov	r0, r3
 15017 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15018 00e8 0C000BE5 		str	r0, [fp, #-12]
 15019              		.loc 1 5987 5 discriminator 1
 15020 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 15021 00f0 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 370


 15022 00f4 020853E3 		cmp	r3, #131072
 15023 00f8 0100001A 		bne	.L967
 15024              		.loc 1 5987 5 discriminator 10
 15025 00fc 0830E0E3 		mvn	r3, #8
 15026              		.loc 1 5987 5
 15027 0100 620000EA 		b	.L963
 15028              	.L967:
 15029              		.loc 1 5987 5 discriminator 11
 15030 0104 0C301BE5 		ldr	r3, [fp, #-12]
 15031 0108 233CA0E1 		lsr	r3, r3, #24
 15032 010c 030053E3 		cmp	r3, #3
 15033 0110 0100000A 		beq	.L968
 15034              		.loc 1 5987 5 discriminator 12
 15035 0114 0130E0E3 		mvn	r3, #1
 15036              		.loc 1 5987 5
 15037 0118 5C0000EA 		b	.L963
 15038              	.L968:
 15039              		.loc 1 5987 5 discriminator 13
 15040 011c 20301BE5 		ldr	r3, [fp, #-32]
 15041 0120 7F2003E2 		and	r2, r3, #127
 15042 0124 08301BE5 		ldr	r3, [fp, #-8]
 15043 0128 143093E5 		ldr	r3, [r3, #20]
 15044 012c 030052E1 		cmp	r2, r3
 15045 0130 0100003A 		bcc	.L969
 15046              		.loc 1 5987 5 discriminator 14
 15047 0134 0230E0E3 		mvn	r3, #2
 15048              		.loc 1 5987 5
 15049 0138 540000EA 		b	.L963
 15050              	.L969:
 15051              		.loc 1 5987 5 discriminator 15
 15052 013c 20301BE5 		ldr	r3, [fp, #-32]
 15053 0140 7F3003E2 		and	r3, r3, #127
 15054 0144 8322A0E1 		lsl	r2, r3, #5
 15055 0148 08301BE5 		ldr	r3, [fp, #-8]
 15056 014c 0C3093E5 		ldr	r3, [r3, #12]
 15057 0150 033082E0 		add	r3, r2, r3
 15058 0154 08300BE5 		str	r3, [fp, #-8]
 15059 0158 08301BE5 		ldr	r3, [fp, #-8]
 15060 015c 0300A0E1 		mov	r0, r3
 15061 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15062 0164 0C000BE5 		str	r0, [fp, #-12]
 15063              		.loc 1 5987 5 discriminator 1
 15064 0168 0C301BE5 		ldr	r3, [fp, #-12]
 15065 016c FF3803E2 		and	r3, r3, #16711680
 15066 0170 020853E3 		cmp	r3, #131072
 15067 0174 0100001A 		bne	.L970
 15068              		.loc 1 5987 5 discriminator 16
 15069 0178 0830E0E3 		mvn	r3, #8
 15070              		.loc 1 5987 5
 15071 017c 430000EA 		b	.L963
 15072              	.L970:
 15073              		.loc 1 5987 5 discriminator 17
 15074 0180 0C301BE5 		ldr	r3, [fp, #-12]
 15075 0184 233CA0E1 		lsr	r3, r3, #24
 15076 0188 060053E3 		cmp	r3, #6
 15077 018c 0100000A 		beq	.L965
 15078              		.loc 1 5987 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 371


 15079 0190 0130E0E3 		mvn	r3, #1
 15080              		.loc 1 5987 5
 15081 0194 3D0000EA 		b	.L963
 15082              	.L965:
5988:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5989:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5990:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 15083              		.loc 1 5990 5 is_stmt 1
 15084 0198 08301BE5 		ldr	r3, [fp, #-8]
 15085 019c 083093E5 		ldr	r3, [r3, #8]
 15086 01a0 013003E2 		and	r3, r3, #1
 15087 01a4 000053E3 		cmp	r3, #0
 15088 01a8 0100001A 		bne	.L971
 15089              		.loc 1 5990 5 is_stmt 0 discriminator 1
 15090 01ac 0630E0E3 		mvn	r3, #6
 15091              		.loc 1 5990 5
 15092 01b0 360000EA 		b	.L963
 15093              	.L971:
5991:../../Source/Kernel/rme_kernel.c ****     
5992:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5993:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 15094              		.loc 1 5993 12 is_stmt 1
 15095 01b4 08301BE5 		ldr	r3, [fp, #-8]
 15096 01b8 0C3093E5 		ldr	r3, [r3, #12]
 15097              		.loc 1 5993 11
 15098 01bc 10300BE5 		str	r3, [fp, #-16]
5994:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15099              		.loc 1 5994 10
 15100 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15101 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15102 01c8 14300BE5 		str	r3, [fp, #-20]
5995:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15103              		.loc 1 5995 21
 15104 01cc 10301BE5 		ldr	r3, [fp, #-16]
 15105 01d0 143093E5 		ldr	r3, [r3, #20]
 15106              		.loc 1 5995 7
 15107 01d4 14201BE5 		ldr	r2, [fp, #-20]
 15108 01d8 030052E1 		cmp	r2, r3
 15109 01dc 0100000A 		beq	.L972
5996:../../Source/Kernel/rme_kernel.c ****     {
5997:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5998:../../Source/Kernel/rme_kernel.c **** 
5999:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15110              		.loc 1 5999 16
 15111 01e0 CB30E0E3 		mvn	r3, #203
 15112 01e4 290000EA 		b	.L963
 15113              	.L972:
6000:../../Source/Kernel/rme_kernel.c ****     }
6001:../../Source/Kernel/rme_kernel.c ****     else
6002:../../Source/Kernel/rme_kernel.c ****     {
6003:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6004:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6005:../../Source/Kernel/rme_kernel.c ****     }
6006:../../Source/Kernel/rme_kernel.c ****     
6007:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
6008:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
6009:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 372


 15114              		.loc 1 6009 7
 15115 01e8 24301BE5 		ldr	r3, [fp, #-36]
 15116 01ec 000053E3 		cmp	r3, #0
 15117 01f0 0C00000A 		beq	.L973
 15118              		.loc 1 6009 25 discriminator 1
 15119 01f4 04309BE5 		ldr	r3, [fp, #4]
 15120 01f8 000053E3 		cmp	r3, #0
 15121 01fc 0900000A 		beq	.L973
6010:../../Source/Kernel/rme_kernel.c ****     {
6011:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6012:../../Source/Kernel/rme_kernel.c **** 
6013:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 15122              		.loc 1 6013 28
 15123 0200 10301BE5 		ldr	r3, [fp, #-16]
 15124 0204 443093E5 		ldr	r3, [r3, #68]
 15125              		.loc 1 6013 9
 15126 0208 0201C3E3 		bic	r0, r3, #-2147483648
6014:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15127              		.loc 1 6014 59
 15128 020c 10301BE5 		ldr	r3, [fp, #-16]
 15129 0210 483093E5 		ldr	r3, [r3, #72]
6013:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15130              		.loc 1 6013 9
 15131 0214 00308DE5 		str	r3, [sp]
 15132 0218 08309BE5 		ldr	r3, [fp, #8]
 15133 021c 04209BE5 		ldr	r2, [fp, #4]
 15134 0220 24101BE5 		ldr	r1, [fp, #-36]
 15135 0224 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 15136              	.L973:
6015:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
6016:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
6017:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
6018:../../Source/Kernel/rme_kernel.c **** #endif
6019:../../Source/Kernel/rme_kernel.c ****     }
6020:../../Source/Kernel/rme_kernel.c ****     else
6021:../../Source/Kernel/rme_kernel.c ****     {
6022:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6023:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6024:../../Source/Kernel/rme_kernel.c ****     }
6025:../../Source/Kernel/rme_kernel.c ****     
6026:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6027:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15137              		.loc 1 6027 5
 15138 0228 0010A0E3 		mov	r1, #0
 15139 022c 1C001BE5 		ldr	r0, [fp, #-28]
 15140 0230 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6028:../../Source/Kernel/rme_kernel.c ****     
6029:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
6030:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15141              		.loc 1 6030 21
 15142 0234 10301BE5 		ldr	r3, [fp, #-16]
 15143 0238 1C3093E5 		ldr	r3, [r3, #28]
 15144              		.loc 1 6030 7
 15145 023c 030053E3 		cmp	r3, #3
 15146 0240 1100001A 		bne	.L974
6031:../../Source/Kernel/rme_kernel.c ****     {
6032:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 373


6033:../../Source/Kernel/rme_kernel.c ****         
6034:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
6035:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
6036:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 15147              		.loc 1 6036 25
 15148 0244 10301BE5 		ldr	r3, [fp, #-16]
 15149 0248 183093E5 		ldr	r3, [r3, #24]
 15150              		.loc 1 6036 11
 15151 024c 000053E3 		cmp	r3, #0
 15152 0250 0500000A 		beq	.L975
6037:../../Source/Kernel/rme_kernel.c ****         {
6038:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6039:../../Source/Kernel/rme_kernel.c ****             
6040:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6041:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
 15153              		.loc 1 6041 32
 15154 0254 10301BE5 		ldr	r3, [fp, #-16]
 15155 0258 0020A0E3 		mov	r2, #0
 15156 025c 1C2083E5 		str	r2, [r3, #28]
6042:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15157              		.loc 1 6042 13
 15158 0260 10001BE5 		ldr	r0, [fp, #-16]
 15159 0264 FEFFFFEB 		bl	_RME_Run_Ins
 15160 0268 040000EA 		b	.L976
 15161              	.L975:
6043:../../Source/Kernel/rme_kernel.c ****         }
6044:../../Source/Kernel/rme_kernel.c ****         else
6045:../../Source/Kernel/rme_kernel.c ****         {
6046:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6047:../../Source/Kernel/rme_kernel.c ****             
6048:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6049:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15162              		.loc 1 6049 32
 15163 026c 10301BE5 		ldr	r3, [fp, #-16]
 15164 0270 0220A0E3 		mov	r2, #2
 15165 0274 1C2083E5 		str	r2, [r3, #28]
6050:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15166              		.loc 1 6050 13
 15167 0278 10001BE5 		ldr	r0, [fp, #-16]
 15168 027c FEFFFFEB 		bl	_RME_Run_Notif
 15169              	.L976:
6051:../../Source/Kernel/rme_kernel.c ****         }
6052:../../Source/Kernel/rme_kernel.c ****         
6053:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
6054:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15170              		.loc 1 6054 9
 15171 0280 14101BE5 		ldr	r1, [fp, #-20]
 15172 0284 1C001BE5 		ldr	r0, [fp, #-28]
 15173 0288 FEFFFFEB 		bl	_RME_Kern_High
 15174              	.L974:
6055:../../Source/Kernel/rme_kernel.c ****     }
6056:../../Source/Kernel/rme_kernel.c ****     else
6057:../../Source/Kernel/rme_kernel.c ****     {
6058:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6059:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6060:../../Source/Kernel/rme_kernel.c ****     }
6061:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 374


6062:../../Source/Kernel/rme_kernel.c ****     return 0;
 15175              		.loc 1 6062 12
 15176 028c 0030A0E3 		mov	r3, #0
 15177              	.L963:
6063:../../Source/Kernel/rme_kernel.c **** }
 15178              		.loc 1 6063 1
 15179 0290 0300A0E1 		mov	r0, r3
 15180 0294 04D04BE2 		sub	sp, fp, #4
 15181              		.cfi_def_cfa 13, 8
 15182              		@ sp needed
 15183 0298 0088BDE8 		pop	{fp, pc}
 15184              		.cfi_endproc
 15185              	.LFE60:
 15187              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15188              		.align	2
 15189              		.syntax unified
 15190              		.arm
 15192              	_RME_Thd_Sched_Prio:
 15193              	.LFB61:
6064:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
6065:../../Source/Kernel/rme_kernel.c **** 
6066:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
6067:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
6068:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
6069:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
6070:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
6071:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
6072:../../Source/Kernel/rme_kernel.c ****               priority. 
6073:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6074:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6075:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
6076:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
6077:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
6078:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6079:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
6080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
6081:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6082:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
6083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
6084:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
6086:../../Source/Kernel/rme_kernel.c **** Output      : None.
6087:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6088:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6089:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
6090:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
6091:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
6092:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
6093:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
6094:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
6095:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
6096:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
6097:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
6098:../../Source/Kernel/rme_kernel.c **** {
 15194              		.loc 1 6098 1
 15195              		.cfi_startproc
 15196              		@ args = 20, pretend = 0, frame = 80
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 375


 15197              		@ frame_needed = 1, uses_anonymous_args = 0
 15198 0000 00482DE9 		push	{fp, lr}
 15199              		.cfi_def_cfa_offset 8
 15200              		.cfi_offset 11, -8
 15201              		.cfi_offset 14, -4
 15202 0004 04B08DE2 		add	fp, sp, #4
 15203              		.cfi_def_cfa 11, 4
 15204 0008 50D04DE2 		sub	sp, sp, #80
 15205 000c 48000BE5 		str	r0, [fp, #-72]
 15206 0010 4C100BE5 		str	r1, [fp, #-76]
 15207 0014 50200BE5 		str	r2, [fp, #-80]
 15208 0018 54300BE5 		str	r3, [fp, #-84]
6099:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
6100:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
6101:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
6102:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
6103:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
6104:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6105:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6106:../../Source/Kernel/rme_kernel.c ****     
6107:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6108:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15209              		.loc 1 6108 7
 15210 001c 50301BE5 		ldr	r3, [fp, #-80]
 15211 0020 000053E3 		cmp	r3, #0
 15212 0024 0200000A 		beq	.L978
 15213              		.loc 1 6108 20 discriminator 1
 15214 0028 50301BE5 		ldr	r3, [fp, #-80]
 15215 002c 030053E3 		cmp	r3, #3
 15216 0030 0100009A 		bls	.L979
 15217              	.L978:
6109:../../Source/Kernel/rme_kernel.c ****     {
6110:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6111:../../Source/Kernel/rme_kernel.c **** 
6112:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15218              		.loc 1 6112 16
 15219 0034 CB30E0E3 		mvn	r3, #203
 15220 0038 260100EA 		b	.L999
 15221              	.L979:
6113:../../Source/Kernel/rme_kernel.c ****     }
6114:../../Source/Kernel/rme_kernel.c ****     
6115:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6116:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15222              		.loc 1 6116 15
 15223 003c 54301BE5 		ldr	r3, [fp, #-84]
 15224 0040 1C300BE5 		str	r3, [fp, #-28]
6117:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15225              		.loc 1 6117 15
 15226 0044 08309BE5 		ldr	r3, [fp, #8]
 15227 0048 18300BE5 		str	r3, [fp, #-24]
6118:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15228              		.loc 1 6118 15
 15229 004c 10309BE5 		ldr	r3, [fp, #16]
 15230 0050 14300BE5 		str	r3, [fp, #-20]
6119:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15231              		.loc 1 6119 12
 15232 0054 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 376


 15233 0058 28300BE5 		str	r3, [fp, #-40]
6120:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15234              		.loc 1 6120 12
 15235 005c 0C309BE5 		ldr	r3, [fp, #12]
 15236 0060 24300BE5 		str	r3, [fp, #-36]
6121:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15237              		.loc 1 6121 12
 15238 0064 14309BE5 		ldr	r3, [fp, #20]
 15239 0068 20300BE5 		str	r3, [fp, #-32]
6122:../../Source/Kernel/rme_kernel.c **** 
6123:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15240              		.loc 1 6123 10
 15241 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15242 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15243 0074 0C300BE5 		str	r3, [fp, #-12]
6124:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15244              		.loc 1 6124 14
 15245 0078 0030A0E3 		mov	r3, #0
 15246 007c 08300BE5 		str	r3, [fp, #-8]
 15247              		.loc 1 6124 5
 15248 0080 D20000EA 		b	.L981
 15249              	.L994:
6125:../../Source/Kernel/rme_kernel.c ****     {
6126:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6127:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15250              		.loc 1 6127 9
 15251 0084 08301BE5 		ldr	r3, [fp, #-8]
 15252 0088 0331A0E1 		lsl	r3, r3, #2
 15253 008c 043043E2 		sub	r3, r3, #4
 15254 0090 0B3083E0 		add	r3, r3, fp
 15255 0094 183013E5 		ldr	r3, [r3, #-24]
 15256 0098 803003E2 		and	r3, r3, #128
 15257 009c 000053E3 		cmp	r3, #0
 15258 00a0 2E00001A 		bne	.L982
 15259              		.loc 1 6127 9 is_stmt 0 discriminator 1
 15260 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15261 00a8 0331A0E1 		lsl	r3, r3, #2
 15262 00ac 043043E2 		sub	r3, r3, #4
 15263 00b0 0B3083E0 		add	r3, r3, fp
 15264 00b4 183013E5 		ldr	r3, [r3, #-24]
 15265 00b8 0320A0E1 		mov	r2, r3
 15266 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15267 00c0 143093E5 		ldr	r3, [r3, #20]
 15268 00c4 030052E1 		cmp	r2, r3
 15269 00c8 0100003A 		bcc	.L983
 15270              		.loc 1 6127 9 discriminator 3
 15271 00cc 0230E0E3 		mvn	r3, #2
 15272              		.loc 1 6127 9
 15273 00d0 000100EA 		b	.L999
 15274              	.L983:
 15275              		.loc 1 6127 9 discriminator 4
 15276 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15277 00d8 0331A0E1 		lsl	r3, r3, #2
 15278 00dc 043043E2 		sub	r3, r3, #4
 15279 00e0 0B3083E0 		add	r3, r3, fp
 15280 00e4 183013E5 		ldr	r3, [r3, #-24]
 15281 00e8 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 377


 15282 00ec 48301BE5 		ldr	r3, [fp, #-72]
 15283 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15284 00f4 033082E0 		add	r3, r2, r3
 15285 00f8 0320A0E1 		mov	r2, r3
 15286 00fc 08301BE5 		ldr	r3, [fp, #-8]
 15287 0100 0331A0E1 		lsl	r3, r3, #2
 15288 0104 043043E2 		sub	r3, r3, #4
 15289 0108 0B3083E0 		add	r3, r3, fp
 15290 010c 302003E5 		str	r2, [r3, #-48]
 15291 0110 08301BE5 		ldr	r3, [fp, #-8]
 15292 0114 0331A0E1 		lsl	r3, r3, #2
 15293 0118 043043E2 		sub	r3, r3, #4
 15294 011c 0B3083E0 		add	r3, r3, fp
 15295 0120 303013E5 		ldr	r3, [r3, #-48]
 15296 0124 0300A0E1 		mov	r0, r3
 15297 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15298 012c 10000BE5 		str	r0, [fp, #-16]
 15299              		.loc 1 6127 9 discriminator 1
 15300 0130 10301BE5 		ldr	r3, [fp, #-16]
 15301 0134 FF3803E2 		and	r3, r3, #16711680
 15302 0138 020853E3 		cmp	r3, #131072
 15303 013c 0100001A 		bne	.L984
 15304              		.loc 1 6127 9 discriminator 5
 15305 0140 0830E0E3 		mvn	r3, #8
 15306              		.loc 1 6127 9
 15307 0144 E30000EA 		b	.L999
 15308              	.L984:
 15309              		.loc 1 6127 9 discriminator 6
 15310 0148 10301BE5 		ldr	r3, [fp, #-16]
 15311 014c 233CA0E1 		lsr	r3, r3, #24
 15312 0150 060053E3 		cmp	r3, #6
 15313 0154 6900000A 		beq	.L985
 15314              		.loc 1 6127 9 discriminator 7
 15315 0158 0130E0E3 		mvn	r3, #1
 15316              		.loc 1 6127 9
 15317 015c DD0000EA 		b	.L999
 15318              	.L982:
 15319              		.loc 1 6127 9 discriminator 2
 15320 0160 08301BE5 		ldr	r3, [fp, #-8]
 15321 0164 0331A0E1 		lsl	r3, r3, #2
 15322 0168 043043E2 		sub	r3, r3, #4
 15323 016c 0B3083E0 		add	r3, r3, fp
 15324 0170 183013E5 		ldr	r3, [r3, #-24]
 15325 0174 2324A0E1 		lsr	r2, r3, #8
 15326 0178 48301BE5 		ldr	r3, [fp, #-72]
 15327 017c 143093E5 		ldr	r3, [r3, #20]
 15328 0180 030052E1 		cmp	r2, r3
 15329 0184 0100003A 		bcc	.L986
 15330              		.loc 1 6127 9 discriminator 8
 15331 0188 0230E0E3 		mvn	r3, #2
 15332              		.loc 1 6127 9
 15333 018c D10000EA 		b	.L999
 15334              	.L986:
 15335              		.loc 1 6127 9 discriminator 9
 15336 0190 08301BE5 		ldr	r3, [fp, #-8]
 15337 0194 0331A0E1 		lsl	r3, r3, #2
 15338 0198 043043E2 		sub	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 378


 15339 019c 0B3083E0 		add	r3, r3, fp
 15340 01a0 183013E5 		ldr	r3, [r3, #-24]
 15341 01a4 2334A0E1 		lsr	r3, r3, #8
 15342 01a8 8322A0E1 		lsl	r2, r3, #5
 15343 01ac 48301BE5 		ldr	r3, [fp, #-72]
 15344 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15345 01b4 033082E0 		add	r3, r2, r3
 15346 01b8 0320A0E1 		mov	r2, r3
 15347 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15348 01c0 0331A0E1 		lsl	r3, r3, #2
 15349 01c4 043043E2 		sub	r3, r3, #4
 15350 01c8 0B3083E0 		add	r3, r3, fp
 15351 01cc 302003E5 		str	r2, [r3, #-48]
 15352 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15353 01d4 0331A0E1 		lsl	r3, r3, #2
 15354 01d8 043043E2 		sub	r3, r3, #4
 15355 01dc 0B3083E0 		add	r3, r3, fp
 15356 01e0 303013E5 		ldr	r3, [r3, #-48]
 15357 01e4 0300A0E1 		mov	r0, r3
 15358 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15359 01ec 10000BE5 		str	r0, [fp, #-16]
 15360              		.loc 1 6127 9 discriminator 1
 15361 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15362 01f4 FF3803E2 		and	r3, r3, #16711680
 15363 01f8 020853E3 		cmp	r3, #131072
 15364 01fc 0100001A 		bne	.L987
 15365              		.loc 1 6127 9 discriminator 10
 15366 0200 0830E0E3 		mvn	r3, #8
 15367              		.loc 1 6127 9
 15368 0204 B30000EA 		b	.L999
 15369              	.L987:
 15370              		.loc 1 6127 9 discriminator 11
 15371 0208 10301BE5 		ldr	r3, [fp, #-16]
 15372 020c 233CA0E1 		lsr	r3, r3, #24
 15373 0210 030053E3 		cmp	r3, #3
 15374 0214 0100000A 		beq	.L988
 15375              		.loc 1 6127 9 discriminator 12
 15376 0218 0130E0E3 		mvn	r3, #1
 15377              		.loc 1 6127 9
 15378 021c AD0000EA 		b	.L999
 15379              	.L988:
 15380              		.loc 1 6127 9 discriminator 13
 15381 0220 08301BE5 		ldr	r3, [fp, #-8]
 15382 0224 0331A0E1 		lsl	r3, r3, #2
 15383 0228 043043E2 		sub	r3, r3, #4
 15384 022c 0B3083E0 		add	r3, r3, fp
 15385 0230 183013E5 		ldr	r3, [r3, #-24]
 15386 0234 7F2003E2 		and	r2, r3, #127
 15387 0238 08301BE5 		ldr	r3, [fp, #-8]
 15388 023c 0331A0E1 		lsl	r3, r3, #2
 15389 0240 043043E2 		sub	r3, r3, #4
 15390 0244 0B3083E0 		add	r3, r3, fp
 15391 0248 303013E5 		ldr	r3, [r3, #-48]
 15392 024c 143093E5 		ldr	r3, [r3, #20]
 15393 0250 030052E1 		cmp	r2, r3
 15394 0254 0100003A 		bcc	.L989
 15395              		.loc 1 6127 9 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 379


 15396 0258 0230E0E3 		mvn	r3, #2
 15397              		.loc 1 6127 9
 15398 025c 9D0000EA 		b	.L999
 15399              	.L989:
 15400              		.loc 1 6127 9 discriminator 15
 15401 0260 08301BE5 		ldr	r3, [fp, #-8]
 15402 0264 0331A0E1 		lsl	r3, r3, #2
 15403 0268 043043E2 		sub	r3, r3, #4
 15404 026c 0B3083E0 		add	r3, r3, fp
 15405 0270 183013E5 		ldr	r3, [r3, #-24]
 15406 0274 7F3003E2 		and	r3, r3, #127
 15407 0278 8322A0E1 		lsl	r2, r3, #5
 15408 027c 08301BE5 		ldr	r3, [fp, #-8]
 15409 0280 0331A0E1 		lsl	r3, r3, #2
 15410 0284 043043E2 		sub	r3, r3, #4
 15411 0288 0B3083E0 		add	r3, r3, fp
 15412 028c 303013E5 		ldr	r3, [r3, #-48]
 15413 0290 0C3093E5 		ldr	r3, [r3, #12]
 15414 0294 033082E0 		add	r3, r2, r3
 15415 0298 0320A0E1 		mov	r2, r3
 15416 029c 08301BE5 		ldr	r3, [fp, #-8]
 15417 02a0 0331A0E1 		lsl	r3, r3, #2
 15418 02a4 043043E2 		sub	r3, r3, #4
 15419 02a8 0B3083E0 		add	r3, r3, fp
 15420 02ac 302003E5 		str	r2, [r3, #-48]
 15421 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15422 02b4 0331A0E1 		lsl	r3, r3, #2
 15423 02b8 043043E2 		sub	r3, r3, #4
 15424 02bc 0B3083E0 		add	r3, r3, fp
 15425 02c0 303013E5 		ldr	r3, [r3, #-48]
 15426 02c4 0300A0E1 		mov	r0, r3
 15427 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15428 02cc 10000BE5 		str	r0, [fp, #-16]
 15429              		.loc 1 6127 9 discriminator 1
 15430 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15431 02d4 FF3803E2 		and	r3, r3, #16711680
 15432 02d8 020853E3 		cmp	r3, #131072
 15433 02dc 0100001A 		bne	.L990
 15434              		.loc 1 6127 9 discriminator 16
 15435 02e0 0830E0E3 		mvn	r3, #8
 15436              		.loc 1 6127 9
 15437 02e4 7B0000EA 		b	.L999
 15438              	.L990:
 15439              		.loc 1 6127 9 discriminator 17
 15440 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15441 02ec 233CA0E1 		lsr	r3, r3, #24
 15442 02f0 060053E3 		cmp	r3, #6
 15443 02f4 0100000A 		beq	.L985
 15444              		.loc 1 6127 9 discriminator 18
 15445 02f8 0130E0E3 		mvn	r3, #1
 15446              		.loc 1 6127 9
 15447 02fc 750000EA 		b	.L999
 15448              	.L985:
6128:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6129:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6130:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15449              		.loc 1 6130 9 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 380


 15450 0300 08301BE5 		ldr	r3, [fp, #-8]
 15451 0304 0331A0E1 		lsl	r3, r3, #2
 15452 0308 043043E2 		sub	r3, r3, #4
 15453 030c 0B3083E0 		add	r3, r3, fp
 15454 0310 303013E5 		ldr	r3, [r3, #-48]
 15455 0314 083093E5 		ldr	r3, [r3, #8]
 15456 0318 083003E2 		and	r3, r3, #8
 15457 031c 000053E3 		cmp	r3, #0
 15458 0320 0100001A 		bne	.L991
 15459              		.loc 1 6130 9 is_stmt 0 discriminator 1
 15460 0324 0630E0E3 		mvn	r3, #6
 15461              		.loc 1 6130 9
 15462 0328 6A0000EA 		b	.L999
 15463              	.L991:
6131:../../Source/Kernel/rme_kernel.c ****         
6132:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6133:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15464              		.loc 1 6133 54 is_stmt 1
 15465 032c 08301BE5 		ldr	r3, [fp, #-8]
 15466 0330 0331A0E1 		lsl	r3, r3, #2
 15467 0334 043043E2 		sub	r3, r3, #4
 15468 0338 0B3083E0 		add	r3, r3, fp
 15469 033c 303013E5 		ldr	r3, [r3, #-48]
 15470              		.loc 1 6133 67
 15471 0340 0C3093E5 		ldr	r3, [r3, #12]
 15472              		.loc 1 6133 23
 15473 0344 0320A0E1 		mov	r2, r3
 15474              		.loc 1 6133 22
 15475 0348 08301BE5 		ldr	r3, [fp, #-8]
 15476 034c 0331A0E1 		lsl	r3, r3, #2
 15477 0350 043043E2 		sub	r3, r3, #4
 15478 0354 0B3083E0 		add	r3, r3, fp
 15479 0358 3C2003E5 		str	r2, [r3, #-60]
6134:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 15480              		.loc 1 6134 18
 15481 035c 08301BE5 		ldr	r3, [fp, #-8]
 15482 0360 0331A0E1 		lsl	r3, r3, #2
 15483 0364 043043E2 		sub	r3, r3, #4
 15484 0368 0B3083E0 		add	r3, r3, fp
 15485 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15486              		.loc 1 6134 32
 15487 0370 143093E5 		ldr	r3, [r3, #20]
 15488              		.loc 1 6134 11
 15489 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15490 0378 030052E1 		cmp	r2, r3
 15491 037c 0100000A 		beq	.L992
6135:../../Source/Kernel/rme_kernel.c ****         {
6136:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6137:../../Source/Kernel/rme_kernel.c **** 
6138:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15492              		.loc 1 6138 20
 15493 0380 CB30E0E3 		mvn	r3, #203
 15494 0384 530000EA 		b	.L999
 15495              	.L992:
6139:../../Source/Kernel/rme_kernel.c ****         }
6140:../../Source/Kernel/rme_kernel.c ****         else
6141:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 381


6142:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6143:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6144:../../Source/Kernel/rme_kernel.c ****         }
6145:../../Source/Kernel/rme_kernel.c ****         
6146:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6147:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15496              		.loc 1 6147 18
 15497 0388 08301BE5 		ldr	r3, [fp, #-8]
 15498 038c 0331A0E1 		lsl	r3, r3, #2
 15499 0390 043043E2 		sub	r3, r3, #4
 15500 0394 0B3083E0 		add	r3, r3, fp
 15501 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15502              		.loc 1 6147 32
 15503 039c 242093E5 		ldr	r2, [r3, #36]
 15504              		.loc 1 6147 46
 15505 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15506 03a4 0331A0E1 		lsl	r3, r3, #2
 15507 03a8 043043E2 		sub	r3, r3, #4
 15508 03ac 0B3083E0 		add	r3, r3, fp
 15509 03b0 243013E5 		ldr	r3, [r3, #-36]
 15510              		.loc 1 6147 11
 15511 03b4 030052E1 		cmp	r2, r3
 15512 03b8 0100002A 		bcs	.L993
6148:../../Source/Kernel/rme_kernel.c ****         {
6149:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6150:../../Source/Kernel/rme_kernel.c **** 
6151:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15513              		.loc 1 6151 20
 15514 03bc CC30E0E3 		mvn	r3, #204
 15515 03c0 440000EA 		b	.L999
 15516              	.L993:
6124:../../Source/Kernel/rme_kernel.c ****     {
 15517              		.loc 1 6124 36 discriminator 2
 15518 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15519 03c8 013083E2 		add	r3, r3, #1
 15520 03cc 08300BE5 		str	r3, [fp, #-8]
 15521              	.L981:
6124:../../Source/Kernel/rme_kernel.c ****     {
 15522              		.loc 1 6124 23 discriminator 1
 15523 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15524 03d4 50301BE5 		ldr	r3, [fp, #-80]
 15525 03d8 030052E1 		cmp	r2, r3
 15526 03dc 28FFFF3A 		bcc	.L994
6152:../../Source/Kernel/rme_kernel.c ****         }
6153:../../Source/Kernel/rme_kernel.c ****         else
6154:../../Source/Kernel/rme_kernel.c ****         {
6155:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6156:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6157:../../Source/Kernel/rme_kernel.c ****         }
6158:../../Source/Kernel/rme_kernel.c ****     }
6159:../../Source/Kernel/rme_kernel.c ****     
6160:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6161:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15527              		.loc 1 6161 5
 15528 03e0 0010A0E3 		mov	r1, #0
 15529 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15530 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 382


6162:../../Source/Kernel/rme_kernel.c ****     
6163:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6164:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6165:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15531              		.loc 1 6165 14
 15532 03ec 0030A0E3 		mov	r3, #0
 15533 03f0 08300BE5 		str	r3, [fp, #-8]
 15534              		.loc 1 6165 5
 15535 03f4 2F0000EA 		b	.L995
 15536              	.L998:
6166:../../Source/Kernel/rme_kernel.c ****     {
6167:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6168:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15537              		.loc 1 6168 18
 15538 03f8 08301BE5 		ldr	r3, [fp, #-8]
 15539 03fc 0331A0E1 		lsl	r3, r3, #2
 15540 0400 043043E2 		sub	r3, r3, #4
 15541 0404 0B3083E0 		add	r3, r3, fp
 15542 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15543              		.loc 1 6168 32
 15544 040c 1C3093E5 		ldr	r3, [r3, #28]
 15545              		.loc 1 6168 11
 15546 0410 000053E3 		cmp	r3, #0
 15547 0414 1900001A 		bne	.L996
6169:../../Source/Kernel/rme_kernel.c ****         {
6170:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6171:../../Source/Kernel/rme_kernel.c **** 
6172:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6173:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15548              		.loc 1 6173 13
 15549 0418 08301BE5 		ldr	r3, [fp, #-8]
 15550 041c 0331A0E1 		lsl	r3, r3, #2
 15551 0420 043043E2 		sub	r3, r3, #4
 15552 0424 0B3083E0 		add	r3, r3, fp
 15553 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15554 042c 0300A0E1 		mov	r0, r3
 15555 0430 FEFFFFEB 		bl	_RME_Run_Del
6174:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15556              		.loc 1 6174 19
 15557 0434 08301BE5 		ldr	r3, [fp, #-8]
 15558 0438 0331A0E1 		lsl	r3, r3, #2
 15559 043c 043043E2 		sub	r3, r3, #4
 15560 0440 0B3083E0 		add	r3, r3, fp
 15561 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15562              		.loc 1 6174 43
 15563 0448 08301BE5 		ldr	r3, [fp, #-8]
 15564 044c 0331A0E1 		lsl	r3, r3, #2
 15565 0450 043043E2 		sub	r3, r3, #4
 15566 0454 0B3083E0 		add	r3, r3, fp
 15567 0458 243013E5 		ldr	r3, [r3, #-36]
 15568              		.loc 1 6174 38
 15569 045c 203082E5 		str	r3, [r2, #32]
6175:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15570              		.loc 1 6175 13
 15571 0460 08301BE5 		ldr	r3, [fp, #-8]
 15572 0464 0331A0E1 		lsl	r3, r3, #2
 15573 0468 043043E2 		sub	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 383


 15574 046c 0B3083E0 		add	r3, r3, fp
 15575 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15576 0474 0300A0E1 		mov	r0, r3
 15577 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15578 047c 0A0000EA 		b	.L997
 15579              	.L996:
6176:../../Source/Kernel/rme_kernel.c ****         }
6177:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6178:../../Source/Kernel/rme_kernel.c ****         else
6179:../../Source/Kernel/rme_kernel.c ****         {
6180:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6181:../../Source/Kernel/rme_kernel.c **** 
6182:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15580              		.loc 1 6182 19
 15581 0480 08301BE5 		ldr	r3, [fp, #-8]
 15582 0484 0331A0E1 		lsl	r3, r3, #2
 15583 0488 043043E2 		sub	r3, r3, #4
 15584 048c 0B3083E0 		add	r3, r3, fp
 15585 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15586              		.loc 1 6182 43
 15587 0494 08301BE5 		ldr	r3, [fp, #-8]
 15588 0498 0331A0E1 		lsl	r3, r3, #2
 15589 049c 043043E2 		sub	r3, r3, #4
 15590 04a0 0B3083E0 		add	r3, r3, fp
 15591 04a4 243013E5 		ldr	r3, [r3, #-36]
 15592              		.loc 1 6182 38
 15593 04a8 203082E5 		str	r3, [r2, #32]
 15594              	.L997:
6165:../../Source/Kernel/rme_kernel.c ****     {
 15595              		.loc 1 6165 36 discriminator 2
 15596 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15597 04b0 013083E2 		add	r3, r3, #1
 15598 04b4 08300BE5 		str	r3, [fp, #-8]
 15599              	.L995:
6165:../../Source/Kernel/rme_kernel.c ****     {
 15600              		.loc 1 6165 23 discriminator 1
 15601 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15602 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15603 04c0 030052E1 		cmp	r2, r3
 15604 04c4 CBFFFF3A 		bcc	.L998
6183:../../Source/Kernel/rme_kernel.c ****         }
6184:../../Source/Kernel/rme_kernel.c ****     }
6185:../../Source/Kernel/rme_kernel.c ****     
6186:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6187:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15605              		.loc 1 6187 5
 15606 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15607 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15608 04d0 FEFFFFEB 		bl	_RME_Kern_High
6188:../../Source/Kernel/rme_kernel.c **** 
6189:../../Source/Kernel/rme_kernel.c ****     return 0;
 15609              		.loc 1 6189 12
 15610 04d4 0030A0E3 		mov	r3, #0
 15611              	.L999:
6190:../../Source/Kernel/rme_kernel.c **** }
 15612              		.loc 1 6190 1
 15613 04d8 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 384


 15614 04dc 04D04BE2 		sub	sp, fp, #4
 15615              		.cfi_def_cfa 13, 8
 15616              		@ sp needed
 15617 04e0 0088BDE8 		pop	{fp, pc}
 15618              		.cfi_endproc
 15619              	.LFE61:
 15621              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15622              		.align	2
 15623              		.syntax unified
 15624              		.arm
 15626              	_RME_Thd_Sched_Rcv:
 15627              	.LFB62:
6191:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6192:../../Source/Kernel/rme_kernel.c **** 
6193:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6194:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6195:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6196:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6197:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6198:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6199:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6200:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6201:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6202:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6203:../../Source/Kernel/rme_kernel.c **** Output      : None.
6204:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6205:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6206:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6207:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6208:../../Source/Kernel/rme_kernel.c **** {
 15628              		.loc 1 6208 1
 15629              		.cfi_startproc
 15630              		@ args = 0, pretend = 0, frame = 32
 15631              		@ frame_needed = 1, uses_anonymous_args = 0
 15632 0000 00482DE9 		push	{fp, lr}
 15633              		.cfi_def_cfa_offset 8
 15634              		.cfi_offset 11, -8
 15635              		.cfi_offset 14, -4
 15636 0004 04B08DE2 		add	fp, sp, #4
 15637              		.cfi_def_cfa 11, 4
 15638 0008 20D04DE2 		sub	sp, sp, #32
 15639 000c 20000BE5 		str	r0, [fp, #-32]
 15640 0010 24100BE5 		str	r1, [fp, #-36]
6209:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6210:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6211:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6213:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6214:../../Source/Kernel/rme_kernel.c ****     
6215:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6216:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15641              		.loc 1 6216 5
 15642 0014 24301BE5 		ldr	r3, [fp, #-36]
 15643 0018 803003E2 		and	r3, r3, #128
 15644 001c 000053E3 		cmp	r3, #0
 15645 0020 1C00001A 		bne	.L1001
 15646              		.loc 1 6216 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 385


 15647 0024 20301BE5 		ldr	r3, [fp, #-32]
 15648 0028 142093E5 		ldr	r2, [r3, #20]
 15649 002c 24301BE5 		ldr	r3, [fp, #-36]
 15650 0030 030052E1 		cmp	r2, r3
 15651 0034 0100008A 		bhi	.L1002
 15652              		.loc 1 6216 5 discriminator 3
 15653 0038 0230E0E3 		mvn	r3, #2
 15654              		.loc 1 6216 5
 15655 003c 970000EA 		b	.L1003
 15656              	.L1002:
 15657              		.loc 1 6216 5 discriminator 4
 15658 0040 24301BE5 		ldr	r3, [fp, #-36]
 15659 0044 8322A0E1 		lsl	r2, r3, #5
 15660 0048 20301BE5 		ldr	r3, [fp, #-32]
 15661 004c 0C3093E5 		ldr	r3, [r3, #12]
 15662 0050 033082E0 		add	r3, r2, r3
 15663 0054 08300BE5 		str	r3, [fp, #-8]
 15664 0058 08301BE5 		ldr	r3, [fp, #-8]
 15665 005c 0300A0E1 		mov	r0, r3
 15666 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15667 0064 10000BE5 		str	r0, [fp, #-16]
 15668              		.loc 1 6216 5 discriminator 1
 15669 0068 10301BE5 		ldr	r3, [fp, #-16]
 15670 006c FF3803E2 		and	r3, r3, #16711680
 15671 0070 020853E3 		cmp	r3, #131072
 15672 0074 0100001A 		bne	.L1004
 15673              		.loc 1 6216 5 discriminator 5
 15674 0078 0830E0E3 		mvn	r3, #8
 15675              		.loc 1 6216 5
 15676 007c 870000EA 		b	.L1003
 15677              	.L1004:
 15678              		.loc 1 6216 5 discriminator 6
 15679 0080 10301BE5 		ldr	r3, [fp, #-16]
 15680 0084 233CA0E1 		lsr	r3, r3, #24
 15681 0088 060053E3 		cmp	r3, #6
 15682 008c 3F00000A 		beq	.L1005
 15683              		.loc 1 6216 5 discriminator 7
 15684 0090 0130E0E3 		mvn	r3, #1
 15685              		.loc 1 6216 5
 15686 0094 810000EA 		b	.L1003
 15687              	.L1001:
 15688              		.loc 1 6216 5 discriminator 2
 15689 0098 24301BE5 		ldr	r3, [fp, #-36]
 15690 009c 2324A0E1 		lsr	r2, r3, #8
 15691 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15692 00a4 143093E5 		ldr	r3, [r3, #20]
 15693 00a8 030052E1 		cmp	r2, r3
 15694 00ac 0100003A 		bcc	.L1006
 15695              		.loc 1 6216 5 discriminator 8
 15696 00b0 0230E0E3 		mvn	r3, #2
 15697              		.loc 1 6216 5
 15698 00b4 790000EA 		b	.L1003
 15699              	.L1006:
 15700              		.loc 1 6216 5 discriminator 9
 15701 00b8 24301BE5 		ldr	r3, [fp, #-36]
 15702 00bc 2334A0E1 		lsr	r3, r3, #8
 15703 00c0 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 386


 15704 00c4 20301BE5 		ldr	r3, [fp, #-32]
 15705 00c8 0C3093E5 		ldr	r3, [r3, #12]
 15706 00cc 033082E0 		add	r3, r2, r3
 15707 00d0 08300BE5 		str	r3, [fp, #-8]
 15708 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15709 00d8 0300A0E1 		mov	r0, r3
 15710 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15711 00e0 10000BE5 		str	r0, [fp, #-16]
 15712              		.loc 1 6216 5 discriminator 1
 15713 00e4 10301BE5 		ldr	r3, [fp, #-16]
 15714 00e8 FF3803E2 		and	r3, r3, #16711680
 15715 00ec 020853E3 		cmp	r3, #131072
 15716 00f0 0100001A 		bne	.L1007
 15717              		.loc 1 6216 5 discriminator 10
 15718 00f4 0830E0E3 		mvn	r3, #8
 15719              		.loc 1 6216 5
 15720 00f8 680000EA 		b	.L1003
 15721              	.L1007:
 15722              		.loc 1 6216 5 discriminator 11
 15723 00fc 10301BE5 		ldr	r3, [fp, #-16]
 15724 0100 233CA0E1 		lsr	r3, r3, #24
 15725 0104 030053E3 		cmp	r3, #3
 15726 0108 0100000A 		beq	.L1008
 15727              		.loc 1 6216 5 discriminator 12
 15728 010c 0130E0E3 		mvn	r3, #1
 15729              		.loc 1 6216 5
 15730 0110 620000EA 		b	.L1003
 15731              	.L1008:
 15732              		.loc 1 6216 5 discriminator 13
 15733 0114 24301BE5 		ldr	r3, [fp, #-36]
 15734 0118 7F2003E2 		and	r2, r3, #127
 15735 011c 08301BE5 		ldr	r3, [fp, #-8]
 15736 0120 143093E5 		ldr	r3, [r3, #20]
 15737 0124 030052E1 		cmp	r2, r3
 15738 0128 0100003A 		bcc	.L1009
 15739              		.loc 1 6216 5 discriminator 14
 15740 012c 0230E0E3 		mvn	r3, #2
 15741              		.loc 1 6216 5
 15742 0130 5A0000EA 		b	.L1003
 15743              	.L1009:
 15744              		.loc 1 6216 5 discriminator 15
 15745 0134 24301BE5 		ldr	r3, [fp, #-36]
 15746 0138 7F3003E2 		and	r3, r3, #127
 15747 013c 8322A0E1 		lsl	r2, r3, #5
 15748 0140 08301BE5 		ldr	r3, [fp, #-8]
 15749 0144 0C3093E5 		ldr	r3, [r3, #12]
 15750 0148 033082E0 		add	r3, r2, r3
 15751 014c 08300BE5 		str	r3, [fp, #-8]
 15752 0150 08301BE5 		ldr	r3, [fp, #-8]
 15753 0154 0300A0E1 		mov	r0, r3
 15754 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15755 015c 10000BE5 		str	r0, [fp, #-16]
 15756              		.loc 1 6216 5 discriminator 1
 15757 0160 10301BE5 		ldr	r3, [fp, #-16]
 15758 0164 FF3803E2 		and	r3, r3, #16711680
 15759 0168 020853E3 		cmp	r3, #131072
 15760 016c 0100001A 		bne	.L1010
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 387


 15761              		.loc 1 6216 5 discriminator 16
 15762 0170 0830E0E3 		mvn	r3, #8
 15763              		.loc 1 6216 5
 15764 0174 490000EA 		b	.L1003
 15765              	.L1010:
 15766              		.loc 1 6216 5 discriminator 17
 15767 0178 10301BE5 		ldr	r3, [fp, #-16]
 15768 017c 233CA0E1 		lsr	r3, r3, #24
 15769 0180 060053E3 		cmp	r3, #6
 15770 0184 0100000A 		beq	.L1005
 15771              		.loc 1 6216 5 discriminator 18
 15772 0188 0130E0E3 		mvn	r3, #1
 15773              		.loc 1 6216 5
 15774 018c 430000EA 		b	.L1003
 15775              	.L1005:
6217:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6218:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6219:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 15776              		.loc 1 6219 5 is_stmt 1
 15777 0190 08301BE5 		ldr	r3, [fp, #-8]
 15778 0194 083093E5 		ldr	r3, [r3, #8]
 15779 0198 203003E2 		and	r3, r3, #32
 15780 019c 000053E3 		cmp	r3, #0
 15781 01a0 0100001A 		bne	.L1011
 15782              		.loc 1 6219 5 is_stmt 0 discriminator 1
 15783 01a4 0630E0E3 		mvn	r3, #6
 15784              		.loc 1 6219 5
 15785 01a8 3C0000EA 		b	.L1003
 15786              	.L1011:
6220:../../Source/Kernel/rme_kernel.c ****     
6221:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6222:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15787              		.loc 1 6222 51 is_stmt 1
 15788 01ac 08301BE5 		ldr	r3, [fp, #-8]
 15789 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15790              		.loc 1 6222 14
 15791 01b4 14300BE5 		str	r3, [fp, #-20]
6223:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 15792              		.loc 1 6223 24
 15793 01b8 14301BE5 		ldr	r3, [fp, #-20]
 15794 01bc 142093E5 		ldr	r2, [r3, #20]
 15795              		.loc 1 6223 7
 15796 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15797 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15798 01c8 030052E1 		cmp	r2, r3
 15799 01cc 0100000A 		beq	.L1012
6224:../../Source/Kernel/rme_kernel.c ****     {
6225:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6226:../../Source/Kernel/rme_kernel.c **** 
6227:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15800              		.loc 1 6227 16
 15801 01d0 CB30E0E3 		mvn	r3, #203
 15802 01d4 310000EA 		b	.L1003
 15803              	.L1012:
6228:../../Source/Kernel/rme_kernel.c ****     }
6229:../../Source/Kernel/rme_kernel.c ****     else
6230:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 388


6231:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6232:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6233:../../Source/Kernel/rme_kernel.c ****     }
6234:../../Source/Kernel/rme_kernel.c ****     
6235:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6236:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 15804              		.loc 1 6236 30
 15805 01d8 14301BE5 		ldr	r3, [fp, #-20]
 15806 01dc 3C2093E5 		ldr	r2, [r3, #60]
 15807              		.loc 1 6236 37
 15808 01e0 14301BE5 		ldr	r3, [fp, #-20]
 15809 01e4 3C3083E2 		add	r3, r3, #60
 15810              		.loc 1 6236 7
 15811 01e8 030052E1 		cmp	r2, r3
 15812 01ec 0100001A 		bne	.L1013
6237:../../Source/Kernel/rme_kernel.c ****     {
6238:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6239:../../Source/Kernel/rme_kernel.c **** 
6240:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 15813              		.loc 1 6240 16
 15814 01f0 CE30E0E3 		mvn	r3, #206
 15815 01f4 290000EA 		b	.L1003
 15816              	.L1013:
6241:../../Source/Kernel/rme_kernel.c ****     }
6242:../../Source/Kernel/rme_kernel.c ****     else
6243:../../Source/Kernel/rme_kernel.c ****     {
6244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6245:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6246:../../Source/Kernel/rme_kernel.c ****     }
6247:../../Source/Kernel/rme_kernel.c ****     
6248:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6249:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 15817              		.loc 1 6249 59
 15818 01f8 14301BE5 		ldr	r3, [fp, #-20]
 15819 01fc 3C3093E5 		ldr	r3, [r3, #60]
 15820              		.loc 1 6249 11
 15821 0200 083043E2 		sub	r3, r3, #8
 15822 0204 18300BE5 		str	r3, [fp, #-24]
6250:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15823              		.loc 1 6250 5
 15824 0208 18301BE5 		ldr	r3, [fp, #-24]
 15825 020c 0C2093E5 		ldr	r2, [r3, #12]
 15826 0210 18301BE5 		ldr	r3, [fp, #-24]
 15827 0214 083093E5 		ldr	r3, [r3, #8]
 15828 0218 0310A0E1 		mov	r1, r3
 15829 021c 0200A0E1 		mov	r0, r2
 15830 0220 FEFFFFEB 		bl	_RME_List_Del
6251:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6252:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 15831              		.loc 1 6252 5
 15832 0224 18301BE5 		ldr	r3, [fp, #-24]
 15833 0228 083083E2 		add	r3, r3, #8
 15834 022c 0300A0E1 		mov	r0, r3
 15835 0230 FEFFFFEB 		bl	_RME_List_Crt
6253:../../Source/Kernel/rme_kernel.c ****     
6254:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6255:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 389


 15836              		.loc 1 6255 21
 15837 0234 18301BE5 		ldr	r3, [fp, #-24]
 15838 0238 1C3093E5 		ldr	r3, [r3, #28]
 15839              		.loc 1 6255 7
 15840 023c 030053E3 		cmp	r3, #3
 15841 0240 0900001A 		bne	.L1014
6256:../../Source/Kernel/rme_kernel.c ****     {
6257:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6258:../../Source/Kernel/rme_kernel.c ****         
6259:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 15842              		.loc 1 6259 13
 15843 0244 0131A0E3 		mov	r3, #1073741824
 15844 0248 0C300BE5 		str	r3, [fp, #-12]
6260:../../Source/Kernel/rme_kernel.c ****         
6261:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6262:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 15845              		.loc 1 6262 25
 15846 024c 18301BE5 		ldr	r3, [fp, #-24]
 15847 0250 183093E5 		ldr	r3, [r3, #24]
 15848              		.loc 1 6262 11
 15849 0254 000053E3 		cmp	r3, #0
 15850 0258 0C00001A 		bne	.L1015
6263:../../Source/Kernel/rme_kernel.c ****         {
6264:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6265:../../Source/Kernel/rme_kernel.c ****             
6266:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 15851              		.loc 1 6266 17
 15852 025c 0C301BE5 		ldr	r3, [fp, #-12]
 15853 0260 023283E3 		orr	r3, r3, #536870912
 15854 0264 0C300BE5 		str	r3, [fp, #-12]
 15855 0268 080000EA 		b	.L1015
 15856              	.L1014:
6267:../../Source/Kernel/rme_kernel.c ****         }
6268:../../Source/Kernel/rme_kernel.c ****         else
6269:../../Source/Kernel/rme_kernel.c ****         {
6270:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6271:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6272:../../Source/Kernel/rme_kernel.c ****         }
6273:../../Source/Kernel/rme_kernel.c ****     }
6274:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6275:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 15857              		.loc 1 6275 26
 15858 026c 18301BE5 		ldr	r3, [fp, #-24]
 15859 0270 1C3093E5 		ldr	r3, [r3, #28]
 15860              		.loc 1 6275 12
 15861 0274 020053E3 		cmp	r3, #2
 15862 0278 0200001A 		bne	.L1016
6276:../../Source/Kernel/rme_kernel.c ****     {
6277:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6278:../../Source/Kernel/rme_kernel.c ****         
6279:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 15863              		.loc 1 6279 13
 15864 027c 0232A0E3 		mov	r3, #536870912
 15865 0280 0C300BE5 		str	r3, [fp, #-12]
 15866 0284 010000EA 		b	.L1015
 15867              	.L1016:
6280:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 390


6281:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6282:../../Source/Kernel/rme_kernel.c ****     else
6283:../../Source/Kernel/rme_kernel.c ****     {
6284:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6285:../../Source/Kernel/rme_kernel.c ****         
6286:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 15868              		.loc 1 6286 13
 15869 0288 0030A0E3 		mov	r3, #0
 15870 028c 0C300BE5 		str	r3, [fp, #-12]
 15871              	.L1015:
6287:../../Source/Kernel/rme_kernel.c ****     }
6288:../../Source/Kernel/rme_kernel.c ****     
6289:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6290:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 15872              		.loc 1 6290 37
 15873 0290 18301BE5 		ldr	r3, [fp, #-24]
 15874 0294 102093E5 		ldr	r2, [r3, #16]
 15875              		.loc 1 6290 41
 15876 0298 0C301BE5 		ldr	r3, [fp, #-12]
 15877 029c 033082E1 		orr	r3, r2, r3
 15878              	.L1003:
6291:../../Source/Kernel/rme_kernel.c **** }
 15879              		.loc 1 6291 1
 15880 02a0 0300A0E1 		mov	r0, r3
 15881 02a4 04D04BE2 		sub	sp, fp, #4
 15882              		.cfi_def_cfa 13, 8
 15883              		@ sp needed
 15884 02a8 0088BDE8 		pop	{fp, pc}
 15885              		.cfi_endproc
 15886              	.LFE62:
 15888              		.section	.rodata
 15889              		.align	2
 15890              	.LC13:
 15891 00e4 0D0A524D 		.ascii	"\015\012RME_ERR_PTH_INVSTATE\000"
 15891      455F4552 
 15891      525F5054 
 15891      485F494E 
 15891      56535441 
 15892              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 15893              		.align	2
 15894              		.syntax unified
 15895              		.arm
 15897              	_RME_Thd_Time_Xfer:
 15898              	.LFB63:
6292:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6293:../../Source/Kernel/rme_kernel.c **** 
6294:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6295:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6296:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6297:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6298:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6299:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6300:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6301:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6302:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6303:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6304:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 391


6305:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6306:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6307:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6308:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6309:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6310:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6311:../../Source/Kernel/rme_kernel.c ****                                 budget.
6312:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6313:../../Source/Kernel/rme_kernel.c ****                                     budget.
6314:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6315:../../Source/Kernel/rme_kernel.c ****                                   budget.
6316:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6317:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6318:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6319:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6320:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6321:../../Source/Kernel/rme_kernel.c ****                                       budget.
6322:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6323:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6324:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6325:../../Source/Kernel/rme_kernel.c ****                                       thread.
6326:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6327:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6328:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6329:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6330:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6331:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6332:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6333:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6334:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6335:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6336:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6337:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6338:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6339:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6340:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6341:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6342:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6343:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6344:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6345:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6346:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6347:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6348:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6349:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6350:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6351:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6352:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6353:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6354:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6355:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6356:../../Source/Kernel/rme_kernel.c ****               Notations:
6357:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6358:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6359:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6360:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6361:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 392


6362:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6363:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6364:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6365:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6366:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6367:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6368:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6369:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6370:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6371:../../Source/Kernel/rme_kernel.c **** Output      : None.
6372:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6373:../../Source/Kernel/rme_kernel.c ****                           error code.
6374:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6375:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6376:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6377:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6378:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6379:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6380:../../Source/Kernel/rme_kernel.c **** {
 15899              		.loc 1 6380 1
 15900              		.cfi_startproc
 15901              		@ args = 4, pretend = 0, frame = 48
 15902              		@ frame_needed = 1, uses_anonymous_args = 0
 15903 0000 00482DE9 		push	{fp, lr}
 15904              		.cfi_def_cfa_offset 8
 15905              		.cfi_offset 11, -8
 15906              		.cfi_offset 14, -4
 15907 0004 04B08DE2 		add	fp, sp, #4
 15908              		.cfi_def_cfa 11, 4
 15909 0008 30D04DE2 		sub	sp, sp, #48
 15910 000c 28000BE5 		str	r0, [fp, #-40]
 15911 0010 2C100BE5 		str	r1, [fp, #-44]
 15912 0014 30200BE5 		str	r2, [fp, #-48]
 15913 0018 34300BE5 		str	r3, [fp, #-52]
6381:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6382:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6383:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6384:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6385:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6386:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6387:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6388:../../Source/Kernel/rme_kernel.c ****     
6389:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd_Dst ");
6390:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Dst);
6391:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Src ");
6392:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Src);
6393:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTime ");
6394:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Time);*/
6395:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6396:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 15914              		.loc 1 6396 7
 15915 001c 04309BE5 		ldr	r3, [fp, #4]
 15916 0020 000053E3 		cmp	r3, #0
 15917 0024 0100001A 		bne	.L1018
6397:../../Source/Kernel/rme_kernel.c ****     {
6398:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6399:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 393


6400:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15918              		.loc 1 6400 16
 15919 0028 CB30E0E3 		mvn	r3, #203
 15920 002c 7A0100EA 		b	.L1019
 15921              	.L1018:
6401:../../Source/Kernel/rme_kernel.c ****     }
6402:../../Source/Kernel/rme_kernel.c ****     else
6403:../../Source/Kernel/rme_kernel.c ****     {
6404:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6405:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6406:../../Source/Kernel/rme_kernel.c ****     }
6407:../../Source/Kernel/rme_kernel.c ****     
6408:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6409:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 15922              		.loc 1 6409 5
 15923 0030 30301BE5 		ldr	r3, [fp, #-48]
 15924 0034 803003E2 		and	r3, r3, #128
 15925 0038 000053E3 		cmp	r3, #0
 15926 003c 1C00001A 		bne	.L1020
 15927              		.loc 1 6409 5 is_stmt 0 discriminator 1
 15928 0040 28301BE5 		ldr	r3, [fp, #-40]
 15929 0044 142093E5 		ldr	r2, [r3, #20]
 15930 0048 30301BE5 		ldr	r3, [fp, #-48]
 15931 004c 030052E1 		cmp	r2, r3
 15932 0050 0100008A 		bhi	.L1021
 15933              		.loc 1 6409 5 discriminator 3
 15934 0054 0230E0E3 		mvn	r3, #2
 15935              		.loc 1 6409 5
 15936 0058 6F0100EA 		b	.L1019
 15937              	.L1021:
 15938              		.loc 1 6409 5 discriminator 4
 15939 005c 30301BE5 		ldr	r3, [fp, #-48]
 15940 0060 8322A0E1 		lsl	r2, r3, #5
 15941 0064 28301BE5 		ldr	r3, [fp, #-40]
 15942 0068 0C3093E5 		ldr	r3, [r3, #12]
 15943 006c 033082E0 		add	r3, r2, r3
 15944 0070 08300BE5 		str	r3, [fp, #-8]
 15945 0074 08301BE5 		ldr	r3, [fp, #-8]
 15946 0078 0300A0E1 		mov	r0, r3
 15947 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15948 0080 14000BE5 		str	r0, [fp, #-20]
 15949              		.loc 1 6409 5 discriminator 1
 15950 0084 14301BE5 		ldr	r3, [fp, #-20]
 15951 0088 FF3803E2 		and	r3, r3, #16711680
 15952 008c 020853E3 		cmp	r3, #131072
 15953 0090 0100001A 		bne	.L1022
 15954              		.loc 1 6409 5 discriminator 5
 15955 0094 0830E0E3 		mvn	r3, #8
 15956              		.loc 1 6409 5
 15957 0098 5F0100EA 		b	.L1019
 15958              	.L1022:
 15959              		.loc 1 6409 5 discriminator 6
 15960 009c 14301BE5 		ldr	r3, [fp, #-20]
 15961 00a0 233CA0E1 		lsr	r3, r3, #24
 15962 00a4 060053E3 		cmp	r3, #6
 15963 00a8 3F00000A 		beq	.L1023
 15964              		.loc 1 6409 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 394


 15965 00ac 0130E0E3 		mvn	r3, #1
 15966              		.loc 1 6409 5
 15967 00b0 590100EA 		b	.L1019
 15968              	.L1020:
 15969              		.loc 1 6409 5 discriminator 2
 15970 00b4 30301BE5 		ldr	r3, [fp, #-48]
 15971 00b8 2324A0E1 		lsr	r2, r3, #8
 15972 00bc 28301BE5 		ldr	r3, [fp, #-40]
 15973 00c0 143093E5 		ldr	r3, [r3, #20]
 15974 00c4 030052E1 		cmp	r2, r3
 15975 00c8 0100003A 		bcc	.L1024
 15976              		.loc 1 6409 5 discriminator 8
 15977 00cc 0230E0E3 		mvn	r3, #2
 15978              		.loc 1 6409 5
 15979 00d0 510100EA 		b	.L1019
 15980              	.L1024:
 15981              		.loc 1 6409 5 discriminator 9
 15982 00d4 30301BE5 		ldr	r3, [fp, #-48]
 15983 00d8 2334A0E1 		lsr	r3, r3, #8
 15984 00dc 8322A0E1 		lsl	r2, r3, #5
 15985 00e0 28301BE5 		ldr	r3, [fp, #-40]
 15986 00e4 0C3093E5 		ldr	r3, [r3, #12]
 15987 00e8 033082E0 		add	r3, r2, r3
 15988 00ec 08300BE5 		str	r3, [fp, #-8]
 15989 00f0 08301BE5 		ldr	r3, [fp, #-8]
 15990 00f4 0300A0E1 		mov	r0, r3
 15991 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15992 00fc 14000BE5 		str	r0, [fp, #-20]
 15993              		.loc 1 6409 5 discriminator 1
 15994 0100 14301BE5 		ldr	r3, [fp, #-20]
 15995 0104 FF3803E2 		and	r3, r3, #16711680
 15996 0108 020853E3 		cmp	r3, #131072
 15997 010c 0100001A 		bne	.L1025
 15998              		.loc 1 6409 5 discriminator 10
 15999 0110 0830E0E3 		mvn	r3, #8
 16000              		.loc 1 6409 5
 16001 0114 400100EA 		b	.L1019
 16002              	.L1025:
 16003              		.loc 1 6409 5 discriminator 11
 16004 0118 14301BE5 		ldr	r3, [fp, #-20]
 16005 011c 233CA0E1 		lsr	r3, r3, #24
 16006 0120 030053E3 		cmp	r3, #3
 16007 0124 0100000A 		beq	.L1026
 16008              		.loc 1 6409 5 discriminator 12
 16009 0128 0130E0E3 		mvn	r3, #1
 16010              		.loc 1 6409 5
 16011 012c 3A0100EA 		b	.L1019
 16012              	.L1026:
 16013              		.loc 1 6409 5 discriminator 13
 16014 0130 30301BE5 		ldr	r3, [fp, #-48]
 16015 0134 7F2003E2 		and	r2, r3, #127
 16016 0138 08301BE5 		ldr	r3, [fp, #-8]
 16017 013c 143093E5 		ldr	r3, [r3, #20]
 16018 0140 030052E1 		cmp	r2, r3
 16019 0144 0100003A 		bcc	.L1027
 16020              		.loc 1 6409 5 discriminator 14
 16021 0148 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 395


 16022              		.loc 1 6409 5
 16023 014c 320100EA 		b	.L1019
 16024              	.L1027:
 16025              		.loc 1 6409 5 discriminator 15
 16026 0150 30301BE5 		ldr	r3, [fp, #-48]
 16027 0154 7F3003E2 		and	r3, r3, #127
 16028 0158 8322A0E1 		lsl	r2, r3, #5
 16029 015c 08301BE5 		ldr	r3, [fp, #-8]
 16030 0160 0C3093E5 		ldr	r3, [r3, #12]
 16031 0164 033082E0 		add	r3, r2, r3
 16032 0168 08300BE5 		str	r3, [fp, #-8]
 16033 016c 08301BE5 		ldr	r3, [fp, #-8]
 16034 0170 0300A0E1 		mov	r0, r3
 16035 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16036 0178 14000BE5 		str	r0, [fp, #-20]
 16037              		.loc 1 6409 5 discriminator 1
 16038 017c 14301BE5 		ldr	r3, [fp, #-20]
 16039 0180 FF3803E2 		and	r3, r3, #16711680
 16040 0184 020853E3 		cmp	r3, #131072
 16041 0188 0100001A 		bne	.L1028
 16042              		.loc 1 6409 5 discriminator 16
 16043 018c 0830E0E3 		mvn	r3, #8
 16044              		.loc 1 6409 5
 16045 0190 210100EA 		b	.L1019
 16046              	.L1028:
 16047              		.loc 1 6409 5 discriminator 17
 16048 0194 14301BE5 		ldr	r3, [fp, #-20]
 16049 0198 233CA0E1 		lsr	r3, r3, #24
 16050 019c 060053E3 		cmp	r3, #6
 16051 01a0 0100000A 		beq	.L1023
 16052              		.loc 1 6409 5 discriminator 18
 16053 01a4 0130E0E3 		mvn	r3, #1
 16054              		.loc 1 6409 5
 16055 01a8 1B0100EA 		b	.L1019
 16056              	.L1023:
6410:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6411:../../Source/Kernel/rme_kernel.c **** 
6412:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 16057              		.loc 1 6412 5 is_stmt 1
 16058 01ac 34301BE5 		ldr	r3, [fp, #-52]
 16059 01b0 803003E2 		and	r3, r3, #128
 16060 01b4 000053E3 		cmp	r3, #0
 16061 01b8 1C00001A 		bne	.L1029
 16062              		.loc 1 6412 5 is_stmt 0 discriminator 1
 16063 01bc 28301BE5 		ldr	r3, [fp, #-40]
 16064 01c0 142093E5 		ldr	r2, [r3, #20]
 16065 01c4 34301BE5 		ldr	r3, [fp, #-52]
 16066 01c8 030052E1 		cmp	r2, r3
 16067 01cc 0100008A 		bhi	.L1030
 16068              		.loc 1 6412 5 discriminator 3
 16069 01d0 0230E0E3 		mvn	r3, #2
 16070              		.loc 1 6412 5
 16071 01d4 100100EA 		b	.L1019
 16072              	.L1030:
 16073              		.loc 1 6412 5 discriminator 4
 16074 01d8 34301BE5 		ldr	r3, [fp, #-52]
 16075 01dc 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 396


 16076 01e0 28301BE5 		ldr	r3, [fp, #-40]
 16077 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16078 01e8 033082E0 		add	r3, r2, r3
 16079 01ec 0C300BE5 		str	r3, [fp, #-12]
 16080 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 16081 01f4 0300A0E1 		mov	r0, r3
 16082 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16083 01fc 14000BE5 		str	r0, [fp, #-20]
 16084              		.loc 1 6412 5 discriminator 1
 16085 0200 14301BE5 		ldr	r3, [fp, #-20]
 16086 0204 FF3803E2 		and	r3, r3, #16711680
 16087 0208 020853E3 		cmp	r3, #131072
 16088 020c 0100001A 		bne	.L1031
 16089              		.loc 1 6412 5 discriminator 5
 16090 0210 0830E0E3 		mvn	r3, #8
 16091              		.loc 1 6412 5
 16092 0214 000100EA 		b	.L1019
 16093              	.L1031:
 16094              		.loc 1 6412 5 discriminator 6
 16095 0218 14301BE5 		ldr	r3, [fp, #-20]
 16096 021c 233CA0E1 		lsr	r3, r3, #24
 16097 0220 060053E3 		cmp	r3, #6
 16098 0224 3F00000A 		beq	.L1032
 16099              		.loc 1 6412 5 discriminator 7
 16100 0228 0130E0E3 		mvn	r3, #1
 16101              		.loc 1 6412 5
 16102 022c FA0000EA 		b	.L1019
 16103              	.L1029:
 16104              		.loc 1 6412 5 discriminator 2
 16105 0230 34301BE5 		ldr	r3, [fp, #-52]
 16106 0234 2324A0E1 		lsr	r2, r3, #8
 16107 0238 28301BE5 		ldr	r3, [fp, #-40]
 16108 023c 143093E5 		ldr	r3, [r3, #20]
 16109 0240 030052E1 		cmp	r2, r3
 16110 0244 0100003A 		bcc	.L1033
 16111              		.loc 1 6412 5 discriminator 8
 16112 0248 0230E0E3 		mvn	r3, #2
 16113              		.loc 1 6412 5
 16114 024c F20000EA 		b	.L1019
 16115              	.L1033:
 16116              		.loc 1 6412 5 discriminator 9
 16117 0250 34301BE5 		ldr	r3, [fp, #-52]
 16118 0254 2334A0E1 		lsr	r3, r3, #8
 16119 0258 8322A0E1 		lsl	r2, r3, #5
 16120 025c 28301BE5 		ldr	r3, [fp, #-40]
 16121 0260 0C3093E5 		ldr	r3, [r3, #12]
 16122 0264 033082E0 		add	r3, r2, r3
 16123 0268 0C300BE5 		str	r3, [fp, #-12]
 16124 026c 0C301BE5 		ldr	r3, [fp, #-12]
 16125 0270 0300A0E1 		mov	r0, r3
 16126 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16127 0278 14000BE5 		str	r0, [fp, #-20]
 16128              		.loc 1 6412 5 discriminator 1
 16129 027c 14301BE5 		ldr	r3, [fp, #-20]
 16130 0280 FF3803E2 		and	r3, r3, #16711680
 16131 0284 020853E3 		cmp	r3, #131072
 16132 0288 0100001A 		bne	.L1034
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 397


 16133              		.loc 1 6412 5 discriminator 10
 16134 028c 0830E0E3 		mvn	r3, #8
 16135              		.loc 1 6412 5
 16136 0290 E10000EA 		b	.L1019
 16137              	.L1034:
 16138              		.loc 1 6412 5 discriminator 11
 16139 0294 14301BE5 		ldr	r3, [fp, #-20]
 16140 0298 233CA0E1 		lsr	r3, r3, #24
 16141 029c 030053E3 		cmp	r3, #3
 16142 02a0 0100000A 		beq	.L1035
 16143              		.loc 1 6412 5 discriminator 12
 16144 02a4 0130E0E3 		mvn	r3, #1
 16145              		.loc 1 6412 5
 16146 02a8 DB0000EA 		b	.L1019
 16147              	.L1035:
 16148              		.loc 1 6412 5 discriminator 13
 16149 02ac 34301BE5 		ldr	r3, [fp, #-52]
 16150 02b0 7F2003E2 		and	r2, r3, #127
 16151 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 16152 02b8 143093E5 		ldr	r3, [r3, #20]
 16153 02bc 030052E1 		cmp	r2, r3
 16154 02c0 0100003A 		bcc	.L1036
 16155              		.loc 1 6412 5 discriminator 14
 16156 02c4 0230E0E3 		mvn	r3, #2
 16157              		.loc 1 6412 5
 16158 02c8 D30000EA 		b	.L1019
 16159              	.L1036:
 16160              		.loc 1 6412 5 discriminator 15
 16161 02cc 34301BE5 		ldr	r3, [fp, #-52]
 16162 02d0 7F3003E2 		and	r3, r3, #127
 16163 02d4 8322A0E1 		lsl	r2, r3, #5
 16164 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 16165 02dc 0C3093E5 		ldr	r3, [r3, #12]
 16166 02e0 033082E0 		add	r3, r2, r3
 16167 02e4 0C300BE5 		str	r3, [fp, #-12]
 16168 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16169 02ec 0300A0E1 		mov	r0, r3
 16170 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16171 02f4 14000BE5 		str	r0, [fp, #-20]
 16172              		.loc 1 6412 5 discriminator 1
 16173 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16174 02fc FF3803E2 		and	r3, r3, #16711680
 16175 0300 020853E3 		cmp	r3, #131072
 16176 0304 0100001A 		bne	.L1037
 16177              		.loc 1 6412 5 discriminator 16
 16178 0308 0830E0E3 		mvn	r3, #8
 16179              		.loc 1 6412 5
 16180 030c C20000EA 		b	.L1019
 16181              	.L1037:
 16182              		.loc 1 6412 5 discriminator 17
 16183 0310 14301BE5 		ldr	r3, [fp, #-20]
 16184 0314 233CA0E1 		lsr	r3, r3, #24
 16185 0318 060053E3 		cmp	r3, #6
 16186 031c 0100000A 		beq	.L1032
 16187              		.loc 1 6412 5 discriminator 18
 16188 0320 0130E0E3 		mvn	r3, #1
 16189              		.loc 1 6412 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 398


 16190 0324 BC0000EA 		b	.L1019
 16191              	.L1032:
6413:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6414:../../Source/Kernel/rme_kernel.c **** 
6415:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6416:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16192              		.loc 1 6416 5 is_stmt 1
 16193 0328 08301BE5 		ldr	r3, [fp, #-8]
 16194 032c 083093E5 		ldr	r3, [r3, #8]
 16195 0330 803003E2 		and	r3, r3, #128
 16196 0334 000053E3 		cmp	r3, #0
 16197 0338 0100001A 		bne	.L1038
 16198              		.loc 1 6416 5 is_stmt 0 discriminator 1
 16199 033c 0630E0E3 		mvn	r3, #6
 16200              		.loc 1 6416 5
 16201 0340 B50000EA 		b	.L1019
 16202              	.L1038:
6417:../../Source/Kernel/rme_kernel.c **** 
6418:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16203              		.loc 1 6418 5 is_stmt 1
 16204 0344 0C301BE5 		ldr	r3, [fp, #-12]
 16205 0348 083093E5 		ldr	r3, [r3, #8]
 16206 034c 403003E2 		and	r3, r3, #64
 16207 0350 000053E3 		cmp	r3, #0
 16208 0354 0100001A 		bne	.L1039
 16209              		.loc 1 6418 5 is_stmt 0 discriminator 1
 16210 0358 0630E0E3 		mvn	r3, #6
 16211              		.loc 1 6418 5
 16212 035c AE0000EA 		b	.L1019
 16213              	.L1039:
6419:../../Source/Kernel/rme_kernel.c **** 
6420:../../Source/Kernel/rme_kernel.c **** 
6421:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6422:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16214              		.loc 1 6422 10 is_stmt 1
 16215 0360 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16216 0364 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16217 0368 18300BE5 		str	r3, [fp, #-24]
6423:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16218              		.loc 1 6423 13
 16219 036c 0C301BE5 		ldr	r3, [fp, #-12]
 16220 0370 0C3093E5 		ldr	r3, [r3, #12]
 16221              		.loc 1 6423 12
 16222 0374 1C300BE5 		str	r3, [fp, #-28]
6424:../../Source/Kernel/rme_kernel.c **** 
6425:../../Source/Kernel/rme_kernel.c **** 
6426:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16223              		.loc 1 6426 22
 16224 0378 1C301BE5 		ldr	r3, [fp, #-28]
 16225 037c 143093E5 		ldr	r3, [r3, #20]
 16226              		.loc 1 6426 7
 16227 0380 18201BE5 		ldr	r2, [fp, #-24]
 16228 0384 030052E1 		cmp	r2, r3
 16229 0388 0400000A 		beq	.L1040
6427:../../Source/Kernel/rme_kernel.c ****     {
6428:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6429:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nRME_ERR_PTH_INVSTATE");
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 399


 16230              		.loc 1 6429 9
 16231 038c 000000E3 		movw	r0, #:lower16:.LC13
 16232 0390 000040E3 		movt	r0, #:upper16:.LC13
 16233 0394 FEFFFFEB 		bl	RME_Str_Print
6430:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16234              		.loc 1 6430 16
 16235 0398 CB30E0E3 		mvn	r3, #203
 16236 039c 9E0000EA 		b	.L1019
 16237              	.L1040:
6431:../../Source/Kernel/rme_kernel.c ****     }
6432:../../Source/Kernel/rme_kernel.c ****     else
6433:../../Source/Kernel/rme_kernel.c ****     {
6434:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6435:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6436:../../Source/Kernel/rme_kernel.c ****     }
6437:../../Source/Kernel/rme_kernel.c ****     
6438:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6439:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16238              		.loc 1 6439 22
 16239 03a0 1C301BE5 		ldr	r3, [fp, #-28]
 16240 03a4 183093E5 		ldr	r3, [r3, #24]
 16241              		.loc 1 6439 7
 16242 03a8 000053E3 		cmp	r3, #0
 16243 03ac 0100001A 		bne	.L1041
6440:../../Source/Kernel/rme_kernel.c ****     {
6441:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6442:../../Source/Kernel/rme_kernel.c **** 
6443:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16244              		.loc 1 6443 16
 16245 03b0 CB30E0E3 		mvn	r3, #203
 16246 03b4 980000EA 		b	.L1019
 16247              	.L1041:
6444:../../Source/Kernel/rme_kernel.c ****     }
6445:../../Source/Kernel/rme_kernel.c ****     else
6446:../../Source/Kernel/rme_kernel.c ****     {
6447:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6448:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6449:../../Source/Kernel/rme_kernel.c ****     }
6450:../../Source/Kernel/rme_kernel.c **** 
6451:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16248              		.loc 1 6451 13
 16249 03b8 08301BE5 		ldr	r3, [fp, #-8]
 16250 03bc 0C3093E5 		ldr	r3, [r3, #12]
 16251              		.loc 1 6451 12
 16252 03c0 20300BE5 		str	r3, [fp, #-32]
6452:../../Source/Kernel/rme_kernel.c ****     
6453:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16253              		.loc 1 6453 22
 16254 03c4 20301BE5 		ldr	r3, [fp, #-32]
 16255 03c8 143093E5 		ldr	r3, [r3, #20]
 16256              		.loc 1 6453 7
 16257 03cc 18201BE5 		ldr	r2, [fp, #-24]
 16258 03d0 030052E1 		cmp	r2, r3
 16259 03d4 0100000A 		beq	.L1042
6454:../../Source/Kernel/rme_kernel.c ****     {
6455:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6456:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 400


6457:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16260              		.loc 1 6457 16
 16261 03d8 CB30E0E3 		mvn	r3, #203
 16262 03dc 8E0000EA 		b	.L1019
 16263              	.L1042:
6458:../../Source/Kernel/rme_kernel.c ****     }
6459:../../Source/Kernel/rme_kernel.c ****     else
6460:../../Source/Kernel/rme_kernel.c ****     {
6461:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6462:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6463:../../Source/Kernel/rme_kernel.c ****     }
6464:../../Source/Kernel/rme_kernel.c **** 
6465:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6466:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6467:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16264              		.loc 1 6467 23
 16265 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 16266 03e4 242093E5 		ldr	r2, [r3, #36]
 16267              		.loc 1 6467 47
 16268 03e8 20301BE5 		ldr	r3, [fp, #-32]
 16269 03ec 243093E5 		ldr	r3, [r3, #36]
 16270              		.loc 1 6467 7
 16271 03f0 030052E1 		cmp	r2, r3
 16272 03f4 0500002A 		bcs	.L1043
6468:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16273              		.loc 1 6468 23
 16274 03f8 20301BE5 		ldr	r3, [fp, #-32]
 16275 03fc 183093E5 		ldr	r3, [r3, #24]
6467:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16276              		.loc 1 6467 57 discriminator 1
 16277 0400 060173E3 		cmn	r3, #-2147483647
 16278 0404 0100000A 		beq	.L1043
6469:../../Source/Kernel/rme_kernel.c ****     {
6470:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6471:../../Source/Kernel/rme_kernel.c **** 
6472:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16279              		.loc 1 6472 16
 16280 0408 CC30E0E3 		mvn	r3, #204
 16281 040c 820000EA 		b	.L1019
 16282              	.L1043:
6473:../../Source/Kernel/rme_kernel.c ****     }
6474:../../Source/Kernel/rme_kernel.c ****     else
6475:../../Source/Kernel/rme_kernel.c ****     {
6476:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6477:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6478:../../Source/Kernel/rme_kernel.c ****     }
6479:../../Source/Kernel/rme_kernel.c **** 
6480:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6481:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16283              		.loc 1 6481 22
 16284 0410 1C301BE5 		ldr	r3, [fp, #-28]
 16285 0414 183093E5 		ldr	r3, [r3, #24]
 16286              		.loc 1 6481 7
 16287 0418 0E0173E3 		cmn	r3, #-2147483645
 16288 041c 3200008A 		bhi	.L1044
6482:../../Source/Kernel/rme_kernel.c ****     {
6483:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 401


6484:../../Source/Kernel/rme_kernel.c **** 
6485:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6486:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16289              		.loc 1 6486 11
 16290 0420 04309BE5 		ldr	r3, [fp, #4]
 16291 0424 0E0173E3 		cmn	r3, #-2147483645
 16292 0428 0300009A 		bls	.L1045
6487:../../Source/Kernel/rme_kernel.c ****         {
6488:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6489:../../Source/Kernel/rme_kernel.c **** 
6490:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16293              		.loc 1 6490 22
 16294 042c 1C301BE5 		ldr	r3, [fp, #-28]
 16295 0430 183093E5 		ldr	r3, [r3, #24]
 16296 0434 10300BE5 		str	r3, [fp, #-16]
 16297 0438 0A0000EA 		b	.L1046
 16298              	.L1045:
6491:../../Source/Kernel/rme_kernel.c ****         }
6492:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6493:../../Source/Kernel/rme_kernel.c ****         else
6494:../../Source/Kernel/rme_kernel.c ****         {
6495:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6496:../../Source/Kernel/rme_kernel.c ****             
6497:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16299              		.loc 1 6497 30
 16300 043c 1C301BE5 		ldr	r3, [fp, #-28]
 16301 0440 183093E5 		ldr	r3, [r3, #24]
 16302              		.loc 1 6497 15
 16303 0444 04209BE5 		ldr	r2, [fp, #4]
 16304 0448 030052E1 		cmp	r2, r3
 16305 044c 0200002A 		bcs	.L1047
6498:../../Source/Kernel/rme_kernel.c ****             {
6499:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6500:../../Source/Kernel/rme_kernel.c **** 
6501:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16306              		.loc 1 6501 26
 16307 0450 04309BE5 		ldr	r3, [fp, #4]
 16308 0454 10300BE5 		str	r3, [fp, #-16]
 16309 0458 020000EA 		b	.L1046
 16310              	.L1047:
6502:../../Source/Kernel/rme_kernel.c ****             }
6503:../../Source/Kernel/rme_kernel.c ****             else
6504:../../Source/Kernel/rme_kernel.c ****             {
6505:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6506:../../Source/Kernel/rme_kernel.c **** 
6507:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16311              		.loc 1 6507 26
 16312 045c 1C301BE5 		ldr	r3, [fp, #-28]
 16313 0460 183093E5 		ldr	r3, [r3, #24]
 16314 0464 10300BE5 		str	r3, [fp, #-16]
 16315              	.L1046:
6508:../../Source/Kernel/rme_kernel.c ****             }
6509:../../Source/Kernel/rme_kernel.c ****         }
6510:../../Source/Kernel/rme_kernel.c ****         
6511:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6512:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6513:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 402


 16316              		.loc 1 6513 26
 16317 0468 20301BE5 		ldr	r3, [fp, #-32]
 16318 046c 183093E5 		ldr	r3, [r3, #24]
 16319              		.loc 1 6513 11
 16320 0470 0E0173E3 		cmn	r3, #-2147483645
 16321 0474 1500008A 		bhi	.L1048
6514:../../Source/Kernel/rme_kernel.c ****         {
6515:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6516:../../Source/Kernel/rme_kernel.c ****             
6517:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16322              		.loc 1 6517 13
 16323 0478 20301BE5 		ldr	r3, [fp, #-32]
 16324 047c 182093E5 		ldr	r2, [r3, #24]
 16325 0480 10301BE5 		ldr	r3, [fp, #-16]
 16326 0484 033082E0 		add	r3, r2, r3
 16327 0488 0E0173E3 		cmn	r3, #-2147483645
 16328 048c 0700008A 		bhi	.L1049
 16329              		.loc 1 6517 13 is_stmt 0 discriminator 2
 16330 0490 20301BE5 		ldr	r3, [fp, #-32]
 16331 0494 182093E5 		ldr	r2, [r3, #24]
 16332 0498 10301BE5 		ldr	r3, [fp, #-16]
 16333 049c 032082E0 		add	r2, r2, r3
 16334 04a0 20301BE5 		ldr	r3, [fp, #-32]
 16335 04a4 183093E5 		ldr	r3, [r3, #24]
 16336 04a8 030052E1 		cmp	r2, r3
 16337 04ac 0100002A 		bcs	.L1050
 16338              	.L1049:
 16339              		.loc 1 6517 13 discriminator 3
 16340 04b0 CF30E0E3 		mvn	r3, #207
 16341              		.loc 1 6517 13
 16342 04b4 580000EA 		b	.L1019
 16343              	.L1050:
6518:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16344              		.loc 1 6518 27 is_stmt 1
 16345 04b8 20301BE5 		ldr	r3, [fp, #-32]
 16346 04bc 182093E5 		ldr	r2, [r3, #24]
 16347              		.loc 1 6518 33
 16348 04c0 10301BE5 		ldr	r3, [fp, #-16]
 16349 04c4 032082E0 		add	r2, r2, r3
 16350 04c8 20301BE5 		ldr	r3, [fp, #-32]
 16351 04cc 182083E5 		str	r2, [r3, #24]
 16352              	.L1048:
6519:../../Source/Kernel/rme_kernel.c ****         }
6520:../../Source/Kernel/rme_kernel.c ****         else
6521:../../Source/Kernel/rme_kernel.c ****         {
6522:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6523:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6524:../../Source/Kernel/rme_kernel.c ****         }
6525:../../Source/Kernel/rme_kernel.c ****         
6526:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16353              		.loc 1 6526 23
 16354 04d0 1C301BE5 		ldr	r3, [fp, #-28]
 16355 04d4 182093E5 		ldr	r2, [r3, #24]
 16356              		.loc 1 6526 29
 16357 04d8 10301BE5 		ldr	r3, [fp, #-16]
 16358 04dc 032042E0 		sub	r2, r2, r3
 16359 04e0 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 403


 16360 04e4 182083E5 		str	r2, [r3, #24]
 16361 04e8 2A0000EA 		b	.L1051
 16362              	.L1044:
6527:../../Source/Kernel/rme_kernel.c ****     }
6528:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6529:../../Source/Kernel/rme_kernel.c ****     else
6530:../../Source/Kernel/rme_kernel.c ****     {
6531:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6532:../../Source/Kernel/rme_kernel.c **** 
6533:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6534:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16363              		.loc 1 6534 11
 16364 04ec 04309BE5 		ldr	r3, [fp, #4]
 16365 04f0 0E0173E3 		cmn	r3, #-2147483645
 16366 04f4 1100009A 		bls	.L1052
6535:../../Source/Kernel/rme_kernel.c ****         {
6536:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6537:../../Source/Kernel/rme_kernel.c **** 
6538:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6539:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16367              		.loc 1 6539 15
 16368 04f8 04309BE5 		ldr	r3, [fp, #4]
 16369 04fc 060173E3 		cmn	r3, #-2147483647
 16370 0500 0600001A 		bne	.L1053
6540:../../Source/Kernel/rme_kernel.c ****             {
6541:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6542:../../Source/Kernel/rme_kernel.c ****                 
6543:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6544:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16371              		.loc 1 6544 34
 16372 0504 1C301BE5 		ldr	r3, [fp, #-28]
 16373 0508 183093E5 		ldr	r3, [r3, #24]
 16374              		.loc 1 6544 19
 16375 050c 060173E3 		cmn	r3, #-2147483647
 16376 0510 0200000A 		beq	.L1053
6545:../../Source/Kernel/rme_kernel.c ****                 {
6546:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6547:../../Source/Kernel/rme_kernel.c ****                     
6548:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 16377              		.loc 1 6548 41
 16378 0514 1C301BE5 		ldr	r3, [fp, #-28]
 16379 0518 0020A0E3 		mov	r2, #0
 16380 051c 182083E5 		str	r2, [r3, #24]
 16381              	.L1053:
6549:../../Source/Kernel/rme_kernel.c ****                 }
6550:../../Source/Kernel/rme_kernel.c ****                 else
6551:../../Source/Kernel/rme_kernel.c ****                 {
6552:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6553:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6554:../../Source/Kernel/rme_kernel.c ****                 }
6555:../../Source/Kernel/rme_kernel.c ****             }
6556:../../Source/Kernel/rme_kernel.c ****             else
6557:../../Source/Kernel/rme_kernel.c ****             {
6558:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6559:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6560:../../Source/Kernel/rme_kernel.c ****             }
6561:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 404


6562:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6563:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16382              		.loc 1 6563 30
 16383 0520 20301BE5 		ldr	r3, [fp, #-32]
 16384 0524 183093E5 		ldr	r3, [r3, #24]
 16385              		.loc 1 6563 15
 16386 0528 0E0173E3 		cmn	r3, #-2147483645
 16387 052c 1900008A 		bhi	.L1051
6564:../../Source/Kernel/rme_kernel.c ****             {
6565:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6566:../../Source/Kernel/rme_kernel.c ****                 
6567:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16388              		.loc 1 6567 37
 16389 0530 20301BE5 		ldr	r3, [fp, #-32]
 16390 0534 0621E0E3 		mvn	r2, #-2147483647
 16391 0538 182083E5 		str	r2, [r3, #24]
 16392 053c 150000EA 		b	.L1051
 16393              	.L1052:
6568:../../Source/Kernel/rme_kernel.c ****             }
6569:../../Source/Kernel/rme_kernel.c ****             else
6570:../../Source/Kernel/rme_kernel.c ****             {
6571:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6572:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6573:../../Source/Kernel/rme_kernel.c ****             }
6574:../../Source/Kernel/rme_kernel.c ****         }
6575:../../Source/Kernel/rme_kernel.c ****         else
6576:../../Source/Kernel/rme_kernel.c ****         {
6577:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6578:../../Source/Kernel/rme_kernel.c **** 
6579:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6580:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16394              		.loc 1 6580 13
 16395 0540 20301BE5 		ldr	r3, [fp, #-32]
 16396 0544 182093E5 		ldr	r2, [r3, #24]
 16397 0548 04309BE5 		ldr	r3, [fp, #4]
 16398 054c 033082E0 		add	r3, r2, r3
 16399 0550 0E0173E3 		cmn	r3, #-2147483645
 16400 0554 0700008A 		bhi	.L1054
 16401              		.loc 1 6580 13 is_stmt 0 discriminator 2
 16402 0558 20301BE5 		ldr	r3, [fp, #-32]
 16403 055c 182093E5 		ldr	r2, [r3, #24]
 16404 0560 04309BE5 		ldr	r3, [fp, #4]
 16405 0564 032082E0 		add	r2, r2, r3
 16406 0568 20301BE5 		ldr	r3, [fp, #-32]
 16407 056c 183093E5 		ldr	r3, [r3, #24]
 16408 0570 030052E1 		cmp	r2, r3
 16409 0574 0100002A 		bcs	.L1055
 16410              	.L1054:
 16411              		.loc 1 6580 13 discriminator 3
 16412 0578 CF30E0E3 		mvn	r3, #207
 16413              		.loc 1 6580 13
 16414 057c 260000EA 		b	.L1019
 16415              	.L1055:
6581:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16416              		.loc 1 6581 27 is_stmt 1
 16417 0580 20301BE5 		ldr	r3, [fp, #-32]
 16418 0584 182093E5 		ldr	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 405


 16419              		.loc 1 6581 33
 16420 0588 04309BE5 		ldr	r3, [fp, #4]
 16421 058c 032082E0 		add	r2, r2, r3
 16422 0590 20301BE5 		ldr	r3, [fp, #-32]
 16423 0594 182083E5 		str	r2, [r3, #24]
 16424              	.L1051:
6582:../../Source/Kernel/rme_kernel.c ****         }
6583:../../Source/Kernel/rme_kernel.c ****     }
6584:../../Source/Kernel/rme_kernel.c **** 
6585:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6586:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6587:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16425              		.loc 1 6587 22
 16426 0598 1C301BE5 		ldr	r3, [fp, #-28]
 16427 059c 183093E5 		ldr	r3, [r3, #24]
 16428              		.loc 1 6587 7
 16429 05a0 000053E3 		cmp	r3, #0
 16430 05a4 0A00001A 		bne	.L1056
6588:../../Source/Kernel/rme_kernel.c ****     {
6589:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6590:../../Source/Kernel/rme_kernel.c ****         
6591:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6592:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6593:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6594:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6595:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16431              		.loc 1 6595 26
 16432 05a8 1C301BE5 		ldr	r3, [fp, #-28]
 16433 05ac 1C3093E5 		ldr	r3, [r3, #28]
 16434              		.loc 1 6595 11
 16435 05b0 000053E3 		cmp	r3, #0
 16436 05b4 0600001A 		bne	.L1056
6596:../../Source/Kernel/rme_kernel.c ****         {
6597:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6598:../../Source/Kernel/rme_kernel.c ****             
6599:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6600:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16437              		.loc 1 6600 13
 16438 05b8 1C001BE5 		ldr	r0, [fp, #-28]
 16439 05bc FEFFFFEB 		bl	_RME_Run_Del
6601:../../Source/Kernel/rme_kernel.c ****             
6602:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6603:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16440              		.loc 1 6603 33
 16441 05c0 1C301BE5 		ldr	r3, [fp, #-28]
 16442 05c4 0220A0E3 		mov	r2, #2
 16443 05c8 1C2083E5 		str	r2, [r3, #28]
6604:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16444              		.loc 1 6604 13
 16445 05cc 1C001BE5 		ldr	r0, [fp, #-28]
 16446 05d0 FEFFFFEB 		bl	_RME_Run_Notif
 16447              	.L1056:
6605:../../Source/Kernel/rme_kernel.c ****         }
6606:../../Source/Kernel/rme_kernel.c ****         else
6607:../../Source/Kernel/rme_kernel.c ****         {
6608:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6609:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 406


6610:../../Source/Kernel/rme_kernel.c ****         }
6611:../../Source/Kernel/rme_kernel.c ****     }
6612:../../Source/Kernel/rme_kernel.c ****     else
6613:../../Source/Kernel/rme_kernel.c ****     {
6614:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6615:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6616:../../Source/Kernel/rme_kernel.c ****     }
6617:../../Source/Kernel/rme_kernel.c **** 
6618:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6619:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6620:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16448              		.loc 1 6620 56
 16449 05d4 20301BE5 		ldr	r3, [fp, #-32]
 16450 05d8 183093E5 		ldr	r3, [r3, #24]
 16451              		.loc 1 6620 5
 16452 05dc 0310A0E1 		mov	r1, r3
 16453 05e0 2C001BE5 		ldr	r0, [fp, #-44]
 16454 05e4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6621:../../Source/Kernel/rme_kernel.c **** 
6622:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6623:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6624:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6625:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 16455              		.loc 1 6625 22
 16456 05e8 20301BE5 		ldr	r3, [fp, #-32]
 16457 05ec 1C3093E5 		ldr	r3, [r3, #28]
 16458              		.loc 1 6625 7
 16459 05f0 020053E3 		cmp	r3, #2
 16460 05f4 0400001A 		bne	.L1057
6626:../../Source/Kernel/rme_kernel.c ****     {
6627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6628:../../Source/Kernel/rme_kernel.c **** 
6629:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6630:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16461              		.loc 1 6630 29
 16462 05f8 20301BE5 		ldr	r3, [fp, #-32]
 16463 05fc 0020A0E3 		mov	r2, #0
 16464 0600 1C2083E5 		str	r2, [r3, #28]
6631:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 16465              		.loc 1 6631 9
 16466 0604 20001BE5 		ldr	r0, [fp, #-32]
 16467 0608 FEFFFFEB 		bl	_RME_Run_Ins
 16468              	.L1057:
6632:../../Source/Kernel/rme_kernel.c ****     }
6633:../../Source/Kernel/rme_kernel.c ****     else
6634:../../Source/Kernel/rme_kernel.c ****     {
6635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6636:../../Source/Kernel/rme_kernel.c ****     }
6637:../../Source/Kernel/rme_kernel.c ****     
6638:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6639:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6640:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16469              		.loc 1 6640 5
 16470 060c 18101BE5 		ldr	r1, [fp, #-24]
 16471 0610 2C001BE5 		ldr	r0, [fp, #-44]
 16472 0614 FEFFFFEB 		bl	_RME_Kern_High
6641:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 407


6642:../../Source/Kernel/rme_kernel.c ****     return 0;
 16473              		.loc 1 6642 12
 16474 0618 0030A0E3 		mov	r3, #0
 16475              	.L1019:
6643:../../Source/Kernel/rme_kernel.c **** }
 16476              		.loc 1 6643 1
 16477 061c 0300A0E1 		mov	r0, r3
 16478 0620 04D04BE2 		sub	sp, fp, #4
 16479              		.cfi_def_cfa 13, 8
 16480              		@ sp needed
 16481 0624 0088BDE8 		pop	{fp, pc}
 16482              		.cfi_endproc
 16483              	.LFE63:
 16485              		.section	.rodata
 16486 00fb 00       		.align	2
 16487              	.LC14:
 16488 00fc 0D0A5468 		.ascii	"\015\012Thd_Cur->Sched.Prio = \000"
 16488      645F4375 
 16488      722D3E53 
 16488      63686564 
 16488      2E507269 
 16489 0115 000000   		.align	2
 16490              	.LC15:
 16491 0118 0D0A5468 		.ascii	"\015\012Thd_New->Sched.Prio = \000"
 16491      645F4E65 
 16491      772D3E53 
 16491      63686564 
 16491      2E507269 
 16492              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16493              		.align	2
 16494              		.syntax unified
 16495              		.arm
 16497              	_RME_Thd_Swt:
 16498              	.LFB64:
6644:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6645:../../Source/Kernel/rme_kernel.c **** 
6646:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6647:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6648:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6649:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6650:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6651:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6652:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6653:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6654:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6655:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6656:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6657:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6658:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6659:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6660:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6661:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6662:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6663:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6664:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6665:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6666:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 408


6667:../../Source/Kernel/rme_kernel.c **** Output      : None.
6668:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6669:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6670:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6671:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6672:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6673:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6674:../../Source/Kernel/rme_kernel.c **** {
 16499              		.loc 1 6674 1
 16500              		.cfi_startproc
 16501              		@ args = 0, pretend = 0, frame = 40
 16502              		@ frame_needed = 1, uses_anonymous_args = 0
 16503 0000 00482DE9 		push	{fp, lr}
 16504              		.cfi_def_cfa_offset 8
 16505              		.cfi_offset 11, -8
 16506              		.cfi_offset 14, -4
 16507 0004 04B08DE2 		add	fp, sp, #4
 16508              		.cfi_def_cfa 11, 4
 16509 0008 28D04DE2 		sub	sp, sp, #40
 16510 000c 20000BE5 		str	r0, [fp, #-32]
 16511 0010 24100BE5 		str	r1, [fp, #-36]
 16512 0014 28200BE5 		str	r2, [fp, #-40]
 16513 0018 2C300BE5 		str	r3, [fp, #-44]
6675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6676:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6677:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6678:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6679:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6680:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6681:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd ");
6682:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
6683:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Yield ");
6684:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Yield);*/
6685:../../Source/Kernel/rme_kernel.c ****     
6686:../../Source/Kernel/rme_kernel.c **** 
6687:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16514              		.loc 1 6687 10
 16515 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16516 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16517 0024 10300BE5 		str	r3, [fp, #-16]
6688:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16518              		.loc 1 6688 12
 16519 0028 10301BE5 		ldr	r3, [fp, #-16]
 16520 002c 043093E5 		ldr	r3, [r3, #4]
 16521 0030 14300BE5 		str	r3, [fp, #-20]
6689:../../Source/Kernel/rme_kernel.c ****     
6690:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6691:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16522              		.loc 1 6691 7
 16523 0034 28301BE5 		ldr	r3, [fp, #-40]
 16524 0038 020953E3 		cmp	r3, #32768
 16525 003c B40000AA 		bge	.L1059
6692:../../Source/Kernel/rme_kernel.c ****     {
6693:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6694:../../Source/Kernel/rme_kernel.c ****         
6695:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16526              		.loc 1 6695 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 409


 16527 0040 28301BE5 		ldr	r3, [fp, #-40]
 16528 0044 803003E2 		and	r3, r3, #128
 16529 0048 000053E3 		cmp	r3, #0
 16530 004c 1C00001A 		bne	.L1060
 16531              		.loc 1 6695 9 is_stmt 0 discriminator 1
 16532 0050 20301BE5 		ldr	r3, [fp, #-32]
 16533 0054 142093E5 		ldr	r2, [r3, #20]
 16534 0058 28301BE5 		ldr	r3, [fp, #-40]
 16535 005c 030052E1 		cmp	r2, r3
 16536 0060 0100008A 		bhi	.L1061
 16537              		.loc 1 6695 9 discriminator 3
 16538 0064 0230E0E3 		mvn	r3, #2
 16539              		.loc 1 6695 9
 16540 0068 ED0000EA 		b	.L1062
 16541              	.L1061:
 16542              		.loc 1 6695 9 discriminator 4
 16543 006c 28301BE5 		ldr	r3, [fp, #-40]
 16544 0070 8322A0E1 		lsl	r2, r3, #5
 16545 0074 20301BE5 		ldr	r3, [fp, #-32]
 16546 0078 0C3093E5 		ldr	r3, [r3, #12]
 16547 007c 033082E0 		add	r3, r2, r3
 16548 0080 08300BE5 		str	r3, [fp, #-8]
 16549 0084 08301BE5 		ldr	r3, [fp, #-8]
 16550 0088 0300A0E1 		mov	r0, r3
 16551 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16552 0090 18000BE5 		str	r0, [fp, #-24]
 16553              		.loc 1 6695 9 discriminator 1
 16554 0094 18301BE5 		ldr	r3, [fp, #-24]
 16555 0098 FF3803E2 		and	r3, r3, #16711680
 16556 009c 020853E3 		cmp	r3, #131072
 16557 00a0 0100001A 		bne	.L1063
 16558              		.loc 1 6695 9 discriminator 5
 16559 00a4 0830E0E3 		mvn	r3, #8
 16560              		.loc 1 6695 9
 16561 00a8 DD0000EA 		b	.L1062
 16562              	.L1063:
 16563              		.loc 1 6695 9 discriminator 6
 16564 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16565 00b0 233CA0E1 		lsr	r3, r3, #24
 16566 00b4 060053E3 		cmp	r3, #6
 16567 00b8 3F00000A 		beq	.L1064
 16568              		.loc 1 6695 9 discriminator 7
 16569 00bc 0130E0E3 		mvn	r3, #1
 16570              		.loc 1 6695 9
 16571 00c0 D70000EA 		b	.L1062
 16572              	.L1060:
 16573              		.loc 1 6695 9 discriminator 2
 16574 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16575 00c8 2324A0E1 		lsr	r2, r3, #8
 16576 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16577 00d0 143093E5 		ldr	r3, [r3, #20]
 16578 00d4 030052E1 		cmp	r2, r3
 16579 00d8 0100003A 		bcc	.L1065
 16580              		.loc 1 6695 9 discriminator 8
 16581 00dc 0230E0E3 		mvn	r3, #2
 16582              		.loc 1 6695 9
 16583 00e0 CF0000EA 		b	.L1062
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 410


 16584              	.L1065:
 16585              		.loc 1 6695 9 discriminator 9
 16586 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16587 00e8 2334A0E1 		lsr	r3, r3, #8
 16588 00ec 8322A0E1 		lsl	r2, r3, #5
 16589 00f0 20301BE5 		ldr	r3, [fp, #-32]
 16590 00f4 0C3093E5 		ldr	r3, [r3, #12]
 16591 00f8 033082E0 		add	r3, r2, r3
 16592 00fc 08300BE5 		str	r3, [fp, #-8]
 16593 0100 08301BE5 		ldr	r3, [fp, #-8]
 16594 0104 0300A0E1 		mov	r0, r3
 16595 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16596 010c 18000BE5 		str	r0, [fp, #-24]
 16597              		.loc 1 6695 9 discriminator 1
 16598 0110 18301BE5 		ldr	r3, [fp, #-24]
 16599 0114 FF3803E2 		and	r3, r3, #16711680
 16600 0118 020853E3 		cmp	r3, #131072
 16601 011c 0100001A 		bne	.L1066
 16602              		.loc 1 6695 9 discriminator 10
 16603 0120 0830E0E3 		mvn	r3, #8
 16604              		.loc 1 6695 9
 16605 0124 BE0000EA 		b	.L1062
 16606              	.L1066:
 16607              		.loc 1 6695 9 discriminator 11
 16608 0128 18301BE5 		ldr	r3, [fp, #-24]
 16609 012c 233CA0E1 		lsr	r3, r3, #24
 16610 0130 030053E3 		cmp	r3, #3
 16611 0134 0100000A 		beq	.L1067
 16612              		.loc 1 6695 9 discriminator 12
 16613 0138 0130E0E3 		mvn	r3, #1
 16614              		.loc 1 6695 9
 16615 013c B80000EA 		b	.L1062
 16616              	.L1067:
 16617              		.loc 1 6695 9 discriminator 13
 16618 0140 28301BE5 		ldr	r3, [fp, #-40]
 16619 0144 7F2003E2 		and	r2, r3, #127
 16620 0148 08301BE5 		ldr	r3, [fp, #-8]
 16621 014c 143093E5 		ldr	r3, [r3, #20]
 16622 0150 030052E1 		cmp	r2, r3
 16623 0154 0100003A 		bcc	.L1068
 16624              		.loc 1 6695 9 discriminator 14
 16625 0158 0230E0E3 		mvn	r3, #2
 16626              		.loc 1 6695 9
 16627 015c B00000EA 		b	.L1062
 16628              	.L1068:
 16629              		.loc 1 6695 9 discriminator 15
 16630 0160 28301BE5 		ldr	r3, [fp, #-40]
 16631 0164 7F3003E2 		and	r3, r3, #127
 16632 0168 8322A0E1 		lsl	r2, r3, #5
 16633 016c 08301BE5 		ldr	r3, [fp, #-8]
 16634 0170 0C3093E5 		ldr	r3, [r3, #12]
 16635 0174 033082E0 		add	r3, r2, r3
 16636 0178 08300BE5 		str	r3, [fp, #-8]
 16637 017c 08301BE5 		ldr	r3, [fp, #-8]
 16638 0180 0300A0E1 		mov	r0, r3
 16639 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16640 0188 18000BE5 		str	r0, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 411


 16641              		.loc 1 6695 9 discriminator 1
 16642 018c 18301BE5 		ldr	r3, [fp, #-24]
 16643 0190 FF3803E2 		and	r3, r3, #16711680
 16644 0194 020853E3 		cmp	r3, #131072
 16645 0198 0100001A 		bne	.L1069
 16646              		.loc 1 6695 9 discriminator 16
 16647 019c 0830E0E3 		mvn	r3, #8
 16648              		.loc 1 6695 9
 16649 01a0 9F0000EA 		b	.L1062
 16650              	.L1069:
 16651              		.loc 1 6695 9 discriminator 17
 16652 01a4 18301BE5 		ldr	r3, [fp, #-24]
 16653 01a8 233CA0E1 		lsr	r3, r3, #24
 16654 01ac 060053E3 		cmp	r3, #6
 16655 01b0 0100000A 		beq	.L1064
 16656              		.loc 1 6695 9 discriminator 18
 16657 01b4 0130E0E3 		mvn	r3, #1
 16658              		.loc 1 6695 9
 16659 01b8 990000EA 		b	.L1062
 16660              	.L1064:
6696:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6697:../../Source/Kernel/rme_kernel.c **** 
6698:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6699:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 16661              		.loc 1 6699 9 is_stmt 1
 16662 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16663 01c0 083093E5 		ldr	r3, [r3, #8]
 16664 01c4 013C03E2 		and	r3, r3, #256
 16665 01c8 000053E3 		cmp	r3, #0
 16666 01cc 0100001A 		bne	.L1070
 16667              		.loc 1 6699 9 is_stmt 0 discriminator 1
 16668 01d0 0630E0E3 		mvn	r3, #6
 16669              		.loc 1 6699 9
 16670 01d4 920000EA 		b	.L1062
 16671              	.L1070:
6700:../../Source/Kernel/rme_kernel.c **** 
6701:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6702:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 16672              		.loc 1 6702 17 is_stmt 1
 16673 01d8 08301BE5 		ldr	r3, [fp, #-8]
 16674 01dc 0C3093E5 		ldr	r3, [r3, #12]
 16675              		.loc 1 6702 16
 16676 01e0 0C300BE5 		str	r3, [fp, #-12]
6703:../../Source/Kernel/rme_kernel.c **** 
6704:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 16677              		.loc 1 6704 26
 16678 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 16679 01e8 143093E5 		ldr	r3, [r3, #20]
 16680              		.loc 1 6704 11
 16681 01ec 10201BE5 		ldr	r2, [fp, #-16]
 16682 01f0 030052E1 		cmp	r2, r3
 16683 01f4 0100000A 		beq	.L1071
6705:../../Source/Kernel/rme_kernel.c ****         {
6706:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6707:../../Source/Kernel/rme_kernel.c ****             
6708:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16684              		.loc 1 6708 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 412


 16685 01f8 CB30E0E3 		mvn	r3, #203
 16686 01fc 880000EA 		b	.L1062
 16687              	.L1071:
6709:../../Source/Kernel/rme_kernel.c ****         }
6710:../../Source/Kernel/rme_kernel.c ****         else
6711:../../Source/Kernel/rme_kernel.c ****         {
6712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6713:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6714:../../Source/Kernel/rme_kernel.c ****         }
6715:../../Source/Kernel/rme_kernel.c **** 
6716:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6717:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 16688              		.loc 1 6717 26
 16689 0200 14301BE5 		ldr	r3, [fp, #-20]
 16690 0204 202093E5 		ldr	r2, [r3, #32]
 16691              		.loc 1 6717 47
 16692 0208 0C301BE5 		ldr	r3, [fp, #-12]
 16693 020c 203093E5 		ldr	r3, [r3, #32]
 16694              		.loc 1 6717 11
 16695 0210 030052E1 		cmp	r2, r3
 16696 0214 0F00000A 		beq	.L1072
6718:../../Source/Kernel/rme_kernel.c ****         {
6719:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6720:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nThd_Cur->Sched.Prio = "); 
 16697              		.loc 1 6720 13
 16698 0218 000000E3 		movw	r0, #:lower16:.LC14
 16699 021c 000040E3 		movt	r0, #:upper16:.LC14
 16700 0220 FEFFFFEB 		bl	RME_Str_Print
6721:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Thd_Cur->Sched.Prio);
 16701              		.loc 1 6721 13
 16702 0224 14301BE5 		ldr	r3, [fp, #-20]
 16703 0228 203093E5 		ldr	r3, [r3, #32]
 16704 022c 0300A0E1 		mov	r0, r3
 16705 0230 FEFFFFEB 		bl	RME_Hex_Print
6722:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nThd_New->Sched.Prio = "); 
 16706              		.loc 1 6722 13
 16707 0234 000000E3 		movw	r0, #:lower16:.LC15
 16708 0238 000040E3 		movt	r0, #:upper16:.LC15
 16709 023c FEFFFFEB 		bl	RME_Str_Print
6723:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Thd_New->Sched.Prio);
 16710              		.loc 1 6723 13
 16711 0240 0C301BE5 		ldr	r3, [fp, #-12]
 16712 0244 203093E5 		ldr	r3, [r3, #32]
 16713 0248 0300A0E1 		mov	r0, r3
 16714 024c FEFFFFEB 		bl	RME_Hex_Print
6724:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 16715              		.loc 1 6724 20
 16716 0250 CC30E0E3 		mvn	r3, #204
 16717 0254 720000EA 		b	.L1062
 16718              	.L1072:
6725:../../Source/Kernel/rme_kernel.c ****         }
6726:../../Source/Kernel/rme_kernel.c ****         else
6727:../../Source/Kernel/rme_kernel.c ****         {
6728:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6729:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6730:../../Source/Kernel/rme_kernel.c ****         }
6731:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 413


6732:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6733:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 16719              		.loc 1 6733 27
 16720 0258 0C301BE5 		ldr	r3, [fp, #-12]
 16721 025c 1C3093E5 		ldr	r3, [r3, #28]
 16722              		.loc 1 6733 11
 16723 0260 010053E3 		cmp	r3, #1
 16724 0264 0700000A 		beq	.L1073
6734:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16725              		.loc 1 6734 27
 16726 0268 0C301BE5 		ldr	r3, [fp, #-12]
 16727 026c 1C3093E5 		ldr	r3, [r3, #28]
6733:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16728              		.loc 1 6733 51 discriminator 1
 16729 0270 020053E3 		cmp	r3, #2
 16730 0274 0300000A 		beq	.L1073
6735:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 16731              		.loc 1 6735 27
 16732 0278 0C301BE5 		ldr	r3, [fp, #-12]
 16733 027c 1C3093E5 		ldr	r3, [r3, #28]
6734:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16734              		.loc 1 6734 51
 16735 0280 030053E3 		cmp	r3, #3
 16736 0284 0100001A 		bne	.L1074
 16737              	.L1073:
6736:../../Source/Kernel/rme_kernel.c ****         {
6737:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6738:../../Source/Kernel/rme_kernel.c **** 
6739:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16738              		.loc 1 6739 20
 16739 0288 CB30E0E3 		mvn	r3, #203
 16740 028c 640000EA 		b	.L1062
 16741              	.L1074:
6740:../../Source/Kernel/rme_kernel.c ****         }
6741:../../Source/Kernel/rme_kernel.c ****         else
6742:../../Source/Kernel/rme_kernel.c ****         {
6743:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6744:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6745:../../Source/Kernel/rme_kernel.c ****         }
6746:../../Source/Kernel/rme_kernel.c **** 
6747:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6748:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16742              		.loc 1 6748 11
 16743 0290 2C301BE5 		ldr	r3, [fp, #-44]
 16744 0294 000053E3 		cmp	r3, #0
 16745 0298 4300000A 		beq	.L1075
 16746              		.loc 1 6748 43 discriminator 1
 16747 029c 14301BE5 		ldr	r3, [fp, #-20]
 16748 02a0 183093E5 		ldr	r3, [r3, #24]
 16749              		.loc 1 6748 26 discriminator 1
 16750 02a4 0E0173E3 		cmn	r3, #-2147483645
 16751 02a8 3F00008A 		bhi	.L1075
6749:../../Source/Kernel/rme_kernel.c ****         {
6750:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6751:../../Source/Kernel/rme_kernel.c ****             
6752:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6753:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 414


 16752              		.loc 1 6753 33
 16753 02ac 14301BE5 		ldr	r3, [fp, #-20]
 16754 02b0 0020A0E3 		mov	r2, #0
 16755 02b4 182083E5 		str	r2, [r3, #24]
6754:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16756              		.loc 1 6754 13
 16757 02b8 14001BE5 		ldr	r0, [fp, #-20]
 16758 02bc FEFFFFEB 		bl	_RME_Run_Del
6755:../../Source/Kernel/rme_kernel.c ****             
6756:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6757:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16759              		.loc 1 6757 33
 16760 02c0 14301BE5 		ldr	r3, [fp, #-20]
 16761 02c4 0220A0E3 		mov	r2, #2
 16762 02c8 1C2083E5 		str	r2, [r3, #28]
6758:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16763              		.loc 1 6758 13
 16764 02cc 14001BE5 		ldr	r0, [fp, #-20]
 16765 02d0 FEFFFFEB 		bl	_RME_Run_Notif
6759:../../Source/Kernel/rme_kernel.c ****             
6760:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6761:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6762:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6763:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6764:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16766              		.loc 1 6764 22
 16767 02d4 10001BE5 		ldr	r0, [fp, #-16]
 16768 02d8 FEFFFFEB 		bl	_RME_Run_High
 16769 02dc 1C000BE5 		str	r0, [fp, #-28]
6765:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16770              		.loc 1 6765 32
 16771 02e0 1C301BE5 		ldr	r3, [fp, #-28]
 16772 02e4 202093E5 		ldr	r2, [r3, #32]
 16773              		.loc 1 6765 52
 16774 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16775 02ec 203093E5 		ldr	r3, [r3, #32]
 16776              		.loc 1 6765 15
 16777 02f0 030052E1 		cmp	r2, r3
 16778 02f4 0300008A 		bhi	.L1076
 16779              		.loc 1 6765 58 discriminator 1
 16780 02f8 14201BE5 		ldr	r2, [fp, #-20]
 16781 02fc 0C301BE5 		ldr	r3, [fp, #-12]
 16782 0300 030052E1 		cmp	r2, r3
 16783 0304 2800001A 		bne	.L1075
 16784              	.L1076:
6766:../../Source/Kernel/rme_kernel.c ****             {
6767:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6768:../../Source/Kernel/rme_kernel.c **** 
6769:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16785              		.loc 1 6769 24
 16786 0308 1C301BE5 		ldr	r3, [fp, #-28]
 16787 030c 0C300BE5 		str	r3, [fp, #-12]
 16788 0310 250000EA 		b	.L1075
 16789              	.L1059:
6770:../../Source/Kernel/rme_kernel.c ****             }
6771:../../Source/Kernel/rme_kernel.c ****             else
6772:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 415


6773:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6774:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6775:../../Source/Kernel/rme_kernel.c ****             }
6776:../../Source/Kernel/rme_kernel.c ****         }
6777:../../Source/Kernel/rme_kernel.c ****         else
6778:../../Source/Kernel/rme_kernel.c ****         {
6779:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6780:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6781:../../Source/Kernel/rme_kernel.c ****         }
6782:../../Source/Kernel/rme_kernel.c ****     }
6783:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6784:../../Source/Kernel/rme_kernel.c ****     else
6785:../../Source/Kernel/rme_kernel.c ****     {
6786:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6787:../../Source/Kernel/rme_kernel.c ****         
6788:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6789:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16790              		.loc 1 6789 11
 16791 0314 2C301BE5 		ldr	r3, [fp, #-44]
 16792 0318 000053E3 		cmp	r3, #0
 16793 031c 0E00000A 		beq	.L1077
 16794              		.loc 1 6789 43 discriminator 1
 16795 0320 14301BE5 		ldr	r3, [fp, #-20]
 16796 0324 183093E5 		ldr	r3, [r3, #24]
 16797              		.loc 1 6789 26 discriminator 1
 16798 0328 0E0173E3 		cmn	r3, #-2147483645
 16799 032c 0A00008A 		bhi	.L1077
6790:../../Source/Kernel/rme_kernel.c ****         {
6791:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6792:../../Source/Kernel/rme_kernel.c ****             
6793:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6794:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16800              		.loc 1 6794 33
 16801 0330 14301BE5 		ldr	r3, [fp, #-20]
 16802 0334 0020A0E3 		mov	r2, #0
 16803 0338 182083E5 		str	r2, [r3, #24]
6795:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16804              		.loc 1 6795 13
 16805 033c 14001BE5 		ldr	r0, [fp, #-20]
 16806 0340 FEFFFFEB 		bl	_RME_Run_Del
6796:../../Source/Kernel/rme_kernel.c ****             
6797:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6798:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16807              		.loc 1 6798 33
 16808 0344 14301BE5 		ldr	r3, [fp, #-20]
 16809 0348 0220A0E3 		mov	r2, #2
 16810 034c 1C2083E5 		str	r2, [r3, #28]
6799:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16811              		.loc 1 6799 13
 16812 0350 14001BE5 		ldr	r0, [fp, #-20]
 16813 0354 FEFFFFEB 		bl	_RME_Run_Notif
 16814 0358 100000EA 		b	.L1078
 16815              	.L1077:
6800:../../Source/Kernel/rme_kernel.c ****         }
6801:../../Source/Kernel/rme_kernel.c ****         else
6802:../../Source/Kernel/rme_kernel.c ****         {
6803:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 416


6804:../../Source/Kernel/rme_kernel.c ****             
6805:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6806:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6807:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 16816              		.loc 1 6807 13
 16817 035c 14301BE5 		ldr	r3, [fp, #-20]
 16818 0360 1C3093E5 		ldr	r3, [r3, #28]
 16819 0364 000053E3 		cmp	r3, #0
 16820 0368 0800000A 		beq	.L1079
 16821              		.loc 1 6807 13 is_stmt 0 discriminator 1
 16822 036c 003000E3 		movw	r3, #:lower16:.LC6
 16823 0370 003040E3 		movt	r3, #:upper16:.LC6
 16824 0374 002000E3 		movw	r2, #:lower16:.LC7
 16825 0378 002040E3 		movt	r2, #:upper16:.LC7
 16826 037c 971A01E3 		movw	r1, #6807
 16827 0380 000000E3 		movw	r0, #:lower16:.LC8
 16828 0384 000040E3 		movt	r0, #:upper16:.LC8
 16829 0388 FEFFFFEB 		bl	RME_Log
 16830              	.L1080:
 16831              		.loc 1 6807 13
 16832 038c FEFFFFEA 		b	.L1080
 16833              	.L1079:
6808:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16834              		.loc 1 6808 13 is_stmt 1
 16835 0390 14001BE5 		ldr	r0, [fp, #-20]
 16836 0394 FEFFFFEB 		bl	_RME_Run_Del
6809:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 16837              		.loc 1 6809 13
 16838 0398 14001BE5 		ldr	r0, [fp, #-20]
 16839 039c FEFFFFEB 		bl	_RME_Run_Ins
 16840              	.L1078:
6810:../../Source/Kernel/rme_kernel.c ****         }
6811:../../Source/Kernel/rme_kernel.c **** 
6812:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 16841              		.loc 1 6812 17
 16842 03a0 10001BE5 		ldr	r0, [fp, #-16]
 16843 03a4 FEFFFFEB 		bl	_RME_Run_High
 16844 03a8 0C000BE5 		str	r0, [fp, #-12]
 16845              	.L1075:
6813:../../Source/Kernel/rme_kernel.c ****     }
6814:../../Source/Kernel/rme_kernel.c ****     
6815:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6816:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 16846              		.loc 1 6816 5
 16847 03ac 0010A0E3 		mov	r1, #0
 16848 03b0 24001BE5 		ldr	r0, [fp, #-36]
 16849 03b4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6817:../../Source/Kernel/rme_kernel.c **** 
6818:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16850              		.loc 1 6818 5
 16851 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 16852 03bc 1C3093E5 		ldr	r3, [r3, #28]
 16853 03c0 000053E3 		cmp	r3, #0
 16854 03c4 0800000A 		beq	.L1081
 16855              		.loc 1 6818 5 is_stmt 0 discriminator 1
 16856 03c8 003000E3 		movw	r3, #:lower16:.LC6
 16857 03cc 003040E3 		movt	r3, #:upper16:.LC6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 417


 16858 03d0 002000E3 		movw	r2, #:lower16:.LC7
 16859 03d4 002040E3 		movt	r2, #:upper16:.LC7
 16860 03d8 A21A01E3 		movw	r1, #6818
 16861 03dc 000000E3 		movw	r0, #:lower16:.LC8
 16862 03e0 000040E3 		movt	r0, #:upper16:.LC8
 16863 03e4 FEFFFFEB 		bl	RME_Log
 16864              	.L1082:
 16865              		.loc 1 6818 5
 16866 03e8 FEFFFFEA 		b	.L1082
 16867              	.L1081:
6819:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6820:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6821:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 16868              		.loc 1 6821 7 is_stmt 1
 16869 03ec 14201BE5 		ldr	r2, [fp, #-20]
 16870 03f0 0C301BE5 		ldr	r3, [fp, #-12]
 16871 03f4 030052E1 		cmp	r2, r3
 16872 03f8 0100001A 		bne	.L1083
6822:../../Source/Kernel/rme_kernel.c ****     {
6823:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6824:../../Source/Kernel/rme_kernel.c ****         
6825:../../Source/Kernel/rme_kernel.c ****         return 0;
 16873              		.loc 1 6825 16
 16874 03fc 0030A0E3 		mov	r3, #0
 16875 0400 070000EA 		b	.L1062
 16876              	.L1083:
6826:../../Source/Kernel/rme_kernel.c ****     }
6827:../../Source/Kernel/rme_kernel.c ****     else
6828:../../Source/Kernel/rme_kernel.c ****     {
6829:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6830:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6831:../../Source/Kernel/rme_kernel.c ****     }
6832:../../Source/Kernel/rme_kernel.c ****             
6833:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6834:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16877              		.loc 1 6834 5
 16878 0404 0C201BE5 		ldr	r2, [fp, #-12]
 16879 0408 14101BE5 		ldr	r1, [fp, #-20]
 16880 040c 24001BE5 		ldr	r0, [fp, #-36]
 16881 0410 FEFFFFEB 		bl	_RME_Run_Swt
6835:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16882              		.loc 1 6835 19
 16883 0414 10301BE5 		ldr	r3, [fp, #-16]
 16884 0418 0C201BE5 		ldr	r2, [fp, #-12]
 16885 041c 042083E5 		str	r2, [r3, #4]
6836:../../Source/Kernel/rme_kernel.c **** 
6837:../../Source/Kernel/rme_kernel.c ****     return 0;
 16886              		.loc 1 6837 12
 16887 0420 0030A0E3 		mov	r3, #0
 16888              	.L1062:
6838:../../Source/Kernel/rme_kernel.c **** }
 16889              		.loc 1 6838 1
 16890 0424 0300A0E1 		mov	r0, r3
 16891 0428 04D04BE2 		sub	sp, fp, #4
 16892              		.cfi_def_cfa 13, 8
 16893              		@ sp needed
 16894 042c 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 418


 16895              		.cfi_endproc
 16896              	.LFE64:
 16898              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 16899              		.align	2
 16900              		.global	_RME_Sig_Boot_Crt
 16901              		.syntax unified
 16902              		.arm
 16904              	_RME_Sig_Boot_Crt:
 16905              	.LFB65:
6839:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6840:../../Source/Kernel/rme_kernel.c **** 
6841:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6842:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6843:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6844:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6845:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6846:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6847:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6848:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6849:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6850:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6851:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6852:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6853:../../Source/Kernel/rme_kernel.c **** Output      : None.
6854:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6855:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6856:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6857:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6858:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6859:../../Source/Kernel/rme_kernel.c **** {
 16906              		.loc 1 6859 1
 16907              		.cfi_startproc
 16908              		@ args = 0, pretend = 0, frame = 32
 16909              		@ frame_needed = 1, uses_anonymous_args = 0
 16910 0000 00482DE9 		push	{fp, lr}
 16911              		.cfi_def_cfa_offset 8
 16912              		.cfi_offset 11, -8
 16913              		.cfi_offset 14, -4
 16914 0004 04B08DE2 		add	fp, sp, #4
 16915              		.cfi_def_cfa 11, 4
 16916 0008 20D04DE2 		sub	sp, sp, #32
 16917 000c 18000BE5 		str	r0, [fp, #-24]
 16918 0010 1C100BE5 		str	r1, [fp, #-28]
 16919 0014 20200BE5 		str	r2, [fp, #-32]
6860:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6861:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6862:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6863:../../Source/Kernel/rme_kernel.c ****     
6864:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6865:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16920              		.loc 1 6865 5
 16921 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16922 001c 803003E2 		and	r3, r3, #128
 16923 0020 000053E3 		cmp	r3, #0
 16924 0024 1C00001A 		bne	.L1085
 16925              		.loc 1 6865 5 is_stmt 0 discriminator 1
 16926 0028 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 419


 16927 002c 142093E5 		ldr	r2, [r3, #20]
 16928 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16929 0034 030052E1 		cmp	r2, r3
 16930 0038 0100008A 		bhi	.L1086
 16931              		.loc 1 6865 5 discriminator 3
 16932 003c 0230E0E3 		mvn	r3, #2
 16933              		.loc 1 6865 5
 16934 0040 8A0000EA 		b	.L1087
 16935              	.L1086:
 16936              		.loc 1 6865 5 discriminator 4
 16937 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16938 0048 8322A0E1 		lsl	r2, r3, #5
 16939 004c 18301BE5 		ldr	r3, [fp, #-24]
 16940 0050 0C3093E5 		ldr	r3, [r3, #12]
 16941 0054 033082E0 		add	r3, r2, r3
 16942 0058 08300BE5 		str	r3, [fp, #-8]
 16943 005c 08301BE5 		ldr	r3, [fp, #-8]
 16944 0060 0300A0E1 		mov	r0, r3
 16945 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16946 0068 0C000BE5 		str	r0, [fp, #-12]
 16947              		.loc 1 6865 5 discriminator 1
 16948 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16949 0070 FF3803E2 		and	r3, r3, #16711680
 16950 0074 020853E3 		cmp	r3, #131072
 16951 0078 0100001A 		bne	.L1088
 16952              		.loc 1 6865 5 discriminator 5
 16953 007c 0830E0E3 		mvn	r3, #8
 16954              		.loc 1 6865 5
 16955 0080 7A0000EA 		b	.L1087
 16956              	.L1088:
 16957              		.loc 1 6865 5 discriminator 6
 16958 0084 0C301BE5 		ldr	r3, [fp, #-12]
 16959 0088 233CA0E1 		lsr	r3, r3, #24
 16960 008c 030053E3 		cmp	r3, #3
 16961 0090 3F00000A 		beq	.L1089
 16962              		.loc 1 6865 5 discriminator 7
 16963 0094 0130E0E3 		mvn	r3, #1
 16964              		.loc 1 6865 5
 16965 0098 740000EA 		b	.L1087
 16966              	.L1085:
 16967              		.loc 1 6865 5 discriminator 2
 16968 009c 1C301BE5 		ldr	r3, [fp, #-28]
 16969 00a0 2324A0E1 		lsr	r2, r3, #8
 16970 00a4 18301BE5 		ldr	r3, [fp, #-24]
 16971 00a8 143093E5 		ldr	r3, [r3, #20]
 16972 00ac 030052E1 		cmp	r2, r3
 16973 00b0 0100003A 		bcc	.L1090
 16974              		.loc 1 6865 5 discriminator 8
 16975 00b4 0230E0E3 		mvn	r3, #2
 16976              		.loc 1 6865 5
 16977 00b8 6C0000EA 		b	.L1087
 16978              	.L1090:
 16979              		.loc 1 6865 5 discriminator 9
 16980 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 16981 00c0 2334A0E1 		lsr	r3, r3, #8
 16982 00c4 8322A0E1 		lsl	r2, r3, #5
 16983 00c8 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 420


 16984 00cc 0C3093E5 		ldr	r3, [r3, #12]
 16985 00d0 033082E0 		add	r3, r2, r3
 16986 00d4 08300BE5 		str	r3, [fp, #-8]
 16987 00d8 08301BE5 		ldr	r3, [fp, #-8]
 16988 00dc 0300A0E1 		mov	r0, r3
 16989 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16990 00e4 0C000BE5 		str	r0, [fp, #-12]
 16991              		.loc 1 6865 5 discriminator 1
 16992 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 16993 00ec FF3803E2 		and	r3, r3, #16711680
 16994 00f0 020853E3 		cmp	r3, #131072
 16995 00f4 0100001A 		bne	.L1091
 16996              		.loc 1 6865 5 discriminator 10
 16997 00f8 0830E0E3 		mvn	r3, #8
 16998              		.loc 1 6865 5
 16999 00fc 5B0000EA 		b	.L1087
 17000              	.L1091:
 17001              		.loc 1 6865 5 discriminator 11
 17002 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17003 0104 233CA0E1 		lsr	r3, r3, #24
 17004 0108 030053E3 		cmp	r3, #3
 17005 010c 0100000A 		beq	.L1092
 17006              		.loc 1 6865 5 discriminator 12
 17007 0110 0130E0E3 		mvn	r3, #1
 17008              		.loc 1 6865 5
 17009 0114 550000EA 		b	.L1087
 17010              	.L1092:
 17011              		.loc 1 6865 5 discriminator 13
 17012 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17013 011c 7F2003E2 		and	r2, r3, #127
 17014 0120 08301BE5 		ldr	r3, [fp, #-8]
 17015 0124 143093E5 		ldr	r3, [r3, #20]
 17016 0128 030052E1 		cmp	r2, r3
 17017 012c 0100003A 		bcc	.L1093
 17018              		.loc 1 6865 5 discriminator 14
 17019 0130 0230E0E3 		mvn	r3, #2
 17020              		.loc 1 6865 5
 17021 0134 4D0000EA 		b	.L1087
 17022              	.L1093:
 17023              		.loc 1 6865 5 discriminator 15
 17024 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17025 013c 7F3003E2 		and	r3, r3, #127
 17026 0140 8322A0E1 		lsl	r2, r3, #5
 17027 0144 08301BE5 		ldr	r3, [fp, #-8]
 17028 0148 0C3093E5 		ldr	r3, [r3, #12]
 17029 014c 033082E0 		add	r3, r2, r3
 17030 0150 08300BE5 		str	r3, [fp, #-8]
 17031 0154 08301BE5 		ldr	r3, [fp, #-8]
 17032 0158 0300A0E1 		mov	r0, r3
 17033 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17034 0160 0C000BE5 		str	r0, [fp, #-12]
 17035              		.loc 1 6865 5 discriminator 1
 17036 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17037 0168 FF3803E2 		and	r3, r3, #16711680
 17038 016c 020853E3 		cmp	r3, #131072
 17039 0170 0100001A 		bne	.L1094
 17040              		.loc 1 6865 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 421


 17041 0174 0830E0E3 		mvn	r3, #8
 17042              		.loc 1 6865 5
 17043 0178 3C0000EA 		b	.L1087
 17044              	.L1094:
 17045              		.loc 1 6865 5 discriminator 17
 17046 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17047 0180 233CA0E1 		lsr	r3, r3, #24
 17048 0184 030053E3 		cmp	r3, #3
 17049 0188 0100000A 		beq	.L1089
 17050              		.loc 1 6865 5 discriminator 18
 17051 018c 0130E0E3 		mvn	r3, #1
 17052              		.loc 1 6865 5
 17053 0190 360000EA 		b	.L1087
 17054              	.L1089:
6866:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6867:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6868:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 17055              		.loc 1 6868 5 is_stmt 1
 17056 0194 08301BE5 		ldr	r3, [fp, #-8]
 17057 0198 083093E5 		ldr	r3, [r3, #8]
 17058 019c 013003E2 		and	r3, r3, #1
 17059 01a0 000053E3 		cmp	r3, #0
 17060 01a4 0100001A 		bne	.L1095
 17061              		.loc 1 6868 5 is_stmt 0 discriminator 1
 17062 01a8 0630E0E3 		mvn	r3, #6
 17063              		.loc 1 6868 5
 17064 01ac 2F0000EA 		b	.L1087
 17065              	.L1095:
6869:../../Source/Kernel/rme_kernel.c ****     
6870:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6871:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17066              		.loc 1 6871 5 is_stmt 1
 17067 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17068 01b4 142093E5 		ldr	r2, [r3, #20]
 17069 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17070 01bc 030052E1 		cmp	r2, r3
 17071 01c0 0100008A 		bhi	.L1096
 17072              		.loc 1 6871 5 is_stmt 0 discriminator 1
 17073 01c4 0230E0E3 		mvn	r3, #2
 17074              		.loc 1 6871 5
 17075 01c8 280000EA 		b	.L1087
 17076              	.L1096:
 17077              		.loc 1 6871 5 discriminator 2
 17078 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17079 01d0 8322A0E1 		lsl	r2, r3, #5
 17080 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17081 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17082 01dc 033082E0 		add	r3, r2, r3
 17083 01e0 10300BE5 		str	r3, [fp, #-16]
6872:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6873:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17084              		.loc 1 6873 5 is_stmt 1
 17085 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17086 01e8 0128A0E3 		mov	r2, #65536
 17087 01ec 0010A0E3 		mov	r1, #0
 17088 01f0 0300A0E1 		mov	r0, r3
 17089 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 422


 17090 01f8 0030A0E1 		mov	r3, r0
 17091              		.loc 1 6873 5 is_stmt 0 discriminator 1
 17092 01fc 000053E3 		cmp	r3, #0
 17093 0200 0100001A 		bne	.L1097
 17094 0204 0430E0E3 		mvn	r3, #4
 17095              		.loc 1 6873 5
 17096 0208 180000EA 		b	.L1087
 17097              	.L1097:
 17098              		.loc 1 6873 5 discriminator 2
 17099 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17100 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17101 0214 002093E5 		ldr	r2, [r3]
 17102 0218 10301BE5 		ldr	r3, [fp, #-16]
 17103 021c 102083E5 		str	r2, [r3, #16]
6874:../../Source/Kernel/rme_kernel.c ****     
6875:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6876:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 17104              		.loc 1 6876 27 is_stmt 1
 17105 0220 10301BE5 		ldr	r3, [fp, #-16]
 17106 0224 0120A0E3 		mov	r2, #1
 17107 0228 042083E5 		str	r2, [r3, #4]
6877:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17108              		.loc 1 6877 25
 17109 022c 10301BE5 		ldr	r3, [fp, #-16]
 17110 0230 0020A0E3 		mov	r2, #0
 17111 0234 0C2083E5 		str	r2, [r3, #12]
6878:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17112              		.loc 1 6878 23
 17113 0238 10301BE5 		ldr	r3, [fp, #-16]
 17114 023c 3F20A0E3 		mov	r2, #63
 17115 0240 082083E5 		str	r2, [r3, #8]
6879:../../Source/Kernel/rme_kernel.c ****     
6880:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6881:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17116              		.loc 1 6881 21
 17117 0244 10301BE5 		ldr	r3, [fp, #-16]
 17118 0248 0020A0E3 		mov	r2, #0
 17119 024c 142083E5 		str	r2, [r3, #20]
6882:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 17120              		.loc 1 6882 17
 17121 0250 10301BE5 		ldr	r3, [fp, #-16]
 17122 0254 0020A0E3 		mov	r2, #0
 17123 0258 182083E5 		str	r2, [r3, #24]
6883:../../Source/Kernel/rme_kernel.c **** 
6884:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6885:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17124              		.loc 1 6885 5
 17125 025c 10301BE5 		ldr	r3, [fp, #-16]
 17126 0260 0213A0E3 		mov	r1, #134217728
 17127 0264 0300A0E1 		mov	r0, r3
 17128 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6886:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6887:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6888:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6889:../../Source/Kernel/rme_kernel.c **** 
6890:../../Source/Kernel/rme_kernel.c ****     return 0;
 17129              		.loc 1 6890 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 423


 17130 026c 0030A0E3 		mov	r3, #0
 17131              	.L1087:
6891:../../Source/Kernel/rme_kernel.c **** }
 17132              		.loc 1 6891 1
 17133 0270 0300A0E1 		mov	r0, r3
 17134 0274 04D04BE2 		sub	sp, fp, #4
 17135              		.cfi_def_cfa 13, 8
 17136              		@ sp needed
 17137 0278 0088BDE8 		pop	{fp, pc}
 17138              		.cfi_endproc
 17139              	.LFE65:
 17141              		.section	.text._RME_Sig_Crt,"ax",%progbits
 17142              		.align	2
 17143              		.syntax unified
 17144              		.arm
 17146              	_RME_Sig_Crt:
 17147              	.LFB66:
6892:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6893:../../Source/Kernel/rme_kernel.c **** 
6894:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6895:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6896:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6897:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6898:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6899:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6900:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6901:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6902:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6903:../../Source/Kernel/rme_kernel.c **** Output      : None.
6904:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6905:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6906:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6907:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6909:../../Source/Kernel/rme_kernel.c **** {
 17148              		.loc 1 6909 1
 17149              		.cfi_startproc
 17150              		@ args = 0, pretend = 0, frame = 32
 17151              		@ frame_needed = 1, uses_anonymous_args = 0
 17152 0000 00482DE9 		push	{fp, lr}
 17153              		.cfi_def_cfa_offset 8
 17154              		.cfi_offset 11, -8
 17155              		.cfi_offset 14, -4
 17156 0004 04B08DE2 		add	fp, sp, #4
 17157              		.cfi_def_cfa 11, 4
 17158 0008 20D04DE2 		sub	sp, sp, #32
 17159 000c 18000BE5 		str	r0, [fp, #-24]
 17160 0010 1C100BE5 		str	r1, [fp, #-28]
 17161 0014 20200BE5 		str	r2, [fp, #-32]
6910:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6911:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6912:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6913:../../Source/Kernel/rme_kernel.c ****     
6914:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Cpt ");
6915:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
6916:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Sig ");
6917:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Sig);*/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 424


6918:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6919:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17162              		.loc 1 6919 5
 17163 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17164 001c 803003E2 		and	r3, r3, #128
 17165 0020 000053E3 		cmp	r3, #0
 17166 0024 1C00001A 		bne	.L1099
 17167              		.loc 1 6919 5 is_stmt 0 discriminator 1
 17168 0028 18301BE5 		ldr	r3, [fp, #-24]
 17169 002c 142093E5 		ldr	r2, [r3, #20]
 17170 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17171 0034 030052E1 		cmp	r2, r3
 17172 0038 0100008A 		bhi	.L1100
 17173              		.loc 1 6919 5 discriminator 3
 17174 003c 0230E0E3 		mvn	r3, #2
 17175              		.loc 1 6919 5
 17176 0040 8A0000EA 		b	.L1101
 17177              	.L1100:
 17178              		.loc 1 6919 5 discriminator 4
 17179 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17180 0048 8322A0E1 		lsl	r2, r3, #5
 17181 004c 18301BE5 		ldr	r3, [fp, #-24]
 17182 0050 0C3093E5 		ldr	r3, [r3, #12]
 17183 0054 033082E0 		add	r3, r2, r3
 17184 0058 08300BE5 		str	r3, [fp, #-8]
 17185 005c 08301BE5 		ldr	r3, [fp, #-8]
 17186 0060 0300A0E1 		mov	r0, r3
 17187 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17188 0068 0C000BE5 		str	r0, [fp, #-12]
 17189              		.loc 1 6919 5 discriminator 1
 17190 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17191 0070 FF3803E2 		and	r3, r3, #16711680
 17192 0074 020853E3 		cmp	r3, #131072
 17193 0078 0100001A 		bne	.L1102
 17194              		.loc 1 6919 5 discriminator 5
 17195 007c 0830E0E3 		mvn	r3, #8
 17196              		.loc 1 6919 5
 17197 0080 7A0000EA 		b	.L1101
 17198              	.L1102:
 17199              		.loc 1 6919 5 discriminator 6
 17200 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17201 0088 233CA0E1 		lsr	r3, r3, #24
 17202 008c 030053E3 		cmp	r3, #3
 17203 0090 3F00000A 		beq	.L1103
 17204              		.loc 1 6919 5 discriminator 7
 17205 0094 0130E0E3 		mvn	r3, #1
 17206              		.loc 1 6919 5
 17207 0098 740000EA 		b	.L1101
 17208              	.L1099:
 17209              		.loc 1 6919 5 discriminator 2
 17210 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17211 00a0 2324A0E1 		lsr	r2, r3, #8
 17212 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17213 00a8 143093E5 		ldr	r3, [r3, #20]
 17214 00ac 030052E1 		cmp	r2, r3
 17215 00b0 0100003A 		bcc	.L1104
 17216              		.loc 1 6919 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 425


 17217 00b4 0230E0E3 		mvn	r3, #2
 17218              		.loc 1 6919 5
 17219 00b8 6C0000EA 		b	.L1101
 17220              	.L1104:
 17221              		.loc 1 6919 5 discriminator 9
 17222 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17223 00c0 2334A0E1 		lsr	r3, r3, #8
 17224 00c4 8322A0E1 		lsl	r2, r3, #5
 17225 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17226 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17227 00d0 033082E0 		add	r3, r2, r3
 17228 00d4 08300BE5 		str	r3, [fp, #-8]
 17229 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17230 00dc 0300A0E1 		mov	r0, r3
 17231 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17232 00e4 0C000BE5 		str	r0, [fp, #-12]
 17233              		.loc 1 6919 5 discriminator 1
 17234 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17235 00ec FF3803E2 		and	r3, r3, #16711680
 17236 00f0 020853E3 		cmp	r3, #131072
 17237 00f4 0100001A 		bne	.L1105
 17238              		.loc 1 6919 5 discriminator 10
 17239 00f8 0830E0E3 		mvn	r3, #8
 17240              		.loc 1 6919 5
 17241 00fc 5B0000EA 		b	.L1101
 17242              	.L1105:
 17243              		.loc 1 6919 5 discriminator 11
 17244 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17245 0104 233CA0E1 		lsr	r3, r3, #24
 17246 0108 030053E3 		cmp	r3, #3
 17247 010c 0100000A 		beq	.L1106
 17248              		.loc 1 6919 5 discriminator 12
 17249 0110 0130E0E3 		mvn	r3, #1
 17250              		.loc 1 6919 5
 17251 0114 550000EA 		b	.L1101
 17252              	.L1106:
 17253              		.loc 1 6919 5 discriminator 13
 17254 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17255 011c 7F2003E2 		and	r2, r3, #127
 17256 0120 08301BE5 		ldr	r3, [fp, #-8]
 17257 0124 143093E5 		ldr	r3, [r3, #20]
 17258 0128 030052E1 		cmp	r2, r3
 17259 012c 0100003A 		bcc	.L1107
 17260              		.loc 1 6919 5 discriminator 14
 17261 0130 0230E0E3 		mvn	r3, #2
 17262              		.loc 1 6919 5
 17263 0134 4D0000EA 		b	.L1101
 17264              	.L1107:
 17265              		.loc 1 6919 5 discriminator 15
 17266 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17267 013c 7F3003E2 		and	r3, r3, #127
 17268 0140 8322A0E1 		lsl	r2, r3, #5
 17269 0144 08301BE5 		ldr	r3, [fp, #-8]
 17270 0148 0C3093E5 		ldr	r3, [r3, #12]
 17271 014c 033082E0 		add	r3, r2, r3
 17272 0150 08300BE5 		str	r3, [fp, #-8]
 17273 0154 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 426


 17274 0158 0300A0E1 		mov	r0, r3
 17275 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17276 0160 0C000BE5 		str	r0, [fp, #-12]
 17277              		.loc 1 6919 5 discriminator 1
 17278 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17279 0168 FF3803E2 		and	r3, r3, #16711680
 17280 016c 020853E3 		cmp	r3, #131072
 17281 0170 0100001A 		bne	.L1108
 17282              		.loc 1 6919 5 discriminator 16
 17283 0174 0830E0E3 		mvn	r3, #8
 17284              		.loc 1 6919 5
 17285 0178 3C0000EA 		b	.L1101
 17286              	.L1108:
 17287              		.loc 1 6919 5 discriminator 17
 17288 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17289 0180 233CA0E1 		lsr	r3, r3, #24
 17290 0184 030053E3 		cmp	r3, #3
 17291 0188 0100000A 		beq	.L1103
 17292              		.loc 1 6919 5 discriminator 18
 17293 018c 0130E0E3 		mvn	r3, #1
 17294              		.loc 1 6919 5
 17295 0190 360000EA 		b	.L1101
 17296              	.L1103:
6920:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6921:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 1 ");
6922:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6923:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17297              		.loc 1 6923 5 is_stmt 1
 17298 0194 08301BE5 		ldr	r3, [fp, #-8]
 17299 0198 083093E5 		ldr	r3, [r3, #8]
 17300 019c 013003E2 		and	r3, r3, #1
 17301 01a0 000053E3 		cmp	r3, #0
 17302 01a4 0100001A 		bne	.L1109
 17303              		.loc 1 6923 5 is_stmt 0 discriminator 1
 17304 01a8 0630E0E3 		mvn	r3, #6
 17305              		.loc 1 6923 5
 17306 01ac 2F0000EA 		b	.L1101
 17307              	.L1109:
6924:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 2 ");
6925:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6926:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17308              		.loc 1 6926 5 is_stmt 1
 17309 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17310 01b4 142093E5 		ldr	r2, [r3, #20]
 17311 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17312 01bc 030052E1 		cmp	r2, r3
 17313 01c0 0100008A 		bhi	.L1110
 17314              		.loc 1 6926 5 is_stmt 0 discriminator 1
 17315 01c4 0230E0E3 		mvn	r3, #2
 17316              		.loc 1 6926 5
 17317 01c8 280000EA 		b	.L1101
 17318              	.L1110:
 17319              		.loc 1 6926 5 discriminator 2
 17320 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17321 01d0 8322A0E1 		lsl	r2, r3, #5
 17322 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17323 01d8 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 427


 17324 01dc 033082E0 		add	r3, r2, r3
 17325 01e0 10300BE5 		str	r3, [fp, #-16]
6927:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 3 ");
6928:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6929:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17326              		.loc 1 6929 5 is_stmt 1
 17327 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17328 01e8 0128A0E3 		mov	r2, #65536
 17329 01ec 0010A0E3 		mov	r1, #0
 17330 01f0 0300A0E1 		mov	r0, r3
 17331 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17332 01f8 0030A0E1 		mov	r3, r0
 17333              		.loc 1 6929 5 is_stmt 0 discriminator 1
 17334 01fc 000053E3 		cmp	r3, #0
 17335 0200 0100001A 		bne	.L1111
 17336 0204 0430E0E3 		mvn	r3, #4
 17337              		.loc 1 6929 5
 17338 0208 180000EA 		b	.L1101
 17339              	.L1111:
 17340              		.loc 1 6929 5 discriminator 2
 17341 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17342 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17343 0214 002093E5 		ldr	r2, [r3]
 17344 0218 10301BE5 		ldr	r3, [fp, #-16]
 17345 021c 102083E5 		str	r2, [r3, #16]
6930:../../Source/Kernel/rme_kernel.c **** 
6931:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6932:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17346              		.loc 1 6932 27 is_stmt 1
 17347 0220 10301BE5 		ldr	r3, [fp, #-16]
 17348 0224 0020A0E3 		mov	r2, #0
 17349 0228 042083E5 		str	r2, [r3, #4]
6933:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17350              		.loc 1 6933 25
 17351 022c 10301BE5 		ldr	r3, [fp, #-16]
 17352 0230 0020A0E3 		mov	r2, #0
 17353 0234 0C2083E5 		str	r2, [r3, #12]
6934:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17354              		.loc 1 6934 23
 17355 0238 10301BE5 		ldr	r3, [fp, #-16]
 17356 023c 3F20A0E3 		mov	r2, #63
 17357 0240 082083E5 		str	r2, [r3, #8]
6935:../../Source/Kernel/rme_kernel.c ****     
6936:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6937:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17358              		.loc 1 6937 21
 17359 0244 10301BE5 		ldr	r3, [fp, #-16]
 17360 0248 0020A0E3 		mov	r2, #0
 17361 024c 142083E5 		str	r2, [r3, #20]
6938:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17362              		.loc 1 6938 17
 17363 0250 10301BE5 		ldr	r3, [fp, #-16]
 17364 0254 0020A0E3 		mov	r2, #0
 17365 0258 182083E5 		str	r2, [r3, #24]
6939:../../Source/Kernel/rme_kernel.c ****     
6940:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6941:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 428


 17366              		.loc 1 6941 5
 17367 025c 10301BE5 		ldr	r3, [fp, #-16]
 17368 0260 0213A0E3 		mov	r1, #134217728
 17369 0264 0300A0E1 		mov	r0, r3
 17370 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6942:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6943:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6944:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6945:../../Source/Kernel/rme_kernel.c **** 
6946:../../Source/Kernel/rme_kernel.c ****     return 0;
 17371              		.loc 1 6946 12
 17372 026c 0030A0E3 		mov	r3, #0
 17373              	.L1101:
6947:../../Source/Kernel/rme_kernel.c **** }
 17374              		.loc 1 6947 1
 17375 0270 0300A0E1 		mov	r0, r3
 17376 0274 04D04BE2 		sub	sp, fp, #4
 17377              		.cfi_def_cfa 13, 8
 17378              		@ sp needed
 17379 0278 0088BDE8 		pop	{fp, pc}
 17380              		.cfi_endproc
 17381              	.LFE66:
 17383              		.section	.text._RME_Sig_Del,"ax",%progbits
 17384              		.align	2
 17385              		.syntax unified
 17386              		.arm
 17388              	_RME_Sig_Del:
 17389              	.LFB67:
6948:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6949:../../Source/Kernel/rme_kernel.c **** 
6950:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6951:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6952:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6953:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6954:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6955:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6956:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6957:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6958:../../Source/Kernel/rme_kernel.c **** Output      : None.
6959:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6960:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6961:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6962:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6963:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6964:../../Source/Kernel/rme_kernel.c **** {
 17390              		.loc 1 6964 1
 17391              		.cfi_startproc
 17392              		@ args = 0, pretend = 0, frame = 32
 17393              		@ frame_needed = 1, uses_anonymous_args = 0
 17394 0000 00482DE9 		push	{fp, lr}
 17395              		.cfi_def_cfa_offset 8
 17396              		.cfi_offset 11, -8
 17397              		.cfi_offset 14, -4
 17398 0004 04B08DE2 		add	fp, sp, #4
 17399              		.cfi_def_cfa 11, 4
 17400 0008 20D04DE2 		sub	sp, sp, #32
 17401 000c 18000BE5 		str	r0, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 429


 17402 0010 1C100BE5 		str	r1, [fp, #-28]
 17403 0014 20200BE5 		str	r2, [fp, #-32]
6965:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6966:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6967:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6968:../../Source/Kernel/rme_kernel.c ****     
6969:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6970:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17404              		.loc 1 6970 5
 17405 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17406 001c 803003E2 		and	r3, r3, #128
 17407 0020 000053E3 		cmp	r3, #0
 17408 0024 1C00001A 		bne	.L1113
 17409              		.loc 1 6970 5 is_stmt 0 discriminator 1
 17410 0028 18301BE5 		ldr	r3, [fp, #-24]
 17411 002c 142093E5 		ldr	r2, [r3, #20]
 17412 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17413 0034 030052E1 		cmp	r2, r3
 17414 0038 0100008A 		bhi	.L1114
 17415              		.loc 1 6970 5 discriminator 3
 17416 003c 0230E0E3 		mvn	r3, #2
 17417              		.loc 1 6970 5
 17418 0040 B80000EA 		b	.L1115
 17419              	.L1114:
 17420              		.loc 1 6970 5 discriminator 4
 17421 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17422 0048 8322A0E1 		lsl	r2, r3, #5
 17423 004c 18301BE5 		ldr	r3, [fp, #-24]
 17424 0050 0C3093E5 		ldr	r3, [r3, #12]
 17425 0054 033082E0 		add	r3, r2, r3
 17426 0058 08300BE5 		str	r3, [fp, #-8]
 17427 005c 08301BE5 		ldr	r3, [fp, #-8]
 17428 0060 0300A0E1 		mov	r0, r3
 17429 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17430 0068 0C000BE5 		str	r0, [fp, #-12]
 17431              		.loc 1 6970 5 discriminator 1
 17432 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17433 0070 FF3803E2 		and	r3, r3, #16711680
 17434 0074 020853E3 		cmp	r3, #131072
 17435 0078 0100001A 		bne	.L1116
 17436              		.loc 1 6970 5 discriminator 5
 17437 007c 0830E0E3 		mvn	r3, #8
 17438              		.loc 1 6970 5
 17439 0080 A80000EA 		b	.L1115
 17440              	.L1116:
 17441              		.loc 1 6970 5 discriminator 6
 17442 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17443 0088 233CA0E1 		lsr	r3, r3, #24
 17444 008c 030053E3 		cmp	r3, #3
 17445 0090 3F00000A 		beq	.L1117
 17446              		.loc 1 6970 5 discriminator 7
 17447 0094 0130E0E3 		mvn	r3, #1
 17448              		.loc 1 6970 5
 17449 0098 A20000EA 		b	.L1115
 17450              	.L1113:
 17451              		.loc 1 6970 5 discriminator 2
 17452 009c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 430


 17453 00a0 2324A0E1 		lsr	r2, r3, #8
 17454 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17455 00a8 143093E5 		ldr	r3, [r3, #20]
 17456 00ac 030052E1 		cmp	r2, r3
 17457 00b0 0100003A 		bcc	.L1118
 17458              		.loc 1 6970 5 discriminator 8
 17459 00b4 0230E0E3 		mvn	r3, #2
 17460              		.loc 1 6970 5
 17461 00b8 9A0000EA 		b	.L1115
 17462              	.L1118:
 17463              		.loc 1 6970 5 discriminator 9
 17464 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17465 00c0 2334A0E1 		lsr	r3, r3, #8
 17466 00c4 8322A0E1 		lsl	r2, r3, #5
 17467 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17468 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17469 00d0 033082E0 		add	r3, r2, r3
 17470 00d4 08300BE5 		str	r3, [fp, #-8]
 17471 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17472 00dc 0300A0E1 		mov	r0, r3
 17473 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17474 00e4 0C000BE5 		str	r0, [fp, #-12]
 17475              		.loc 1 6970 5 discriminator 1
 17476 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17477 00ec FF3803E2 		and	r3, r3, #16711680
 17478 00f0 020853E3 		cmp	r3, #131072
 17479 00f4 0100001A 		bne	.L1119
 17480              		.loc 1 6970 5 discriminator 10
 17481 00f8 0830E0E3 		mvn	r3, #8
 17482              		.loc 1 6970 5
 17483 00fc 890000EA 		b	.L1115
 17484              	.L1119:
 17485              		.loc 1 6970 5 discriminator 11
 17486 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17487 0104 233CA0E1 		lsr	r3, r3, #24
 17488 0108 030053E3 		cmp	r3, #3
 17489 010c 0100000A 		beq	.L1120
 17490              		.loc 1 6970 5 discriminator 12
 17491 0110 0130E0E3 		mvn	r3, #1
 17492              		.loc 1 6970 5
 17493 0114 830000EA 		b	.L1115
 17494              	.L1120:
 17495              		.loc 1 6970 5 discriminator 13
 17496 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17497 011c 7F2003E2 		and	r2, r3, #127
 17498 0120 08301BE5 		ldr	r3, [fp, #-8]
 17499 0124 143093E5 		ldr	r3, [r3, #20]
 17500 0128 030052E1 		cmp	r2, r3
 17501 012c 0100003A 		bcc	.L1121
 17502              		.loc 1 6970 5 discriminator 14
 17503 0130 0230E0E3 		mvn	r3, #2
 17504              		.loc 1 6970 5
 17505 0134 7B0000EA 		b	.L1115
 17506              	.L1121:
 17507              		.loc 1 6970 5 discriminator 15
 17508 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17509 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 431


 17510 0140 8322A0E1 		lsl	r2, r3, #5
 17511 0144 08301BE5 		ldr	r3, [fp, #-8]
 17512 0148 0C3093E5 		ldr	r3, [r3, #12]
 17513 014c 033082E0 		add	r3, r2, r3
 17514 0150 08300BE5 		str	r3, [fp, #-8]
 17515 0154 08301BE5 		ldr	r3, [fp, #-8]
 17516 0158 0300A0E1 		mov	r0, r3
 17517 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17518 0160 0C000BE5 		str	r0, [fp, #-12]
 17519              		.loc 1 6970 5 discriminator 1
 17520 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17521 0168 FF3803E2 		and	r3, r3, #16711680
 17522 016c 020853E3 		cmp	r3, #131072
 17523 0170 0100001A 		bne	.L1122
 17524              		.loc 1 6970 5 discriminator 16
 17525 0174 0830E0E3 		mvn	r3, #8
 17526              		.loc 1 6970 5
 17527 0178 6A0000EA 		b	.L1115
 17528              	.L1122:
 17529              		.loc 1 6970 5 discriminator 17
 17530 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17531 0180 233CA0E1 		lsr	r3, r3, #24
 17532 0184 030053E3 		cmp	r3, #3
 17533 0188 0100000A 		beq	.L1117
 17534              		.loc 1 6970 5 discriminator 18
 17535 018c 0130E0E3 		mvn	r3, #1
 17536              		.loc 1 6970 5
 17537 0190 640000EA 		b	.L1115
 17538              	.L1117:
6971:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6972:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6973:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 17539              		.loc 1 6973 5 is_stmt 1
 17540 0194 08301BE5 		ldr	r3, [fp, #-8]
 17541 0198 083093E5 		ldr	r3, [r3, #8]
 17542 019c 023003E2 		and	r3, r3, #2
 17543 01a0 000053E3 		cmp	r3, #0
 17544 01a4 0100001A 		bne	.L1123
 17545              		.loc 1 6973 5 is_stmt 0 discriminator 1
 17546 01a8 0630E0E3 		mvn	r3, #6
 17547              		.loc 1 6973 5
 17548 01ac 5D0000EA 		b	.L1115
 17549              	.L1123:
6974:../../Source/Kernel/rme_kernel.c ****     
6975:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6976:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17550              		.loc 1 6976 5 is_stmt 1
 17551 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17552 01b4 142093E5 		ldr	r2, [r3, #20]
 17553 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17554 01bc 030052E1 		cmp	r2, r3
 17555 01c0 0100008A 		bhi	.L1124
 17556              		.loc 1 6976 5 is_stmt 0 discriminator 1
 17557 01c4 0230E0E3 		mvn	r3, #2
 17558              		.loc 1 6976 5
 17559 01c8 560000EA 		b	.L1115
 17560              	.L1124:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 432


 17561              		.loc 1 6976 5 discriminator 2
 17562 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17563 01d0 8322A0E1 		lsl	r2, r3, #5
 17564 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17565 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17566 01dc 033082E0 		add	r3, r2, r3
 17567 01e0 10300BE5 		str	r3, [fp, #-16]
6977:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6978:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17568              		.loc 1 6978 5 is_stmt 1
 17569 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17570 01e8 0300A0E1 		mov	r0, r3
 17571 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17572 01f0 0C000BE5 		str	r0, [fp, #-12]
 17573              		.loc 1 6978 5 is_stmt 0 discriminator 1
 17574 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17575 01f8 FF3803E2 		and	r3, r3, #16711680
 17576 01fc 020853E3 		cmp	r3, #131072
 17577 0200 0100000A 		beq	.L1125
 17578 0204 0830E0E3 		mvn	r3, #8
 17579              		.loc 1 6978 5
 17580 0208 460000EA 		b	.L1115
 17581              	.L1125:
 17582              		.loc 1 6978 5 discriminator 2
 17583 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17584 0210 233CA0E1 		lsr	r3, r3, #24
 17585 0214 080053E3 		cmp	r3, #8
 17586 0218 0100000A 		beq	.L1126
 17587              		.loc 1 6978 5 discriminator 3
 17588 021c 0130E0E3 		mvn	r3, #1
 17589              		.loc 1 6978 5
 17590 0220 400000EA 		b	.L1115
 17591              	.L1126:
 17592              		.loc 1 6978 5 discriminator 4
 17593 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17594 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17595 022c 002093E5 		ldr	r2, [r3]
 17596 0230 10301BE5 		ldr	r3, [fp, #-16]
 17597 0234 103093E5 		ldr	r3, [r3, #16]
 17598 0238 0310A0E1 		mov	r1, r3
 17599 023c 0200A0E1 		mov	r0, r2
 17600 0240 FEFFFFEB 		bl	_RME_Diff
 17601 0244 0030A0E1 		mov	r3, r0
 17602              		.loc 1 6978 5 discriminator 1
 17603 0248 0A0053E3 		cmp	r3, #10
 17604 024c 0100008A 		bhi	.L1127
 17605              		.loc 1 6978 5 discriminator 5
 17606 0250 0730E0E3 		mvn	r3, #7
 17607              		.loc 1 6978 5
 17608 0254 330000EA 		b	.L1115
 17609              	.L1127:
 17610              		.loc 1 6978 5 discriminator 6
 17611 0258 10301BE5 		ldr	r3, [fp, #-16]
 17612 025c 043093E5 		ldr	r3, [r3, #4]
 17613 0260 000053E3 		cmp	r3, #0
 17614 0264 0B00000A 		beq	.L1128
 17615              		.loc 1 6978 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 433


 17616 0268 0C301BE5 		ldr	r3, [fp, #-12]
 17617 026c 7330FFE6 		uxth	r3, r3
 17618 0270 000053E3 		cmp	r3, #0
 17619 0274 0500001A 		bne	.L1129
 17620              		.loc 1 6978 5 discriminator 9
 17621 0278 10001BE5 		ldr	r0, [fp, #-16]
 17622 027c 0C301BE5 		ldr	r3, [fp, #-12]
 17623 0280 FF38C3E3 		bic	r3, r3, #16711680
 17624 0284 0320A0E1 		mov	r2, r3
 17625 0288 0C101BE5 		ldr	r1, [fp, #-12]
 17626 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17627              	.L1129:
 17628              		.loc 1 6978 5 discriminator 11
 17629 0290 0530E0E3 		mvn	r3, #5
 17630              		.loc 1 6978 5
 17631 0294 230000EA 		b	.L1115
 17632              	.L1128:
 17633              		.loc 1 6978 5 discriminator 8
 17634 0298 0C301BE5 		ldr	r3, [fp, #-12]
 17635 029c 7330FFE6 		uxth	r3, r3
 17636 02a0 000053E3 		cmp	r3, #0
 17637 02a4 0800000A 		beq	.L1130
 17638              		.loc 1 6978 5 discriminator 12
 17639 02a8 003000E3 		movw	r3, #:lower16:.LC6
 17640 02ac 003040E3 		movt	r3, #:upper16:.LC6
 17641 02b0 002000E3 		movw	r2, #:lower16:.LC7
 17642 02b4 002040E3 		movt	r2, #:upper16:.LC7
 17643 02b8 421B01E3 		movw	r1, #6978
 17644 02bc 000000E3 		movw	r0, #:lower16:.LC8
 17645 02c0 000040E3 		movt	r0, #:upper16:.LC8
 17646 02c4 FEFFFFEB 		bl	RME_Log
 17647              	.L1131:
 17648              		.loc 1 6978 5
 17649 02c8 FEFFFFEA 		b	.L1131
 17650              	.L1130:
6979:../../Source/Kernel/rme_kernel.c **** 
6980:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6981:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 17651              		.loc 1 6981 15 is_stmt 1
 17652 02cc 10301BE5 		ldr	r3, [fp, #-16]
 17653 02d0 183093E5 		ldr	r3, [r3, #24]
 17654              		.loc 1 6981 7
 17655 02d4 000053E3 		cmp	r3, #0
 17656 02d8 0700000A 		beq	.L1132
6982:../../Source/Kernel/rme_kernel.c ****     {
6983:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6984:../../Source/Kernel/rme_kernel.c **** 
6985:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 17657              		.loc 1 6985 9
 17658 02dc 10001BE5 		ldr	r0, [fp, #-16]
 17659 02e0 0C301BE5 		ldr	r3, [fp, #-12]
 17660 02e4 FF38C3E3 		bic	r3, r3, #16711680
 17661 02e8 0320A0E1 		mov	r2, r3
 17662 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 17663 02f0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
6986:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17664              		.loc 1 6986 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 434


 17665 02f4 4B3FE0E3 		mvn	r3, #300
 17666 02f8 0A0000EA 		b	.L1115
 17667              	.L1132:
6987:../../Source/Kernel/rme_kernel.c ****     }
6988:../../Source/Kernel/rme_kernel.c ****     else
6989:../../Source/Kernel/rme_kernel.c ****     {
6990:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6991:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6992:../../Source/Kernel/rme_kernel.c ****     }
6993:../../Source/Kernel/rme_kernel.c ****     
6994:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6995:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 17668              		.loc 1 6995 5
 17669 02fc 10301BE5 		ldr	r3, [fp, #-16]
 17670 0300 0020A0E3 		mov	r2, #0
 17671 0304 0C101BE5 		ldr	r1, [fp, #-12]
 17672 0308 0300A0E1 		mov	r0, r3
 17673 030c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17674 0310 0030A0E1 		mov	r3, r0
 17675              		.loc 1 6995 5 is_stmt 0 discriminator 1
 17676 0314 000053E3 		cmp	r3, #0
 17677 0318 0100001A 		bne	.L1133
 17678 031c 0030E0E3 		mvn	r3, #0
 17679              		.loc 1 6995 5
 17680 0320 000000EA 		b	.L1115
 17681              	.L1133:
6996:../../Source/Kernel/rme_kernel.c ****     
6997:../../Source/Kernel/rme_kernel.c ****     return 0;
 17682              		.loc 1 6997 12 is_stmt 1
 17683 0324 0030A0E3 		mov	r3, #0
 17684              	.L1115:
6998:../../Source/Kernel/rme_kernel.c **** }
 17685              		.loc 1 6998 1
 17686 0328 0300A0E1 		mov	r0, r3
 17687 032c 04D04BE2 		sub	sp, fp, #4
 17688              		.cfi_def_cfa 13, 8
 17689              		@ sp needed
 17690 0330 0088BDE8 		pop	{fp, pc}
 17691              		.cfi_endproc
 17692              	.LFE67:
 17694              		.section	.text._RME_Kern_High,"ax",%progbits
 17695              		.align	2
 17696              		.global	_RME_Kern_High
 17697              		.syntax unified
 17698              		.arm
 17700              	_RME_Kern_High:
 17701              	.LFB68:
6999:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
7000:../../Source/Kernel/rme_kernel.c **** 
7001:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
7002:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
7003:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
7004:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
7005:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
7006:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
7007:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7008:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 435


7009:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
7010:../../Source/Kernel/rme_kernel.c **** Return      : None.
7011:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7012:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
7013:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
7014:../../Source/Kernel/rme_kernel.c **** {
 17702              		.loc 1 7014 1
 17703              		.cfi_startproc
 17704              		@ args = 0, pretend = 0, frame = 16
 17705              		@ frame_needed = 1, uses_anonymous_args = 0
 17706 0000 00482DE9 		push	{fp, lr}
 17707              		.cfi_def_cfa_offset 8
 17708              		.cfi_offset 11, -8
 17709              		.cfi_offset 14, -4
 17710 0004 04B08DE2 		add	fp, sp, #4
 17711              		.cfi_def_cfa 11, 4
 17712 0008 10D04DE2 		sub	sp, sp, #16
 17713 000c 10000BE5 		str	r0, [fp, #-16]
 17714 0010 14100BE5 		str	r1, [fp, #-20]
7015:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
7016:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7017:../../Source/Kernel/rme_kernel.c **** 
7018:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 17715              		.loc 1 7018 13
 17716 0014 14001BE5 		ldr	r0, [fp, #-20]
 17717 0018 FEFFFFEB 		bl	_RME_Run_High
 17718 001c 08000BE5 		str	r0, [fp, #-8]
7019:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 17719              		.loc 1 7019 5
 17720 0020 08301BE5 		ldr	r3, [fp, #-8]
 17721 0024 000053E3 		cmp	r3, #0
 17722 0028 0800001A 		bne	.L1135
 17723              		.loc 1 7019 5 is_stmt 0 discriminator 1
 17724 002c 003000E3 		movw	r3, #:lower16:.LC6
 17725 0030 003040E3 		movt	r3, #:upper16:.LC6
 17726 0034 002000E3 		movw	r2, #:lower16:.LC7
 17727 0038 002040E3 		movt	r2, #:upper16:.LC7
 17728 003c 6B1B01E3 		movw	r1, #7019
 17729 0040 000000E3 		movw	r0, #:lower16:.LC8
 17730 0044 000040E3 		movt	r0, #:upper16:.LC8
 17731 0048 FEFFFFEB 		bl	RME_Log
 17732              	.L1136:
 17733              		.loc 1 7019 5
 17734 004c FEFFFFEA 		b	.L1136
 17735              	.L1135:
7020:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17736              		.loc 1 7020 12 is_stmt 1
 17737 0050 14301BE5 		ldr	r3, [fp, #-20]
 17738 0054 043093E5 		ldr	r3, [r3, #4]
 17739 0058 0C300BE5 		str	r3, [fp, #-12]
7021:../../Source/Kernel/rme_kernel.c **** 
7022:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
7023:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 17740              		.loc 1 7023 7
 17741 005c 08201BE5 		ldr	r2, [fp, #-8]
 17742 0060 0C301BE5 		ldr	r3, [fp, #-12]
 17743 0064 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 436


 17744 0068 1E00000A 		beq	.L1142
7024:../../Source/Kernel/rme_kernel.c ****     {
7025:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7026:../../Source/Kernel/rme_kernel.c **** 
7027:../../Source/Kernel/rme_kernel.c ****         return;
7028:../../Source/Kernel/rme_kernel.c ****     }
7029:../../Source/Kernel/rme_kernel.c ****     else
7030:../../Source/Kernel/rme_kernel.c ****     {
7031:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7032:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7033:../../Source/Kernel/rme_kernel.c ****     }
7034:../../Source/Kernel/rme_kernel.c **** 
7035:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
7036:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
7037:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 17745              		.loc 1 7037 22
 17746 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17747 0070 1C3093E5 		ldr	r3, [r3, #28]
 17748              		.loc 1 7037 7
 17749 0074 000053E3 		cmp	r3, #0
 17750 0078 0500001A 		bne	.L1139
7038:../../Source/Kernel/rme_kernel.c ****     {
7039:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7040:../../Source/Kernel/rme_kernel.c **** 
7041:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
7042:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 17751              		.loc 1 7042 26
 17752 007c 08301BE5 		ldr	r3, [fp, #-8]
 17753 0080 202093E5 		ldr	r2, [r3, #32]
 17754              		.loc 1 7042 47
 17755 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17756 0088 203093E5 		ldr	r3, [r3, #32]
 17757              		.loc 1 7042 11
 17758 008c 030052E1 		cmp	r2, r3
 17759 0090 1600009A 		bls	.L1143
 17760              	.L1139:
7043:../../Source/Kernel/rme_kernel.c ****         {
7044:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7045:../../Source/Kernel/rme_kernel.c **** 
7046:../../Source/Kernel/rme_kernel.c ****             return;
7047:../../Source/Kernel/rme_kernel.c ****         }
7048:../../Source/Kernel/rme_kernel.c ****         else
7049:../../Source/Kernel/rme_kernel.c ****         {
7050:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7051:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7052:../../Source/Kernel/rme_kernel.c ****         }
7053:../../Source/Kernel/rme_kernel.c ****     }
7054:../../Source/Kernel/rme_kernel.c ****     else
7055:../../Source/Kernel/rme_kernel.c ****     {
7056:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7057:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7058:../../Source/Kernel/rme_kernel.c ****     }
7059:../../Source/Kernel/rme_kernel.c **** 
7060:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
7061:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
7062:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17761              		.loc 1 7062 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 437


 17762 0094 08301BE5 		ldr	r3, [fp, #-8]
 17763 0098 1C3093E5 		ldr	r3, [r3, #28]
 17764 009c 000053E3 		cmp	r3, #0
 17765 00a0 0800000A 		beq	.L1140
 17766              		.loc 1 7062 5 is_stmt 0 discriminator 1
 17767 00a4 003000E3 		movw	r3, #:lower16:.LC6
 17768 00a8 003040E3 		movt	r3, #:upper16:.LC6
 17769 00ac 002000E3 		movw	r2, #:lower16:.LC7
 17770 00b0 002040E3 		movt	r2, #:upper16:.LC7
 17771 00b4 961B01E3 		movw	r1, #7062
 17772 00b8 000000E3 		movw	r0, #:lower16:.LC8
 17773 00bc 000040E3 		movt	r0, #:upper16:.LC8
 17774 00c0 FEFFFFEB 		bl	RME_Log
 17775              	.L1141:
 17776              		.loc 1 7062 5
 17777 00c4 FEFFFFEA 		b	.L1141
 17778              	.L1140:
7063:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17779              		.loc 1 7063 5 is_stmt 1
 17780 00c8 08201BE5 		ldr	r2, [fp, #-8]
 17781 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 17782 00d0 10001BE5 		ldr	r0, [fp, #-16]
 17783 00d4 FEFFFFEB 		bl	_RME_Run_Swt
7064:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17784              		.loc 1 7064 19
 17785 00d8 14301BE5 		ldr	r3, [fp, #-20]
 17786 00dc 08201BE5 		ldr	r2, [fp, #-8]
 17787 00e0 042083E5 		str	r2, [r3, #4]
 17788 00e4 020000EA 		b	.L1134
 17789              	.L1142:
7027:../../Source/Kernel/rme_kernel.c ****     }
 17790              		.loc 1 7027 9
 17791 00e8 00F020E3 		nop
 17792 00ec 000000EA 		b	.L1134
 17793              	.L1143:
7046:../../Source/Kernel/rme_kernel.c ****         }
 17794              		.loc 1 7046 13
 17795 00f0 00F020E3 		nop
 17796              	.L1134:
7065:../../Source/Kernel/rme_kernel.c **** }
 17797              		.loc 1 7065 1
 17798 00f4 04D04BE2 		sub	sp, fp, #4
 17799              		.cfi_def_cfa 13, 8
 17800              		@ sp needed
 17801 00f8 0088BDE8 		pop	{fp, pc}
 17802              		.cfi_endproc
 17803              	.LFE68:
 17805              		.section	.text._RME_Kern_Snd,"ax",%progbits
 17806              		.align	2
 17807              		.global	_RME_Kern_Snd
 17808              		.syntax unified
 17809              		.arm
 17811              	_RME_Kern_Snd:
 17812              	.LFB69:
7066:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
7067:../../Source/Kernel/rme_kernel.c **** 
7068:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 438


7069:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
7070:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
7071:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
7072:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
7073:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
7074:../../Source/Kernel/rme_kernel.c **** Output      : None.
7075:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7076:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7077:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
7078:../../Source/Kernel/rme_kernel.c **** {
 17813              		.loc 1 7078 1
 17814              		.cfi_startproc
 17815              		@ args = 0, pretend = 0, frame = 16
 17816              		@ frame_needed = 1, uses_anonymous_args = 0
 17817 0000 00482DE9 		push	{fp, lr}
 17818              		.cfi_def_cfa_offset 8
 17819              		.cfi_offset 11, -8
 17820              		.cfi_offset 14, -4
 17821 0004 04B08DE2 		add	fp, sp, #4
 17822              		.cfi_def_cfa 11, 4
 17823 0008 10D04DE2 		sub	sp, sp, #16
 17824 000c 10000BE5 		str	r0, [fp, #-16]
7079:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7080:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
7081:../../Source/Kernel/rme_kernel.c ****     
7082:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 17825              		.loc 1 7082 12
 17826 0010 10301BE5 		ldr	r3, [fp, #-16]
 17827 0014 183093E5 		ldr	r3, [r3, #24]
 17828 0018 0C300BE5 		str	r3, [fp, #-12]
7083:../../Source/Kernel/rme_kernel.c ****     
7084:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7085:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 17829              		.loc 1 7085 7
 17830 001c 0C301BE5 		ldr	r3, [fp, #-12]
 17831 0020 000053E3 		cmp	r3, #0
 17832 0024 0B00000A 		beq	.L1145
7086:../../Source/Kernel/rme_kernel.c ****     {
7087:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7088:../../Source/Kernel/rme_kernel.c **** 
7089:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 17833              		.loc 1 7089 26
 17834 0028 0C301BE5 		ldr	r3, [fp, #-12]
 17835 002c 142093E5 		ldr	r2, [r3, #20]
 17836              		.loc 1 7089 11
 17837 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17838 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17839 0038 030052E1 		cmp	r2, r3
 17840 003c 0200001A 		bne	.L1146
7090:../../Source/Kernel/rme_kernel.c ****         {
7091:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7092:../../Source/Kernel/rme_kernel.c **** 
7093:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17841              		.loc 1 7093 20
 17842 0040 0130A0E3 		mov	r3, #1
 17843 0044 08300BE5 		str	r3, [fp, #-8]
 17844 0048 040000EA 		b	.L1147
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 439


 17845              	.L1146:
7094:../../Source/Kernel/rme_kernel.c ****         }
7095:../../Source/Kernel/rme_kernel.c ****         else
7096:../../Source/Kernel/rme_kernel.c ****         {
7097:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7098:../../Source/Kernel/rme_kernel.c **** 
7099:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17846              		.loc 1 7099 20
 17847 004c 0030A0E3 		mov	r3, #0
 17848 0050 08300BE5 		str	r3, [fp, #-8]
 17849 0054 010000EA 		b	.L1147
 17850              	.L1145:
7100:../../Source/Kernel/rme_kernel.c ****         }
7101:../../Source/Kernel/rme_kernel.c ****     }
7102:../../Source/Kernel/rme_kernel.c ****     else
7103:../../Source/Kernel/rme_kernel.c ****     {
7104:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7105:../../Source/Kernel/rme_kernel.c **** 
7106:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17851              		.loc 1 7106 16
 17852 0058 0030A0E3 		mov	r3, #0
 17853 005c 08300BE5 		str	r3, [fp, #-8]
 17854              	.L1147:
7107:../../Source/Kernel/rme_kernel.c ****     }
7108:../../Source/Kernel/rme_kernel.c **** 
7109:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17855              		.loc 1 7109 7
 17856 0060 08301BE5 		ldr	r3, [fp, #-8]
 17857 0064 000053E3 		cmp	r3, #0
 17858 0068 1700000A 		beq	.L1148
7110:../../Source/Kernel/rme_kernel.c ****     {
7111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7112:../../Source/Kernel/rme_kernel.c **** 
7113:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7114:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7115:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7116:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7117:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 17859              		.loc 1 7117 44
 17860 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17861 0070 483093E5 		ldr	r3, [r3, #72]
 17862              		.loc 1 7117 9
 17863 0074 0110A0E3 		mov	r1, #1
 17864 0078 0300A0E1 		mov	r0, r3
 17865 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
7118:../../Source/Kernel/rme_kernel.c ****         
7119:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7120:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 17866              		.loc 1 7120 26
 17867 0080 0C301BE5 		ldr	r3, [fp, #-12]
 17868 0084 183093E5 		ldr	r3, [r3, #24]
 17869              		.loc 1 7120 11
 17870 0088 000053E3 		cmp	r3, #0
 17871 008c 0500000A 		beq	.L1149
7121:../../Source/Kernel/rme_kernel.c ****         {
7122:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7123:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 440


7124:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7125:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 17872              		.loc 1 7125 33
 17873 0090 0C301BE5 		ldr	r3, [fp, #-12]
 17874 0094 0020A0E3 		mov	r2, #0
 17875 0098 1C2083E5 		str	r2, [r3, #28]
7126:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 17876              		.loc 1 7126 13
 17877 009c 0C001BE5 		ldr	r0, [fp, #-12]
 17878 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 17879 00a4 040000EA 		b	.L1150
 17880              	.L1149:
7127:../../Source/Kernel/rme_kernel.c ****         }
7128:../../Source/Kernel/rme_kernel.c ****         else
7129:../../Source/Kernel/rme_kernel.c ****         {
7130:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7131:../../Source/Kernel/rme_kernel.c **** 
7132:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7133:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 17881              		.loc 1 7133 33
 17882 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 17883 00ac 0220A0E3 		mov	r2, #2
 17884 00b0 1C2083E5 		str	r2, [r3, #28]
7134:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 17885              		.loc 1 7134 13
 17886 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 17887 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 17888              	.L1150:
7135:../../Source/Kernel/rme_kernel.c ****         }
7136:../../Source/Kernel/rme_kernel.c ****         
7137:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7138:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7139:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7140:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7141:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7142:../../Source/Kernel/rme_kernel.c ****         
7143:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7144:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 17889              		.loc 1 7144 21
 17890 00bc 10301BE5 		ldr	r3, [fp, #-16]
 17891 00c0 0020A0E3 		mov	r2, #0
 17892 00c4 182083E5 		str	r2, [r3, #24]
 17893 00c8 0F0000EA 		b	.L1151
 17894              	.L1148:
7145:../../Source/Kernel/rme_kernel.c ****     }
7146:../../Source/Kernel/rme_kernel.c ****     else
7147:../../Source/Kernel/rme_kernel.c ****     {
7148:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7149:../../Source/Kernel/rme_kernel.c **** 
7150:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7151:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7152:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17895              		.loc 1 7152 12
 17896 00cc 10301BE5 		ldr	r3, [fp, #-16]
 17897 00d0 143083E2 		add	r3, r3, #20
 17898 00d4 0110A0E3 		mov	r1, #1
 17899 00d8 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 441


 17900 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17901 00e0 0030A0E1 		mov	r3, r0
 17902              		.loc 1 7152 11 discriminator 1
 17903 00e4 0A0173E3 		cmn	r3, #-2147483646
 17904 00e8 0700009A 		bls	.L1151
7153:../../Source/Kernel/rme_kernel.c ****         {
7154:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7155:../../Source/Kernel/rme_kernel.c **** 
7156:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 17905              		.loc 1 7156 13
 17906 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17907 00f0 143083E2 		add	r3, r3, #20
 17908 00f4 0010E0E3 		mvn	r1, #0
 17909 00f8 0300A0E1 		mov	r0, r3
 17910 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7157:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17911              		.loc 1 7157 20
 17912 0100 D13E0FE3 		movw	r3, #65233
 17913 0104 FF3F4FE3 		movt	r3, 65535
 17914 0108 000000EA 		b	.L1152
 17915              	.L1151:
7158:../../Source/Kernel/rme_kernel.c ****         }
7159:../../Source/Kernel/rme_kernel.c ****         else
7160:../../Source/Kernel/rme_kernel.c ****         {
7161:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7162:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7163:../../Source/Kernel/rme_kernel.c ****         }
7164:../../Source/Kernel/rme_kernel.c ****     }
7165:../../Source/Kernel/rme_kernel.c **** 
7166:../../Source/Kernel/rme_kernel.c ****     return 0;
 17916              		.loc 1 7166 12
 17917 010c 0030A0E3 		mov	r3, #0
 17918              	.L1152:
7167:../../Source/Kernel/rme_kernel.c **** }
 17919              		.loc 1 7167 1
 17920 0110 0300A0E1 		mov	r0, r3
 17921 0114 04D04BE2 		sub	sp, fp, #4
 17922              		.cfi_def_cfa 13, 8
 17923              		@ sp needed
 17924 0118 0088BDE8 		pop	{fp, pc}
 17925              		.cfi_endproc
 17926              	.LFE69:
 17928              		.section	.text._RME_Sig_Snd,"ax",%progbits
 17929              		.align	2
 17930              		.syntax unified
 17931              		.arm
 17933              	_RME_Sig_Snd:
 17934              	.LFB70:
7168:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7169:../../Source/Kernel/rme_kernel.c **** 
7170:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7171:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7172:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7173:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7174:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7175:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7176:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 442


7177:../../Source/Kernel/rme_kernel.c **** Output      : None.
7178:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7179:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7180:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7181:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7182:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7183:../../Source/Kernel/rme_kernel.c **** {
 17935              		.loc 1 7183 1
 17936              		.cfi_startproc
 17937              		@ args = 0, pretend = 0, frame = 40
 17938              		@ frame_needed = 1, uses_anonymous_args = 0
 17939 0000 00482DE9 		push	{fp, lr}
 17940              		.cfi_def_cfa_offset 8
 17941              		.cfi_offset 11, -8
 17942              		.cfi_offset 14, -4
 17943 0004 04B08DE2 		add	fp, sp, #4
 17944              		.cfi_def_cfa 11, 4
 17945 0008 28D04DE2 		sub	sp, sp, #40
 17946 000c 20000BE5 		str	r0, [fp, #-32]
 17947 0010 24100BE5 		str	r1, [fp, #-36]
 17948 0014 28200BE5 		str	r2, [fp, #-40]
7184:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7185:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7186:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7187:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7188:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7189:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7190:../../Source/Kernel/rme_kernel.c ****     
7191:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7192:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 17949              		.loc 1 7192 5
 17950 0018 28301BE5 		ldr	r3, [fp, #-40]
 17951 001c 803003E2 		and	r3, r3, #128
 17952 0020 000053E3 		cmp	r3, #0
 17953 0024 1C00001A 		bne	.L1154
 17954              		.loc 1 7192 5 is_stmt 0 discriminator 1
 17955 0028 20301BE5 		ldr	r3, [fp, #-32]
 17956 002c 142093E5 		ldr	r2, [r3, #20]
 17957 0030 28301BE5 		ldr	r3, [fp, #-40]
 17958 0034 030052E1 		cmp	r2, r3
 17959 0038 0100008A 		bhi	.L1155
 17960              		.loc 1 7192 5 discriminator 3
 17961 003c 0230E0E3 		mvn	r3, #2
 17962              		.loc 1 7192 5
 17963 0040 AF0000EA 		b	.L1156
 17964              	.L1155:
 17965              		.loc 1 7192 5 discriminator 4
 17966 0044 28301BE5 		ldr	r3, [fp, #-40]
 17967 0048 8322A0E1 		lsl	r2, r3, #5
 17968 004c 20301BE5 		ldr	r3, [fp, #-32]
 17969 0050 0C3093E5 		ldr	r3, [r3, #12]
 17970 0054 033082E0 		add	r3, r2, r3
 17971 0058 08300BE5 		str	r3, [fp, #-8]
 17972 005c 08301BE5 		ldr	r3, [fp, #-8]
 17973 0060 0300A0E1 		mov	r0, r3
 17974 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17975 0068 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 443


 17976              		.loc 1 7192 5 discriminator 1
 17977 006c 10301BE5 		ldr	r3, [fp, #-16]
 17978 0070 FF3803E2 		and	r3, r3, #16711680
 17979 0074 020853E3 		cmp	r3, #131072
 17980 0078 0100001A 		bne	.L1157
 17981              		.loc 1 7192 5 discriminator 5
 17982 007c 0830E0E3 		mvn	r3, #8
 17983              		.loc 1 7192 5
 17984 0080 9F0000EA 		b	.L1156
 17985              	.L1157:
 17986              		.loc 1 7192 5 discriminator 6
 17987 0084 10301BE5 		ldr	r3, [fp, #-16]
 17988 0088 233CA0E1 		lsr	r3, r3, #24
 17989 008c 080053E3 		cmp	r3, #8
 17990 0090 3F00000A 		beq	.L1158
 17991              		.loc 1 7192 5 discriminator 7
 17992 0094 0130E0E3 		mvn	r3, #1
 17993              		.loc 1 7192 5
 17994 0098 990000EA 		b	.L1156
 17995              	.L1154:
 17996              		.loc 1 7192 5 discriminator 2
 17997 009c 28301BE5 		ldr	r3, [fp, #-40]
 17998 00a0 2324A0E1 		lsr	r2, r3, #8
 17999 00a4 20301BE5 		ldr	r3, [fp, #-32]
 18000 00a8 143093E5 		ldr	r3, [r3, #20]
 18001 00ac 030052E1 		cmp	r2, r3
 18002 00b0 0100003A 		bcc	.L1159
 18003              		.loc 1 7192 5 discriminator 8
 18004 00b4 0230E0E3 		mvn	r3, #2
 18005              		.loc 1 7192 5
 18006 00b8 910000EA 		b	.L1156
 18007              	.L1159:
 18008              		.loc 1 7192 5 discriminator 9
 18009 00bc 28301BE5 		ldr	r3, [fp, #-40]
 18010 00c0 2334A0E1 		lsr	r3, r3, #8
 18011 00c4 8322A0E1 		lsl	r2, r3, #5
 18012 00c8 20301BE5 		ldr	r3, [fp, #-32]
 18013 00cc 0C3093E5 		ldr	r3, [r3, #12]
 18014 00d0 033082E0 		add	r3, r2, r3
 18015 00d4 08300BE5 		str	r3, [fp, #-8]
 18016 00d8 08301BE5 		ldr	r3, [fp, #-8]
 18017 00dc 0300A0E1 		mov	r0, r3
 18018 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18019 00e4 10000BE5 		str	r0, [fp, #-16]
 18020              		.loc 1 7192 5 discriminator 1
 18021 00e8 10301BE5 		ldr	r3, [fp, #-16]
 18022 00ec FF3803E2 		and	r3, r3, #16711680
 18023 00f0 020853E3 		cmp	r3, #131072
 18024 00f4 0100001A 		bne	.L1160
 18025              		.loc 1 7192 5 discriminator 10
 18026 00f8 0830E0E3 		mvn	r3, #8
 18027              		.loc 1 7192 5
 18028 00fc 800000EA 		b	.L1156
 18029              	.L1160:
 18030              		.loc 1 7192 5 discriminator 11
 18031 0100 10301BE5 		ldr	r3, [fp, #-16]
 18032 0104 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 444


 18033 0108 030053E3 		cmp	r3, #3
 18034 010c 0100000A 		beq	.L1161
 18035              		.loc 1 7192 5 discriminator 12
 18036 0110 0130E0E3 		mvn	r3, #1
 18037              		.loc 1 7192 5
 18038 0114 7A0000EA 		b	.L1156
 18039              	.L1161:
 18040              		.loc 1 7192 5 discriminator 13
 18041 0118 28301BE5 		ldr	r3, [fp, #-40]
 18042 011c 7F2003E2 		and	r2, r3, #127
 18043 0120 08301BE5 		ldr	r3, [fp, #-8]
 18044 0124 143093E5 		ldr	r3, [r3, #20]
 18045 0128 030052E1 		cmp	r2, r3
 18046 012c 0100003A 		bcc	.L1162
 18047              		.loc 1 7192 5 discriminator 14
 18048 0130 0230E0E3 		mvn	r3, #2
 18049              		.loc 1 7192 5
 18050 0134 720000EA 		b	.L1156
 18051              	.L1162:
 18052              		.loc 1 7192 5 discriminator 15
 18053 0138 28301BE5 		ldr	r3, [fp, #-40]
 18054 013c 7F3003E2 		and	r3, r3, #127
 18055 0140 8322A0E1 		lsl	r2, r3, #5
 18056 0144 08301BE5 		ldr	r3, [fp, #-8]
 18057 0148 0C3093E5 		ldr	r3, [r3, #12]
 18058 014c 033082E0 		add	r3, r2, r3
 18059 0150 08300BE5 		str	r3, [fp, #-8]
 18060 0154 08301BE5 		ldr	r3, [fp, #-8]
 18061 0158 0300A0E1 		mov	r0, r3
 18062 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18063 0160 10000BE5 		str	r0, [fp, #-16]
 18064              		.loc 1 7192 5 discriminator 1
 18065 0164 10301BE5 		ldr	r3, [fp, #-16]
 18066 0168 FF3803E2 		and	r3, r3, #16711680
 18067 016c 020853E3 		cmp	r3, #131072
 18068 0170 0100001A 		bne	.L1163
 18069              		.loc 1 7192 5 discriminator 16
 18070 0174 0830E0E3 		mvn	r3, #8
 18071              		.loc 1 7192 5
 18072 0178 610000EA 		b	.L1156
 18073              	.L1163:
 18074              		.loc 1 7192 5 discriminator 17
 18075 017c 10301BE5 		ldr	r3, [fp, #-16]
 18076 0180 233CA0E1 		lsr	r3, r3, #24
 18077 0184 080053E3 		cmp	r3, #8
 18078 0188 0100000A 		beq	.L1158
 18079              		.loc 1 7192 5 discriminator 18
 18080 018c 0130E0E3 		mvn	r3, #1
 18081              		.loc 1 7192 5
 18082 0190 5B0000EA 		b	.L1156
 18083              	.L1158:
7193:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7194:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7195:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 18084              		.loc 1 7195 5 is_stmt 1
 18085 0194 08301BE5 		ldr	r3, [fp, #-8]
 18086 0198 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 445


 18087 019c 013003E2 		and	r3, r3, #1
 18088 01a0 000053E3 		cmp	r3, #0
 18089 01a4 0100001A 		bne	.L1164
 18090              		.loc 1 7195 5 is_stmt 0 discriminator 1
 18091 01a8 0630E0E3 		mvn	r3, #6
 18092              		.loc 1 7195 5
 18093 01ac 540000EA 		b	.L1156
 18094              	.L1164:
7196:../../Source/Kernel/rme_kernel.c ****     
7197:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18095              		.loc 1 7197 10 is_stmt 1
 18096 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18097 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18098 01b8 14300BE5 		str	r3, [fp, #-20]
7198:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18099              		.loc 1 7198 14
 18100 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18101 01c0 003093E5 		ldr	r3, [r3]
 18102 01c4 7330FFE6 		uxth	r3, r3
 18103 01c8 000053E3 		cmp	r3, #0
 18104 01cc 0200000A 		beq	.L1165
 18105              		.loc 1 7198 14 is_stmt 0 discriminator 1
 18106 01d0 08301BE5 		ldr	r3, [fp, #-8]
 18107 01d4 043093E5 		ldr	r3, [r3, #4]
 18108 01d8 000000EA 		b	.L1166
 18109              	.L1165:
 18110              		.loc 1 7198 14 discriminator 2
 18111 01dc 08301BE5 		ldr	r3, [fp, #-8]
 18112              	.L1166:
 18113              		.loc 1 7198 13 is_stmt 1 discriminator 4
 18114 01e0 18300BE5 		str	r3, [fp, #-24]
7199:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 18115              		.loc 1 7199 12
 18116 01e4 18301BE5 		ldr	r3, [fp, #-24]
 18117 01e8 183093E5 		ldr	r3, [r3, #24]
 18118 01ec 1C300BE5 		str	r3, [fp, #-28]
7200:../../Source/Kernel/rme_kernel.c **** 
7201:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7202:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 18119              		.loc 1 7202 7
 18120 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 18121 01f4 000053E3 		cmp	r3, #0
 18122 01f8 0A00000A 		beq	.L1167
7203:../../Source/Kernel/rme_kernel.c ****     {
7204:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7205:../../Source/Kernel/rme_kernel.c **** 
7206:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 18123              		.loc 1 7206 26
 18124 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 18125 0200 143093E5 		ldr	r3, [r3, #20]
 18126              		.loc 1 7206 11
 18127 0204 14201BE5 		ldr	r2, [fp, #-20]
 18128 0208 030052E1 		cmp	r2, r3
 18129 020c 0200001A 		bne	.L1168
7207:../../Source/Kernel/rme_kernel.c ****         {
7208:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7209:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 446


7210:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18130              		.loc 1 7210 20
 18131 0210 0130A0E3 		mov	r3, #1
 18132 0214 0C300BE5 		str	r3, [fp, #-12]
 18133 0218 040000EA 		b	.L1169
 18134              	.L1168:
7211:../../Source/Kernel/rme_kernel.c ****         }
7212:../../Source/Kernel/rme_kernel.c ****         else
7213:../../Source/Kernel/rme_kernel.c ****         {
7214:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7215:../../Source/Kernel/rme_kernel.c **** 
7216:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18135              		.loc 1 7216 20
 18136 021c 0030A0E3 		mov	r3, #0
 18137 0220 0C300BE5 		str	r3, [fp, #-12]
 18138 0224 010000EA 		b	.L1169
 18139              	.L1167:
7217:../../Source/Kernel/rme_kernel.c ****         }
7218:../../Source/Kernel/rme_kernel.c ****     }
7219:../../Source/Kernel/rme_kernel.c ****     else
7220:../../Source/Kernel/rme_kernel.c ****     {
7221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7222:../../Source/Kernel/rme_kernel.c **** 
7223:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18140              		.loc 1 7223 16
 18141 0228 0030A0E3 		mov	r3, #0
 18142 022c 0C300BE5 		str	r3, [fp, #-12]
 18143              	.L1169:
7224:../../Source/Kernel/rme_kernel.c ****     }
7225:../../Source/Kernel/rme_kernel.c ****     
7226:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18144              		.loc 1 7226 7
 18145 0230 0C301BE5 		ldr	r3, [fp, #-12]
 18146 0234 000053E3 		cmp	r3, #0
 18147 0238 1D00000A 		beq	.L1170
7227:../../Source/Kernel/rme_kernel.c ****     {
7228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7229:../../Source/Kernel/rme_kernel.c **** 
7230:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7231:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18148              		.loc 1 7231 9
 18149 023c 0010A0E3 		mov	r1, #0
 18150 0240 24001BE5 		ldr	r0, [fp, #-36]
 18151 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7232:../../Source/Kernel/rme_kernel.c ****         
7233:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7234:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7235:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7236:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7237:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 18152              		.loc 1 7237 44
 18153 0248 1C301BE5 		ldr	r3, [fp, #-28]
 18154 024c 483093E5 		ldr	r3, [r3, #72]
 18155              		.loc 1 7237 9
 18156 0250 0110A0E3 		mov	r1, #1
 18157 0254 0300A0E1 		mov	r0, r3
 18158 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 447


7238:../../Source/Kernel/rme_kernel.c ****         
7239:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7240:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 18159              		.loc 1 7240 26
 18160 025c 1C301BE5 		ldr	r3, [fp, #-28]
 18161 0260 183093E5 		ldr	r3, [r3, #24]
 18162              		.loc 1 7240 11
 18163 0264 000053E3 		cmp	r3, #0
 18164 0268 0500000A 		beq	.L1171
7241:../../Source/Kernel/rme_kernel.c ****         {
7242:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7243:../../Source/Kernel/rme_kernel.c **** 
7244:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7245:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 18165              		.loc 1 7245 33
 18166 026c 1C301BE5 		ldr	r3, [fp, #-28]
 18167 0270 0020A0E3 		mov	r2, #0
 18168 0274 1C2083E5 		str	r2, [r3, #28]
7246:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 18169              		.loc 1 7246 13
 18170 0278 1C001BE5 		ldr	r0, [fp, #-28]
 18171 027c FEFFFFEB 		bl	_RME_Run_Ins
 18172 0280 040000EA 		b	.L1172
 18173              	.L1171:
7247:../../Source/Kernel/rme_kernel.c ****         }
7248:../../Source/Kernel/rme_kernel.c ****         else
7249:../../Source/Kernel/rme_kernel.c ****         {
7250:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7251:../../Source/Kernel/rme_kernel.c **** 
7252:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7253:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 18174              		.loc 1 7253 33
 18175 0284 1C301BE5 		ldr	r3, [fp, #-28]
 18176 0288 0220A0E3 		mov	r2, #2
 18177 028c 1C2083E5 		str	r2, [r3, #28]
7254:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 18178              		.loc 1 7254 13
 18179 0290 1C001BE5 		ldr	r0, [fp, #-28]
 18180 0294 FEFFFFEB 		bl	_RME_Run_Notif
 18181              	.L1172:
7255:../../Source/Kernel/rme_kernel.c ****         }
7256:../../Source/Kernel/rme_kernel.c ****         
7257:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7258:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 18182              		.loc 1 7258 9
 18183 0298 14101BE5 		ldr	r1, [fp, #-20]
 18184 029c 24001BE5 		ldr	r0, [fp, #-36]
 18185 02a0 FEFFFFEB 		bl	_RME_Kern_High
7259:../../Source/Kernel/rme_kernel.c ****         
7260:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7261:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 18186              		.loc 1 7261 22
 18187 02a4 18301BE5 		ldr	r3, [fp, #-24]
 18188 02a8 0020A0E3 		mov	r2, #0
 18189 02ac 182083E5 		str	r2, [r3, #24]
 18190 02b0 120000EA 		b	.L1173
 18191              	.L1170:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 448


7262:../../Source/Kernel/rme_kernel.c ****     }
7263:../../Source/Kernel/rme_kernel.c ****     else
7264:../../Source/Kernel/rme_kernel.c ****     {
7265:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7266:../../Source/Kernel/rme_kernel.c **** 
7267:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7268:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18192              		.loc 1 7268 12
 18193 02b4 18301BE5 		ldr	r3, [fp, #-24]
 18194 02b8 143083E2 		add	r3, r3, #20
 18195 02bc 0110A0E3 		mov	r1, #1
 18196 02c0 0300A0E1 		mov	r0, r3
 18197 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18198 02c8 0030A0E1 		mov	r3, r0
 18199              		.loc 1 7268 11 discriminator 1
 18200 02cc 0A0173E3 		cmn	r3, #-2147483646
 18201 02d0 0700009A 		bls	.L1174
7269:../../Source/Kernel/rme_kernel.c ****         {
7270:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7271:../../Source/Kernel/rme_kernel.c **** 
7272:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 18202              		.loc 1 7272 13
 18203 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18204 02d8 143083E2 		add	r3, r3, #20
 18205 02dc 0010E0E3 		mvn	r1, #0
 18206 02e0 0300A0E1 		mov	r0, r3
 18207 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7273:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18208              		.loc 1 7273 20
 18209 02e8 D13E0FE3 		movw	r3, #65233
 18210 02ec FF3F4FE3 		movt	r3, 65535
 18211 02f0 030000EA 		b	.L1156
 18212              	.L1174:
7274:../../Source/Kernel/rme_kernel.c ****         }
7275:../../Source/Kernel/rme_kernel.c ****         else
7276:../../Source/Kernel/rme_kernel.c ****         {
7277:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7278:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7279:../../Source/Kernel/rme_kernel.c ****         }
7280:../../Source/Kernel/rme_kernel.c ****         
7281:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7282:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18213              		.loc 1 7282 9
 18214 02f4 0010A0E3 		mov	r1, #0
 18215 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18216 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18217              	.L1173:
7283:../../Source/Kernel/rme_kernel.c ****     }
7284:../../Source/Kernel/rme_kernel.c **** 
7285:../../Source/Kernel/rme_kernel.c ****     return 0;
 18218              		.loc 1 7285 12
 18219 0300 0030A0E3 		mov	r3, #0
 18220              	.L1156:
7286:../../Source/Kernel/rme_kernel.c **** }
 18221              		.loc 1 7286 1
 18222 0304 0300A0E1 		mov	r0, r3
 18223 0308 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 449


 18224              		.cfi_def_cfa 13, 8
 18225              		@ sp needed
 18226 030c 0088BDE8 		pop	{fp, pc}
 18227              		.cfi_endproc
 18228              	.LFE70:
 18230              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18231              		.align	2
 18232              		.syntax unified
 18233              		.arm
 18235              	_RME_Sig_Rcv:
 18236              	.LFB71:
7287:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7288:../../Source/Kernel/rme_kernel.c **** 
7289:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7290:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7291:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7292:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7293:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7294:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7295:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7296:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7297:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7298:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7299:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7300:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7301:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7302:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7303:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7304:../../Source/Kernel/rme_kernel.c **** Output      : None.
7305:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7306:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7307:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7308:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7309:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7310:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7311:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7312:../../Source/Kernel/rme_kernel.c **** {
 18237              		.loc 1 7312 1
 18238              		.cfi_startproc
 18239              		@ args = 0, pretend = 0, frame = 40
 18240              		@ frame_needed = 1, uses_anonymous_args = 0
 18241 0000 00482DE9 		push	{fp, lr}
 18242              		.cfi_def_cfa_offset 8
 18243              		.cfi_offset 11, -8
 18244              		.cfi_offset 14, -4
 18245 0004 04B08DE2 		add	fp, sp, #4
 18246              		.cfi_def_cfa 11, 4
 18247 0008 28D04DE2 		sub	sp, sp, #40
 18248 000c 20000BE5 		str	r0, [fp, #-32]
 18249 0010 24100BE5 		str	r1, [fp, #-36]
 18250 0014 28200BE5 		str	r2, [fp, #-40]
 18251 0018 2C300BE5 		str	r3, [fp, #-44]
7313:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7314:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7315:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7316:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7317:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 450


7318:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7319:../../Source/Kernel/rme_kernel.c ****     
7320:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7321:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18252              		.loc 1 7321 5
 18253 001c 28301BE5 		ldr	r3, [fp, #-40]
 18254 0020 803003E2 		and	r3, r3, #128
 18255 0024 000053E3 		cmp	r3, #0
 18256 0028 1C00001A 		bne	.L1176
 18257              		.loc 1 7321 5 is_stmt 0 discriminator 1
 18258 002c 20301BE5 		ldr	r3, [fp, #-32]
 18259 0030 142093E5 		ldr	r2, [r3, #20]
 18260 0034 28301BE5 		ldr	r3, [fp, #-40]
 18261 0038 030052E1 		cmp	r2, r3
 18262 003c 0100008A 		bhi	.L1177
 18263              		.loc 1 7321 5 discriminator 3
 18264 0040 0230E0E3 		mvn	r3, #2
 18265              		.loc 1 7321 5
 18266 0044 F60000EA 		b	.L1178
 18267              	.L1177:
 18268              		.loc 1 7321 5 discriminator 4
 18269 0048 28301BE5 		ldr	r3, [fp, #-40]
 18270 004c 8322A0E1 		lsl	r2, r3, #5
 18271 0050 20301BE5 		ldr	r3, [fp, #-32]
 18272 0054 0C3093E5 		ldr	r3, [r3, #12]
 18273 0058 033082E0 		add	r3, r2, r3
 18274 005c 08300BE5 		str	r3, [fp, #-8]
 18275 0060 08301BE5 		ldr	r3, [fp, #-8]
 18276 0064 0300A0E1 		mov	r0, r3
 18277 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18278 006c 0C000BE5 		str	r0, [fp, #-12]
 18279              		.loc 1 7321 5 discriminator 1
 18280 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18281 0074 FF3803E2 		and	r3, r3, #16711680
 18282 0078 020853E3 		cmp	r3, #131072
 18283 007c 0100001A 		bne	.L1179
 18284              		.loc 1 7321 5 discriminator 5
 18285 0080 0830E0E3 		mvn	r3, #8
 18286              		.loc 1 7321 5
 18287 0084 E60000EA 		b	.L1178
 18288              	.L1179:
 18289              		.loc 1 7321 5 discriminator 6
 18290 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18291 008c 233CA0E1 		lsr	r3, r3, #24
 18292 0090 080053E3 		cmp	r3, #8
 18293 0094 3F00000A 		beq	.L1180
 18294              		.loc 1 7321 5 discriminator 7
 18295 0098 0130E0E3 		mvn	r3, #1
 18296              		.loc 1 7321 5
 18297 009c E00000EA 		b	.L1178
 18298              	.L1176:
 18299              		.loc 1 7321 5 discriminator 2
 18300 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18301 00a4 2324A0E1 		lsr	r2, r3, #8
 18302 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18303 00ac 143093E5 		ldr	r3, [r3, #20]
 18304 00b0 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 451


 18305 00b4 0100003A 		bcc	.L1181
 18306              		.loc 1 7321 5 discriminator 8
 18307 00b8 0230E0E3 		mvn	r3, #2
 18308              		.loc 1 7321 5
 18309 00bc D80000EA 		b	.L1178
 18310              	.L1181:
 18311              		.loc 1 7321 5 discriminator 9
 18312 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18313 00c4 2334A0E1 		lsr	r3, r3, #8
 18314 00c8 8322A0E1 		lsl	r2, r3, #5
 18315 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18316 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18317 00d4 033082E0 		add	r3, r2, r3
 18318 00d8 08300BE5 		str	r3, [fp, #-8]
 18319 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18320 00e0 0300A0E1 		mov	r0, r3
 18321 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18322 00e8 0C000BE5 		str	r0, [fp, #-12]
 18323              		.loc 1 7321 5 discriminator 1
 18324 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18325 00f0 FF3803E2 		and	r3, r3, #16711680
 18326 00f4 020853E3 		cmp	r3, #131072
 18327 00f8 0100001A 		bne	.L1182
 18328              		.loc 1 7321 5 discriminator 10
 18329 00fc 0830E0E3 		mvn	r3, #8
 18330              		.loc 1 7321 5
 18331 0100 C70000EA 		b	.L1178
 18332              	.L1182:
 18333              		.loc 1 7321 5 discriminator 11
 18334 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18335 0108 233CA0E1 		lsr	r3, r3, #24
 18336 010c 030053E3 		cmp	r3, #3
 18337 0110 0100000A 		beq	.L1183
 18338              		.loc 1 7321 5 discriminator 12
 18339 0114 0130E0E3 		mvn	r3, #1
 18340              		.loc 1 7321 5
 18341 0118 C10000EA 		b	.L1178
 18342              	.L1183:
 18343              		.loc 1 7321 5 discriminator 13
 18344 011c 28301BE5 		ldr	r3, [fp, #-40]
 18345 0120 7F2003E2 		and	r2, r3, #127
 18346 0124 08301BE5 		ldr	r3, [fp, #-8]
 18347 0128 143093E5 		ldr	r3, [r3, #20]
 18348 012c 030052E1 		cmp	r2, r3
 18349 0130 0100003A 		bcc	.L1184
 18350              		.loc 1 7321 5 discriminator 14
 18351 0134 0230E0E3 		mvn	r3, #2
 18352              		.loc 1 7321 5
 18353 0138 B90000EA 		b	.L1178
 18354              	.L1184:
 18355              		.loc 1 7321 5 discriminator 15
 18356 013c 28301BE5 		ldr	r3, [fp, #-40]
 18357 0140 7F3003E2 		and	r3, r3, #127
 18358 0144 8322A0E1 		lsl	r2, r3, #5
 18359 0148 08301BE5 		ldr	r3, [fp, #-8]
 18360 014c 0C3093E5 		ldr	r3, [r3, #12]
 18361 0150 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 452


 18362 0154 08300BE5 		str	r3, [fp, #-8]
 18363 0158 08301BE5 		ldr	r3, [fp, #-8]
 18364 015c 0300A0E1 		mov	r0, r3
 18365 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18366 0164 0C000BE5 		str	r0, [fp, #-12]
 18367              		.loc 1 7321 5 discriminator 1
 18368 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18369 016c FF3803E2 		and	r3, r3, #16711680
 18370 0170 020853E3 		cmp	r3, #131072
 18371 0174 0100001A 		bne	.L1185
 18372              		.loc 1 7321 5 discriminator 16
 18373 0178 0830E0E3 		mvn	r3, #8
 18374              		.loc 1 7321 5
 18375 017c A80000EA 		b	.L1178
 18376              	.L1185:
 18377              		.loc 1 7321 5 discriminator 17
 18378 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18379 0184 233CA0E1 		lsr	r3, r3, #24
 18380 0188 080053E3 		cmp	r3, #8
 18381 018c 0100000A 		beq	.L1180
 18382              		.loc 1 7321 5 discriminator 18
 18383 0190 0130E0E3 		mvn	r3, #1
 18384              		.loc 1 7321 5
 18385 0194 A20000EA 		b	.L1178
 18386              	.L1180:
7322:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7323:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7324:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18387              		.loc 1 7324 5 is_stmt 1
 18388 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18389 019c 8C329FE5 		ldr	r3, .L1217
 18390 01a0 030052E3 		cmp	r2, #3
 18391 01a4 1D00008A 		bhi	.L1186
 18392 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18393              	.Lrtx1188:
 18394 01ac 00F020E3 		nop
 18395              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18396              		.align	2
 18397              	.L1188:
 18398 0000 B0010000 		.word	.L1191
 18399 0004 CC010000 		.word	.L1190
 18400 0008 E8010000 		.word	.L1189
 18401 000c 04020000 		.word	.L1187
 18402              		.section	.text._RME_Sig_Rcv
 18403              		.p2align 2
 18404              	.L1191:
7325:../../Source/Kernel/rme_kernel.c ****     {
7326:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7327:../../Source/Kernel/rme_kernel.c ****         {
7328:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7329:../../Source/Kernel/rme_kernel.c **** 
7330:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18405              		.loc 1 7330 13
 18406 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18407 01b4 083093E5 		ldr	r3, [r3, #8]
 18408 01b8 023003E2 		and	r3, r3, #2
 18409 01bc 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 453


 18410 01c0 1800001A 		bne	.L1213
 18411              		.loc 1 7330 13 is_stmt 0 discriminator 1
 18412 01c4 0630E0E3 		mvn	r3, #6
 18413              		.loc 1 7330 13
 18414 01c8 950000EA 		b	.L1178
 18415              	.L1190:
7331:../../Source/Kernel/rme_kernel.c ****             break;
7332:../../Source/Kernel/rme_kernel.c ****         }
7333:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7334:../../Source/Kernel/rme_kernel.c ****         {
7335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7336:../../Source/Kernel/rme_kernel.c ****             
7337:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18416              		.loc 1 7337 13 is_stmt 1
 18417 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18418 01d0 083093E5 		ldr	r3, [r3, #8]
 18419 01d4 043003E2 		and	r3, r3, #4
 18420 01d8 000053E3 		cmp	r3, #0
 18421 01dc 1300001A 		bne	.L1214
 18422              		.loc 1 7337 13 is_stmt 0 discriminator 1
 18423 01e0 0630E0E3 		mvn	r3, #6
 18424              		.loc 1 7337 13
 18425 01e4 8E0000EA 		b	.L1178
 18426              	.L1189:
7338:../../Source/Kernel/rme_kernel.c ****             break;
7339:../../Source/Kernel/rme_kernel.c ****         }
7340:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7341:../../Source/Kernel/rme_kernel.c ****         {
7342:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7343:../../Source/Kernel/rme_kernel.c ****             
7344:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18427              		.loc 1 7344 13 is_stmt 1
 18428 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18429 01ec 083093E5 		ldr	r3, [r3, #8]
 18430 01f0 083003E2 		and	r3, r3, #8
 18431 01f4 000053E3 		cmp	r3, #0
 18432 01f8 0E00001A 		bne	.L1215
 18433              		.loc 1 7344 13 is_stmt 0 discriminator 1
 18434 01fc 0630E0E3 		mvn	r3, #6
 18435              		.loc 1 7344 13
 18436 0200 870000EA 		b	.L1178
 18437              	.L1187:
7345:../../Source/Kernel/rme_kernel.c ****             break;
7346:../../Source/Kernel/rme_kernel.c ****         }
7347:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7348:../../Source/Kernel/rme_kernel.c ****         {
7349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7350:../../Source/Kernel/rme_kernel.c ****             
7351:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18438              		.loc 1 7351 13 is_stmt 1
 18439 0204 08301BE5 		ldr	r3, [fp, #-8]
 18440 0208 083093E5 		ldr	r3, [r3, #8]
 18441 020c 103003E2 		and	r3, r3, #16
 18442 0210 000053E3 		cmp	r3, #0
 18443 0214 0900001A 		bne	.L1216
 18444              		.loc 1 7351 13 is_stmt 0 discriminator 1
 18445 0218 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 454


 18446              		.loc 1 7351 13
 18447 021c 800000EA 		b	.L1178
 18448              	.L1186:
7352:../../Source/Kernel/rme_kernel.c ****             break;
7353:../../Source/Kernel/rme_kernel.c ****         }
7354:../../Source/Kernel/rme_kernel.c ****         default:
7355:../../Source/Kernel/rme_kernel.c ****         {
7356:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7357:../../Source/Kernel/rme_kernel.c ****             
7358:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18449              		.loc 1 7358 20 is_stmt 1
 18450 0220 4B3FE0E3 		mvn	r3, #300
 18451 0224 7E0000EA 		b	.L1178
 18452              	.L1213:
7331:../../Source/Kernel/rme_kernel.c ****         }
 18453              		.loc 1 7331 13
 18454 0228 00F020E3 		nop
 18455 022c 040000EA 		b	.L1193
 18456              	.L1214:
7338:../../Source/Kernel/rme_kernel.c ****         }
 18457              		.loc 1 7338 13
 18458 0230 00F020E3 		nop
 18459 0234 020000EA 		b	.L1193
 18460              	.L1215:
7345:../../Source/Kernel/rme_kernel.c ****         }
 18461              		.loc 1 7345 13
 18462 0238 00F020E3 		nop
 18463 023c 000000EA 		b	.L1193
 18464              	.L1216:
7352:../../Source/Kernel/rme_kernel.c ****         }
 18465              		.loc 1 7352 13
 18466 0240 00F020E3 		nop
 18467              	.L1193:
7359:../../Source/Kernel/rme_kernel.c ****         }
7360:../../Source/Kernel/rme_kernel.c ****     }
7361:../../Source/Kernel/rme_kernel.c ****     
7362:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7363:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18468              		.loc 1 7363 14
 18469 0244 08301BE5 		ldr	r3, [fp, #-8]
 18470 0248 003093E5 		ldr	r3, [r3]
 18471 024c 7330FFE6 		uxth	r3, r3
 18472 0250 000053E3 		cmp	r3, #0
 18473 0254 0200000A 		beq	.L1197
 18474              		.loc 1 7363 14 is_stmt 0 discriminator 1
 18475 0258 08301BE5 		ldr	r3, [fp, #-8]
 18476 025c 043093E5 		ldr	r3, [r3, #4]
 18477 0260 000000EA 		b	.L1198
 18478              	.L1197:
 18479              		.loc 1 7363 14 discriminator 2
 18480 0264 08301BE5 		ldr	r3, [fp, #-8]
 18481              	.L1198:
 18482              		.loc 1 7363 13 is_stmt 1 discriminator 4
 18483 0268 10300BE5 		str	r3, [fp, #-16]
7364:../../Source/Kernel/rme_kernel.c ****     
7365:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7366:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 455


7367:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18484              		.loc 1 7367 16
 18485 026c 10301BE5 		ldr	r3, [fp, #-16]
 18486 0270 183093E5 		ldr	r3, [r3, #24]
 18487              		.loc 1 7367 7
 18488 0274 000053E3 		cmp	r3, #0
 18489 0278 0100000A 		beq	.L1199
7368:../../Source/Kernel/rme_kernel.c ****     {
7369:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7370:../../Source/Kernel/rme_kernel.c **** 
7371:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18490              		.loc 1 7371 16
 18491 027c 4B3FE0E3 		mvn	r3, #300
 18492 0280 670000EA 		b	.L1178
 18493              	.L1199:
7372:../../Source/Kernel/rme_kernel.c ****     }
7373:../../Source/Kernel/rme_kernel.c ****     else
7374:../../Source/Kernel/rme_kernel.c ****     {
7375:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7376:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7377:../../Source/Kernel/rme_kernel.c ****     }
7378:../../Source/Kernel/rme_kernel.c ****     
7379:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18494              		.loc 1 7379 10
 18495 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18496 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18497 028c 14300BE5 		str	r3, [fp, #-20]
7380:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18498              		.loc 1 7380 12
 18499 0290 14301BE5 		ldr	r3, [fp, #-20]
 18500 0294 043093E5 		ldr	r3, [r3, #4]
 18501 0298 18300BE5 		str	r3, [fp, #-24]
7381:../../Source/Kernel/rme_kernel.c ****     
7382:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7383:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7384:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7385:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18502              		.loc 1 7385 5
 18503 029c 18301BE5 		ldr	r3, [fp, #-24]
 18504 02a0 183093E5 		ldr	r3, [r3, #24]
 18505 02a4 000053E3 		cmp	r3, #0
 18506 02a8 0800001A 		bne	.L1200
 18507              		.loc 1 7385 5 is_stmt 0 discriminator 1
 18508 02ac 003000E3 		movw	r3, #:lower16:.LC6
 18509 02b0 003040E3 		movt	r3, #:upper16:.LC6
 18510 02b4 002000E3 		movw	r2, #:lower16:.LC7
 18511 02b8 002040E3 		movt	r2, #:upper16:.LC7
 18512 02bc D91C01E3 		movw	r1, #7385
 18513 02c0 000000E3 		movw	r0, #:lower16:.LC8
 18514 02c4 000040E3 		movt	r0, #:upper16:.LC8
 18515 02c8 FEFFFFEB 		bl	RME_Log
 18516              	.L1201:
 18517              		.loc 1 7385 5
 18518 02cc FEFFFFEA 		b	.L1201
 18519              	.L1200:
7386:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18520              		.loc 1 7386 22 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 456


 18521 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18522 02d4 183093E5 		ldr	r3, [r3, #24]
 18523              		.loc 1 7386 7
 18524 02d8 060173E3 		cmn	r3, #-2147483647
 18525 02dc 0200001A 		bne	.L1202
7387:../../Source/Kernel/rme_kernel.c ****     {
7388:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7389:../../Source/Kernel/rme_kernel.c **** 
7390:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18526              		.loc 1 7390 16
 18527 02e0 CD3E0FE3 		movw	r3, #65229
 18528 02e4 FF3F4FE3 		movt	r3, 65535
 18529 02e8 4D0000EA 		b	.L1178
 18530              	.L1202:
7391:../../Source/Kernel/rme_kernel.c ****     }
7392:../../Source/Kernel/rme_kernel.c ****     else
7393:../../Source/Kernel/rme_kernel.c ****     {
7394:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7395:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7396:../../Source/Kernel/rme_kernel.c ****     }
7397:../../Source/Kernel/rme_kernel.c **** 
7398:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7399:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18531              		.loc 1 7399 14
 18532 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18533 02f0 143093E5 		ldr	r3, [r3, #20]
 18534 02f4 1C300BE5 		str	r3, [fp, #-28]
7400:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18535              		.loc 1 7400 7
 18536 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18537 02fc 000053E3 		cmp	r3, #0
 18538 0300 2600000A 		beq	.L1203
7401:../../Source/Kernel/rme_kernel.c ****     {
7402:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7403:../../Source/Kernel/rme_kernel.c **** 
7404:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7405:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18539              		.loc 1 7405 11
 18540 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18541 0308 000053E3 		cmp	r3, #0
 18542 030c 0200000A 		beq	.L1204
 18543              		.loc 1 7405 32 discriminator 1
 18544 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18545 0314 020053E3 		cmp	r3, #2
 18546 0318 0F00001A 		bne	.L1205
 18547              	.L1204:
7406:../../Source/Kernel/rme_kernel.c ****         {
7407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7408:../../Source/Kernel/rme_kernel.c **** 
7409:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7410:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18548              		.loc 1 7410 16
 18549 031c 10301BE5 		ldr	r3, [fp, #-16]
 18550 0320 140083E2 		add	r0, r3, #20
 18551 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18552 0328 013043E2 		sub	r3, r3, #1
 18553 032c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 457


 18554 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18555 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18556 0338 0030A0E1 		mov	r3, r0
 18557              		.loc 1 7410 15 discriminator 1
 18558 033c 000053E3 		cmp	r3, #0
 18559 0340 0100001A 		bne	.L1206
7411:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7412:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7413:../../Source/Kernel/rme_kernel.c ****             {
7414:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7415:../../Source/Kernel/rme_kernel.c **** 
7416:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18560              		.loc 1 7416 24
 18561 0344 133EE0E3 		mvn	r3, #304
 18562 0348 350000EA 		b	.L1178
 18563              	.L1206:
7417:../../Source/Kernel/rme_kernel.c ****             }
7418:../../Source/Kernel/rme_kernel.c ****             else
7419:../../Source/Kernel/rme_kernel.c ****             {
7420:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7421:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7422:../../Source/Kernel/rme_kernel.c ****             }
7423:../../Source/Kernel/rme_kernel.c ****             
7424:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7425:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18564              		.loc 1 7425 13
 18565 034c 0110A0E3 		mov	r1, #1
 18566 0350 24001BE5 		ldr	r0, [fp, #-36]
 18567 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18568 0358 0E0000EA 		b	.L1207
 18569              	.L1205:
7426:../../Source/Kernel/rme_kernel.c ****         }
7427:../../Source/Kernel/rme_kernel.c ****         else
7428:../../Source/Kernel/rme_kernel.c ****         {
7429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7430:../../Source/Kernel/rme_kernel.c **** 
7431:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7432:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18570              		.loc 1 7432 16
 18571 035c 10301BE5 		ldr	r3, [fp, #-16]
 18572 0360 143083E2 		add	r3, r3, #20
 18573 0364 0020A0E3 		mov	r2, #0
 18574 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18575 036c 0300A0E1 		mov	r0, r3
 18576 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18577 0374 0030A0E1 		mov	r3, r0
 18578              		.loc 1 7432 15 discriminator 1
 18579 0378 000053E3 		cmp	r3, #0
 18580 037c 0100001A 		bne	.L1208
7433:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7434:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7435:../../Source/Kernel/rme_kernel.c ****             {
7436:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7437:../../Source/Kernel/rme_kernel.c **** 
7438:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18581              		.loc 1 7438 24
 18582 0380 133EE0E3 		mvn	r3, #304
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 458


 18583 0384 260000EA 		b	.L1178
 18584              	.L1208:
7439:../../Source/Kernel/rme_kernel.c ****             }
7440:../../Source/Kernel/rme_kernel.c ****             else
7441:../../Source/Kernel/rme_kernel.c ****             {
7442:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7443:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7444:../../Source/Kernel/rme_kernel.c ****             }
7445:../../Source/Kernel/rme_kernel.c ****             
7446:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7447:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18585              		.loc 1 7447 13
 18586 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18587 038c 0310A0E1 		mov	r1, r3
 18588 0390 24001BE5 		ldr	r0, [fp, #-36]
 18589 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18590              	.L1207:
7448:../../Source/Kernel/rme_kernel.c ****         }
7449:../../Source/Kernel/rme_kernel.c ****         
7450:../../Source/Kernel/rme_kernel.c ****         return 0;
 18591              		.loc 1 7450 16
 18592 0398 0030A0E3 		mov	r3, #0
 18593 039c 200000EA 		b	.L1178
 18594              	.L1203:
7451:../../Source/Kernel/rme_kernel.c ****     }
7452:../../Source/Kernel/rme_kernel.c ****     else
7453:../../Source/Kernel/rme_kernel.c ****     {
7454:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7455:../../Source/Kernel/rme_kernel.c **** 
7456:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7457:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18595              		.loc 1 7457 11
 18596 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18597 03a4 000053E3 		cmp	r3, #0
 18598 03a8 0200000A 		beq	.L1209
 18599              		.loc 1 7457 32 discriminator 1
 18600 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18601 03b0 010053E3 		cmp	r3, #1
 18602 03b4 1600001A 		bne	.L1210
 18603              	.L1209:
7458:../../Source/Kernel/rme_kernel.c ****         {
7459:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7460:../../Source/Kernel/rme_kernel.c **** 
7461:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18604              		.loc 1 7461 16
 18605 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18606 03bc 183083E2 		add	r3, r3, #24
 18607 03c0 18201BE5 		ldr	r2, [fp, #-24]
 18608 03c4 0010A0E3 		mov	r1, #0
 18609 03c8 0300A0E1 		mov	r0, r3
 18610 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18611 03d0 0030A0E1 		mov	r3, r0
 18612              		.loc 1 7461 15 discriminator 1
 18613 03d4 000053E3 		cmp	r3, #0
 18614 03d8 0100001A 		bne	.L1211
7462:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7463:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 459


7464:../../Source/Kernel/rme_kernel.c ****             {
7465:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7466:../../Source/Kernel/rme_kernel.c **** 
7467:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18615              		.loc 1 7467 24
 18616 03dc 133EE0E3 		mvn	r3, #304
 18617 03e0 0F0000EA 		b	.L1178
 18618              	.L1211:
7468:../../Source/Kernel/rme_kernel.c ****             }
7469:../../Source/Kernel/rme_kernel.c ****             else
7470:../../Source/Kernel/rme_kernel.c ****             {
7471:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7472:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7473:../../Source/Kernel/rme_kernel.c ****             }
7474:../../Source/Kernel/rme_kernel.c **** 
7475:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7476:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7477:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7478:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7479:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7480:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 18619              		.loc 1 7480 34
 18620 03e4 18301BE5 		ldr	r3, [fp, #-24]
 18621 03e8 10201BE5 		ldr	r2, [fp, #-16]
 18622 03ec 282083E5 		str	r2, [r3, #40]
7481:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 18623              		.loc 1 7481 33
 18624 03f0 18301BE5 		ldr	r3, [fp, #-24]
 18625 03f4 0120A0E3 		mov	r2, #1
 18626 03f8 1C2083E5 		str	r2, [r3, #28]
7482:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 18627              		.loc 1 7482 13
 18628 03fc 18001BE5 		ldr	r0, [fp, #-24]
 18629 0400 FEFFFFEB 		bl	_RME_Run_Del
7483:../../Source/Kernel/rme_kernel.c ****             
7484:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7485:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 18630              		.loc 1 7485 13
 18631 0404 14101BE5 		ldr	r1, [fp, #-20]
 18632 0408 24001BE5 		ldr	r0, [fp, #-36]
 18633 040c FEFFFFEB 		bl	_RME_Kern_High
 18634 0410 020000EA 		b	.L1212
 18635              	.L1210:
7486:../../Source/Kernel/rme_kernel.c ****         }
7487:../../Source/Kernel/rme_kernel.c ****         else
7488:../../Source/Kernel/rme_kernel.c ****         {
7489:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7490:../../Source/Kernel/rme_kernel.c **** 
7491:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7492:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 18636              		.loc 1 7492 13
 18637 0414 0010A0E3 		mov	r1, #0
 18638 0418 24001BE5 		ldr	r0, [fp, #-36]
 18639 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18640              	.L1212:
7493:../../Source/Kernel/rme_kernel.c ****         }
7494:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 460


7495:../../Source/Kernel/rme_kernel.c ****     
7496:../../Source/Kernel/rme_kernel.c ****     return 0;
 18641              		.loc 1 7496 12
 18642 0420 0030A0E3 		mov	r3, #0
 18643              	.L1178:
7497:../../Source/Kernel/rme_kernel.c **** }
 18644              		.loc 1 7497 1
 18645 0424 0300A0E1 		mov	r0, r3
 18646 0428 04D04BE2 		sub	sp, fp, #4
 18647              		.cfi_def_cfa 13, 8
 18648              		@ sp needed
 18649 042c 0088BDE8 		pop	{fp, pc}
 18650              	.L1218:
 18651              		.align	2
 18652              	.L1217:
 18653 0430 00000000 		.word	.L1188
 18654              		.cfi_endproc
 18655              	.LFE71:
 18657              		.section	.text._RME_Inv_Crt,"ax",%progbits
 18658              		.align	2
 18659              		.syntax unified
 18660              		.arm
 18662              	_RME_Inv_Crt:
 18663              	.LFB72:
7498:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7499:../../Source/Kernel/rme_kernel.c **** 
7500:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7501:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7502:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7503:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7504:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7505:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7506:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7507:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7508:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7509:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7510:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7511:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7512:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7513:../../Source/Kernel/rme_kernel.c **** Output      : None.
7514:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7515:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7516:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7517:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7518:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7519:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7520:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7521:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7522:../../Source/Kernel/rme_kernel.c **** {
 18664              		.loc 1 7522 1
 18665              		.cfi_startproc
 18666              		@ args = 8, pretend = 0, frame = 48
 18667              		@ frame_needed = 1, uses_anonymous_args = 0
 18668 0000 00482DE9 		push	{fp, lr}
 18669              		.cfi_def_cfa_offset 8
 18670              		.cfi_offset 11, -8
 18671              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 461


 18672 0004 04B08DE2 		add	fp, sp, #4
 18673              		.cfi_def_cfa 11, 4
 18674 0008 30D04DE2 		sub	sp, sp, #48
 18675 000c 28000BE5 		str	r0, [fp, #-40]
 18676 0010 2C100BE5 		str	r1, [fp, #-44]
 18677 0014 30200BE5 		str	r2, [fp, #-48]
 18678 0018 34300BE5 		str	r3, [fp, #-52]
7523:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7524:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7525:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7526:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7527:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7528:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7529:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7530:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7531:../../Source/Kernel/rme_kernel.c ****     
7532:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7533:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18679              		.loc 1 7533 5
 18680 001c 2C301BE5 		ldr	r3, [fp, #-44]
 18681 0020 803003E2 		and	r3, r3, #128
 18682 0024 000053E3 		cmp	r3, #0
 18683 0028 1C00001A 		bne	.L1220
 18684              		.loc 1 7533 5 is_stmt 0 discriminator 1
 18685 002c 28301BE5 		ldr	r3, [fp, #-40]
 18686 0030 142093E5 		ldr	r2, [r3, #20]
 18687 0034 2C301BE5 		ldr	r3, [fp, #-44]
 18688 0038 030052E1 		cmp	r2, r3
 18689 003c 0100008A 		bhi	.L1221
 18690              		.loc 1 7533 5 discriminator 3
 18691 0040 0230E0E3 		mvn	r3, #2
 18692              		.loc 1 7533 5
 18693 0044 950100EA 		b	.L1222
 18694              	.L1221:
 18695              		.loc 1 7533 5 discriminator 4
 18696 0048 2C301BE5 		ldr	r3, [fp, #-44]
 18697 004c 8322A0E1 		lsl	r2, r3, #5
 18698 0050 28301BE5 		ldr	r3, [fp, #-40]
 18699 0054 0C3093E5 		ldr	r3, [r3, #12]
 18700 0058 033082E0 		add	r3, r2, r3
 18701 005c 08300BE5 		str	r3, [fp, #-8]
 18702 0060 08301BE5 		ldr	r3, [fp, #-8]
 18703 0064 0300A0E1 		mov	r0, r3
 18704 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18705 006c 14000BE5 		str	r0, [fp, #-20]
 18706              		.loc 1 7533 5 discriminator 1
 18707 0070 14301BE5 		ldr	r3, [fp, #-20]
 18708 0074 FF3803E2 		and	r3, r3, #16711680
 18709 0078 020853E3 		cmp	r3, #131072
 18710 007c 0100001A 		bne	.L1223
 18711              		.loc 1 7533 5 discriminator 5
 18712 0080 0830E0E3 		mvn	r3, #8
 18713              		.loc 1 7533 5
 18714 0084 850100EA 		b	.L1222
 18715              	.L1223:
 18716              		.loc 1 7533 5 discriminator 6
 18717 0088 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 462


 18718 008c 233CA0E1 		lsr	r3, r3, #24
 18719 0090 030053E3 		cmp	r3, #3
 18720 0094 3F00000A 		beq	.L1224
 18721              		.loc 1 7533 5 discriminator 7
 18722 0098 0130E0E3 		mvn	r3, #1
 18723              		.loc 1 7533 5
 18724 009c 7F0100EA 		b	.L1222
 18725              	.L1220:
 18726              		.loc 1 7533 5 discriminator 2
 18727 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 18728 00a4 2324A0E1 		lsr	r2, r3, #8
 18729 00a8 28301BE5 		ldr	r3, [fp, #-40]
 18730 00ac 143093E5 		ldr	r3, [r3, #20]
 18731 00b0 030052E1 		cmp	r2, r3
 18732 00b4 0100003A 		bcc	.L1225
 18733              		.loc 1 7533 5 discriminator 8
 18734 00b8 0230E0E3 		mvn	r3, #2
 18735              		.loc 1 7533 5
 18736 00bc 770100EA 		b	.L1222
 18737              	.L1225:
 18738              		.loc 1 7533 5 discriminator 9
 18739 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 18740 00c4 2334A0E1 		lsr	r3, r3, #8
 18741 00c8 8322A0E1 		lsl	r2, r3, #5
 18742 00cc 28301BE5 		ldr	r3, [fp, #-40]
 18743 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18744 00d4 033082E0 		add	r3, r2, r3
 18745 00d8 08300BE5 		str	r3, [fp, #-8]
 18746 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18747 00e0 0300A0E1 		mov	r0, r3
 18748 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18749 00e8 14000BE5 		str	r0, [fp, #-20]
 18750              		.loc 1 7533 5 discriminator 1
 18751 00ec 14301BE5 		ldr	r3, [fp, #-20]
 18752 00f0 FF3803E2 		and	r3, r3, #16711680
 18753 00f4 020853E3 		cmp	r3, #131072
 18754 00f8 0100001A 		bne	.L1226
 18755              		.loc 1 7533 5 discriminator 10
 18756 00fc 0830E0E3 		mvn	r3, #8
 18757              		.loc 1 7533 5
 18758 0100 660100EA 		b	.L1222
 18759              	.L1226:
 18760              		.loc 1 7533 5 discriminator 11
 18761 0104 14301BE5 		ldr	r3, [fp, #-20]
 18762 0108 233CA0E1 		lsr	r3, r3, #24
 18763 010c 030053E3 		cmp	r3, #3
 18764 0110 0100000A 		beq	.L1227
 18765              		.loc 1 7533 5 discriminator 12
 18766 0114 0130E0E3 		mvn	r3, #1
 18767              		.loc 1 7533 5
 18768 0118 600100EA 		b	.L1222
 18769              	.L1227:
 18770              		.loc 1 7533 5 discriminator 13
 18771 011c 2C301BE5 		ldr	r3, [fp, #-44]
 18772 0120 7F2003E2 		and	r2, r3, #127
 18773 0124 08301BE5 		ldr	r3, [fp, #-8]
 18774 0128 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 463


 18775 012c 030052E1 		cmp	r2, r3
 18776 0130 0100003A 		bcc	.L1228
 18777              		.loc 1 7533 5 discriminator 14
 18778 0134 0230E0E3 		mvn	r3, #2
 18779              		.loc 1 7533 5
 18780 0138 580100EA 		b	.L1222
 18781              	.L1228:
 18782              		.loc 1 7533 5 discriminator 15
 18783 013c 2C301BE5 		ldr	r3, [fp, #-44]
 18784 0140 7F3003E2 		and	r3, r3, #127
 18785 0144 8322A0E1 		lsl	r2, r3, #5
 18786 0148 08301BE5 		ldr	r3, [fp, #-8]
 18787 014c 0C3093E5 		ldr	r3, [r3, #12]
 18788 0150 033082E0 		add	r3, r2, r3
 18789 0154 08300BE5 		str	r3, [fp, #-8]
 18790 0158 08301BE5 		ldr	r3, [fp, #-8]
 18791 015c 0300A0E1 		mov	r0, r3
 18792 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18793 0164 14000BE5 		str	r0, [fp, #-20]
 18794              		.loc 1 7533 5 discriminator 1
 18795 0168 14301BE5 		ldr	r3, [fp, #-20]
 18796 016c FF3803E2 		and	r3, r3, #16711680
 18797 0170 020853E3 		cmp	r3, #131072
 18798 0174 0100001A 		bne	.L1229
 18799              		.loc 1 7533 5 discriminator 16
 18800 0178 0830E0E3 		mvn	r3, #8
 18801              		.loc 1 7533 5
 18802 017c 470100EA 		b	.L1222
 18803              	.L1229:
 18804              		.loc 1 7533 5 discriminator 17
 18805 0180 14301BE5 		ldr	r3, [fp, #-20]
 18806 0184 233CA0E1 		lsr	r3, r3, #24
 18807 0188 030053E3 		cmp	r3, #3
 18808 018c 0100000A 		beq	.L1224
 18809              		.loc 1 7533 5 discriminator 18
 18810 0190 0130E0E3 		mvn	r3, #1
 18811              		.loc 1 7533 5
 18812 0194 410100EA 		b	.L1222
 18813              	.L1224:
7534:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7535:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 18814              		.loc 1 7535 5 is_stmt 1
 18815 0198 04309BE5 		ldr	r3, [fp, #4]
 18816 019c 803003E2 		and	r3, r3, #128
 18817 01a0 000053E3 		cmp	r3, #0
 18818 01a4 1C00001A 		bne	.L1230
 18819              		.loc 1 7535 5 is_stmt 0 discriminator 1
 18820 01a8 28301BE5 		ldr	r3, [fp, #-40]
 18821 01ac 142093E5 		ldr	r2, [r3, #20]
 18822 01b0 04309BE5 		ldr	r3, [fp, #4]
 18823 01b4 030052E1 		cmp	r2, r3
 18824 01b8 0100008A 		bhi	.L1231
 18825              		.loc 1 7535 5 discriminator 3
 18826 01bc 0230E0E3 		mvn	r3, #2
 18827              		.loc 1 7535 5
 18828 01c0 360100EA 		b	.L1222
 18829              	.L1231:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 464


 18830              		.loc 1 7535 5 discriminator 4
 18831 01c4 04309BE5 		ldr	r3, [fp, #4]
 18832 01c8 8322A0E1 		lsl	r2, r3, #5
 18833 01cc 28301BE5 		ldr	r3, [fp, #-40]
 18834 01d0 0C3093E5 		ldr	r3, [r3, #12]
 18835 01d4 033082E0 		add	r3, r2, r3
 18836 01d8 0C300BE5 		str	r3, [fp, #-12]
 18837 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 18838 01e0 0300A0E1 		mov	r0, r3
 18839 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18840 01e8 14000BE5 		str	r0, [fp, #-20]
 18841              		.loc 1 7535 5 discriminator 1
 18842 01ec 14301BE5 		ldr	r3, [fp, #-20]
 18843 01f0 FF3803E2 		and	r3, r3, #16711680
 18844 01f4 020853E3 		cmp	r3, #131072
 18845 01f8 0100001A 		bne	.L1232
 18846              		.loc 1 7535 5 discriminator 5
 18847 01fc 0830E0E3 		mvn	r3, #8
 18848              		.loc 1 7535 5
 18849 0200 260100EA 		b	.L1222
 18850              	.L1232:
 18851              		.loc 1 7535 5 discriminator 6
 18852 0204 14301BE5 		ldr	r3, [fp, #-20]
 18853 0208 233CA0E1 		lsr	r3, r3, #24
 18854 020c 050053E3 		cmp	r3, #5
 18855 0210 3F00000A 		beq	.L1233
 18856              		.loc 1 7535 5 discriminator 7
 18857 0214 0130E0E3 		mvn	r3, #1
 18858              		.loc 1 7535 5
 18859 0218 200100EA 		b	.L1222
 18860              	.L1230:
 18861              		.loc 1 7535 5 discriminator 2
 18862 021c 04309BE5 		ldr	r3, [fp, #4]
 18863 0220 2324A0E1 		lsr	r2, r3, #8
 18864 0224 28301BE5 		ldr	r3, [fp, #-40]
 18865 0228 143093E5 		ldr	r3, [r3, #20]
 18866 022c 030052E1 		cmp	r2, r3
 18867 0230 0100003A 		bcc	.L1234
 18868              		.loc 1 7535 5 discriminator 8
 18869 0234 0230E0E3 		mvn	r3, #2
 18870              		.loc 1 7535 5
 18871 0238 180100EA 		b	.L1222
 18872              	.L1234:
 18873              		.loc 1 7535 5 discriminator 9
 18874 023c 04309BE5 		ldr	r3, [fp, #4]
 18875 0240 2334A0E1 		lsr	r3, r3, #8
 18876 0244 8322A0E1 		lsl	r2, r3, #5
 18877 0248 28301BE5 		ldr	r3, [fp, #-40]
 18878 024c 0C3093E5 		ldr	r3, [r3, #12]
 18879 0250 033082E0 		add	r3, r2, r3
 18880 0254 0C300BE5 		str	r3, [fp, #-12]
 18881 0258 0C301BE5 		ldr	r3, [fp, #-12]
 18882 025c 0300A0E1 		mov	r0, r3
 18883 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18884 0264 14000BE5 		str	r0, [fp, #-20]
 18885              		.loc 1 7535 5 discriminator 1
 18886 0268 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 465


 18887 026c FF3803E2 		and	r3, r3, #16711680
 18888 0270 020853E3 		cmp	r3, #131072
 18889 0274 0100001A 		bne	.L1235
 18890              		.loc 1 7535 5 discriminator 10
 18891 0278 0830E0E3 		mvn	r3, #8
 18892              		.loc 1 7535 5
 18893 027c 070100EA 		b	.L1222
 18894              	.L1235:
 18895              		.loc 1 7535 5 discriminator 11
 18896 0280 14301BE5 		ldr	r3, [fp, #-20]
 18897 0284 233CA0E1 		lsr	r3, r3, #24
 18898 0288 030053E3 		cmp	r3, #3
 18899 028c 0100000A 		beq	.L1236
 18900              		.loc 1 7535 5 discriminator 12
 18901 0290 0130E0E3 		mvn	r3, #1
 18902              		.loc 1 7535 5
 18903 0294 010100EA 		b	.L1222
 18904              	.L1236:
 18905              		.loc 1 7535 5 discriminator 13
 18906 0298 04309BE5 		ldr	r3, [fp, #4]
 18907 029c 7F2003E2 		and	r2, r3, #127
 18908 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 18909 02a4 143093E5 		ldr	r3, [r3, #20]
 18910 02a8 030052E1 		cmp	r2, r3
 18911 02ac 0100003A 		bcc	.L1237
 18912              		.loc 1 7535 5 discriminator 14
 18913 02b0 0230E0E3 		mvn	r3, #2
 18914              		.loc 1 7535 5
 18915 02b4 F90000EA 		b	.L1222
 18916              	.L1237:
 18917              		.loc 1 7535 5 discriminator 15
 18918 02b8 04309BE5 		ldr	r3, [fp, #4]
 18919 02bc 7F3003E2 		and	r3, r3, #127
 18920 02c0 8322A0E1 		lsl	r2, r3, #5
 18921 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 18922 02c8 0C3093E5 		ldr	r3, [r3, #12]
 18923 02cc 033082E0 		add	r3, r2, r3
 18924 02d0 0C300BE5 		str	r3, [fp, #-12]
 18925 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 18926 02d8 0300A0E1 		mov	r0, r3
 18927 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18928 02e0 14000BE5 		str	r0, [fp, #-20]
 18929              		.loc 1 7535 5 discriminator 1
 18930 02e4 14301BE5 		ldr	r3, [fp, #-20]
 18931 02e8 FF3803E2 		and	r3, r3, #16711680
 18932 02ec 020853E3 		cmp	r3, #131072
 18933 02f0 0100001A 		bne	.L1238
 18934              		.loc 1 7535 5 discriminator 16
 18935 02f4 0830E0E3 		mvn	r3, #8
 18936              		.loc 1 7535 5
 18937 02f8 E80000EA 		b	.L1222
 18938              	.L1238:
 18939              		.loc 1 7535 5 discriminator 17
 18940 02fc 14301BE5 		ldr	r3, [fp, #-20]
 18941 0300 233CA0E1 		lsr	r3, r3, #24
 18942 0304 050053E3 		cmp	r3, #5
 18943 0308 0100000A 		beq	.L1233
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 466


 18944              		.loc 1 7535 5 discriminator 18
 18945 030c 0130E0E3 		mvn	r3, #1
 18946              		.loc 1 7535 5
 18947 0310 E20000EA 		b	.L1222
 18948              	.L1233:
7536:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7537:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 18949              		.loc 1 7537 5 is_stmt 1
 18950 0314 30301BE5 		ldr	r3, [fp, #-48]
 18951 0318 803003E2 		and	r3, r3, #128
 18952 031c 000053E3 		cmp	r3, #0
 18953 0320 1C00001A 		bne	.L1239
 18954              		.loc 1 7537 5 is_stmt 0 discriminator 1
 18955 0324 28301BE5 		ldr	r3, [fp, #-40]
 18956 0328 142093E5 		ldr	r2, [r3, #20]
 18957 032c 30301BE5 		ldr	r3, [fp, #-48]
 18958 0330 030052E1 		cmp	r2, r3
 18959 0334 0100008A 		bhi	.L1240
 18960              		.loc 1 7537 5 discriminator 3
 18961 0338 0230E0E3 		mvn	r3, #2
 18962              		.loc 1 7537 5
 18963 033c D70000EA 		b	.L1222
 18964              	.L1240:
 18965              		.loc 1 7537 5 discriminator 4
 18966 0340 30301BE5 		ldr	r3, [fp, #-48]
 18967 0344 8322A0E1 		lsl	r2, r3, #5
 18968 0348 28301BE5 		ldr	r3, [fp, #-40]
 18969 034c 0C3093E5 		ldr	r3, [r3, #12]
 18970 0350 033082E0 		add	r3, r2, r3
 18971 0354 10300BE5 		str	r3, [fp, #-16]
 18972 0358 10301BE5 		ldr	r3, [fp, #-16]
 18973 035c 0300A0E1 		mov	r0, r3
 18974 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18975 0364 14000BE5 		str	r0, [fp, #-20]
 18976              		.loc 1 7537 5 discriminator 1
 18977 0368 14301BE5 		ldr	r3, [fp, #-20]
 18978 036c FF3803E2 		and	r3, r3, #16711680
 18979 0370 020853E3 		cmp	r3, #131072
 18980 0374 0100001A 		bne	.L1241
 18981              		.loc 1 7537 5 discriminator 5
 18982 0378 0830E0E3 		mvn	r3, #8
 18983              		.loc 1 7537 5
 18984 037c C70000EA 		b	.L1222
 18985              	.L1241:
 18986              		.loc 1 7537 5 discriminator 6
 18987 0380 14301BE5 		ldr	r3, [fp, #-20]
 18988 0384 233CA0E1 		lsr	r3, r3, #24
 18989 0388 020053E3 		cmp	r3, #2
 18990 038c 3F00000A 		beq	.L1242
 18991              		.loc 1 7537 5 discriminator 7
 18992 0390 0130E0E3 		mvn	r3, #1
 18993              		.loc 1 7537 5
 18994 0394 C10000EA 		b	.L1222
 18995              	.L1239:
 18996              		.loc 1 7537 5 discriminator 2
 18997 0398 30301BE5 		ldr	r3, [fp, #-48]
 18998 039c 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 467


 18999 03a0 28301BE5 		ldr	r3, [fp, #-40]
 19000 03a4 143093E5 		ldr	r3, [r3, #20]
 19001 03a8 030052E1 		cmp	r2, r3
 19002 03ac 0100003A 		bcc	.L1243
 19003              		.loc 1 7537 5 discriminator 8
 19004 03b0 0230E0E3 		mvn	r3, #2
 19005              		.loc 1 7537 5
 19006 03b4 B90000EA 		b	.L1222
 19007              	.L1243:
 19008              		.loc 1 7537 5 discriminator 9
 19009 03b8 30301BE5 		ldr	r3, [fp, #-48]
 19010 03bc 2334A0E1 		lsr	r3, r3, #8
 19011 03c0 8322A0E1 		lsl	r2, r3, #5
 19012 03c4 28301BE5 		ldr	r3, [fp, #-40]
 19013 03c8 0C3093E5 		ldr	r3, [r3, #12]
 19014 03cc 033082E0 		add	r3, r2, r3
 19015 03d0 10300BE5 		str	r3, [fp, #-16]
 19016 03d4 10301BE5 		ldr	r3, [fp, #-16]
 19017 03d8 0300A0E1 		mov	r0, r3
 19018 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19019 03e0 14000BE5 		str	r0, [fp, #-20]
 19020              		.loc 1 7537 5 discriminator 1
 19021 03e4 14301BE5 		ldr	r3, [fp, #-20]
 19022 03e8 FF3803E2 		and	r3, r3, #16711680
 19023 03ec 020853E3 		cmp	r3, #131072
 19024 03f0 0100001A 		bne	.L1244
 19025              		.loc 1 7537 5 discriminator 10
 19026 03f4 0830E0E3 		mvn	r3, #8
 19027              		.loc 1 7537 5
 19028 03f8 A80000EA 		b	.L1222
 19029              	.L1244:
 19030              		.loc 1 7537 5 discriminator 11
 19031 03fc 14301BE5 		ldr	r3, [fp, #-20]
 19032 0400 233CA0E1 		lsr	r3, r3, #24
 19033 0404 030053E3 		cmp	r3, #3
 19034 0408 0100000A 		beq	.L1245
 19035              		.loc 1 7537 5 discriminator 12
 19036 040c 0130E0E3 		mvn	r3, #1
 19037              		.loc 1 7537 5
 19038 0410 A20000EA 		b	.L1222
 19039              	.L1245:
 19040              		.loc 1 7537 5 discriminator 13
 19041 0414 30301BE5 		ldr	r3, [fp, #-48]
 19042 0418 7F2003E2 		and	r2, r3, #127
 19043 041c 10301BE5 		ldr	r3, [fp, #-16]
 19044 0420 143093E5 		ldr	r3, [r3, #20]
 19045 0424 030052E1 		cmp	r2, r3
 19046 0428 0100003A 		bcc	.L1246
 19047              		.loc 1 7537 5 discriminator 14
 19048 042c 0230E0E3 		mvn	r3, #2
 19049              		.loc 1 7537 5
 19050 0430 9A0000EA 		b	.L1222
 19051              	.L1246:
 19052              		.loc 1 7537 5 discriminator 15
 19053 0434 30301BE5 		ldr	r3, [fp, #-48]
 19054 0438 7F3003E2 		and	r3, r3, #127
 19055 043c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 468


 19056 0440 10301BE5 		ldr	r3, [fp, #-16]
 19057 0444 0C3093E5 		ldr	r3, [r3, #12]
 19058 0448 033082E0 		add	r3, r2, r3
 19059 044c 10300BE5 		str	r3, [fp, #-16]
 19060 0450 10301BE5 		ldr	r3, [fp, #-16]
 19061 0454 0300A0E1 		mov	r0, r3
 19062 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19063 045c 14000BE5 		str	r0, [fp, #-20]
 19064              		.loc 1 7537 5 discriminator 1
 19065 0460 14301BE5 		ldr	r3, [fp, #-20]
 19066 0464 FF3803E2 		and	r3, r3, #16711680
 19067 0468 020853E3 		cmp	r3, #131072
 19068 046c 0100001A 		bne	.L1247
 19069              		.loc 1 7537 5 discriminator 16
 19070 0470 0830E0E3 		mvn	r3, #8
 19071              		.loc 1 7537 5
 19072 0474 890000EA 		b	.L1222
 19073              	.L1247:
 19074              		.loc 1 7537 5 discriminator 17
 19075 0478 14301BE5 		ldr	r3, [fp, #-20]
 19076 047c 233CA0E1 		lsr	r3, r3, #24
 19077 0480 020053E3 		cmp	r3, #2
 19078 0484 0100000A 		beq	.L1242
 19079              		.loc 1 7537 5 discriminator 18
 19080 0488 0130E0E3 		mvn	r3, #1
 19081              		.loc 1 7537 5
 19082 048c 830000EA 		b	.L1222
 19083              	.L1242:
7538:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7539:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7540:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19084              		.loc 1 7540 5 is_stmt 1
 19085 0490 08301BE5 		ldr	r3, [fp, #-8]
 19086 0494 083093E5 		ldr	r3, [r3, #8]
 19087 0498 013003E2 		and	r3, r3, #1
 19088 049c 000053E3 		cmp	r3, #0
 19089 04a0 0100001A 		bne	.L1248
 19090              		.loc 1 7540 5 is_stmt 0 discriminator 1
 19091 04a4 0630E0E3 		mvn	r3, #6
 19092              		.loc 1 7540 5
 19093 04a8 7C0000EA 		b	.L1222
 19094              	.L1248:
7541:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 19095              		.loc 1 7541 5 is_stmt 1
 19096 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 19097 04b0 083093E5 		ldr	r3, [r3, #8]
 19098 04b4 013003E2 		and	r3, r3, #1
 19099 04b8 000053E3 		cmp	r3, #0
 19100 04bc 0100001A 		bne	.L1249
 19101              		.loc 1 7541 5 is_stmt 0 discriminator 1
 19102 04c0 0630E0E3 		mvn	r3, #6
 19103              		.loc 1 7541 5
 19104 04c4 750000EA 		b	.L1222
 19105              	.L1249:
7542:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7543:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 19106              		.loc 1 7543 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 469


 19107 04c8 10301BE5 		ldr	r3, [fp, #-16]
 19108 04cc 083093E5 		ldr	r3, [r3, #8]
 19109 04d0 083003E2 		and	r3, r3, #8
 19110 04d4 000053E3 		cmp	r3, #0
 19111 04d8 0100001A 		bne	.L1250
 19112              		.loc 1 7543 5 is_stmt 0 discriminator 1
 19113 04dc 0630E0E3 		mvn	r3, #6
 19114              		.loc 1 7543 5
 19115 04e0 6E0000EA 		b	.L1222
 19116              	.L1250:
 19117              		.loc 1 7543 5 discriminator 2
 19118 04e4 10301BE5 		ldr	r3, [fp, #-16]
 19119 04e8 143093E5 		ldr	r3, [r3, #20]
 19120 04ec 08209BE5 		ldr	r2, [fp, #8]
 19121 04f0 033082E0 		add	r3, r2, r3
 19122 04f4 18300BE5 		str	r3, [fp, #-24]
 19123 04f8 18201BE5 		ldr	r2, [fp, #-24]
 19124 04fc 08309BE5 		ldr	r3, [fp, #8]
 19125 0500 030052E1 		cmp	r2, r3
 19126 0504 0100002A 		bcs	.L1251
 19127              		.loc 1 7543 5 discriminator 3
 19128 0508 0630E0E3 		mvn	r3, #6
 19129              		.loc 1 7543 5
 19130 050c 630000EA 		b	.L1222
 19131              	.L1251:
 19132              		.loc 1 7543 5 discriminator 4
 19133 0510 10301BE5 		ldr	r3, [fp, #-16]
 19134 0514 143093E5 		ldr	r3, [r3, #20]
 19135 0518 18201BE5 		ldr	r2, [fp, #-24]
 19136 051c 030052E1 		cmp	r2, r3
 19137 0520 0100002A 		bcs	.L1252
 19138              		.loc 1 7543 5 discriminator 5
 19139 0524 0630E0E3 		mvn	r3, #6
 19140              		.loc 1 7543 5
 19141 0528 5C0000EA 		b	.L1222
 19142              	.L1252:
 19143              		.loc 1 7543 5 discriminator 6
 19144 052c 18301BE5 		ldr	r3, [fp, #-24]
 19145 0530 250073E3 		cmn	r3, #37
 19146 0534 0100009A 		bls	.L1253
 19147              		.loc 1 7543 5 discriminator 7
 19148 0538 0630E0E3 		mvn	r3, #6
 19149              		.loc 1 7543 5
 19150 053c 570000EA 		b	.L1222
 19151              	.L1253:
 19152              		.loc 1 7543 5 discriminator 8
 19153 0540 10301BE5 		ldr	r3, [fp, #-16]
 19154 0544 182093E5 		ldr	r2, [r3, #24]
 19155 0548 18301BE5 		ldr	r3, [fp, #-24]
 19156 054c 233083E2 		add	r3, r3, #35
 19157 0550 030052E1 		cmp	r2, r3
 19158 0554 0100002A 		bcs	.L1254
 19159              		.loc 1 7543 5 discriminator 9
 19160 0558 0630E0E3 		mvn	r3, #6
 19161              		.loc 1 7543 5
 19162 055c 4F0000EA 		b	.L1222
 19163              	.L1254:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 470


7544:../../Source/Kernel/rme_kernel.c ****     
7545:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7546:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 19164              		.loc 1 7546 5 is_stmt 1
 19165 0560 08301BE5 		ldr	r3, [fp, #-8]
 19166 0564 142093E5 		ldr	r2, [r3, #20]
 19167 0568 34301BE5 		ldr	r3, [fp, #-52]
 19168 056c 030052E1 		cmp	r2, r3
 19169 0570 0100008A 		bhi	.L1255
 19170              		.loc 1 7546 5 is_stmt 0 discriminator 1
 19171 0574 0230E0E3 		mvn	r3, #2
 19172              		.loc 1 7546 5
 19173 0578 480000EA 		b	.L1222
 19174              	.L1255:
 19175              		.loc 1 7546 5 discriminator 2
 19176 057c 34301BE5 		ldr	r3, [fp, #-52]
 19177 0580 8322A0E1 		lsl	r2, r3, #5
 19178 0584 08301BE5 		ldr	r3, [fp, #-8]
 19179 0588 0C3093E5 		ldr	r3, [r3, #12]
 19180 058c 033082E0 		add	r3, r2, r3
 19181 0590 1C300BE5 		str	r3, [fp, #-28]
7547:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7548:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 19182              		.loc 1 7548 5 is_stmt 1
 19183 0594 1C301BE5 		ldr	r3, [fp, #-28]
 19184 0598 0128A0E3 		mov	r2, #65536
 19185 059c 0010A0E3 		mov	r1, #0
 19186 05a0 0300A0E1 		mov	r0, r3
 19187 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19188 05a8 0030A0E1 		mov	r3, r0
 19189              		.loc 1 7548 5 is_stmt 0 discriminator 1
 19190 05ac 000053E3 		cmp	r3, #0
 19191 05b0 0100001A 		bne	.L1256
 19192 05b4 0430E0E3 		mvn	r3, #4
 19193              		.loc 1 7548 5
 19194 05b8 380000EA 		b	.L1222
 19195              	.L1256:
 19196              		.loc 1 7548 5 discriminator 2
 19197 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19198 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19199 05c4 002093E5 		ldr	r2, [r3]
 19200 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 19201 05cc 102083E5 		str	r2, [r3, #16]
7549:../../Source/Kernel/rme_kernel.c ****     
7550:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7551:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 19202              		.loc 1 7551 8 is_stmt 1
 19203 05d0 2410A0E3 		mov	r1, #36
 19204 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19205 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19206 05dc 0030A0E1 		mov	r3, r0
 19207              		.loc 1 7551 7 discriminator 1
 19208 05e0 000053E3 		cmp	r3, #0
 19209 05e4 0500000A 		beq	.L1257
7552:../../Source/Kernel/rme_kernel.c ****     {
7553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7554:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 471


7555:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19210              		.loc 1 7555 9
 19211 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19212 05ec 0010A0E3 		mov	r1, #0
 19213 05f0 0300A0E1 		mov	r0, r3
 19214 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7556:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19215              		.loc 1 7556 16
 19216 05f8 0330E0E3 		mvn	r3, #3
 19217 05fc 270000EA 		b	.L1222
 19218              	.L1257:
7557:../../Source/Kernel/rme_kernel.c ****     }
7558:../../Source/Kernel/rme_kernel.c ****     else
7559:../../Source/Kernel/rme_kernel.c ****     {
7560:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7561:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7562:../../Source/Kernel/rme_kernel.c ****     }
7563:../../Source/Kernel/rme_kernel.c ****     
7564:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7565:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19219              		.loc 1 7565 15
 19220 0600 18301BE5 		ldr	r3, [fp, #-24]
 19221 0604 20300BE5 		str	r3, [fp, #-32]
7566:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19222              		.loc 1 7566 14
 19223 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19224 060c 003093E5 		ldr	r3, [r3]
 19225 0610 7330FFE6 		uxth	r3, r3
 19226 0614 000053E3 		cmp	r3, #0
 19227 0618 0200000A 		beq	.L1258
 19228              		.loc 1 7566 14 is_stmt 0 discriminator 1
 19229 061c 0C301BE5 		ldr	r3, [fp, #-12]
 19230 0620 043093E5 		ldr	r3, [r3, #4]
 19231 0624 000000EA 		b	.L1259
 19232              	.L1258:
 19233              		.loc 1 7566 14 discriminator 2
 19234 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19235              	.L1259:
 19236              		.loc 1 7566 13 is_stmt 1 discriminator 4
 19237 062c 24300BE5 		str	r3, [fp, #-36]
7567:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19238              		.loc 1 7567 20
 19239 0630 20301BE5 		ldr	r3, [fp, #-32]
 19240 0634 24201BE5 		ldr	r2, [fp, #-36]
 19241 0638 082083E5 		str	r2, [r3, #8]
7568:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19242              		.loc 1 7568 24
 19243 063c 20301BE5 		ldr	r3, [fp, #-32]
 19244 0640 0020A0E3 		mov	r2, #0
 19245 0644 0C2083E5 		str	r2, [r3, #12]
7569:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7570:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19246              		.loc 1 7570 27
 19247 0648 20301BE5 		ldr	r3, [fp, #-32]
 19248 064c 0020A0E3 		mov	r2, #0
 19249 0650 182083E5 		str	r2, [r3, #24]
7571:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 472


7572:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7573:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19250              		.loc 1 7573 27
 19251 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19252 0658 0020A0E3 		mov	r2, #0
 19253 065c 042083E5 		str	r2, [r3, #4]
7574:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19254              		.loc 1 7574 25
 19255 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19256 0664 18201BE5 		ldr	r2, [fp, #-24]
 19257 0668 0C2083E5 		str	r2, [r3, #12]
7575:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19258              		.loc 1 7575 23
 19259 066c 1C301BE5 		ldr	r3, [fp, #-28]
 19260 0670 0320A0E3 		mov	r2, #3
 19261 0674 082083E5 		str	r2, [r3, #8]
7576:../../Source/Kernel/rme_kernel.c ****     
7577:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7578:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 19262              		.loc 1 7578 5
 19263 0678 24301BE5 		ldr	r3, [fp, #-36]
 19264 067c 043083E2 		add	r3, r3, #4
 19265 0680 0110A0E3 		mov	r1, #1
 19266 0684 0300A0E1 		mov	r0, r3
 19267 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7579:../../Source/Kernel/rme_kernel.c ****     
7580:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7581:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19268              		.loc 1 7581 5
 19269 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19270 0690 0714A0E3 		mov	r1, #117440512
 19271 0694 0300A0E1 		mov	r0, r3
 19272 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7582:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7583:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7584:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7585:../../Source/Kernel/rme_kernel.c **** 
7586:../../Source/Kernel/rme_kernel.c ****     return 0;
 19273              		.loc 1 7586 12
 19274 069c 0030A0E3 		mov	r3, #0
 19275              	.L1222:
7587:../../Source/Kernel/rme_kernel.c **** }
 19276              		.loc 1 7587 1
 19277 06a0 0300A0E1 		mov	r0, r3
 19278 06a4 04D04BE2 		sub	sp, fp, #4
 19279              		.cfi_def_cfa 13, 8
 19280              		@ sp needed
 19281 06a8 0088BDE8 		pop	{fp, pc}
 19282              		.cfi_endproc
 19283              	.LFE72:
 19285              		.section	.text._RME_Inv_Del,"ax",%progbits
 19286              		.align	2
 19287              		.syntax unified
 19288              		.arm
 19290              	_RME_Inv_Del:
 19291              	.LFB73:
7588:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 473


7589:../../Source/Kernel/rme_kernel.c **** 
7590:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7591:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7592:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7593:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7594:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7595:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7596:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7597:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7598:../../Source/Kernel/rme_kernel.c **** Output      : None.
7599:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7600:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7601:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7602:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7603:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7604:../../Source/Kernel/rme_kernel.c **** {
 19292              		.loc 1 7604 1
 19293              		.cfi_startproc
 19294              		@ args = 0, pretend = 0, frame = 32
 19295              		@ frame_needed = 1, uses_anonymous_args = 0
 19296 0000 00482DE9 		push	{fp, lr}
 19297              		.cfi_def_cfa_offset 8
 19298              		.cfi_offset 11, -8
 19299              		.cfi_offset 14, -4
 19300 0004 04B08DE2 		add	fp, sp, #4
 19301              		.cfi_def_cfa 11, 4
 19302 0008 20D04DE2 		sub	sp, sp, #32
 19303 000c 18000BE5 		str	r0, [fp, #-24]
 19304 0010 1C100BE5 		str	r1, [fp, #-28]
 19305 0014 20200BE5 		str	r2, [fp, #-32]
7605:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7606:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7607:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7608:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7609:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7610:../../Source/Kernel/rme_kernel.c ****     
7611:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7612:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19306              		.loc 1 7612 5
 19307 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19308 001c 803003E2 		and	r3, r3, #128
 19309 0020 000053E3 		cmp	r3, #0
 19310 0024 1C00001A 		bne	.L1261
 19311              		.loc 1 7612 5 is_stmt 0 discriminator 1
 19312 0028 18301BE5 		ldr	r3, [fp, #-24]
 19313 002c 142093E5 		ldr	r2, [r3, #20]
 19314 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19315 0034 030052E1 		cmp	r2, r3
 19316 0038 0100008A 		bhi	.L1262
 19317              		.loc 1 7612 5 discriminator 3
 19318 003c 0230E0E3 		mvn	r3, #2
 19319              		.loc 1 7612 5
 19320 0040 D10000EA 		b	.L1263
 19321              	.L1262:
 19322              		.loc 1 7612 5 discriminator 4
 19323 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19324 0048 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 474


 19325 004c 18301BE5 		ldr	r3, [fp, #-24]
 19326 0050 0C3093E5 		ldr	r3, [r3, #12]
 19327 0054 033082E0 		add	r3, r2, r3
 19328 0058 08300BE5 		str	r3, [fp, #-8]
 19329 005c 08301BE5 		ldr	r3, [fp, #-8]
 19330 0060 0300A0E1 		mov	r0, r3
 19331 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19332 0068 0C000BE5 		str	r0, [fp, #-12]
 19333              		.loc 1 7612 5 discriminator 1
 19334 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19335 0070 FF3803E2 		and	r3, r3, #16711680
 19336 0074 020853E3 		cmp	r3, #131072
 19337 0078 0100001A 		bne	.L1264
 19338              		.loc 1 7612 5 discriminator 5
 19339 007c 0830E0E3 		mvn	r3, #8
 19340              		.loc 1 7612 5
 19341 0080 C10000EA 		b	.L1263
 19342              	.L1264:
 19343              		.loc 1 7612 5 discriminator 6
 19344 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19345 0088 233CA0E1 		lsr	r3, r3, #24
 19346 008c 030053E3 		cmp	r3, #3
 19347 0090 3F00000A 		beq	.L1265
 19348              		.loc 1 7612 5 discriminator 7
 19349 0094 0130E0E3 		mvn	r3, #1
 19350              		.loc 1 7612 5
 19351 0098 BB0000EA 		b	.L1263
 19352              	.L1261:
 19353              		.loc 1 7612 5 discriminator 2
 19354 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19355 00a0 2324A0E1 		lsr	r2, r3, #8
 19356 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19357 00a8 143093E5 		ldr	r3, [r3, #20]
 19358 00ac 030052E1 		cmp	r2, r3
 19359 00b0 0100003A 		bcc	.L1266
 19360              		.loc 1 7612 5 discriminator 8
 19361 00b4 0230E0E3 		mvn	r3, #2
 19362              		.loc 1 7612 5
 19363 00b8 B30000EA 		b	.L1263
 19364              	.L1266:
 19365              		.loc 1 7612 5 discriminator 9
 19366 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19367 00c0 2334A0E1 		lsr	r3, r3, #8
 19368 00c4 8322A0E1 		lsl	r2, r3, #5
 19369 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19370 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19371 00d0 033082E0 		add	r3, r2, r3
 19372 00d4 08300BE5 		str	r3, [fp, #-8]
 19373 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19374 00dc 0300A0E1 		mov	r0, r3
 19375 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19376 00e4 0C000BE5 		str	r0, [fp, #-12]
 19377              		.loc 1 7612 5 discriminator 1
 19378 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19379 00ec FF3803E2 		and	r3, r3, #16711680
 19380 00f0 020853E3 		cmp	r3, #131072
 19381 00f4 0100001A 		bne	.L1267
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 475


 19382              		.loc 1 7612 5 discriminator 10
 19383 00f8 0830E0E3 		mvn	r3, #8
 19384              		.loc 1 7612 5
 19385 00fc A20000EA 		b	.L1263
 19386              	.L1267:
 19387              		.loc 1 7612 5 discriminator 11
 19388 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19389 0104 233CA0E1 		lsr	r3, r3, #24
 19390 0108 030053E3 		cmp	r3, #3
 19391 010c 0100000A 		beq	.L1268
 19392              		.loc 1 7612 5 discriminator 12
 19393 0110 0130E0E3 		mvn	r3, #1
 19394              		.loc 1 7612 5
 19395 0114 9C0000EA 		b	.L1263
 19396              	.L1268:
 19397              		.loc 1 7612 5 discriminator 13
 19398 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19399 011c 7F2003E2 		and	r2, r3, #127
 19400 0120 08301BE5 		ldr	r3, [fp, #-8]
 19401 0124 143093E5 		ldr	r3, [r3, #20]
 19402 0128 030052E1 		cmp	r2, r3
 19403 012c 0100003A 		bcc	.L1269
 19404              		.loc 1 7612 5 discriminator 14
 19405 0130 0230E0E3 		mvn	r3, #2
 19406              		.loc 1 7612 5
 19407 0134 940000EA 		b	.L1263
 19408              	.L1269:
 19409              		.loc 1 7612 5 discriminator 15
 19410 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19411 013c 7F3003E2 		and	r3, r3, #127
 19412 0140 8322A0E1 		lsl	r2, r3, #5
 19413 0144 08301BE5 		ldr	r3, [fp, #-8]
 19414 0148 0C3093E5 		ldr	r3, [r3, #12]
 19415 014c 033082E0 		add	r3, r2, r3
 19416 0150 08300BE5 		str	r3, [fp, #-8]
 19417 0154 08301BE5 		ldr	r3, [fp, #-8]
 19418 0158 0300A0E1 		mov	r0, r3
 19419 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19420 0160 0C000BE5 		str	r0, [fp, #-12]
 19421              		.loc 1 7612 5 discriminator 1
 19422 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19423 0168 FF3803E2 		and	r3, r3, #16711680
 19424 016c 020853E3 		cmp	r3, #131072
 19425 0170 0100001A 		bne	.L1270
 19426              		.loc 1 7612 5 discriminator 16
 19427 0174 0830E0E3 		mvn	r3, #8
 19428              		.loc 1 7612 5
 19429 0178 830000EA 		b	.L1263
 19430              	.L1270:
 19431              		.loc 1 7612 5 discriminator 17
 19432 017c 0C301BE5 		ldr	r3, [fp, #-12]
 19433 0180 233CA0E1 		lsr	r3, r3, #24
 19434 0184 030053E3 		cmp	r3, #3
 19435 0188 0100000A 		beq	.L1265
 19436              		.loc 1 7612 5 discriminator 18
 19437 018c 0130E0E3 		mvn	r3, #1
 19438              		.loc 1 7612 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 476


 19439 0190 7D0000EA 		b	.L1263
 19440              	.L1265:
7613:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7614:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7615:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 19441              		.loc 1 7615 5 is_stmt 1
 19442 0194 08301BE5 		ldr	r3, [fp, #-8]
 19443 0198 083093E5 		ldr	r3, [r3, #8]
 19444 019c 023003E2 		and	r3, r3, #2
 19445 01a0 000053E3 		cmp	r3, #0
 19446 01a4 0100001A 		bne	.L1271
 19447              		.loc 1 7615 5 is_stmt 0 discriminator 1
 19448 01a8 0630E0E3 		mvn	r3, #6
 19449              		.loc 1 7615 5
 19450 01ac 760000EA 		b	.L1263
 19451              	.L1271:
7616:../../Source/Kernel/rme_kernel.c ****     
7617:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7618:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 19452              		.loc 1 7618 5 is_stmt 1
 19453 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19454 01b4 142093E5 		ldr	r2, [r3, #20]
 19455 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19456 01bc 030052E1 		cmp	r2, r3
 19457 01c0 0100008A 		bhi	.L1272
 19458              		.loc 1 7618 5 is_stmt 0 discriminator 1
 19459 01c4 0230E0E3 		mvn	r3, #2
 19460              		.loc 1 7618 5
 19461 01c8 6F0000EA 		b	.L1263
 19462              	.L1272:
 19463              		.loc 1 7618 5 discriminator 2
 19464 01cc 20301BE5 		ldr	r3, [fp, #-32]
 19465 01d0 8322A0E1 		lsl	r2, r3, #5
 19466 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19467 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19468 01dc 033082E0 		add	r3, r2, r3
 19469 01e0 10300BE5 		str	r3, [fp, #-16]
7619:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7620:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19470              		.loc 1 7620 5 is_stmt 1
 19471 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19472 01e8 0300A0E1 		mov	r0, r3
 19473 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19474 01f0 0C000BE5 		str	r0, [fp, #-12]
 19475              		.loc 1 7620 5 is_stmt 0 discriminator 1
 19476 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19477 01f8 FF3803E2 		and	r3, r3, #16711680
 19478 01fc 020853E3 		cmp	r3, #131072
 19479 0200 0100000A 		beq	.L1273
 19480 0204 0830E0E3 		mvn	r3, #8
 19481              		.loc 1 7620 5
 19482 0208 5F0000EA 		b	.L1263
 19483              	.L1273:
 19484              		.loc 1 7620 5 discriminator 2
 19485 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19486 0210 233CA0E1 		lsr	r3, r3, #24
 19487 0214 070053E3 		cmp	r3, #7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 477


 19488 0218 0100000A 		beq	.L1274
 19489              		.loc 1 7620 5 discriminator 3
 19490 021c 0130E0E3 		mvn	r3, #1
 19491              		.loc 1 7620 5
 19492 0220 590000EA 		b	.L1263
 19493              	.L1274:
 19494              		.loc 1 7620 5 discriminator 4
 19495 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19496 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19497 022c 002093E5 		ldr	r2, [r3]
 19498 0230 10301BE5 		ldr	r3, [fp, #-16]
 19499 0234 103093E5 		ldr	r3, [r3, #16]
 19500 0238 0310A0E1 		mov	r1, r3
 19501 023c 0200A0E1 		mov	r0, r2
 19502 0240 FEFFFFEB 		bl	_RME_Diff
 19503 0244 0030A0E1 		mov	r3, r0
 19504              		.loc 1 7620 5 discriminator 1
 19505 0248 0A0053E3 		cmp	r3, #10
 19506 024c 0100008A 		bhi	.L1275
 19507              		.loc 1 7620 5 discriminator 5
 19508 0250 0730E0E3 		mvn	r3, #7
 19509              		.loc 1 7620 5
 19510 0254 4C0000EA 		b	.L1263
 19511              	.L1275:
 19512              		.loc 1 7620 5 discriminator 6
 19513 0258 10301BE5 		ldr	r3, [fp, #-16]
 19514 025c 043093E5 		ldr	r3, [r3, #4]
 19515 0260 000053E3 		cmp	r3, #0
 19516 0264 0B00000A 		beq	.L1276
 19517              		.loc 1 7620 5 discriminator 7
 19518 0268 0C301BE5 		ldr	r3, [fp, #-12]
 19519 026c 7330FFE6 		uxth	r3, r3
 19520 0270 000053E3 		cmp	r3, #0
 19521 0274 0500001A 		bne	.L1277
 19522              		.loc 1 7620 5 discriminator 9
 19523 0278 10001BE5 		ldr	r0, [fp, #-16]
 19524 027c 0C301BE5 		ldr	r3, [fp, #-12]
 19525 0280 FF38C3E3 		bic	r3, r3, #16711680
 19526 0284 0320A0E1 		mov	r2, r3
 19527 0288 0C101BE5 		ldr	r1, [fp, #-12]
 19528 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19529              	.L1277:
 19530              		.loc 1 7620 5 discriminator 11
 19531 0290 0530E0E3 		mvn	r3, #5
 19532              		.loc 1 7620 5
 19533 0294 3C0000EA 		b	.L1263
 19534              	.L1276:
 19535              		.loc 1 7620 5 discriminator 8
 19536 0298 0C301BE5 		ldr	r3, [fp, #-12]
 19537 029c 7330FFE6 		uxth	r3, r3
 19538 02a0 000053E3 		cmp	r3, #0
 19539 02a4 0800000A 		beq	.L1278
 19540              		.loc 1 7620 5 discriminator 12
 19541 02a8 003000E3 		movw	r3, #:lower16:.LC6
 19542 02ac 003040E3 		movt	r3, #:upper16:.LC6
 19543 02b0 002000E3 		movw	r2, #:lower16:.LC7
 19544 02b4 002040E3 		movt	r2, #:upper16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 478


 19545 02b8 C41D01E3 		movw	r1, #7620
 19546 02bc 000000E3 		movw	r0, #:lower16:.LC8
 19547 02c0 000040E3 		movt	r0, #:upper16:.LC8
 19548 02c4 FEFFFFEB 		bl	RME_Log
 19549              	.L1279:
 19550              		.loc 1 7620 5
 19551 02c8 FEFFFFEA 		b	.L1279
 19552              	.L1278:
7621:../../Source/Kernel/rme_kernel.c ****     
7622:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7623:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19553              		.loc 1 7623 16 is_stmt 1
 19554 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19555 02d0 0C3093E5 		ldr	r3, [r3, #12]
 19556              		.loc 1 7623 15
 19557 02d4 14300BE5 		str	r3, [fp, #-20]
7624:../../Source/Kernel/rme_kernel.c ****     
7625:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7626:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19558              		.loc 1 7626 18
 19559 02d8 14301BE5 		ldr	r3, [fp, #-20]
 19560 02dc 0C3093E5 		ldr	r3, [r3, #12]
 19561              		.loc 1 7626 7
 19562 02e0 000053E3 		cmp	r3, #0
 19563 02e4 0700000A 		beq	.L1280
7627:../../Source/Kernel/rme_kernel.c ****     {
7628:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7629:../../Source/Kernel/rme_kernel.c **** 
7630:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19564              		.loc 1 7630 9
 19565 02e8 10001BE5 		ldr	r0, [fp, #-16]
 19566 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 19567 02f0 FF38C3E3 		bic	r3, r3, #16711680
 19568 02f4 0320A0E1 		mov	r2, r3
 19569 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 19570 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
7631:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19571              		.loc 1 7631 16
 19572 0300 4B3FE0E3 		mvn	r3, #300
 19573 0304 200000EA 		b	.L1263
 19574              	.L1280:
7632:../../Source/Kernel/rme_kernel.c ****     }
7633:../../Source/Kernel/rme_kernel.c ****     else
7634:../../Source/Kernel/rme_kernel.c ****     {
7635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7636:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7637:../../Source/Kernel/rme_kernel.c ****     }
7638:../../Source/Kernel/rme_kernel.c ****     
7639:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7640:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19575              		.loc 1 7640 5
 19576 0308 10301BE5 		ldr	r3, [fp, #-16]
 19577 030c 0020A0E3 		mov	r2, #0
 19578 0310 0C101BE5 		ldr	r1, [fp, #-12]
 19579 0314 0300A0E1 		mov	r0, r3
 19580 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19581 031c 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 479


 19582              		.loc 1 7640 5 is_stmt 0 discriminator 1
 19583 0320 000053E3 		cmp	r3, #0
 19584 0324 0100001A 		bne	.L1281
 19585 0328 0030E0E3 		mvn	r3, #0
 19586              		.loc 1 7640 5
 19587 032c 160000EA 		b	.L1263
 19588              	.L1281:
7641:../../Source/Kernel/rme_kernel.c ****     
7642:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7643:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19589              		.loc 1 7643 5 is_stmt 1
 19590 0330 14301BE5 		ldr	r3, [fp, #-20]
 19591 0334 083093E5 		ldr	r3, [r3, #8]
 19592 0338 043083E2 		add	r3, r3, #4
 19593 033c 0010E0E3 		mvn	r1, #0
 19594 0340 0300A0E1 		mov	r0, r3
 19595 0344 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7644:../../Source/Kernel/rme_kernel.c ****     
7645:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7646:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19596              		.loc 1 7646 5
 19597 0348 14301BE5 		ldr	r3, [fp, #-20]
 19598 034c 2410A0E3 		mov	r1, #36
 19599 0350 0300A0E1 		mov	r0, r3
 19600 0354 FEFFFFEB 		bl	_RME_Kot_Erase
 19601 0358 0030A0E1 		mov	r3, r0
 19602              		.loc 1 7646 5 is_stmt 0 discriminator 1
 19603 035c 000053E3 		cmp	r3, #0
 19604 0360 0800000A 		beq	.L1282
 19605 0364 003000E3 		movw	r3, #:lower16:.LC6
 19606 0368 003040E3 		movt	r3, #:upper16:.LC6
 19607 036c 002000E3 		movw	r2, #:lower16:.LC7
 19608 0370 002040E3 		movt	r2, #:upper16:.LC7
 19609 0374 DE1D01E3 		movw	r1, #7646
 19610 0378 000000E3 		movw	r0, #:lower16:.LC8
 19611 037c 000040E3 		movt	r0, #:upper16:.LC8
 19612 0380 FEFFFFEB 		bl	RME_Log
 19613              	.L1283:
 19614              		.loc 1 7646 5
 19615 0384 FEFFFFEA 		b	.L1283
 19616              	.L1282:
7647:../../Source/Kernel/rme_kernel.c ****     
7648:../../Source/Kernel/rme_kernel.c ****     return 0;
 19617              		.loc 1 7648 12 is_stmt 1
 19618 0388 0030A0E3 		mov	r3, #0
 19619              	.L1263:
7649:../../Source/Kernel/rme_kernel.c **** }
 19620              		.loc 1 7649 1
 19621 038c 0300A0E1 		mov	r0, r3
 19622 0390 04D04BE2 		sub	sp, fp, #4
 19623              		.cfi_def_cfa 13, 8
 19624              		@ sp needed
 19625 0394 0088BDE8 		pop	{fp, pc}
 19626              		.cfi_endproc
 19627              	.LFE73:
 19629              		.section	.text._RME_Inv_Set,"ax",%progbits
 19630              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 480


 19631              		.syntax unified
 19632              		.arm
 19634              	_RME_Inv_Set:
 19635              	.LFB74:
7650:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7651:../../Source/Kernel/rme_kernel.c **** 
7652:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7653:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7654:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7655:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7656:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7657:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7658:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7660:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7661:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7662:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7663:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7664:../../Source/Kernel/rme_kernel.c **** Output      : None.
7665:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7666:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7667:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7668:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7669:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7670:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7671:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7672:../../Source/Kernel/rme_kernel.c **** {
 19636              		.loc 1 7672 1
 19637              		.cfi_startproc
 19638              		@ args = 4, pretend = 0, frame = 32
 19639              		@ frame_needed = 1, uses_anonymous_args = 0
 19640 0000 00482DE9 		push	{fp, lr}
 19641              		.cfi_def_cfa_offset 8
 19642              		.cfi_offset 11, -8
 19643              		.cfi_offset 14, -4
 19644 0004 04B08DE2 		add	fp, sp, #4
 19645              		.cfi_def_cfa 11, 4
 19646 0008 20D04DE2 		sub	sp, sp, #32
 19647 000c 18000BE5 		str	r0, [fp, #-24]
 19648 0010 1C100BE5 		str	r1, [fp, #-28]
 19649 0014 20200BE5 		str	r2, [fp, #-32]
 19650 0018 24300BE5 		str	r3, [fp, #-36]
7673:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7674:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7675:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7676:../../Source/Kernel/rme_kernel.c ****     
7677:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7678:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19651              		.loc 1 7678 5
 19652 001c 1C301BE5 		ldr	r3, [fp, #-28]
 19653 0020 803003E2 		and	r3, r3, #128
 19654 0024 000053E3 		cmp	r3, #0
 19655 0028 1C00001A 		bne	.L1285
 19656              		.loc 1 7678 5 is_stmt 0 discriminator 1
 19657 002c 18301BE5 		ldr	r3, [fp, #-24]
 19658 0030 142093E5 		ldr	r2, [r3, #20]
 19659 0034 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 481


 19660 0038 030052E1 		cmp	r2, r3
 19661 003c 0100008A 		bhi	.L1286
 19662              		.loc 1 7678 5 discriminator 3
 19663 0040 0230E0E3 		mvn	r3, #2
 19664              		.loc 1 7678 5
 19665 0044 670000EA 		b	.L1287
 19666              	.L1286:
 19667              		.loc 1 7678 5 discriminator 4
 19668 0048 1C301BE5 		ldr	r3, [fp, #-28]
 19669 004c 8322A0E1 		lsl	r2, r3, #5
 19670 0050 18301BE5 		ldr	r3, [fp, #-24]
 19671 0054 0C3093E5 		ldr	r3, [r3, #12]
 19672 0058 033082E0 		add	r3, r2, r3
 19673 005c 08300BE5 		str	r3, [fp, #-8]
 19674 0060 08301BE5 		ldr	r3, [fp, #-8]
 19675 0064 0300A0E1 		mov	r0, r3
 19676 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19677 006c 0C000BE5 		str	r0, [fp, #-12]
 19678              		.loc 1 7678 5 discriminator 1
 19679 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19680 0074 FF3803E2 		and	r3, r3, #16711680
 19681 0078 020853E3 		cmp	r3, #131072
 19682 007c 0100001A 		bne	.L1288
 19683              		.loc 1 7678 5 discriminator 5
 19684 0080 0830E0E3 		mvn	r3, #8
 19685              		.loc 1 7678 5
 19686 0084 570000EA 		b	.L1287
 19687              	.L1288:
 19688              		.loc 1 7678 5 discriminator 6
 19689 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19690 008c 233CA0E1 		lsr	r3, r3, #24
 19691 0090 070053E3 		cmp	r3, #7
 19692 0094 3F00000A 		beq	.L1289
 19693              		.loc 1 7678 5 discriminator 7
 19694 0098 0130E0E3 		mvn	r3, #1
 19695              		.loc 1 7678 5
 19696 009c 510000EA 		b	.L1287
 19697              	.L1285:
 19698              		.loc 1 7678 5 discriminator 2
 19699 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19700 00a4 2324A0E1 		lsr	r2, r3, #8
 19701 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19702 00ac 143093E5 		ldr	r3, [r3, #20]
 19703 00b0 030052E1 		cmp	r2, r3
 19704 00b4 0100003A 		bcc	.L1290
 19705              		.loc 1 7678 5 discriminator 8
 19706 00b8 0230E0E3 		mvn	r3, #2
 19707              		.loc 1 7678 5
 19708 00bc 490000EA 		b	.L1287
 19709              	.L1290:
 19710              		.loc 1 7678 5 discriminator 9
 19711 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19712 00c4 2334A0E1 		lsr	r3, r3, #8
 19713 00c8 8322A0E1 		lsl	r2, r3, #5
 19714 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19715 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19716 00d4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 482


 19717 00d8 08300BE5 		str	r3, [fp, #-8]
 19718 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19719 00e0 0300A0E1 		mov	r0, r3
 19720 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19721 00e8 0C000BE5 		str	r0, [fp, #-12]
 19722              		.loc 1 7678 5 discriminator 1
 19723 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19724 00f0 FF3803E2 		and	r3, r3, #16711680
 19725 00f4 020853E3 		cmp	r3, #131072
 19726 00f8 0100001A 		bne	.L1291
 19727              		.loc 1 7678 5 discriminator 10
 19728 00fc 0830E0E3 		mvn	r3, #8
 19729              		.loc 1 7678 5
 19730 0100 380000EA 		b	.L1287
 19731              	.L1291:
 19732              		.loc 1 7678 5 discriminator 11
 19733 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19734 0108 233CA0E1 		lsr	r3, r3, #24
 19735 010c 030053E3 		cmp	r3, #3
 19736 0110 0100000A 		beq	.L1292
 19737              		.loc 1 7678 5 discriminator 12
 19738 0114 0130E0E3 		mvn	r3, #1
 19739              		.loc 1 7678 5
 19740 0118 320000EA 		b	.L1287
 19741              	.L1292:
 19742              		.loc 1 7678 5 discriminator 13
 19743 011c 1C301BE5 		ldr	r3, [fp, #-28]
 19744 0120 7F2003E2 		and	r2, r3, #127
 19745 0124 08301BE5 		ldr	r3, [fp, #-8]
 19746 0128 143093E5 		ldr	r3, [r3, #20]
 19747 012c 030052E1 		cmp	r2, r3
 19748 0130 0100003A 		bcc	.L1293
 19749              		.loc 1 7678 5 discriminator 14
 19750 0134 0230E0E3 		mvn	r3, #2
 19751              		.loc 1 7678 5
 19752 0138 2A0000EA 		b	.L1287
 19753              	.L1293:
 19754              		.loc 1 7678 5 discriminator 15
 19755 013c 1C301BE5 		ldr	r3, [fp, #-28]
 19756 0140 7F3003E2 		and	r3, r3, #127
 19757 0144 8322A0E1 		lsl	r2, r3, #5
 19758 0148 08301BE5 		ldr	r3, [fp, #-8]
 19759 014c 0C3093E5 		ldr	r3, [r3, #12]
 19760 0150 033082E0 		add	r3, r2, r3
 19761 0154 08300BE5 		str	r3, [fp, #-8]
 19762 0158 08301BE5 		ldr	r3, [fp, #-8]
 19763 015c 0300A0E1 		mov	r0, r3
 19764 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19765 0164 0C000BE5 		str	r0, [fp, #-12]
 19766              		.loc 1 7678 5 discriminator 1
 19767 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19768 016c FF3803E2 		and	r3, r3, #16711680
 19769 0170 020853E3 		cmp	r3, #131072
 19770 0174 0100001A 		bne	.L1294
 19771              		.loc 1 7678 5 discriminator 16
 19772 0178 0830E0E3 		mvn	r3, #8
 19773              		.loc 1 7678 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 483


 19774 017c 190000EA 		b	.L1287
 19775              	.L1294:
 19776              		.loc 1 7678 5 discriminator 17
 19777 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19778 0184 233CA0E1 		lsr	r3, r3, #24
 19779 0188 070053E3 		cmp	r3, #7
 19780 018c 0100000A 		beq	.L1289
 19781              		.loc 1 7678 5 discriminator 18
 19782 0190 0130E0E3 		mvn	r3, #1
 19783              		.loc 1 7678 5
 19784 0194 130000EA 		b	.L1287
 19785              	.L1289:
7679:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7680:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7681:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 19786              		.loc 1 7681 5 is_stmt 1
 19787 0198 08301BE5 		ldr	r3, [fp, #-8]
 19788 019c 083093E5 		ldr	r3, [r3, #8]
 19789 01a0 013003E2 		and	r3, r3, #1
 19790 01a4 000053E3 		cmp	r3, #0
 19791 01a8 0100001A 		bne	.L1295
 19792              		.loc 1 7681 5 is_stmt 0 discriminator 1
 19793 01ac 0630E0E3 		mvn	r3, #6
 19794              		.loc 1 7681 5
 19795 01b0 0C0000EA 		b	.L1287
 19796              	.L1295:
7682:../../Source/Kernel/rme_kernel.c ****     
7683:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7684:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7685:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19797              		.loc 1 7685 16 is_stmt 1
 19798 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19799 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19800              		.loc 1 7685 15
 19801 01bc 10300BE5 		str	r3, [fp, #-16]
7686:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 19802              		.loc 1 7686 22
 19803 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19804 01c4 20201BE5 		ldr	r2, [fp, #-32]
 19805 01c8 102083E5 		str	r2, [r3, #16]
7687:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 19806              		.loc 1 7687 22
 19807 01cc 10301BE5 		ldr	r3, [fp, #-16]
 19808 01d0 24201BE5 		ldr	r2, [fp, #-36]
 19809 01d4 142083E5 		str	r2, [r3, #20]
7688:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 19810              		.loc 1 7688 27
 19811 01d8 10301BE5 		ldr	r3, [fp, #-16]
 19812 01dc 04209BE5 		ldr	r2, [fp, #4]
 19813 01e0 182083E5 		str	r2, [r3, #24]
7689:../../Source/Kernel/rme_kernel.c ****     
7690:../../Source/Kernel/rme_kernel.c ****     return 0;
 19814              		.loc 1 7690 12
 19815 01e4 0030A0E3 		mov	r3, #0
 19816              	.L1287:
7691:../../Source/Kernel/rme_kernel.c **** }
 19817              		.loc 1 7691 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 484


 19818 01e8 0300A0E1 		mov	r0, r3
 19819 01ec 04D04BE2 		sub	sp, fp, #4
 19820              		.cfi_def_cfa 13, 8
 19821              		@ sp needed
 19822 01f0 0088BDE8 		pop	{fp, pc}
 19823              		.cfi_endproc
 19824              	.LFE74:
 19826              		.section	.text._RME_Inv_Act,"ax",%progbits
 19827              		.align	2
 19828              		.syntax unified
 19829              		.arm
 19831              	_RME_Inv_Act:
 19832              	.LFB75:
7692:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7693:../../Source/Kernel/rme_kernel.c **** 
7694:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7695:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7696:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7697:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7698:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7699:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7700:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7701:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7702:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7703:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7704:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7705:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7706:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7707:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7708:../../Source/Kernel/rme_kernel.c **** {
 19833              		.loc 1 7708 1
 19834              		.cfi_startproc
 19835              		@ args = 0, pretend = 0, frame = 40
 19836              		@ frame_needed = 1, uses_anonymous_args = 0
 19837 0000 00482DE9 		push	{fp, lr}
 19838              		.cfi_def_cfa_offset 8
 19839              		.cfi_offset 11, -8
 19840              		.cfi_offset 14, -4
 19841 0004 04B08DE2 		add	fp, sp, #4
 19842              		.cfi_def_cfa 11, 4
 19843 0008 30D04DE2 		sub	sp, sp, #48
 19844 000c 20000BE5 		str	r0, [fp, #-32]
 19845 0010 24100BE5 		str	r1, [fp, #-36]
 19846 0014 28200BE5 		str	r2, [fp, #-40]
 19847 0018 2C300BE5 		str	r3, [fp, #-44]
7709:../../Source/Kernel/rme_kernel.c **** 	/*RME_DBG_S("\r\n  Cap_Inv ");
7710:../../Source/Kernel/rme_kernel.c **** 	RME_DBG_I(Cap_Inv);
7711:../../Source/Kernel/rme_kernel.c **** 	RME_DBG_S("\r\n  Param ");
7712:../../Source/Kernel/rme_kernel.c **** 	RME_DBG_I(Param);*/
7713:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7714:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7715:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7716:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7717:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7718:../../Source/Kernel/rme_kernel.c ****     
7719:../../Source/Kernel/rme_kernel.c **** #if(RME_INV_DEPTH_MAX!=0U)
7720:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 485


7721:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7722:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7723:../../Source/Kernel/rme_kernel.c ****     {
7724:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7725:../../Source/Kernel/rme_kernel.c **** 
7726:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7727:../../Source/Kernel/rme_kernel.c ****     }
7728:../../Source/Kernel/rme_kernel.c ****     else
7729:../../Source/Kernel/rme_kernel.c ****     {
7730:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7731:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7732:../../Source/Kernel/rme_kernel.c ****     }
7733:../../Source/Kernel/rme_kernel.c **** #endif
7734:../../Source/Kernel/rme_kernel.c **** 
7735:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7736:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19848              		.loc 1 7736 5
 19849 001c 28301BE5 		ldr	r3, [fp, #-40]
 19850 0020 803003E2 		and	r3, r3, #128
 19851 0024 000053E3 		cmp	r3, #0
 19852 0028 1C00001A 		bne	.L1297
 19853              		.loc 1 7736 5 is_stmt 0 discriminator 1
 19854 002c 20301BE5 		ldr	r3, [fp, #-32]
 19855 0030 142093E5 		ldr	r2, [r3, #20]
 19856 0034 28301BE5 		ldr	r3, [fp, #-40]
 19857 0038 030052E1 		cmp	r2, r3
 19858 003c 0100008A 		bhi	.L1298
 19859              		.loc 1 7736 5 discriminator 3
 19860 0040 0230E0E3 		mvn	r3, #2
 19861              		.loc 1 7736 5
 19862 0044 A60000EA 		b	.L1299
 19863              	.L1298:
 19864              		.loc 1 7736 5 discriminator 4
 19865 0048 28301BE5 		ldr	r3, [fp, #-40]
 19866 004c 8322A0E1 		lsl	r2, r3, #5
 19867 0050 20301BE5 		ldr	r3, [fp, #-32]
 19868 0054 0C3093E5 		ldr	r3, [r3, #12]
 19869 0058 033082E0 		add	r3, r2, r3
 19870 005c 08300BE5 		str	r3, [fp, #-8]
 19871 0060 08301BE5 		ldr	r3, [fp, #-8]
 19872 0064 0300A0E1 		mov	r0, r3
 19873 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19874 006c 0C000BE5 		str	r0, [fp, #-12]
 19875              		.loc 1 7736 5 discriminator 1
 19876 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19877 0074 FF3803E2 		and	r3, r3, #16711680
 19878 0078 020853E3 		cmp	r3, #131072
 19879 007c 0100001A 		bne	.L1300
 19880              		.loc 1 7736 5 discriminator 5
 19881 0080 0830E0E3 		mvn	r3, #8
 19882              		.loc 1 7736 5
 19883 0084 960000EA 		b	.L1299
 19884              	.L1300:
 19885              		.loc 1 7736 5 discriminator 6
 19886 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19887 008c 233CA0E1 		lsr	r3, r3, #24
 19888 0090 070053E3 		cmp	r3, #7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 486


 19889 0094 3F00000A 		beq	.L1301
 19890              		.loc 1 7736 5 discriminator 7
 19891 0098 0130E0E3 		mvn	r3, #1
 19892              		.loc 1 7736 5
 19893 009c 900000EA 		b	.L1299
 19894              	.L1297:
 19895              		.loc 1 7736 5 discriminator 2
 19896 00a0 28301BE5 		ldr	r3, [fp, #-40]
 19897 00a4 2324A0E1 		lsr	r2, r3, #8
 19898 00a8 20301BE5 		ldr	r3, [fp, #-32]
 19899 00ac 143093E5 		ldr	r3, [r3, #20]
 19900 00b0 030052E1 		cmp	r2, r3
 19901 00b4 0100003A 		bcc	.L1302
 19902              		.loc 1 7736 5 discriminator 8
 19903 00b8 0230E0E3 		mvn	r3, #2
 19904              		.loc 1 7736 5
 19905 00bc 880000EA 		b	.L1299
 19906              	.L1302:
 19907              		.loc 1 7736 5 discriminator 9
 19908 00c0 28301BE5 		ldr	r3, [fp, #-40]
 19909 00c4 2334A0E1 		lsr	r3, r3, #8
 19910 00c8 8322A0E1 		lsl	r2, r3, #5
 19911 00cc 20301BE5 		ldr	r3, [fp, #-32]
 19912 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19913 00d4 033082E0 		add	r3, r2, r3
 19914 00d8 08300BE5 		str	r3, [fp, #-8]
 19915 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19916 00e0 0300A0E1 		mov	r0, r3
 19917 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19918 00e8 0C000BE5 		str	r0, [fp, #-12]
 19919              		.loc 1 7736 5 discriminator 1
 19920 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19921 00f0 FF3803E2 		and	r3, r3, #16711680
 19922 00f4 020853E3 		cmp	r3, #131072
 19923 00f8 0100001A 		bne	.L1303
 19924              		.loc 1 7736 5 discriminator 10
 19925 00fc 0830E0E3 		mvn	r3, #8
 19926              		.loc 1 7736 5
 19927 0100 770000EA 		b	.L1299
 19928              	.L1303:
 19929              		.loc 1 7736 5 discriminator 11
 19930 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19931 0108 233CA0E1 		lsr	r3, r3, #24
 19932 010c 030053E3 		cmp	r3, #3
 19933 0110 0100000A 		beq	.L1304
 19934              		.loc 1 7736 5 discriminator 12
 19935 0114 0130E0E3 		mvn	r3, #1
 19936              		.loc 1 7736 5
 19937 0118 710000EA 		b	.L1299
 19938              	.L1304:
 19939              		.loc 1 7736 5 discriminator 13
 19940 011c 28301BE5 		ldr	r3, [fp, #-40]
 19941 0120 7F2003E2 		and	r2, r3, #127
 19942 0124 08301BE5 		ldr	r3, [fp, #-8]
 19943 0128 143093E5 		ldr	r3, [r3, #20]
 19944 012c 030052E1 		cmp	r2, r3
 19945 0130 0100003A 		bcc	.L1305
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 487


 19946              		.loc 1 7736 5 discriminator 14
 19947 0134 0230E0E3 		mvn	r3, #2
 19948              		.loc 1 7736 5
 19949 0138 690000EA 		b	.L1299
 19950              	.L1305:
 19951              		.loc 1 7736 5 discriminator 15
 19952 013c 28301BE5 		ldr	r3, [fp, #-40]
 19953 0140 7F3003E2 		and	r3, r3, #127
 19954 0144 8322A0E1 		lsl	r2, r3, #5
 19955 0148 08301BE5 		ldr	r3, [fp, #-8]
 19956 014c 0C3093E5 		ldr	r3, [r3, #12]
 19957 0150 033082E0 		add	r3, r2, r3
 19958 0154 08300BE5 		str	r3, [fp, #-8]
 19959 0158 08301BE5 		ldr	r3, [fp, #-8]
 19960 015c 0300A0E1 		mov	r0, r3
 19961 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19962 0164 0C000BE5 		str	r0, [fp, #-12]
 19963              		.loc 1 7736 5 discriminator 1
 19964 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19965 016c FF3803E2 		and	r3, r3, #16711680
 19966 0170 020853E3 		cmp	r3, #131072
 19967 0174 0100001A 		bne	.L1306
 19968              		.loc 1 7736 5 discriminator 16
 19969 0178 0830E0E3 		mvn	r3, #8
 19970              		.loc 1 7736 5
 19971 017c 580000EA 		b	.L1299
 19972              	.L1306:
 19973              		.loc 1 7736 5 discriminator 17
 19974 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19975 0184 233CA0E1 		lsr	r3, r3, #24
 19976 0188 070053E3 		cmp	r3, #7
 19977 018c 0100000A 		beq	.L1301
 19978              		.loc 1 7736 5 discriminator 18
 19979 0190 0130E0E3 		mvn	r3, #1
 19980              		.loc 1 7736 5
 19981 0194 520000EA 		b	.L1299
 19982              	.L1301:
7737:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7738:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7739:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 19983              		.loc 1 7739 5 is_stmt 1
 19984 0198 08301BE5 		ldr	r3, [fp, #-8]
 19985 019c 083093E5 		ldr	r3, [r3, #8]
 19986 01a0 023003E2 		and	r3, r3, #2
 19987 01a4 000053E3 		cmp	r3, #0
 19988 01a8 0100001A 		bne	.L1307
 19989              		.loc 1 7739 5 is_stmt 0 discriminator 1
 19990 01ac 0630E0E3 		mvn	r3, #6
 19991              		.loc 1 7739 5
 19992 01b0 4B0000EA 		b	.L1299
 19993              	.L1307:
7740:../../Source/Kernel/rme_kernel.c **** 
7741:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7742:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19994              		.loc 1 7742 16 is_stmt 1
 19995 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19996 01b8 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 488


 19997              		.loc 1 7742 15
 19998 01bc 10300BE5 		str	r3, [fp, #-16]
7743:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7744:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 19999              		.loc 1 7744 12
 20000 01c0 10301BE5 		ldr	r3, [fp, #-16]
 20001 01c4 0C3093E5 		ldr	r3, [r3, #12]
 20002 01c8 14300BE5 		str	r3, [fp, #-20]
7745:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 20003              		.loc 1 7745 7
 20004 01cc 14301BE5 		ldr	r3, [fp, #-20]
 20005 01d0 000053E3 		cmp	r3, #0
 20006 01d4 0100000A 		beq	.L1308
7746:../../Source/Kernel/rme_kernel.c ****     {
7747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7748:../../Source/Kernel/rme_kernel.c **** 
7749:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20007              		.loc 1 7749 16
 20008 01d8 4B3FE0E3 		mvn	r3, #300
 20009 01dc 400000EA 		b	.L1299
 20010              	.L1308:
7750:../../Source/Kernel/rme_kernel.c ****     }
7751:../../Source/Kernel/rme_kernel.c ****     else
7752:../../Source/Kernel/rme_kernel.c ****     {
7753:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7754:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7755:../../Source/Kernel/rme_kernel.c ****     }
7756:../../Source/Kernel/rme_kernel.c **** 
7757:../../Source/Kernel/rme_kernel.c **** #if(RME_INV_DEPTH_MAX==0U)
7758:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 20011              		.loc 1 7758 12
 20012 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20013 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20014 01e8 043093E5 		ldr	r3, [r3, #4]
 20015 01ec 18300BE5 		str	r3, [fp, #-24]
7759:../../Source/Kernel/rme_kernel.c **** #endif
7760:../../Source/Kernel/rme_kernel.c ****     
7761:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7762:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 20016              		.loc 1 7762 8
 20017 01f0 10301BE5 		ldr	r3, [fp, #-16]
 20018 01f4 0C3083E2 		add	r3, r3, #12
 20019 01f8 14101BE5 		ldr	r1, [fp, #-20]
 20020 01fc 18201BE5 		ldr	r2, [fp, #-24]
 20021 0200 0300A0E1 		mov	r0, r3
 20022 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20023 0208 0030A0E1 		mov	r3, r0
 20024              		.loc 1 7762 7 discriminator 1
 20025 020c 000053E3 		cmp	r3, #0
 20026 0210 0100001A 		bne	.L1309
7763:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7764:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7765:../../Source/Kernel/rme_kernel.c ****     {
7766:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7767:../../Source/Kernel/rme_kernel.c **** 
7768:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20027              		.loc 1 7768 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 489


 20028 0214 4B3FE0E3 		mvn	r3, #300
 20029 0218 310000EA 		b	.L1299
 20030              	.L1309:
7769:../../Source/Kernel/rme_kernel.c ****     }
7770:../../Source/Kernel/rme_kernel.c ****     else
7771:../../Source/Kernel/rme_kernel.c ****     {
7772:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7773:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7774:../../Source/Kernel/rme_kernel.c ****     }
7775:../../Source/Kernel/rme_kernel.c **** 
7776:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7777:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7778:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7779:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7780:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 20031              		.loc 1 7780 5
 20032 021c 10301BE5 		ldr	r3, [fp, #-16]
 20033 0220 1C3083E2 		add	r3, r3, #28
 20034 0224 24101BE5 		ldr	r1, [fp, #-36]
 20035 0228 0300A0E1 		mov	r0, r3
 20036 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7781:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7782:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 20037              		.loc 1 7782 5
 20038 0230 10001BE5 		ldr	r0, [fp, #-16]
 20039 0234 18301BE5 		ldr	r3, [fp, #-24]
 20040 0238 4C1083E2 		add	r1, r3, #76
 20041 023c 18301BE5 		ldr	r3, [fp, #-24]
 20042 0240 4C3093E5 		ldr	r3, [r3, #76]
 20043 0244 0320A0E1 		mov	r2, r3
 20044 0248 FEFFFFEB 		bl	_RME_List_Ins
7783:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7784:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7785:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7786:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 20045              		.loc 1 7786 17
 20046 024c 18301BE5 		ldr	r3, [fp, #-24]
 20047 0250 543093E5 		ldr	r3, [r3, #84]
 20048              		.loc 1 7786 30
 20049 0254 012083E2 		add	r2, r3, #1
 20050 0258 18301BE5 		ldr	r3, [fp, #-24]
 20051 025c 542083E5 		str	r2, [r3, #84]
7787:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7788:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 20052              		.loc 1 7788 24
 20053 0260 18301BE5 		ldr	r3, [fp, #-24]
 20054 0264 443093E5 		ldr	r3, [r3, #68]
 20055              		.loc 1 7788 5
 20056 0268 0201C3E3 		bic	r0, r3, #-2147483648
 20057 026c 10301BE5 		ldr	r3, [fp, #-16]
 20058 0270 101093E5 		ldr	r1, [r3, #16]
 20059 0274 10301BE5 		ldr	r3, [fp, #-16]
 20060 0278 142093E5 		ldr	r2, [r3, #20]
 20061 027c 24301BE5 		ldr	r3, [fp, #-36]
 20062 0280 00308DE5 		str	r3, [sp]
 20063 0284 2C301BE5 		ldr	r3, [fp, #-44]
 20064 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 490


7789:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7790:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7791:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7792:../../Source/Kernel/rme_kernel.c ****     
7793:../../Source/Kernel/rme_kernel.c ****     
7794:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7795:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7796:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7797:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20065              		.loc 1 7797 5
 20066 028c 10301BE5 		ldr	r3, [fp, #-16]
 20067 0290 083093E5 		ldr	r3, [r3, #8]
 20068 0294 183093E5 		ldr	r3, [r3, #24]
 20069 0298 003093E5 		ldr	r3, [r3]
 20070 029c 7330FFE6 		uxth	r3, r3
 20071 02a0 000053E3 		cmp	r3, #0
 20072 02a4 0800000A 		beq	.L1310
 20073              		.loc 1 7797 5 is_stmt 0 discriminator 1
 20074 02a8 003000E3 		movw	r3, #:lower16:.LC6
 20075 02ac 003040E3 		movt	r3, #:upper16:.LC6
 20076 02b0 002000E3 		movw	r2, #:lower16:.LC7
 20077 02b4 002040E3 		movt	r2, #:upper16:.LC7
 20078 02b8 751E01E3 		movw	r1, #7797
 20079 02bc 000000E3 		movw	r0, #:lower16:.LC8
 20080 02c0 000040E3 		movt	r0, #:upper16:.LC8
 20081 02c4 FEFFFFEB 		bl	RME_Log
 20082              	.L1311:
 20083              		.loc 1 7797 5
 20084 02c8 FEFFFFEA 		b	.L1311
 20085              	.L1310:
7798:../../Source/Kernel/rme_kernel.c **** #endif
7799:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 20086              		.loc 1 7799 29 is_stmt 1
 20087 02cc 10301BE5 		ldr	r3, [fp, #-16]
 20088 02d0 083093E5 		ldr	r3, [r3, #8]
 20089              		.loc 1 7799 5
 20090 02d4 183093E5 		ldr	r3, [r3, #24]
 20091 02d8 0300A0E1 		mov	r0, r3
 20092 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7800:../../Source/Kernel/rme_kernel.c ****     return 0;
 20093              		.loc 1 7800 12
 20094 02e0 0030A0E3 		mov	r3, #0
 20095              	.L1299:
7801:../../Source/Kernel/rme_kernel.c **** }
 20096              		.loc 1 7801 1
 20097 02e4 0300A0E1 		mov	r0, r3
 20098 02e8 04D04BE2 		sub	sp, fp, #4
 20099              		.cfi_def_cfa 13, 8
 20100              		@ sp needed
 20101 02ec 0088BDE8 		pop	{fp, pc}
 20102              		.cfi_endproc
 20103              	.LFE75:
 20105              		.section	.text._RME_Inv_Ret,"ax",%progbits
 20106              		.align	2
 20107              		.syntax unified
 20108              		.arm
 20110              	_RME_Inv_Ret:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 491


 20111              	.LFB76:
7802:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7803:../../Source/Kernel/rme_kernel.c **** 
7804:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7805:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7806:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7807:../../Source/Kernel/rme_kernel.c ****               table to work.
7808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7809:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7811:../../Source/Kernel/rme_kernel.c **** Output      : None.
7812:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7813:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7814:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7815:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7816:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7817:../../Source/Kernel/rme_kernel.c **** {
 20112              		.loc 1 7817 1
 20113              		.cfi_startproc
 20114              		@ args = 0, pretend = 0, frame = 24
 20115              		@ frame_needed = 1, uses_anonymous_args = 0
 20116 0000 00482DE9 		push	{fp, lr}
 20117              		.cfi_def_cfa_offset 8
 20118              		.cfi_offset 11, -8
 20119              		.cfi_offset 14, -4
 20120 0004 04B08DE2 		add	fp, sp, #4
 20121              		.cfi_def_cfa 11, 4
 20122 0008 18D04DE2 		sub	sp, sp, #24
 20123 000c 10000BE5 		str	r0, [fp, #-16]
 20124 0010 14100BE5 		str	r1, [fp, #-20]
 20125 0014 18200BE5 		str	r2, [fp, #-24]
7818:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7819:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7820:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7821:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 20126              		.loc 1 7821 11
 20127 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20128 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20129 0020 043093E5 		ldr	r3, [r3, #4]
 20130 0024 08300BE5 		str	r3, [fp, #-8]
7822:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20131              		.loc 1 7822 16
 20132 0028 08301BE5 		ldr	r3, [fp, #-8]
 20133 002c 4C2093E5 		ldr	r2, [r3, #76]
 20134 0030 08301BE5 		ldr	r3, [fp, #-8]
 20135 0034 4C3083E2 		add	r3, r3, #76
 20136 0038 030052E1 		cmp	r2, r3
 20137 003c 0200000A 		beq	.L1313
 20138              		.loc 1 7822 16 is_stmt 0 discriminator 1
 20139 0040 08301BE5 		ldr	r3, [fp, #-8]
 20140 0044 4C3093E5 		ldr	r3, [r3, #76]
 20141 0048 000000EA 		b	.L1314
 20142              	.L1313:
 20143              		.loc 1 7822 16 discriminator 2
 20144 004c 0030A0E3 		mov	r3, #0
 20145              	.L1314:
 20146              		.loc 1 7822 15 is_stmt 1 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 492


 20147 0050 0C300BE5 		str	r3, [fp, #-12]
7823:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 20148              		.loc 1 7823 7
 20149 0054 0C301BE5 		ldr	r3, [fp, #-12]
 20150 0058 000053E3 		cmp	r3, #0
 20151 005c 0200001A 		bne	.L1315
7824:../../Source/Kernel/rme_kernel.c ****     {
7825:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7826:../../Source/Kernel/rme_kernel.c **** 
7827:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 20152              		.loc 1 7827 16
 20153 0060 D03E0FE3 		movw	r3, #65232
 20154 0064 FF3F4FE3 		movt	r3, 65535
 20155 0068 680000EA 		b	.L1316
 20156              	.L1315:
7828:../../Source/Kernel/rme_kernel.c ****     }
7829:../../Source/Kernel/rme_kernel.c ****     else
7830:../../Source/Kernel/rme_kernel.c ****     {
7831:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7832:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7833:../../Source/Kernel/rme_kernel.c ****     }
7834:../../Source/Kernel/rme_kernel.c **** 
7835:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7836:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 20157              		.loc 1 7836 7
 20158 006c 18301BE5 		ldr	r3, [fp, #-24]
 20159 0070 000053E3 		cmp	r3, #0
 20160 0074 0600000A 		beq	.L1317
 20161              		.loc 1 7836 8 discriminator 1
 20162 0078 0C301BE5 		ldr	r3, [fp, #-12]
 20163 007c 183093E5 		ldr	r3, [r3, #24]
 20164 0080 000053E3 		cmp	r3, #0
 20165 0084 0200001A 		bne	.L1317
7837:../../Source/Kernel/rme_kernel.c ****     {
7838:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7839:../../Source/Kernel/rme_kernel.c **** 
7840:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 20166              		.loc 1 7840 16
 20167 0088 D23E0FE3 		movw	r3, #65234
 20168 008c FF3F4FE3 		movt	r3, 65535
 20169 0090 5E0000EA 		b	.L1316
 20170              	.L1317:
7841:../../Source/Kernel/rme_kernel.c ****     }
7842:../../Source/Kernel/rme_kernel.c ****     else
7843:../../Source/Kernel/rme_kernel.c ****     {
7844:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7845:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7846:../../Source/Kernel/rme_kernel.c ****     }
7847:../../Source/Kernel/rme_kernel.c **** 
7848:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7849:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 20171              		.loc 1 7849 5
 20172 0094 0C301BE5 		ldr	r3, [fp, #-12]
 20173 0098 042093E5 		ldr	r2, [r3, #4]
 20174 009c 0C301BE5 		ldr	r3, [fp, #-12]
 20175 00a0 003093E5 		ldr	r3, [r3]
 20176 00a4 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 493


 20177 00a8 0200A0E1 		mov	r0, r2
 20178 00ac FEFFFFEB 		bl	_RME_List_Del
7850:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7851:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 20179              		.loc 1 7851 16
 20180 00b0 08301BE5 		ldr	r3, [fp, #-8]
 20181 00b4 543093E5 		ldr	r3, [r3, #84]
 20182              		.loc 1 7851 29
 20183 00b8 012043E2 		sub	r2, r3, #1
 20184 00bc 08301BE5 		ldr	r3, [fp, #-8]
 20185 00c0 542083E5 		str	r2, [r3, #84]
7852:../../Source/Kernel/rme_kernel.c **** 
7853:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7854:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7855:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 20186              		.loc 1 7855 5
 20187 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 20188 00c8 1C3083E2 		add	r3, r3, #28
 20189 00cc 0310A0E1 		mov	r1, r3
 20190 00d0 10001BE5 		ldr	r0, [fp, #-16]
 20191 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7856:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 20192              		.loc 1 7856 5
 20193 00d8 14301BE5 		ldr	r3, [fp, #-20]
 20194 00dc 0310A0E1 		mov	r1, r3
 20195 00e0 10001BE5 		ldr	r0, [fp, #-16]
 20196 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7857:../../Source/Kernel/rme_kernel.c **** 
7858:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7859:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7860:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 20197              		.loc 1 7860 5
 20198 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20199 00ec 0C3083E2 		add	r3, r3, #12
 20200 00f0 0010A0E3 		mov	r1, #0
 20201 00f4 0300A0E1 		mov	r0, r3
 20202 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7861:../../Source/Kernel/rme_kernel.c **** 
7862:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7863:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 20203              		.loc 1 7863 7
 20204 00fc 18301BE5 		ldr	r3, [fp, #-24]
 20205 0100 000053E3 		cmp	r3, #0
 20206 0104 0400000A 		beq	.L1318
7864:../../Source/Kernel/rme_kernel.c ****     {
7865:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7866:../../Source/Kernel/rme_kernel.c **** 
7867:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 20207              		.loc 1 7867 9
 20208 0108 D21E0FE3 		movw	r1, #65234
 20209 010c FF1F4FE3 		movt	r1, 65535
 20210 0110 10001BE5 		ldr	r0, [fp, #-16]
 20211 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20212 0118 020000EA 		b	.L1319
 20213              	.L1318:
7868:../../Source/Kernel/rme_kernel.c ****     }
7869:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 494


7870:../../Source/Kernel/rme_kernel.c ****     {
7871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7872:../../Source/Kernel/rme_kernel.c **** 
7873:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 20214              		.loc 1 7873 9
 20215 011c 0010A0E3 		mov	r1, #0
 20216 0120 10001BE5 		ldr	r0, [fp, #-16]
 20217 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20218              	.L1319:
7874:../../Source/Kernel/rme_kernel.c ****     }
7875:../../Source/Kernel/rme_kernel.c **** 
7876:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7877:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20219              		.loc 1 7877 16
 20220 0128 08301BE5 		ldr	r3, [fp, #-8]
 20221 012c 4C2093E5 		ldr	r2, [r3, #76]
 20222 0130 08301BE5 		ldr	r3, [fp, #-8]
 20223 0134 4C3083E2 		add	r3, r3, #76
 20224 0138 030052E1 		cmp	r2, r3
 20225 013c 0200000A 		beq	.L1320
 20226              		.loc 1 7877 16 is_stmt 0 discriminator 1
 20227 0140 08301BE5 		ldr	r3, [fp, #-8]
 20228 0144 4C3093E5 		ldr	r3, [r3, #76]
 20229 0148 000000EA 		b	.L1321
 20230              	.L1320:
 20231              		.loc 1 7877 16 discriminator 2
 20232 014c 0030A0E3 		mov	r3, #0
 20233              	.L1321:
 20234              		.loc 1 7877 15 is_stmt 1 discriminator 4
 20235 0150 0C300BE5 		str	r3, [fp, #-12]
7878:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20236              		.loc 1 7878 7
 20237 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20238 0158 000053E3 		cmp	r3, #0
 20239 015c 1500000A 		beq	.L1322
7879:../../Source/Kernel/rme_kernel.c ****     {
7880:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7881:../../Source/Kernel/rme_kernel.c ****         
7882:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7883:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20240              		.loc 1 7883 9
 20241 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20242 0164 083093E5 		ldr	r3, [r3, #8]
 20243 0168 183093E5 		ldr	r3, [r3, #24]
 20244 016c 003093E5 		ldr	r3, [r3]
 20245 0170 7330FFE6 		uxth	r3, r3
 20246 0174 000053E3 		cmp	r3, #0
 20247 0178 0800000A 		beq	.L1323
 20248              		.loc 1 7883 9 is_stmt 0 discriminator 1
 20249 017c 003000E3 		movw	r3, #:lower16:.LC6
 20250 0180 003040E3 		movt	r3, #:upper16:.LC6
 20251 0184 002000E3 		movw	r2, #:lower16:.LC7
 20252 0188 002040E3 		movt	r2, #:upper16:.LC7
 20253 018c CB1E01E3 		movw	r1, #7883
 20254 0190 000000E3 		movw	r0, #:lower16:.LC8
 20255 0194 000040E3 		movt	r0, #:upper16:.LC8
 20256 0198 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 495


 20257              	.L1324:
 20258              		.loc 1 7883 9
 20259 019c FEFFFFEA 		b	.L1324
 20260              	.L1323:
7884:../../Source/Kernel/rme_kernel.c **** #endif
7885:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20261              		.loc 1 7885 33 is_stmt 1
 20262 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20263 01a4 083093E5 		ldr	r3, [r3, #8]
 20264              		.loc 1 7885 9
 20265 01a8 183093E5 		ldr	r3, [r3, #24]
 20266 01ac 0300A0E1 		mov	r0, r3
 20267 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20268 01b4 140000EA 		b	.L1325
 20269              	.L1322:
7886:../../Source/Kernel/rme_kernel.c ****     }
7887:../../Source/Kernel/rme_kernel.c ****     else
7888:../../Source/Kernel/rme_kernel.c ****     {
7889:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7890:../../Source/Kernel/rme_kernel.c ****         
7891:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7892:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20270              		.loc 1 7892 9
 20271 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20272 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20273 01c0 183093E5 		ldr	r3, [r3, #24]
 20274 01c4 003093E5 		ldr	r3, [r3]
 20275 01c8 7330FFE6 		uxth	r3, r3
 20276 01cc 000053E3 		cmp	r3, #0
 20277 01d0 0800000A 		beq	.L1326
 20278              		.loc 1 7892 9 is_stmt 0 discriminator 1
 20279 01d4 003000E3 		movw	r3, #:lower16:.LC6
 20280 01d8 003040E3 		movt	r3, #:upper16:.LC6
 20281 01dc 002000E3 		movw	r2, #:lower16:.LC7
 20282 01e0 002040E3 		movt	r2, #:upper16:.LC7
 20283 01e4 D41E01E3 		movw	r1, #7892
 20284 01e8 000000E3 		movw	r0, #:lower16:.LC8
 20285 01ec 000040E3 		movt	r0, #:upper16:.LC8
 20286 01f0 FEFFFFEB 		bl	RME_Log
 20287              	.L1327:
 20288              		.loc 1 7892 9
 20289 01f4 FEFFFFEA 		b	.L1327
 20290              	.L1326:
7893:../../Source/Kernel/rme_kernel.c **** #endif
7894:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20291              		.loc 1 7894 36 is_stmt 1
 20292 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20293 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20294              		.loc 1 7894 9
 20295 0200 183093E5 		ldr	r3, [r3, #24]
 20296 0204 0300A0E1 		mov	r0, r3
 20297 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20298              	.L1325:
7895:../../Source/Kernel/rme_kernel.c ****     }
7896:../../Source/Kernel/rme_kernel.c **** 
7897:../../Source/Kernel/rme_kernel.c ****     return 0;
 20299              		.loc 1 7897 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 496


 20300 020c 0030A0E3 		mov	r3, #0
 20301              	.L1316:
7898:../../Source/Kernel/rme_kernel.c **** }
 20302              		.loc 1 7898 1
 20303 0210 0300A0E1 		mov	r0, r3
 20304 0214 04D04BE2 		sub	sp, fp, #4
 20305              		.cfi_def_cfa 13, 8
 20306              		@ sp needed
 20307 0218 0088BDE8 		pop	{fp, pc}
 20308              		.cfi_endproc
 20309              	.LFE76:
 20311              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20312              		.align	2
 20313              		.global	_RME_Kfn_Boot_Crt
 20314              		.syntax unified
 20315              		.arm
 20317              	_RME_Kfn_Boot_Crt:
 20318              	.LFB77:
7899:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7900:../../Source/Kernel/rme_kernel.c **** 
7901:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7902:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7903:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7904:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7905:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7906:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7907:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7908:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7909:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7910:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7911:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7912:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7913:../../Source/Kernel/rme_kernel.c **** Output      : None.
7914:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7915:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7916:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7918:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7919:../../Source/Kernel/rme_kernel.c **** {
 20319              		.loc 1 7919 1
 20320              		.cfi_startproc
 20321              		@ args = 0, pretend = 0, frame = 32
 20322              		@ frame_needed = 1, uses_anonymous_args = 0
 20323 0000 00482DE9 		push	{fp, lr}
 20324              		.cfi_def_cfa_offset 8
 20325              		.cfi_offset 11, -8
 20326              		.cfi_offset 14, -4
 20327 0004 04B08DE2 		add	fp, sp, #4
 20328              		.cfi_def_cfa 11, 4
 20329 0008 20D04DE2 		sub	sp, sp, #32
 20330 000c 18000BE5 		str	r0, [fp, #-24]
 20331 0010 1C100BE5 		str	r1, [fp, #-28]
 20332 0014 20200BE5 		str	r2, [fp, #-32]
7920:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7921:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7922:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7923:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 497


7924:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7925:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20333              		.loc 1 7925 5
 20334 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20335 001c 803003E2 		and	r3, r3, #128
 20336 0020 000053E3 		cmp	r3, #0
 20337 0024 1C00001A 		bne	.L1329
 20338              		.loc 1 7925 5 is_stmt 0 discriminator 1
 20339 0028 18301BE5 		ldr	r3, [fp, #-24]
 20340 002c 142093E5 		ldr	r2, [r3, #20]
 20341 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20342 0034 030052E1 		cmp	r2, r3
 20343 0038 0100008A 		bhi	.L1330
 20344              		.loc 1 7925 5 discriminator 3
 20345 003c 0230E0E3 		mvn	r3, #2
 20346              		.loc 1 7925 5
 20347 0040 850000EA 		b	.L1331
 20348              	.L1330:
 20349              		.loc 1 7925 5 discriminator 4
 20350 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20351 0048 8322A0E1 		lsl	r2, r3, #5
 20352 004c 18301BE5 		ldr	r3, [fp, #-24]
 20353 0050 0C3093E5 		ldr	r3, [r3, #12]
 20354 0054 033082E0 		add	r3, r2, r3
 20355 0058 08300BE5 		str	r3, [fp, #-8]
 20356 005c 08301BE5 		ldr	r3, [fp, #-8]
 20357 0060 0300A0E1 		mov	r0, r3
 20358 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20359 0068 0C000BE5 		str	r0, [fp, #-12]
 20360              		.loc 1 7925 5 discriminator 1
 20361 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20362 0070 FF3803E2 		and	r3, r3, #16711680
 20363 0074 020853E3 		cmp	r3, #131072
 20364 0078 0100001A 		bne	.L1332
 20365              		.loc 1 7925 5 discriminator 5
 20366 007c 0830E0E3 		mvn	r3, #8
 20367              		.loc 1 7925 5
 20368 0080 750000EA 		b	.L1331
 20369              	.L1332:
 20370              		.loc 1 7925 5 discriminator 6
 20371 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20372 0088 233CA0E1 		lsr	r3, r3, #24
 20373 008c 030053E3 		cmp	r3, #3
 20374 0090 3F00000A 		beq	.L1333
 20375              		.loc 1 7925 5 discriminator 7
 20376 0094 0130E0E3 		mvn	r3, #1
 20377              		.loc 1 7925 5
 20378 0098 6F0000EA 		b	.L1331
 20379              	.L1329:
 20380              		.loc 1 7925 5 discriminator 2
 20381 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20382 00a0 2324A0E1 		lsr	r2, r3, #8
 20383 00a4 18301BE5 		ldr	r3, [fp, #-24]
 20384 00a8 143093E5 		ldr	r3, [r3, #20]
 20385 00ac 030052E1 		cmp	r2, r3
 20386 00b0 0100003A 		bcc	.L1334
 20387              		.loc 1 7925 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 498


 20388 00b4 0230E0E3 		mvn	r3, #2
 20389              		.loc 1 7925 5
 20390 00b8 670000EA 		b	.L1331
 20391              	.L1334:
 20392              		.loc 1 7925 5 discriminator 9
 20393 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20394 00c0 2334A0E1 		lsr	r3, r3, #8
 20395 00c4 8322A0E1 		lsl	r2, r3, #5
 20396 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20397 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20398 00d0 033082E0 		add	r3, r2, r3
 20399 00d4 08300BE5 		str	r3, [fp, #-8]
 20400 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20401 00dc 0300A0E1 		mov	r0, r3
 20402 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20403 00e4 0C000BE5 		str	r0, [fp, #-12]
 20404              		.loc 1 7925 5 discriminator 1
 20405 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20406 00ec FF3803E2 		and	r3, r3, #16711680
 20407 00f0 020853E3 		cmp	r3, #131072
 20408 00f4 0100001A 		bne	.L1335
 20409              		.loc 1 7925 5 discriminator 10
 20410 00f8 0830E0E3 		mvn	r3, #8
 20411              		.loc 1 7925 5
 20412 00fc 560000EA 		b	.L1331
 20413              	.L1335:
 20414              		.loc 1 7925 5 discriminator 11
 20415 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20416 0104 233CA0E1 		lsr	r3, r3, #24
 20417 0108 030053E3 		cmp	r3, #3
 20418 010c 0100000A 		beq	.L1336
 20419              		.loc 1 7925 5 discriminator 12
 20420 0110 0130E0E3 		mvn	r3, #1
 20421              		.loc 1 7925 5
 20422 0114 500000EA 		b	.L1331
 20423              	.L1336:
 20424              		.loc 1 7925 5 discriminator 13
 20425 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20426 011c 7F2003E2 		and	r2, r3, #127
 20427 0120 08301BE5 		ldr	r3, [fp, #-8]
 20428 0124 143093E5 		ldr	r3, [r3, #20]
 20429 0128 030052E1 		cmp	r2, r3
 20430 012c 0100003A 		bcc	.L1337
 20431              		.loc 1 7925 5 discriminator 14
 20432 0130 0230E0E3 		mvn	r3, #2
 20433              		.loc 1 7925 5
 20434 0134 480000EA 		b	.L1331
 20435              	.L1337:
 20436              		.loc 1 7925 5 discriminator 15
 20437 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20438 013c 7F3003E2 		and	r3, r3, #127
 20439 0140 8322A0E1 		lsl	r2, r3, #5
 20440 0144 08301BE5 		ldr	r3, [fp, #-8]
 20441 0148 0C3093E5 		ldr	r3, [r3, #12]
 20442 014c 033082E0 		add	r3, r2, r3
 20443 0150 08300BE5 		str	r3, [fp, #-8]
 20444 0154 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 499


 20445 0158 0300A0E1 		mov	r0, r3
 20446 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20447 0160 0C000BE5 		str	r0, [fp, #-12]
 20448              		.loc 1 7925 5 discriminator 1
 20449 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20450 0168 FF3803E2 		and	r3, r3, #16711680
 20451 016c 020853E3 		cmp	r3, #131072
 20452 0170 0100001A 		bne	.L1338
 20453              		.loc 1 7925 5 discriminator 16
 20454 0174 0830E0E3 		mvn	r3, #8
 20455              		.loc 1 7925 5
 20456 0178 370000EA 		b	.L1331
 20457              	.L1338:
 20458              		.loc 1 7925 5 discriminator 17
 20459 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20460 0180 233CA0E1 		lsr	r3, r3, #24
 20461 0184 030053E3 		cmp	r3, #3
 20462 0188 0100000A 		beq	.L1333
 20463              		.loc 1 7925 5 discriminator 18
 20464 018c 0130E0E3 		mvn	r3, #1
 20465              		.loc 1 7925 5
 20466 0190 310000EA 		b	.L1331
 20467              	.L1333:
7926:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7927:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7928:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20468              		.loc 1 7928 5 is_stmt 1
 20469 0194 08301BE5 		ldr	r3, [fp, #-8]
 20470 0198 083093E5 		ldr	r3, [r3, #8]
 20471 019c 013003E2 		and	r3, r3, #1
 20472 01a0 000053E3 		cmp	r3, #0
 20473 01a4 0100001A 		bne	.L1339
 20474              		.loc 1 7928 5 is_stmt 0 discriminator 1
 20475 01a8 0630E0E3 		mvn	r3, #6
 20476              		.loc 1 7928 5
 20477 01ac 2A0000EA 		b	.L1331
 20478              	.L1339:
7929:../../Source/Kernel/rme_kernel.c ****     
7930:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7931:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20479              		.loc 1 7931 5 is_stmt 1
 20480 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20481 01b4 142093E5 		ldr	r2, [r3, #20]
 20482 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20483 01bc 030052E1 		cmp	r2, r3
 20484 01c0 0100008A 		bhi	.L1340
 20485              		.loc 1 7931 5 is_stmt 0 discriminator 1
 20486 01c4 0230E0E3 		mvn	r3, #2
 20487              		.loc 1 7931 5
 20488 01c8 230000EA 		b	.L1331
 20489              	.L1340:
 20490              		.loc 1 7931 5 discriminator 2
 20491 01cc 20301BE5 		ldr	r3, [fp, #-32]
 20492 01d0 8322A0E1 		lsl	r2, r3, #5
 20493 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20494 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20495 01dc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 500


 20496 01e0 10300BE5 		str	r3, [fp, #-16]
7932:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7933:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20497              		.loc 1 7933 5 is_stmt 1
 20498 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20499 01e8 0128A0E3 		mov	r2, #65536
 20500 01ec 0010A0E3 		mov	r1, #0
 20501 01f0 0300A0E1 		mov	r0, r3
 20502 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20503 01f8 0030A0E1 		mov	r3, r0
 20504              		.loc 1 7933 5 is_stmt 0 discriminator 1
 20505 01fc 000053E3 		cmp	r3, #0
 20506 0200 0100001A 		bne	.L1341
 20507 0204 0430E0E3 		mvn	r3, #4
 20508              		.loc 1 7933 5
 20509 0208 130000EA 		b	.L1331
 20510              	.L1341:
 20511              		.loc 1 7933 5 discriminator 2
 20512 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20513 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20514 0214 002093E5 		ldr	r2, [r3]
 20515 0218 10301BE5 		ldr	r3, [fp, #-16]
 20516 021c 102083E5 		str	r2, [r3, #16]
7934:../../Source/Kernel/rme_kernel.c ****     
7935:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7936:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20517              		.loc 1 7936 27 is_stmt 1
 20518 0220 10301BE5 		ldr	r3, [fp, #-16]
 20519 0224 0120A0E3 		mov	r2, #1
 20520 0228 042083E5 		str	r2, [r3, #4]
7937:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20521              		.loc 1 7937 25
 20522 022c 10301BE5 		ldr	r3, [fp, #-16]
 20523 0230 0020A0E3 		mov	r2, #0
 20524 0234 0C2083E5 		str	r2, [r3, #12]
7938:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20525              		.loc 1 7938 23
 20526 0238 10201BE5 		ldr	r2, [fp, #-16]
 20527 023c 0030A0E3 		mov	r3, #0
 20528 0240 FF3F4FE3 		movt	r3, 65535
 20529 0244 083082E5 		str	r3, [r2, #8]
7939:../../Source/Kernel/rme_kernel.c ****     
7940:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7941:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20530              		.loc 1 7941 5
 20531 0248 10301BE5 		ldr	r3, [fp, #-16]
 20532 024c 0114A0E3 		mov	r1, #16777216
 20533 0250 0300A0E1 		mov	r0, r3
 20534 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7942:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7943:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7944:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7945:../../Source/Kernel/rme_kernel.c **** 
7946:../../Source/Kernel/rme_kernel.c ****     return 0;
 20535              		.loc 1 7946 12
 20536 0258 0030A0E3 		mov	r3, #0
 20537              	.L1331:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 501


7947:../../Source/Kernel/rme_kernel.c **** }
 20538              		.loc 1 7947 1
 20539 025c 0300A0E1 		mov	r0, r3
 20540 0260 04D04BE2 		sub	sp, fp, #4
 20541              		.cfi_def_cfa 13, 8
 20542              		@ sp needed
 20543 0264 0088BDE8 		pop	{fp, pc}
 20544              		.cfi_endproc
 20545              	.LFE77:
 20547              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20548              		.align	2
 20549              		.syntax unified
 20550              		.arm
 20552              	_RME_Kfn_Act:
 20553              	.LFB78:
7948:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7949:../../Source/Kernel/rme_kernel.c **** 
7950:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7951:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7952:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7953:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7954:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7955:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7956:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7957:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7958:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7959:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7960:../../Source/Kernel/rme_kernel.c **** Output      : None.
7961:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7962:../../Source/Kernel/rme_kernel.c ****                           the 
7963:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7964:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7965:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7966:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7967:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7968:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7969:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7970:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7971:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7972:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7973:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7974:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7975:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7976:../../Source/Kernel/rme_kernel.c **** {
 20554              		.loc 1 7976 1
 20555              		.cfi_startproc
 20556              		@ args = 12, pretend = 0, frame = 24
 20557              		@ frame_needed = 1, uses_anonymous_args = 0
 20558 0000 00482DE9 		push	{fp, lr}
 20559              		.cfi_def_cfa_offset 8
 20560              		.cfi_offset 11, -8
 20561              		.cfi_offset 14, -4
 20562 0004 04B08DE2 		add	fp, sp, #4
 20563              		.cfi_def_cfa 11, 4
 20564 0008 20D04DE2 		sub	sp, sp, #32
 20565 000c 10000BE5 		str	r0, [fp, #-16]
 20566 0010 14100BE5 		str	r1, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 502


 20567 0014 18200BE5 		str	r2, [fp, #-24]
 20568 0018 1C300BE5 		str	r3, [fp, #-28]
7977:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7978:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7979:../../Source/Kernel/rme_kernel.c ****     
7980:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7981:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 20569              		.loc 1 7981 5
 20570 001c 18301BE5 		ldr	r3, [fp, #-24]
 20571 0020 803003E2 		and	r3, r3, #128
 20572 0024 000053E3 		cmp	r3, #0
 20573 0028 1C00001A 		bne	.L1343
 20574              		.loc 1 7981 5 is_stmt 0 discriminator 1
 20575 002c 10301BE5 		ldr	r3, [fp, #-16]
 20576 0030 142093E5 		ldr	r2, [r3, #20]
 20577 0034 18301BE5 		ldr	r3, [fp, #-24]
 20578 0038 030052E1 		cmp	r2, r3
 20579 003c 0100008A 		bhi	.L1344
 20580              		.loc 1 7981 5 discriminator 3
 20581 0040 0230E0E3 		mvn	r3, #2
 20582              		.loc 1 7981 5
 20583 0044 6B0000EA 		b	.L1345
 20584              	.L1344:
 20585              		.loc 1 7981 5 discriminator 4
 20586 0048 18301BE5 		ldr	r3, [fp, #-24]
 20587 004c 8322A0E1 		lsl	r2, r3, #5
 20588 0050 10301BE5 		ldr	r3, [fp, #-16]
 20589 0054 0C3093E5 		ldr	r3, [r3, #12]
 20590 0058 033082E0 		add	r3, r2, r3
 20591 005c 08300BE5 		str	r3, [fp, #-8]
 20592 0060 08301BE5 		ldr	r3, [fp, #-8]
 20593 0064 0300A0E1 		mov	r0, r3
 20594 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20595 006c 0C000BE5 		str	r0, [fp, #-12]
 20596              		.loc 1 7981 5 discriminator 1
 20597 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20598 0074 FF3803E2 		and	r3, r3, #16711680
 20599 0078 020853E3 		cmp	r3, #131072
 20600 007c 0100001A 		bne	.L1346
 20601              		.loc 1 7981 5 discriminator 5
 20602 0080 0830E0E3 		mvn	r3, #8
 20603              		.loc 1 7981 5
 20604 0084 5B0000EA 		b	.L1345
 20605              	.L1346:
 20606              		.loc 1 7981 5 discriminator 6
 20607 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20608 008c 233CA0E1 		lsr	r3, r3, #24
 20609 0090 010053E3 		cmp	r3, #1
 20610 0094 3F00000A 		beq	.L1347
 20611              		.loc 1 7981 5 discriminator 7
 20612 0098 0130E0E3 		mvn	r3, #1
 20613              		.loc 1 7981 5
 20614 009c 550000EA 		b	.L1345
 20615              	.L1343:
 20616              		.loc 1 7981 5 discriminator 2
 20617 00a0 18301BE5 		ldr	r3, [fp, #-24]
 20618 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 503


 20619 00a8 10301BE5 		ldr	r3, [fp, #-16]
 20620 00ac 143093E5 		ldr	r3, [r3, #20]
 20621 00b0 030052E1 		cmp	r2, r3
 20622 00b4 0100003A 		bcc	.L1348
 20623              		.loc 1 7981 5 discriminator 8
 20624 00b8 0230E0E3 		mvn	r3, #2
 20625              		.loc 1 7981 5
 20626 00bc 4D0000EA 		b	.L1345
 20627              	.L1348:
 20628              		.loc 1 7981 5 discriminator 9
 20629 00c0 18301BE5 		ldr	r3, [fp, #-24]
 20630 00c4 2334A0E1 		lsr	r3, r3, #8
 20631 00c8 8322A0E1 		lsl	r2, r3, #5
 20632 00cc 10301BE5 		ldr	r3, [fp, #-16]
 20633 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20634 00d4 033082E0 		add	r3, r2, r3
 20635 00d8 08300BE5 		str	r3, [fp, #-8]
 20636 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20637 00e0 0300A0E1 		mov	r0, r3
 20638 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20639 00e8 0C000BE5 		str	r0, [fp, #-12]
 20640              		.loc 1 7981 5 discriminator 1
 20641 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20642 00f0 FF3803E2 		and	r3, r3, #16711680
 20643 00f4 020853E3 		cmp	r3, #131072
 20644 00f8 0100001A 		bne	.L1349
 20645              		.loc 1 7981 5 discriminator 10
 20646 00fc 0830E0E3 		mvn	r3, #8
 20647              		.loc 1 7981 5
 20648 0100 3C0000EA 		b	.L1345
 20649              	.L1349:
 20650              		.loc 1 7981 5 discriminator 11
 20651 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20652 0108 233CA0E1 		lsr	r3, r3, #24
 20653 010c 030053E3 		cmp	r3, #3
 20654 0110 0100000A 		beq	.L1350
 20655              		.loc 1 7981 5 discriminator 12
 20656 0114 0130E0E3 		mvn	r3, #1
 20657              		.loc 1 7981 5
 20658 0118 360000EA 		b	.L1345
 20659              	.L1350:
 20660              		.loc 1 7981 5 discriminator 13
 20661 011c 18301BE5 		ldr	r3, [fp, #-24]
 20662 0120 7F2003E2 		and	r2, r3, #127
 20663 0124 08301BE5 		ldr	r3, [fp, #-8]
 20664 0128 143093E5 		ldr	r3, [r3, #20]
 20665 012c 030052E1 		cmp	r2, r3
 20666 0130 0100003A 		bcc	.L1351
 20667              		.loc 1 7981 5 discriminator 14
 20668 0134 0230E0E3 		mvn	r3, #2
 20669              		.loc 1 7981 5
 20670 0138 2E0000EA 		b	.L1345
 20671              	.L1351:
 20672              		.loc 1 7981 5 discriminator 15
 20673 013c 18301BE5 		ldr	r3, [fp, #-24]
 20674 0140 7F3003E2 		and	r3, r3, #127
 20675 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 504


 20676 0148 08301BE5 		ldr	r3, [fp, #-8]
 20677 014c 0C3093E5 		ldr	r3, [r3, #12]
 20678 0150 033082E0 		add	r3, r2, r3
 20679 0154 08300BE5 		str	r3, [fp, #-8]
 20680 0158 08301BE5 		ldr	r3, [fp, #-8]
 20681 015c 0300A0E1 		mov	r0, r3
 20682 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20683 0164 0C000BE5 		str	r0, [fp, #-12]
 20684              		.loc 1 7981 5 discriminator 1
 20685 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20686 016c FF3803E2 		and	r3, r3, #16711680
 20687 0170 020853E3 		cmp	r3, #131072
 20688 0174 0100001A 		bne	.L1352
 20689              		.loc 1 7981 5 discriminator 16
 20690 0178 0830E0E3 		mvn	r3, #8
 20691              		.loc 1 7981 5
 20692 017c 1D0000EA 		b	.L1345
 20693              	.L1352:
 20694              		.loc 1 7981 5 discriminator 17
 20695 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20696 0184 233CA0E1 		lsr	r3, r3, #24
 20697 0188 010053E3 		cmp	r3, #1
 20698 018c 0100000A 		beq	.L1347
 20699              		.loc 1 7981 5 discriminator 18
 20700 0190 0130E0E3 		mvn	r3, #1
 20701              		.loc 1 7981 5
 20702 0194 170000EA 		b	.L1345
 20703              	.L1347:
7982:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7983:../../Source/Kernel/rme_kernel.c **** 
7984:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7985:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 20704              		.loc 1 7985 17 is_stmt 1
 20705 0198 08301BE5 		ldr	r3, [fp, #-8]
 20706 019c 083093E5 		ldr	r3, [r3, #8]
 20707 01a0 2338A0E1 		lsr	r3, r3, #16
 20708              		.loc 1 7985 7
 20709 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 20710 01a8 030052E1 		cmp	r2, r3
 20711 01ac 0500008A 		bhi	.L1353
7986:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20712              		.loc 1 7986 17
 20713 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20714 01b4 083093E5 		ldr	r3, [r3, #8]
 20715 01b8 7330FFE6 		uxth	r3, r3
7985:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20716              		.loc 1 7985 54 discriminator 1
 20717 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 20718 01c0 030052E1 		cmp	r2, r3
 20719 01c4 0100002A 		bcs	.L1354
 20720              	.L1353:
7987:../../Source/Kernel/rme_kernel.c ****     {
7988:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7989:../../Source/Kernel/rme_kernel.c **** 
7990:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 20721              		.loc 1 7990 16
 20722 01c8 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 505


 20723 01cc 090000EA 		b	.L1345
 20724              	.L1354:
7991:../../Source/Kernel/rme_kernel.c ****     }
7992:../../Source/Kernel/rme_kernel.c ****     else
7993:../../Source/Kernel/rme_kernel.c ****     {
7994:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7995:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7996:../../Source/Kernel/rme_kernel.c ****     }
7997:../../Source/Kernel/rme_kernel.c **** 
7998:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7999:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 20725              		.loc 1 7999 12
 20726 01d0 0C309BE5 		ldr	r3, [fp, #12]
 20727 01d4 04308DE5 		str	r3, [sp, #4]
 20728 01d8 08309BE5 		ldr	r3, [fp, #8]
 20729 01dc 00308DE5 		str	r3, [sp]
 20730 01e0 04309BE5 		ldr	r3, [fp, #4]
 20731 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 20732 01e8 14101BE5 		ldr	r1, [fp, #-20]
 20733 01ec 10001BE5 		ldr	r0, [fp, #-16]
 20734 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 20735 01f4 0030A0E1 		mov	r3, r0
 20736              	.L1345:
8000:../../Source/Kernel/rme_kernel.c **** }
 20737              		.loc 1 8000 1
 20738 01f8 0300A0E1 		mov	r0, r3
 20739 01fc 04D04BE2 		sub	sp, fp, #4
 20740              		.cfi_def_cfa 13, 8
 20741              		@ sp needed
 20742 0200 0088BDE8 		pop	{fp, pc}
 20743              		.cfi_endproc
 20744              	.LFE78:
 20746              		.section	.rodata.Table.1,"a"
 20747              		.align	2
 20750              	Table.1:
 20751 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 20751      02020202 
 20751      03030303 
 20751      03
 20752 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 20752      04040404 
 20752      04040404 
 20752      04
 20753 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 20753      04040505 
 20753      05050505 
 20753      05
 20754 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 20754      05050505 
 20754      05050505 
 20754      05
 20755 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 20755      05050505 
 20755      05050505 
 20755      06
 20756 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20756      06060606 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 506


 20756      06060606 
 20756      06
 20757 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20757      06060606 
 20757      06060606 
 20757      06
 20758 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20758      06060606 
 20758      06060606 
 20758      06
 20759 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20759      06060606 
 20759      06060606 
 20759      06
 20760 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 20760      06060606 
 20760      06060607 
 20760      07
 20761 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20761      07070707 
 20761      07070707 
 20761      07
 20762 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20762      07070707 
 20762      07070707 
 20762      07
 20763 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20763      07070707 
 20763      07070707 
 20763      07
 20764 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20764      07070707 
 20764      07070707 
 20764      07
 20765 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20765      07070707 
 20765      07070707 
 20765      07
 20766 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20766      07070707 
 20766      07070707 
 20766      07
 20767 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20767      07070707 
 20767      07070707 
 20767      07
 20768 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20768      07070707 
 20768      07070707 
 20768      07
 20769 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20769      07070707 
 20769      07070707 
 20769      07
 20770 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 20770      07070707 
 20770      07
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 507


 20771              		.section	.rodata.Table.0,"a"
 20772              		.align	2
 20775              	Table.0:
 20776 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 20776      02000100 
 20776      03000100 
 20776      02
 20777 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 20777      00010002 
 20777      00010003 
 20777      00
 20778 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 20778      01000500 
 20778      01000200 
 20778      01
 20779 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 20779      00020001 
 20779      00040001 
 20779      00
 20780 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 20780      03000100 
 20780      02000100 
 20780      06
 20781 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 20781      00010003 
 20781      00010002 
 20781      00
 20782 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 20782      01000200 
 20782      01000300 
 20782      01
 20783 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 20783      00050001 
 20783      00020001 
 20783      00
 20784 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 20784      02000100 
 20784      04000100 
 20784      02
 20785 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 20785      00010002 
 20785      00010007 
 20785      00
 20786 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 20786      01000300 
 20786      01000200 
 20786      01
 20787 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 20787      00020001 
 20787      00030001 
 20787      00
 20788 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 20788      05000100 
 20788      02000100 
 20788      03
 20789 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 20789      00010004 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 508


 20789      00010002 
 20789      00
 20790 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 20790      01000200 
 20790      01000600 
 20790      01
 20791 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 20791      00030001 
 20791      00020001 
 20791      00
 20792 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 20792      02000100 
 20792      03000100 
 20792      02
 20793 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 20793      00010002 
 20793      00010003 
 20793      00
 20794 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 20794      01000400 
 20794      01000200 
 20794      01
 20795 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 20795      00020001 
 20795      00
 20796              		.text
 20797              	.Letext0:
 20798              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 20799              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 509


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:364    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:369    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:399    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:404    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20750  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:474    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:479    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20775  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:558    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:563    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:610    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:615    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:659    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:664    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:705    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:710    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:745    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:750    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:786    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:791    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:836    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:841    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:893    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:898    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:980    .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:985    .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1044   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1049   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1099   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1104   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1142   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8341   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1138   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1169   .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1170   .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1173   .rodata:0000000c .LC1
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1176   .rodata:00000014 .LC2
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1179   .rodata:0000001c .LC3
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1182   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1187   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20110  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19831  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:1347   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17933  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18235  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20552  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:14573  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:14931  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15192  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 510


C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15897  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16497  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2715   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3220   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3590   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3859   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:4647   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5907   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:6433   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:6781   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7255   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7474   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7921   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:10508  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11087  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11401  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11773  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12663  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:13411  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:13833  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15626  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17146  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17388  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18662  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19290  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19634  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2109   .text._RME_Svc_Handler:00000920 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2115   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2120   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9499   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9690   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17811  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17700  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2200   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2205   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2266   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2271   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2302   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2307   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8410   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2415   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2420   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:2711   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3207   .rodata:00000024 .LC6
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3210   .rodata:00000030 .LC7
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3213   .rodata:0000003c .LC8
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3216   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8721   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3586   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:3855   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:4643   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:4935   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:4940   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5272   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5277   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5499   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5504   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 511


C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:5903   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:6429   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:6777   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7251   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7470   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:7917   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8336   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8402   .rodata:00000060 .LC9
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8405   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8716   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8950   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:8955   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9225   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9230   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9305   .rodata:00000078 .LC10
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9308   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9313   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9410   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9414   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9495   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9591   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9595   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9686   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9749   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9754   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9815   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9819   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9924   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:9929   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:10504  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11083  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11397  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:11769  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12141  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12146  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12652  .rodata:00000098 .LC11
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12656  .rodata:000000c8 .LC12
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:12659  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:13407  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:13829  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:14569  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:14927  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15188  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15622  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15890  .rodata:000000e4 .LC13
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:15893  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16487  .rodata:000000fc .LC14
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16490  .rodata:00000118 .LC15
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16493  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16899  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:16904  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17142  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17384  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17695  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17806  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:17929  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18231  .text._RME_Sig_Rcv:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFAAHFf.s 			page 512


C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18396  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18653  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:18658  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19286  .text._RME_Inv_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19630  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:19827  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20106  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20312  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20317  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20548  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20747  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFAAHFf.s:20772  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.6f31e4bbf2ba0e08caa014445997fe37
                           .group:00000000 wm4.rme_platform_xc7z020.h.16.bfae9c8a4ca071423439914cc98e2849
                           .group:00000000 wm4.rme_platform_a7a.h.137.e9a24d7a5233e57f2f7befcdf024b105
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.rme_kernel.h.185.d02db6497e1a69d04e005d15d216f811
                           .group:00000000 wm4.rme_platform_a7a.h.398.f0ac34dc9ab051d9dffae2ce4ab8d08a
                           .group:00000000 wm4.rme_kernel.h.678.0572fdf2012fb48f701f562b23d175bb
                           .group:00000000 wm4.rme_kernel.h.930.a0227bbf293ff3272fab74c6046a5fa5
                           .group:00000000 wm4.rme_platform_a7a.h.514.57f45f27324c526a3ab5eab0a56cc64f

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
